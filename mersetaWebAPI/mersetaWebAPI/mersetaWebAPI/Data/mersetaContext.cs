using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using mersetaWebAPI.Models;

namespace mersetaWebAPI.Data
{
    public partial class mersetaContext : DbContext
    {
        public mersetaContext()
        {
        }

        public mersetaContext(DbContextOptions<mersetaContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AbetBand> AbetBands { get; set; } = null!;
        public virtual DbSet<LearnerApplicationComments> LearnerApplicationCommentss { get; set; } = null!;
        public virtual DbSet<AssessmentProcessBatch> AssessmentProcessBatches { get; set; } = null!;
        public virtual DbSet<AssessmentProcessBatchDetail> AssessmentProcessBatchDetails { get; set; } = null!;
        public virtual DbSet<ExternalModerationQuestionSection> ExternalModerationQuestionSections { get; set; } = null!;
        public virtual DbSet<ExternalModerationQuestion> ExternalModerationQuestions { get; set; } = null!;
        public virtual DbSet<ExternalModerationValidation> ExternalModerationValidations { get; set; } = null!;
        public virtual DbSet<ExternalModerationValidationChecklist> ExternalModerationValidationChecklists { get; set; } = null!;
        public virtual DbSet<UnitStandardType> UnitStandardTypes { get; set; } = null!;
        public virtual DbSet<LearnerApplicationReason> LearnerApplicationReasons { get; set; } = null!;
        public virtual DbSet<AccreditationStatus> AccreditationStatuses { get; set; } = null!;
        public virtual DbSet<ActiveContract> ActiveContracts { get; set; } = null!;
        public virtual DbSet<ActiveContractDetail> ActiveContractDetails { get; set; } = null!;
        public virtual DbSet<ActiveContractDetailHist> ActiveContractDetailHists { get; set; } = null!;
        public virtual DbSet<ActiveContractExtensionRequest> ActiveContractExtensionRequests { get; set; } = null!;
        public virtual DbSet<ActiveContractExtensionRequestHist> ActiveContractExtensionRequestHists { get; set; } = null!;
        public virtual DbSet<ActiveContractTerminationRequest> ActiveContractTerminationRequests { get; set; } = null!;
        public virtual DbSet<ActiveContractTerminationRequestHist> ActiveContractTerminationRequestHists { get; set; } = null!;
        public virtual DbSet<ActiveContractsHist> ActiveContractsHists { get; set; } = null!;
        public virtual DbSet<Addendum> Addenda { get; set; } = null!;
        public virtual DbSet<Address> Addresses { get; set; } = null!;
        public virtual DbSet<AddressChange> AddressChanges { get; set; } = null!;
        public virtual DbSet<AddressChangeAud> AddressChangeAuds { get; set; } = null!;
        public virtual DbSet<AddressHist> AddressHists { get; set; } = null!;
        public virtual DbSet<AddressHistory> AddressHistories { get; set; } = null!;
        public virtual DbSet<AdministrationOfApq> AdministrationOfApqs { get; set; } = null!;
        public virtual DbSet<AdministrationOfApqHist> AdministrationOfApqHists { get; set; } = null!;
        public virtual DbSet<AdministrationOfApqLearner> AdministrationOfApqLearners { get; set; } = null!;
        public virtual DbSet<AdministrationOfApqLearnersHist> AdministrationOfApqLearnersHists { get; set; } = null!;
        public virtual DbSet<AetProgrammeLevel> AetProgrammeLevels { get; set; } = null!;
        public virtual DbSet<AllocationChange> AllocationChanges { get; set; } = null!;
        public virtual DbSet<AllocationChangeHist> AllocationChangeHists { get; set; } = null!;
        public virtual DbSet<AllocationChangesReason> AllocationChangesReasons { get; set; } = null!;
        public virtual DbSet<AllocationChangesReasonsHist> AllocationChangesReasonsHists { get; set; } = null!;
        public virtual DbSet<AllocationList> AllocationLists { get; set; } = null!;
        public virtual DbSet<AlternativeIdType> AlternativeIdTypes { get; set; } = null!;
        public virtual DbSet<ApplicantType> ApplicantTypes { get; set; } = null!;
        public virtual DbSet<Appointment> Appointments { get; set; } = null!;
        public virtual DbSet<Appraisal> Appraisals { get; set; } = null!;
        public virtual DbSet<AppraisalCategory> AppraisalCategories { get; set; } = null!;
        public virtual DbSet<AppraisalCategoryCode> AppraisalCategoryCodes { get; set; } = null!;
        public virtual DbSet<AppraisalChecklist> AppraisalChecklists { get; set; } = null!;
        public virtual DbSet<Aqp> Aqps { get; set; } = null!;
        public virtual DbSet<AreaForImprovement> AreaForImprovements { get; set; } = null!;
        public virtual DbSet<AssessorModExtensionOfScope> AssessorModExtensionOfScopes { get; set; } = null!;
        public virtual DbSet<AssessorModReRegistration> AssessorModReRegistrations { get; set; } = null!;
        public virtual DbSet<AssessorModeratorApplication> AssessorModeratorApplications { get; set; } = null!;
        public virtual DbSet<AssessorModeratorApplicationHist> AssessorModeratorApplicationHists { get; set; } = null!;
        public virtual DbSet<AssessorModeratorCompany> AssessorModeratorCompanies { get; set; } = null!;
        public virtual DbSet<AssessorModeratorCompanySite> AssessorModeratorCompanySites { get; set; } = null!;
        public virtual DbSet<AssessorModeratorCompanySitesHist> AssessorModeratorCompanySitesHists { get; set; } = null!;
        public virtual DbSet<AuditorMonitorReview> AuditorMonitorReviews { get; set; } = null!;
        public virtual DbSet<Bank> Banks { get; set; } = null!;
        public virtual DbSet<BankingDetail> BankingDetails { get; set; } = null!;
        public virtual DbSet<BankingDetailsHist> BankingDetailsHists { get; set; } = null!;
        public virtual DbSet<BugReport> BugReports { get; set; } = null!;
        public virtual DbSet<CategorizationDatum> CategorizationData { get; set; } = null!;
        public virtual DbSet<Chamber> Chambers { get; set; } = null!;
        public virtual DbSet<ChangeReason> ChangeReasons { get; set; } = null!;
        public virtual DbSet<ChatMessage> ChatMessages { get; set; } = null!;
        public virtual DbSet<CitizenResidentStatus> CitizenResidentStatuses { get; set; } = null!;
        public virtual DbSet<ClQualificationAchievement> ClQualificationAchievements { get; set; } = null!;
        public virtual DbSet<ClQualificationAchievementHist> ClQualificationAchievementHists { get; set; } = null!;
        public virtual DbSet<CollectDetail> CollectDetails { get; set; } = null!;
        public virtual DbSet<CommunicatingRating> CommunicatingRatings { get; set; } = null!;
        public virtual DbSet<Company> Companies { get; set; } = null!;
        public virtual DbSet<LearnerAchievementStatus> LearnerAchievementStatuss { get; set; } = null!;
        public virtual DbSet<CompanyCommunication> CompanyCommunications { get; set; } = null!;
        public virtual DbSet<CompanyHist> CompanyHists { get; set; } = null!;
        public virtual DbSet<CompanyHistory> CompanyHistories { get; set; } = null!;
        public virtual DbSet<CompanyHistoryAud> CompanyHistoryAuds { get; set; } = null!;
        public virtual DbSet<CompanyHostingCompany> CompanyHostingCompanies { get; set; } = null!;
        public virtual DbSet<CompanyLearner> CompanyLearners { get; set; } = null!;
        public virtual DbSet<CompanyLearnerUser> CompanyLearnerUsers { get; set; } = null!;
        public virtual DbSet<CompanyLearnersAchievementStatusEisa> CompanyLearnersAchievementStatusEisas { get; set; } = null!;
        public virtual DbSet<CompanyLearnersAchievementStatusEisaHist> CompanyLearnersAchievementStatusEisaHists { get; set; } = null!;
        public virtual DbSet<CompanyLearnersChange> CompanyLearnersChanges { get; set; } = null!;
        public virtual DbSet<CompanyLearnersChangeHist> CompanyLearnersChangeHists { get; set; } = null!;
        public virtual DbSet<CompanyLearnersDetailsChange> CompanyLearnersDetailsChanges { get; set; } = null!;
        public virtual DbSet<CompanyLearnersDetailsChangeAud> CompanyLearnersDetailsChangeAuds { get; set; } = null!;
        public virtual DbSet<CompanyLearnersHist> CompanyLearnersHists { get; set; } = null!;
        public virtual DbSet<CompanyLearnersIgnoreSetmi> CompanyLearnersIgnoreSetmis { get; set; } = null!;
        public virtual DbSet<CompanyLearnersLostTime> CompanyLearnersLostTimes { get; set; } = null!;
        public virtual DbSet<CompanyLearnersLostTimeHist> CompanyLearnersLostTimeHists { get; set; } = null!;
        public virtual DbSet<CompanyLearnersProgress> CompanyLearnersProgresses { get; set; } = null!;
        public virtual DbSet<CompanyLearnersProgressHist> CompanyLearnersProgressHists { get; set; } = null!;
        public virtual DbSet<CompanyLearnersRatio> CompanyLearnersRatios { get; set; } = null!;
        public virtual DbSet<CompanyLearnersTermination> CompanyLearnersTerminations { get; set; } = null!;
        public virtual DbSet<CompanyLearnersTradeTest> CompanyLearnersTradeTests { get; set; } = null!;
        public virtual DbSet<CompanyLearnersTradeTestHist> CompanyLearnersTradeTestHists { get; set; } = null!;
        public virtual DbSet<CompanyLearnersTransfer> CompanyLearnersTransfers { get; set; } = null!;
        public virtual DbSet<CompanyLearnersTransferHist> CompanyLearnersTransferHists { get; set; } = null!;
        public virtual DbSet<CompanyQualification> CompanyQualifications { get; set; } = null!;
        public virtual DbSet<CompanyQualificationsHist> CompanyQualificationsHists { get; set; } = null!;
        public virtual DbSet<CompanyTradeTestEmployer> CompanyTradeTestEmployers { get; set; } = null!;
        public virtual DbSet<CompanyTradeTestEmployerAud> CompanyTradeTestEmployerAuds { get; set; } = null!;
        public virtual DbSet<CompanyUnitStandard> CompanyUnitStandards { get; set; } = null!;
        public virtual DbSet<CompanyUnitStandardHist> CompanyUnitStandardHists { get; set; } = null!;
        public virtual DbSet<CompanyUser> CompanyUsers { get; set; } = null!;
        public virtual DbSet<CompanyUserPosition> CompanyUserPositions { get; set; } = null!;
        public virtual DbSet<CompanyUsersHist> CompanyUsersHists { get; set; } = null!;
        public virtual DbSet<CompanyUsersHistory> CompanyUsersHistories { get; set; } = null!;
        public virtual DbSet<CompanyUsersHistoryAud> CompanyUsersHistoryAuds { get; set; } = null!;
        public virtual DbSet<CompletionLetter> CompletionLetters { get; set; } = null!;
        public virtual DbSet<ConfigDoc> ConfigDocs { get; set; } = null!;
        public virtual DbSet<Country> Countries { get; set; } = null!;
        public virtual DbSet<CoursewareDistibution> CoursewareDistibutions { get; set; } = null!;
        public virtual DbSet<DateChangeMultipleSelection> DateChangeMultipleSelections { get; set; } = null!;
        public virtual DbSet<DateChangeMultipleSelectionHist> DateChangeMultipleSelectionHists { get; set; } = null!;
        public virtual DbSet<DateChangeReason> DateChangeReasons { get; set; } = null!;
        public virtual DbSet<Department> Departments { get; set; } = null!;
        public virtual DbSet<DesignatedTrade> DesignatedTrades { get; set; } = null!;
        public virtual DbSet<DesignatedTradeHist> DesignatedTradeHists { get; set; } = null!;
        public virtual DbSet<DesignatedTradeLevel> DesignatedTradeLevels { get; set; } = null!;
        public virtual DbSet<DesignatedTradeLevelHist> DesignatedTradeLevelHists { get; set; } = null!;
        public virtual DbSet<DesignatedTradeLevelItem> DesignatedTradeLevelItems { get; set; } = null!;
        public virtual DbSet<DesignatedTradeLevelItemsHist> DesignatedTradeLevelItemsHists { get; set; } = null!;
        public virtual DbSet<DesignatedTradeType> DesignatedTradeTypes { get; set; } = null!;
        public virtual DbSet<Designation> Designations { get; set; } = null!;
        public virtual DbSet<DesignationStructureStatusStructureStatus> DesignationStructureStatusStructureStatuses { get; set; } = null!;
        public virtual DbSet<DetailsOfExperienceArpl> DetailsOfExperienceArpls { get; set; } = null!;
        public virtual DbSet<DetailsOfTrainingArpl> DetailsOfTrainingArpls { get; set; } = null!;
        public virtual DbSet<DeviationPercentage> DeviationPercentages { get; set; } = null!;
        public virtual DbSet<DeviationReason> DeviationReasons { get; set; } = null!;
        public virtual DbSet<DgAllocation> DgAllocations { get; set; } = null!;
        public virtual DbSet<DgAllocationHist> DgAllocationHists { get; set; } = null!;
        public virtual DbSet<DgAllocationParent> DgAllocationParents { get; set; } = null!;
        public virtual DbSet<DgAllocationParentHist> DgAllocationParentHists { get; set; } = null!;
        public virtual DbSet<DgContractingBulkEntry> DgContractingBulkEntries { get; set; } = null!;
        public virtual DbSet<DgContractingBulkItem> DgContractingBulkItems { get; set; } = null!;
        public virtual DbSet<DgLegacyPayment> DgLegacyPayments { get; set; } = null!;
        public virtual DbSet<DgLegacyPaymentsHist> DgLegacyPaymentsHists { get; set; } = null!;
        public virtual DbSet<DgProjectType> DgProjectTypes { get; set; } = null!;
        public virtual DbSet<DgProjectTypeHist> DgProjectTypeHists { get; set; } = null!;
        public virtual DbSet<DgVerification> DgVerifications { get; set; } = null!;
        public virtual DbSet<DgVerificationHistory> DgVerificationHistories { get; set; } = null!;
        public virtual DbSet<DgVerificationRejectionInformation> DgVerificationRejectionInformations { get; set; } = null!;
        public virtual DbSet<DgVerificationSite> DgVerificationSites { get; set; } = null!;
        public virtual DbSet<DgYear> DgYears { get; set; } = null!;
        public virtual DbSet<DgYearAud> DgYearAuds { get; set; } = null!;
        public virtual DbSet<DgYearLearningProgram> DgYearLearningPrograms { get; set; } = null!;
        public virtual DbSet<DhetReporting> DhetReportings { get; set; } = null!;
        public virtual DbSet<DisabilityRating> DisabilityRatings { get; set; } = null!;
        public virtual DbSet<DisabilityRatingAud> DisabilityRatingAuds { get; set; } = null!;
        public virtual DbSet<DisabilityStatus> DisabilityStatuses { get; set; } = null!;
        public virtual DbSet<Doc> Docs { get; set; } = null!;
        public virtual DbSet<DocByte> DocBytes { get; set; } = null!;
        public virtual DbSet<DocumentTracker> DocumentTrackers { get; set; } = null!;
        public virtual DbSet<EconomicStatus> EconomicStatuses { get; set; } = null!;
        public virtual DbSet<Employee> Employees { get; set; } = null!;
        public virtual DbSet<EmployeePage> EmployeePages { get; set; } = null!;
        public virtual DbSet<EmployeesHist> EmployeesHists { get; set; } = null!;
        public virtual DbSet<EmployeesHistory> EmployeesHistories { get; set; } = null!;
        public virtual DbSet<EmployeesImport> EmployeesImports { get; set; } = null!;
        public virtual DbSet<EmployeesImportTraining> EmployeesImportTrainings { get; set; } = null!;
        public virtual DbSet<EmployeesTraining> EmployeesTrainings { get; set; } = null!;
        public virtual DbSet<EmployerApprovalStatus> EmployerApprovalStatuses { get; set; } = null!;
        public virtual DbSet<EmploymentType> EmploymentTypes { get; set; } = null!;
        public virtual DbSet<EnrolmentStatus> EnrolmentStatuses { get; set; } = null!;
        public virtual DbSet<EnrolmentStatusReason> EnrolmentStatusReasons { get; set; } = null!;
        public virtual DbSet<EnrolmentType> EnrolmentTypes { get; set; } = null!;
        public virtual DbSet<Equity> Equities { get; set; } = null!;
        public virtual DbSet<Etqa> Etqas { get; set; } = null!;
        public virtual DbSet<ExceptionsTable> ExceptionsTables { get; set; } = null!;
        public virtual DbSet<ExceptionsTableHist> ExceptionsTableHists { get; set; } = null!;
        public virtual DbSet<ExtensionRequest> ExtensionRequests { get; set; } = null!;
        public virtual DbSet<ExtensionRequestHist> ExtensionRequestHists { get; set; } = null!;
        public virtual DbSet<ExtractErrorList> ExtractErrorLists { get; set; } = null!;
        public virtual DbSet<FailedArchiveEntry> FailedArchiveEntries { get; set; } = null!;
        public virtual DbSet<FinYearQuartersLookUp> FinYearQuartersLookUps { get; set; } = null!;
        public virtual DbSet<FinYearQuartersLookUpHist> FinYearQuartersLookUpHists { get; set; } = null!;
        public virtual DbSet<FinancialYear> FinancialYears { get; set; } = null!;
        public virtual DbSet<FinancialYearsHist> FinancialYearsHists { get; set; } = null!;
        public virtual DbSet<Flc> Flcs { get; set; } = null!;
        public virtual DbSet<FrequentlyAskedQuestion> FrequentlyAskedQuestions { get; set; } = null!;
        public virtual DbSet<Funding> Fundings { get; set; } = null!;
        public virtual DbSet<Gender> Genders { get; set; } = null!;
        public virtual DbSet<Glosssary> Glosssaries { get; set; } = null!;
        public virtual DbSet<GpBankAccountAlterAudit> GpBankAccountAlterAudits { get; set; } = null!;
        public virtual DbSet<GpCreditor> GpCreditors { get; set; } = null!;
        public virtual DbSet<GpGrantBatchEntry> GpGrantBatchEntries { get; set; } = null!;
        public virtual DbSet<GpGrantBatchEntryHist> GpGrantBatchEntryHists { get; set; } = null!;
        public virtual DbSet<GpGrantBatchList> GpGrantBatchLists { get; set; } = null!;
        public virtual DbSet<GpGrantBatchListHist> GpGrantBatchListHists { get; set; } = null!;
        public virtual DbSet<GrantAmount> GrantAmounts { get; set; } = null!;
        public virtual DbSet<GrantOfoSelection> GrantOfoSelections { get; set; } = null!;
        public virtual DbSet<HajProperty> HajProperties { get; set; } = null!;
        public virtual DbSet<HearingRating> HearingRatings { get; set; } = null!;
        public virtual DbSet<HighestQualificationRequired> HighestQualificationRequireds { get; set; } = null!;
        public virtual DbSet<HistoricalIntersetaTransfer> HistoricalIntersetaTransfers { get; set; } = null!;
        public virtual DbSet<HomeAffair> HomeAffairs { get; set; } = null!;
        public virtual DbSet<HonoursClassification> HonoursClassifications { get; set; } = null!;
        public virtual DbSet<HostingCompany> HostingCompanies { get; set; } = null!;
        public virtual DbSet<HostingCompanyAud> HostingCompanyAuds { get; set; } = null!;
        public virtual DbSet<HostingCompanyCompany> HostingCompanyCompanies { get; set; } = null!;
        public virtual DbSet<HostingCompanyDepartment> HostingCompanyDepartments { get; set; } = null!;
        public virtual DbSet<HostingCompanyDepartmentsChatEmployee> HostingCompanyDepartmentsChatEmployees { get; set; } = null!;
        public virtual DbSet<HostingCompanyDepartmentsEmployee> HostingCompanyDepartmentsEmployees { get; set; } = null!;
        public virtual DbSet<HostingCompanyDepartmentsProcess> HostingCompanyDepartmentsProcesses { get; set; } = null!;
        public virtual DbSet<HostingCompanyEmployee> HostingCompanyEmployees { get; set; } = null!;
        public virtual DbSet<HostingCompanyEmployeeTemplate> HostingCompanyEmployeeTemplates { get; set; } = null!;
        public virtual DbSet<HostingCompanyProcess> HostingCompanyProcesses { get; set; } = null!;
        public virtual DbSet<HostingCompanyTemplate> HostingCompanyTemplates { get; set; } = null!;
        public virtual DbSet<Image> Images { get; set; } = null!;
        public virtual DbSet<ImpactOfStaffTraining> ImpactOfStaffTrainings { get; set; } = null!;
        public virtual DbSet<Institution> Institutions { get; set; } = null!;
        public virtual DbSet<InstitutionType> InstitutionTypes { get; set; } = null!;
        public virtual DbSet<InterSetaTransfer> InterSetaTransfers { get; set; } = null!;
        public virtual DbSet<InternshipStatus> InternshipStatuses { get; set; } = null!;
        public virtual DbSet<InterventionLevel> InterventionLevels { get; set; } = null!;
        public virtual DbSet<InterventionLevelHist> InterventionLevelHists { get; set; } = null!;
        public virtual DbSet<InterventionTitle> InterventionTitles { get; set; } = null!;
        public virtual DbSet<InterventionType> InterventionTypes { get; set; } = null!;
        public virtual DbSet<InterventionTypeDescription> InterventionTypeDescriptions { get; set; } = null!;
        public virtual DbSet<InterventionTypeHist> InterventionTypeHists { get; set; } = null!;
        public virtual DbSet<JasperDownloadTracker> JasperDownloadTrackers { get; set; } = null!;
        public virtual DbSet<JobTitle> JobTitles { get; set; } = null!;
        public virtual DbSet<Language> Languages { get; set; } = null!;
        public virtual DbSet<Learner> Learners { get; set; } = null!;
        public virtual DbSet<LearnerAchievementStatus> LearnerAchievementStatuses { get; set; } = null!;
        public virtual DbSet<LearnerAchievementType> LearnerAchievementTypes { get; set; } = null!;
        public virtual DbSet<LearnerInduction> LearnerInductions { get; set; } = null!;
        public virtual DbSet<LearnerMentorRatio> LearnerMentorRatios { get; set; } = null!;
        public virtual DbSet<LearnerMonitoringSurvey> LearnerMonitoringSurveys { get; set; } = null!;
        public virtual DbSet<LearnerReadinessEisa> LearnerReadinessEisas { get; set; } = null!;
        public virtual DbSet<Learnership> Learnerships { get; set; } = null!;
        public virtual DbSet<LearnershipDataUpload> LearnershipDataUploads { get; set; } = null!;
        public virtual DbSet<LearnershipDevelopmentRegistration> LearnershipDevelopmentRegistrations { get; set; } = null!;
        public virtual DbSet<LearnershipHist> LearnershipHists { get; set; } = null!;
        public virtual DbSet<LearnershipUnitStandard> LearnershipUnitStandards { get; set; } = null!;
        public virtual DbSet<LegacyApprenticeship> LegacyApprenticeships { get; set; } = null!;
        public virtual DbSet<LegacyApprenticeshipTradeTest> LegacyApprenticeshipTradeTests { get; set; } = null!;
        public virtual DbSet<LegacyAssessorAccreditation> LegacyAssessorAccreditations { get; set; } = null!;
        public virtual DbSet<LegacyAssessorLearnership> LegacyAssessorLearnerships { get; set; } = null!;
        public virtual DbSet<LegacyAssessorQualification> LegacyAssessorQualifications { get; set; } = null!;
        public virtual DbSet<LegacyAssessorSkillsProgramme> LegacyAssessorSkillsProgrammes { get; set; } = null!;
        public virtual DbSet<LegacyAssessorUnitStandard> LegacyAssessorUnitStandards { get; set; } = null!;
        public virtual DbSet<LegacyBursary> LegacyBursaries { get; set; } = null!;
        public virtual DbSet<LegacyDttcApproval> LegacyDttcApprovals { get; set; } = null!;
        public virtual DbSet<LegacyDttcQualification> LegacyDttcQualifications { get; set; } = null!;
        public virtual DbSet<LegacyDttcSkillsProgramme> LegacyDttcSkillsProgrammes { get; set; } = null!;
        public virtual DbSet<LegacyDttcTrade> LegacyDttcTrades { get; set; } = null!;
        public virtual DbSet<LegacyDttcUnitStandard> LegacyDttcUnitStandards { get; set; } = null!;
        public virtual DbSet<LegacyEmployerWa2Learnership> LegacyEmployerWa2Learnerships { get; set; } = null!;
        public virtual DbSet<LegacyEmployerWa2Qualification> LegacyEmployerWa2Qualifications { get; set; } = null!;
        public virtual DbSet<LegacyEmployerWa2SkillsProgramme> LegacyEmployerWa2SkillsProgrammes { get; set; } = null!;
        public virtual DbSet<LegacyEmployerWa2Trade> LegacyEmployerWa2Trades { get; set; } = null!;
        public virtual DbSet<LegacyEmployerWa2UnitStandard> LegacyEmployerWa2UnitStandards { get; set; } = null!;
        public virtual DbSet<LegacyEmployerWa2Workplace> LegacyEmployerWa2Workplaces { get; set; } = null!;
        public virtual DbSet<LegacyExperiential> LegacyExperientials { get; set; } = null!;
        public virtual DbSet<LegacyInternship> LegacyInternships { get; set; } = null!;
        public virtual DbSet<LegacyLearnership> LegacyLearnerships { get; set; } = null!;
        public virtual DbSet<LegacyLearnershipAssessment1> LegacyLearnershipAssessment1s { get; set; } = null!;
        public virtual DbSet<LegacyLearnershipAssessment2> LegacyLearnershipAssessment2s { get; set; } = null!;
        public virtual DbSet<LegacyLearnershipAssessment3> LegacyLearnershipAssessment3s { get; set; } = null!;
        public virtual DbSet<LegacyModeratorAccreditation> LegacyModeratorAccreditations { get; set; } = null!;
        public virtual DbSet<LegacyModeratorLearnership> LegacyModeratorLearnerships { get; set; } = null!;
        public virtual DbSet<LegacyModeratorQualification> LegacyModeratorQualifications { get; set; } = null!;
        public virtual DbSet<LegacyModeratorSkillsProgramme> LegacyModeratorSkillsProgrammes { get; set; } = null!;
        public virtual DbSet<LegacyModeratorUnitStandard> LegacyModeratorUnitStandards { get; set; } = null!;
        public virtual DbSet<LegacyOrganisationLevyPaying> LegacyOrganisationLevyPayings { get; set; } = null!;
        public virtual DbSet<LegacyOrganisationNonLevyPaying> LegacyOrganisationNonLevyPayings { get; set; } = null!;
        public virtual DbSet<LegacyOrganisationSite> LegacyOrganisationSites { get; set; } = null!;
        public virtual DbSet<LegacyPerson> LegacyPeople { get; set; } = null!;
        public virtual DbSet<LegacyProviderAccreditation> LegacyProviderAccreditations { get; set; } = null!;
        public virtual DbSet<LegacyProviderApplicationAlterationAudit> LegacyProviderApplicationAlterationAudits { get; set; } = null!;
        public virtual DbSet<LegacyProviderApplicationSiteAllocation> LegacyProviderApplicationSiteAllocations { get; set; } = null!;
        public virtual DbSet<LegacyProviderLearnership> LegacyProviderLearnerships { get; set; } = null!;
        public virtual DbSet<LegacyProviderQualification> LegacyProviderQualifications { get; set; } = null!;
        public virtual DbSet<LegacyProviderSkillsProgramme> LegacyProviderSkillsProgrammes { get; set; } = null!;
        public virtual DbSet<LegacyProviderTrade> LegacyProviderTrades { get; set; } = null!;
        public virtual DbSet<LegacyProviderUnitStandard> LegacyProviderUnitStandards { get; set; } = null!;
        public virtual DbSet<LegacyReporting> LegacyReportings { get; set; } = null!;
        public virtual DbSet<LegacyReportingParam> LegacyReportingParams { get; set; } = null!;
        public virtual DbSet<LegacySectTwentyEight> LegacySectTwentyEights { get; set; } = null!;
        public virtual DbSet<LegacySectionTwentyEightTradeTest> LegacySectionTwentyEightTradeTests { get; set; } = null!;
        public virtual DbSet<LegacySkillsProgramme> LegacySkillsProgrammes { get; set; } = null!;
        public virtual DbSet<LegacySkillsProgrammeAssessment> LegacySkillsProgrammeAssessments { get; set; } = null!;
        public virtual DbSet<LegacyTvet> LegacyTvets { get; set; } = null!;
        public virtual DbSet<LegacyUnitStandard> LegacyUnitStandards { get; set; } = null!;
        public virtual DbSet<LegacyUnitStandardAssessment> LegacyUnitStandardAssessments { get; set; } = null!;
        public virtual DbSet<LevyDetailMgPaymentsAlterAudit> LevyDetailMgPaymentsAlterAudits { get; set; } = null!;
        public virtual DbSet<LevyIncomeSummary> LevyIncomeSummaries { get; set; } = null!;
        public virtual DbSet<MailLog> MailLogs { get; set; } = null!;
        public virtual DbSet<MailTemplate> MailTemplates { get; set; } = null!;
        public virtual DbSet<MailingList> MailingLists { get; set; } = null!;
        public virtual DbSet<MandatoryGrant> MandatoryGrants { get; set; } = null!;
        public virtual DbSet<MandatoryGrantDetail> MandatoryGrantDetails { get; set; } = null!;
        public virtual DbSet<MandatoryGrantDetailArchive> MandatoryGrantDetailArchives { get; set; } = null!;
        public virtual DbSet<MandatoryGrantEvaluation> MandatoryGrantEvaluations { get; set; } = null!;
        public virtual DbSet<MandatoryGrantHistory> MandatoryGrantHistories { get; set; } = null!;
        public virtual DbSet<MandatoryGrantRecommendation> MandatoryGrantRecommendations { get; set; } = null!;
        public virtual DbSet<MandatoryGrantRecommendationHistory> MandatoryGrantRecommendationHistories { get; set; } = null!;
        public virtual DbSet<MandatoryGrantWorkplace> MandatoryGrantWorkplaces { get; set; } = null!;
        public virtual DbSet<MaritalStatus> MaritalStatuses { get; set; } = null!;
        public virtual DbSet<MeetingAgendum> MeetingAgenda { get; set; } = null!;
        public virtual DbSet<MgVerification> MgVerifications { get; set; } = null!;
        public virtual DbSet<MgVerificationCompleted> MgVerificationCompleteds { get; set; } = null!;
        public virtual DbSet<MgVerificationDetail> MgVerificationDetails { get; set; } = null!;
        public virtual DbSet<MgVerificationDetailsAud> MgVerificationDetailsAuds { get; set; } = null!;
        public virtual DbSet<Module> Modules { get; set; } = null!;
        public virtual DbSet<ModulesCategory> ModulesCategories { get; set; } = null!;
        public virtual DbSet<ModulesTitle> ModulesTitles { get; set; } = null!;
        public virtual DbSet<ModulesUnitStandard> ModulesUnitStandards { get; set; } = null!;
        public virtual DbSet<Municipality> Municipalities { get; set; } = null!;
        public virtual DbSet<MunicipalityType> MunicipalityTypes { get; set; } = null!;
        public virtual DbSet<NambDecisionHistory> NambDecisionHistories { get; set; } = null!;
        public virtual DbSet<Nationality> Nationalities { get; set; } = null!;
        public virtual DbSet<NextRefreshYear> NextRefreshYears { get; set; } = null!;
        public virtual DbSet<NlrdFile21> NlrdFile21s { get; set; } = null!;
        public virtual DbSet<NlrdFile22> NlrdFile22s { get; set; } = null!;
        public virtual DbSet<NlrdFile23> NlrdFile23s { get; set; } = null!;
        public virtual DbSet<NlrdFile24> NlrdFile24s { get; set; } = null!;
        public virtual DbSet<NlrdFile25> NlrdFile25s { get; set; } = null!;
        public virtual DbSet<NlrdFile26> NlrdFile26s { get; set; } = null!;
        public virtual DbSet<NlrdFile27> NlrdFile27s { get; set; } = null!;
        public virtual DbSet<NlrdFile28> NlrdFile28s { get; set; } = null!;
        public virtual DbSet<NlrdFile29> NlrdFile29s { get; set; } = null!;
        public virtual DbSet<NlrdFile30> NlrdFile30s { get; set; } = null!;
        public virtual DbSet<NoHardToFillVacancy> NoHardToFillVacancies { get; set; } = null!;
        public virtual DbSet<NonCreditBearingIntervationTitle> NonCreditBearingIntervationTitles { get; set; } = null!;
        public virtual DbSet<NonCreditBearingIntervationTitleHist> NonCreditBearingIntervationTitleHists { get; set; } = null!;
        public virtual DbSet<NonNqfIntervStatus> NonNqfIntervStatuses { get; set; } = null!;
        public virtual DbSet<NonSetaCompany> NonSetaCompanies { get; set; } = null!;
        public virtual DbSet<NonSetaCompanyHist> NonSetaCompanyHists { get; set; } = null!;
        public virtual DbSet<NonSetaCompanyUser> NonSetaCompanyUsers { get; set; } = null!;
        public virtual DbSet<NonSetaQualificationsCompletion> NonSetaQualificationsCompletions { get; set; } = null!;
        public virtual DbSet<NqfAlignment> NqfAlignments { get; set; } = null!;
        public virtual DbSet<NqfDesigStatus> NqfDesigStatuses { get; set; } = null!;
        public virtual DbSet<NqfLevel> NqfLevels { get; set; } = null!;
        public virtual DbSet<NqfLevelsHist> NqfLevelsHists { get; set; } = null!;
        public virtual DbSet<NsdpQuarterReporting> NsdpQuarterReportings { get; set; } = null!;
        public virtual DbSet<NsdpQuarterReportingsHist> NsdpQuarterReportingsHists { get; set; } = null!;
        public virtual DbSet<NsdpReportConfig> NsdpReportConfigs { get; set; } = null!;
        public virtual DbSet<NsdpReportConfigHist> NsdpReportConfigHists { get; set; } = null!;
        public virtual DbSet<OccupationCategory> OccupationCategories { get; set; } = null!;
        public virtual DbSet<OccupationCategoryHist> OccupationCategoryHists { get; set; } = null!;
        public virtual DbSet<Office> Offices { get; set; } = null!;
        public virtual DbSet<Ofo> Ofos { get; set; } = null!;
        public virtual DbSet<OfoCode> OfoCodes { get; set; } = null!;
        public virtual DbSet<OfoCodesHist> OfoCodesHists { get; set; } = null!;
        public virtual DbSet<OfoQualificationLink> OfoQualificationLinks { get; set; } = null!;
        public virtual DbSet<OnScreenHelp> OnScreenHelps { get; set; } = null!;
        public virtual DbSet<OrganisationType> OrganisationTypes { get; set; } = null!;
        public virtual DbSet<OrganisedLabourUnion> OrganisedLabourUnions { get; set; } = null!;
        public virtual DbSet<PartOf> PartOfs { get; set; } = null!;
        public virtual DbSet<PaymentRequest> PaymentRequests { get; set; } = null!;
        public virtual DbSet<PopiActStatus> PopiActStatuses { get; set; } = null!;
        public virtual DbSet<PostCodeLink> PostCodeLinks { get; set; } = null!;
        public virtual DbSet<PostCodeLinkHist> PostCodeLinkHists { get; set; } = null!;
        public virtual DbSet<PreviousSchool> PreviousSchools { get; set; } = null!;
        public virtual DbSet<PreviousSchoolsHist> PreviousSchoolsHists { get; set; } = null!;
        public virtual DbSet<PrioritisationScale> PrioritisationScales { get; set; } = null!;
        public virtual DbSet<ProcessRole> ProcessRoles { get; set; } = null!;
        public virtual DbSet<ProjectImplementationPlan> ProjectImplementationPlans { get; set; } = null!;
        public virtual DbSet<ProjectImplementationPlanLearner> ProjectImplementationPlanLearners { get; set; } = null!;
        public virtual DbSet<ProjectImplementationPlanLearnersHist> ProjectImplementationPlanLearnersHists { get; set; } = null!;
        public virtual DbSet<ProjectType> ProjectTypes { get; set; } = null!;
        public virtual DbSet<ProviderAccredStatus> ProviderAccredStatuses { get; set; } = null!;
        public virtual DbSet<ProviderAccreditAssessor> ProviderAccreditAssessors { get; set; } = null!;
        public virtual DbSet<ProviderApplicationSuspensionDeActivated> ProviderApplicationSuspensionDeActivateds { get; set; } = null!;
        public virtual DbSet<ProviderApplicationTradeTestAssessorsLink> ProviderApplicationTradeTestAssessorsLinks { get; set; } = null!;
        public virtual DbSet<ProviderApplicationTradeTestAssessorsLinkHist> ProviderApplicationTradeTestAssessorsLinkHists { get; set; } = null!;
        public virtual DbSet<ProviderClass> ProviderClasses { get; set; } = null!;
        public virtual DbSet<ProviderStatus> ProviderStatuses { get; set; } = null!;
        public virtual DbSet<ProviderType> ProviderTypes { get; set; } = null!;
        public virtual DbSet<Province> Provinces { get; set; } = null!;
        public virtual DbSet<PurposeOfSiteVisit> PurposeOfSiteVisits { get; set; } = null!;
        public virtual DbSet<PurposeOfSiteVisitAud> PurposeOfSiteVisitAuds { get; set; } = null!;
        public virtual DbSet<PurposeOfSiteVisitChild> PurposeOfSiteVisitChildren { get; set; } = null!;
        public virtual DbSet<QctoFile01> QctoFile01s { get; set; } = null!;
        public virtual DbSet<QctoFile02> QctoFile02s { get; set; } = null!;
        public virtual DbSet<QctoFile03> QctoFile03s { get; set; } = null!;
        public virtual DbSet<QdfCompany> QdfCompanies { get; set; } = null!;
        public virtual DbSet<QdfCompanyUser> QdfCompanyUsers { get; set; } = null!;
        public virtual DbSet<QmrAetProgrammeDataHist> QmrAetProgrammeDataHists { get; set; } = null!;
        public virtual DbSet<QmrAetProgrammeDatum> QmrAetProgrammeData { get; set; } = null!;
        public virtual DbSet<QmrArtisanDataHist> QmrArtisanDataHists { get; set; } = null!;
        public virtual DbSet<QmrArtisanDatum> QmrArtisanData { get; set; } = null!;
        public virtual DbSet<QmrBursaryDataHist> QmrBursaryDataHists { get; set; } = null!;
        public virtual DbSet<QmrBursaryDatum> QmrBursaryData { get; set; } = null!;
        public virtual DbSet<QmrCandidacyProgrammeDataHist> QmrCandidacyProgrammeDataHists { get; set; } = null!;
        public virtual DbSet<QmrCandidacyProgrammeDatum> QmrCandidacyProgrammeData { get; set; } = null!;
        public virtual DbSet<QmrFinYear> QmrFinYears { get; set; } = null!;
        public virtual DbSet<QmrFinYearsHist> QmrFinYearsHists { get; set; } = null!;
        public virtual DbSet<QmrIndividualUnitStandardDataHist> QmrIndividualUnitStandardDataHists { get; set; } = null!;
        public virtual DbSet<QmrIndividualUnitStandardDatum> QmrIndividualUnitStandardData { get; set; } = null!;
        public virtual DbSet<QmrInternshipDataHist> QmrInternshipDataHists { get; set; } = null!;
        public virtual DbSet<QmrInternshipDatum> QmrInternshipData { get; set; } = null!;
        public virtual DbSet<QmrLearnershipDataHist> QmrLearnershipDataHists { get; set; } = null!;
        public virtual DbSet<QmrLearnershipDatum> QmrLearnershipData { get; set; } = null!;
        public virtual DbSet<QmrLecturerDevelopmentDataHist> QmrLecturerDevelopmentDataHists { get; set; } = null!;
        public virtual DbSet<QmrLecturerDevelopmentDatum> QmrLecturerDevelopmentData { get; set; } = null!;
        public virtual DbSet<QmrRplDataHist> QmrRplDataHists { get; set; } = null!;
        public virtual DbSet<QmrRplDatum> QmrRplData { get; set; } = null!;
        public virtual DbSet<QmrSkillsProgrammeDataHist> QmrSkillsProgrammeDataHists { get; set; } = null!;
        public virtual DbSet<QmrSkillsProgrammeDatum> QmrSkillsProgrammeData { get; set; } = null!;
        public virtual DbSet<QmrTvetDataHist> QmrTvetDataHists { get; set; } = null!;
        public virtual DbSet<QmrTvetDatum> QmrTvetData { get; set; } = null!;
        public virtual DbSet<QmrUniversityStudentDataHist> QmrUniversityStudentDataHists { get; set; } = null!;
        public virtual DbSet<QmrUniversityStudentDatum> QmrUniversityStudentData { get; set; } = null!;
        public virtual DbSet<QualificationEntryRequirement> QualificationEntryRequirements { get; set; } = null!;
        public virtual DbSet<QualificationMultipleSelection> QualificationMultipleSelections { get; set; } = null!;
        public virtual DbSet<QualificationMultipleSelectionHist> QualificationMultipleSelectionHists { get; set; } = null!;
        public virtual DbSet<QualificationTask> QualificationTasks { get; set; } = null!;
        public virtual DbSet<QualificationToolKit> QualificationToolKits { get; set; } = null!;
        public virtual DbSet<QualificationToolList> QualificationToolLists { get; set; } = null!;
        public virtual DbSet<QualificationType> QualificationTypes { get; set; } = null!;
        public virtual DbSet<QualificationUnitStandard> QualificationUnitStandards { get; set; } = null!;
        public virtual DbSet<QualificationsCurriculumDevelopment> QualificationsCurriculumDevelopments { get; set; } = null!;
        public virtual DbSet<Ratio> Ratios { get; set; } = null!;
        public virtual DbSet<Region> Regions { get; set; } = null!;
        public virtual DbSet<RegionTown> RegionTowns { get; set; } = null!;
        public virtual DbSet<RejectReason> RejectReasons { get; set; } = null!;
        public virtual DbSet<RejectReasonMultipleSelection> RejectReasonMultipleSelections { get; set; } = null!;
        public virtual DbSet<RejectReasonMultipleSelectionHist> RejectReasonMultipleSelectionHists { get; set; } = null!;
        public virtual DbSet<RejectReasonMultipleSelectionHistAud> RejectReasonMultipleSelectionHistAuds { get; set; } = null!;
        public virtual DbSet<RejectReasonsChild> RejectReasonsChildren { get; set; } = null!;
        public virtual DbSet<RelationshipToCompany> RelationshipToCompanies { get; set; } = null!;
        public virtual DbSet<RememberingRating> RememberingRatings { get; set; } = null!;
        public virtual DbSet<ReportGenerationPropertiesHist> ReportGenerationPropertiesHists { get; set; } = null!;
        public virtual DbSet<ReportGenerationProperty> ReportGenerationProperties { get; set; } = null!;
        public virtual DbSet<ReportGenerationSchedule> ReportGenerationSchedules { get; set; } = null!;
        public virtual DbSet<RestoreDocByte> RestoreDocBytes { get; set; } = null!;
        public virtual DbSet<ReviewCommitteeMeeting> ReviewCommitteeMeetings { get; set; } = null!;
        public virtual DbSet<ReviewCommitteeMeetingAgendum> ReviewCommitteeMeetingAgenda { get; set; } = null!;
        public virtual DbSet<ReviewCommitteeMeetingUser> ReviewCommitteeMeetingUsers { get; set; } = null!;
        public virtual DbSet<Revinfo> Revinfos { get; set; } = null!;
        public virtual DbSet<Role> Roles { get; set; } = null!;
        public virtual DbSet<SaqaQualification> SaqaQualifications { get; set; } = null!;
        public virtual DbSet<SaqaQualificationAud> SaqaQualificationAuds { get; set; } = null!;
        public virtual DbSet<SaqaQualificationHist> SaqaQualificationHists { get; set; } = null!;
        public virtual DbSet<SaqaQualificationTemp> SaqaQualificationTemps { get; set; } = null!;
        public virtual DbSet<SaqaQualificationTempAud> SaqaQualificationTempAuds { get; set; } = null!;
        public virtual DbSet<SaqaSpecificOutcome> SaqaSpecificOutcomes { get; set; } = null!;
        public virtual DbSet<SaqaSpecificOutcomeTemp> SaqaSpecificOutcomeTemps { get; set; } = null!;
        public virtual DbSet<SaqaUnitstandard> SaqaUnitstandards { get; set; } = null!;
        public virtual DbSet<SaqaUnitstandardHist> SaqaUnitstandardHists { get; set; } = null!;
        public virtual DbSet<SaqaUnitstandardTemp> SaqaUnitstandardTemps { get; set; } = null!;
        public virtual DbSet<SaqaUsQualification> SaqaUsQualifications { get; set; } = null!;
        public virtual DbSet<SaqaUsQualificationTemp> SaqaUsQualificationTemps { get; set; } = null!;
        public virtual DbSet<SarsEmployerDetail> SarsEmployerDetails { get; set; } = null!;
        public virtual DbSet<SarsEmployerDetailAllDataForTesting> SarsEmployerDetailAllDataForTestings { get; set; } = null!;
        public virtual DbSet<SarsEmployerDetailUpdateHistory> SarsEmployerDetailUpdateHistories { get; set; } = null!;
        public virtual DbSet<SarsFile> SarsFiles { get; set; } = null!;
        public virtual DbSet<SarsInterSetaTransferLevy> SarsInterSetaTransferLevies { get; set; } = null!;
        public virtual DbSet<SarsLeviesPaid> SarsLeviesPaids { get; set; } = null!;
        public virtual DbSet<SarsLevyDetail> SarsLevyDetails { get; set; } = null!;
        public virtual DbSet<SarsLevyDetailCalculation> SarsLevyDetailCalculations { get; set; } = null!;
        public virtual DbSet<SarsLevyDetailCalculationHist> SarsLevyDetailCalculationHists { get; set; } = null!;
        public virtual DbSet<SarsLevyRecon> SarsLevyRecons { get; set; } = null!;
        public virtual DbSet<SarsLevySchemeYearReturn> SarsLevySchemeYearReturns { get; set; } = null!;
        public virtual DbSet<SarsLevySchemeYearReturnsHist> SarsLevySchemeYearReturnsHists { get; set; } = null!;
        public virtual DbSet<ScarcityReason> ScarcityReasons { get; set; } = null!;
        public virtual DbSet<ScheduleChangesLog> ScheduleChangesLogs { get; set; } = null!;
        public virtual DbSet<ScheduledEvent> ScheduledEvents { get; set; } = null!;
        public virtual DbSet<ScheduledEventUser> ScheduledEventUsers { get; set; } = null!;
        public virtual DbSet<ScopeOfResponsibility> ScopeOfResponsibilities { get; set; } = null!;
        public virtual DbSet<SdfCompany> SdfCompanies { get; set; } = null!;
        public virtual DbSet<SdfCompanyHistory> SdfCompanyHistories { get; set; } = null!;
        public virtual DbSet<SdfType> SdfTypes { get; set; } = null!;
        public virtual DbSet<SdpCompany> SdpCompanies { get; set; } = null!;
        public virtual DbSet<SdpCompanyAction> SdpCompanyActions { get; set; } = null!;
        public virtual DbSet<SdpCompanyActionsHist> SdpCompanyActionsHists { get; set; } = null!;
        public virtual DbSet<SdpCompanyHist> SdpCompanyHists { get; set; } = null!;
        public virtual DbSet<SdpCompanyHistory> SdpCompanyHistories { get; set; } = null!;
        public virtual DbSet<SdpExtensionOfScope> SdpExtensionOfScopes { get; set; } = null!;
        public virtual DbSet<SdpExtensionOfScopeHist> SdpExtensionOfScopeHists { get; set; } = null!;
        public virtual DbSet<SdpReAccreditation> SdpReAccreditations { get; set; } = null!;
        public virtual DbSet<SdpReAccreditationHist> SdpReAccreditationHists { get; set; } = null!;
        public virtual DbSet<SdpType> SdpTypes { get; set; } = null!;
        public virtual DbSet<SdpTypeHist> SdpTypeHists { get; set; } = null!;
        public virtual DbSet<SeeingRating> SeeingRatings { get; set; } = null!;
        public virtual DbSet<SelfcaringRating> SelfcaringRatings { get; set; } = null!;
        public virtual DbSet<SetmisFile100> SetmisFile100s { get; set; } = null!;
        public virtual DbSet<SetmisFile100Extracted> SetmisFile100Extracteds { get; set; } = null!;
        public virtual DbSet<SetmisFile100ExtractedCopy> SetmisFile100ExtractedCopies { get; set; } = null!;
        public virtual DbSet<SetmisFile200> SetmisFile200s { get; set; } = null!;
        public virtual DbSet<SetmisFile200Extracted> SetmisFile200Extracteds { get; set; } = null!;
        public virtual DbSet<SetmisFile200ExtractedCopy> SetmisFile200ExtractedCopies { get; set; } = null!;
        public virtual DbSet<SetmisFile304> SetmisFile304s { get; set; } = null!;
        public virtual DbSet<SetmisFile304Extracted> SetmisFile304Extracteds { get; set; } = null!;
        public virtual DbSet<SetmisFile400> SetmisFile400s { get; set; } = null!;
        public virtual DbSet<SetmisFile400Extracted> SetmisFile400Extracteds { get; set; } = null!;
        public virtual DbSet<SetmisFile401> SetmisFile401s { get; set; } = null!;
        public virtual DbSet<SetmisFile401Extracted> SetmisFile401Extracteds { get; set; } = null!;
        public virtual DbSet<SetmisFile500> SetmisFile500s { get; set; } = null!;
        public virtual DbSet<SetmisFile500Extracted> SetmisFile500Extracteds { get; set; } = null!;
        public virtual DbSet<SetmisFile501> SetmisFile501s { get; set; } = null!;
        public virtual DbSet<SetmisFile501Extracted> SetmisFile501Extracteds { get; set; } = null!;
        public virtual DbSet<SetmisFile502> SetmisFile502s { get; set; } = null!;
        public virtual DbSet<SetmisFile502Extracted> SetmisFile502Extracteds { get; set; } = null!;
        public virtual DbSet<SetmisFile503> SetmisFile503s { get; set; } = null!;
        public virtual DbSet<SetmisFile503Extracted> SetmisFile503Extracteds { get; set; } = null!;
        public virtual DbSet<SetmisFile505> SetmisFile505s { get; set; } = null!;
        public virtual DbSet<SetmisFile505Extracted> SetmisFile505Extracteds { get; set; } = null!;
        public virtual DbSet<SetmisFile506> SetmisFile506s { get; set; } = null!;
        public virtual DbSet<SetmisFile506Extracted> SetmisFile506Extracteds { get; set; } = null!;
        public virtual DbSet<Setum> Seta { get; set; } = null!;
        public virtual DbSet<SicCode> SicCodes { get; set; } = null!;
        public virtual DbSet<Signoff> Signoffs { get; set; } = null!;
        public virtual DbSet<SignoffHist> SignoffHists { get; set; } = null!;
        public virtual DbSet<Site> Sites { get; set; } = null!;
        public virtual DbSet<SiteResponse> SiteResponses { get; set; } = null!;
        public virtual DbSet<SiteVisit> SiteVisits { get; set; } = null!;
        public virtual DbSet<SiteVisitReportDispute> SiteVisitReportDisputes { get; set; } = null!;
        public virtual DbSet<SiteVisitReportNew> SiteVisitReportNews { get; set; } = null!;
        public virtual DbSet<SiteVisitReportSme> SiteVisitReportSmes { get; set; } = null!;
        public virtual DbSet<SitesHist> SitesHists { get; set; } = null!;
        public virtual DbSet<SitesHistory> SitesHistories { get; set; } = null!;
        public virtual DbSet<SitesSme> SitesSmes { get; set; } = null!;
        public virtual DbSet<SitesSmeHist> SitesSmeHists { get; set; } = null!;
        public virtual DbSet<SizeOfCompany> SizeOfCompanies { get; set; } = null!;
        public virtual DbSet<SkillsGapTrackLookUp> SkillsGapTrackLookUps { get; set; } = null!;
        public virtual DbSet<SkillsGapTrackLookUpHist> SkillsGapTrackLookUpHists { get; set; } = null!;
        public virtual DbSet<SkillsIdentification> SkillsIdentifications { get; set; } = null!;
        public virtual DbSet<SkillsProgram> SkillsPrograms { get; set; } = null!;
        public virtual DbSet<SkillsProgramHist> SkillsProgramHists { get; set; } = null!;
        public virtual DbSet<SkillsProgramUnitStandard> SkillsProgramUnitStandards { get; set; } = null!;
        public virtual DbSet<SkillsRegistration> SkillsRegistrations { get; set; } = null!;
        public virtual DbSet<SkillsRegistrationAud> SkillsRegistrationAuds { get; set; } = null!;
        public virtual DbSet<SkillsRegistrationQualificationUnitStandard> SkillsRegistrationQualificationUnitStandards { get; set; } = null!;
        public virtual DbSet<SkillsRegistrationUnitStandard> SkillsRegistrationUnitStandards { get; set; } = null!;
        public virtual DbSet<SkillsSet> SkillsSets { get; set; } = null!;
        public virtual DbSet<SkillsSetHist> SkillsSetHists { get; set; } = null!;
        public virtual DbSet<SkillsSetUnitStandard> SkillsSetUnitStandards { get; set; } = null!;
        public virtual DbSet<SmeQualification> SmeQualifications { get; set; } = null!;
        public virtual DbSet<SmeQualificationsHist> SmeQualificationsHists { get; set; } = null!;
        public virtual DbSet<SocioeconomicStatusCode> SocioeconomicStatusCodes { get; set; } = null!;
        public virtual DbSet<SoftDeleteChildExample> SoftDeleteChildExamples { get; set; } = null!;
        public virtual DbSet<SoftDeleteExample> SoftDeleteExamples { get; set; } = null!;
        public virtual DbSet<SprocedureLog> SprocedureLogs { get; set; } = null!;
        public virtual DbSet<StakeholderRelation> StakeholderRelations { get; set; } = null!;
        public virtual DbSet<StakeholderRelationsSurvey> StakeholderRelationsSurveys { get; set; } = null!;
        public virtual DbSet<StatementOfResult> StatementOfResults { get; set; } = null!;
        public virtual DbSet<StatssaAreaCode> StatssaAreaCodes { get; set; } = null!;
        public virtual DbSet<Status> Statuses { get; set; } = null!;
        public virtual DbSet<StrategicPriority> StrategicPriorities { get; set; } = null!;
        public virtual DbSet<StructureStatus> StructureStatuses { get; set; } = null!;
        public virtual DbSet<StructureStatusId> StructureStatusIds { get; set; } = null!;
        public virtual DbSet<Subdomain> Subdomains { get; set; } = null!;
        public virtual DbSet<Subfield> Subfields { get; set; } = null!;
       // public virtual DbSet<SummativeAssessmentReport> SummativeAssessmentReports { get; set; } = null!;
        public virtual DbSet<SummativeAssessmentReportTest> SummativeAssessmentReportTests { get; set; } = null!;
        public virtual DbSet<SummativeAssessmentReportUnitStandard> SummativeAssessmentReportUnitStandards { get; set; } = null!;
        public virtual DbSet<SupportEmail> SupportEmails { get; set; } = null!;
        public virtual DbSet<TS1> TS1s { get; set; } = null!;
        public virtual DbSet<TS2> TS2s { get; set; } = null!;
        public virtual DbSet<mersetaWebAPI.Models.Task> Tasks { get; set; } = null!;
        public virtual DbSet<TaskRejectionContent> TaskRejectionContents { get; set; } = null!;
        public virtual DbSet<TaskUser> TaskUsers { get; set; } = null!;
        public virtual DbSet<TempAddress> TempAddresses { get; set; } = null!;
        public virtual DbSet<TempSignoff> TempSignoffs { get; set; } = null!;
        public virtual DbSet<Tempx> Tempxes { get; set; } = null!;
        public virtual DbSet<Title> Titles { get; set; } = null!;
        public virtual DbSet<Tool> Tools { get; set; } = null!;
        public virtual DbSet<ToolCategory> ToolCategories { get; set; } = null!;
        public virtual DbSet<ToolList> ToolLists { get; set; } = null!;
        public virtual DbSet<ToolListCategory> ToolListCategories { get; set; } = null!;
        public virtual DbSet<ToolListTool> ToolListTools { get; set; } = null!;
        public virtual DbSet<Town> Towns { get; set; } = null!;
        public virtual DbSet<TradeAppraisalsChecklist> TradeAppraisalsChecklists { get; set; } = null!;
        public virtual DbSet<TradeAppraisalsChecklistAud> TradeAppraisalsChecklistAuds { get; set; } = null!;
        public virtual DbSet<TradeTestCentersHistoric> TradeTestCentersHistorics { get; set; } = null!;
        public virtual DbSet<TradeTestResult> TradeTestResults { get; set; } = null!;
        public virtual DbSet<TradeTestTaskResult> TradeTestTaskResults { get; set; } = null!;
        public virtual DbSet<TrainingComittee> TrainingComittees { get; set; } = null!;
        public virtual DbSet<TrainingComitteeHostory> TrainingComitteeHostories { get; set; } = null!;
        public virtual DbSet<TrainingDeliveryMethod> TrainingDeliveryMethods { get; set; } = null!;
        public virtual DbSet<TrainingImpactRating> TrainingImpactRatings { get; set; } = null!;
        public virtual DbSet<TrainingProviderApplication> TrainingProviderApplications { get; set; } = null!;
        public virtual DbSet<TrainingProviderApplicationHist> TrainingProviderApplicationHists { get; set; } = null!;
        public virtual DbSet<TrainingProviderDocParent> TrainingProviderDocParents { get; set; } = null!;
        public virtual DbSet<TrainingProviderLearnership> TrainingProviderLearnerships { get; set; } = null!;
        public virtual DbSet<TrainingProviderMonitoring> TrainingProviderMonitorings { get; set; } = null!;
        public virtual DbSet<TrainingProviderSkillsProgram> TrainingProviderSkillsPrograms { get; set; } = null!;
        public virtual DbSet<TrainingProviderSkillsProgramHist> TrainingProviderSkillsProgramHists { get; set; } = null!;
        public virtual DbSet<TrainingProviderSkillsSet> TrainingProviderSkillsSets { get; set; } = null!;
        public virtual DbSet<TrainingProviderSkillsSetHist> TrainingProviderSkillsSetHists { get; set; } = null!;
        public virtual DbSet<TrainingProviderVerfication> TrainingProviderVerfications { get; set; } = null!;
        public virtual DbSet<TrainingProviderVerficationHist> TrainingProviderVerficationHists { get; set; } = null!;
        public virtual DbSet<TrainingProviderVerficationLearner> TrainingProviderVerficationLearners { get; set; } = null!;
        public virtual DbSet<TrainingProviderVerficationLearnersHist> TrainingProviderVerficationLearnersHists { get; set; } = null!;
        public virtual DbSet<TrainingReportedAtrPtr> TrainingReportedAtrPtrs { get; set; } = null!;
        public virtual DbSet<TrainingReportedAtrPtrHist> TrainingReportedAtrPtrHists { get; set; } = null!;
        public virtual DbSet<TrainingSite> TrainingSites { get; set; } = null!;
        public virtual DbSet<TrainingSiteHist> TrainingSiteHists { get; set; } = null!;
        public virtual DbSet<TransactionsCompanyValidiation> TransactionsCompanyValidiations { get; set; } = null!;
        public virtual DbSet<TransactionsCompanyValidiationHist> TransactionsCompanyValidiationHists { get; set; } = null!;
        public virtual DbSet<TvetFetQualification> TvetFetQualifications { get; set; } = null!;
        public virtual DbSet<UnionMembership> UnionMemberships { get; set; } = null!;
        public virtual DbSet<UpdateAuditTrail> UpdateAuditTrails { get; set; } = null!;
        public virtual DbSet<UpdateAuditTrailChange> UpdateAuditTrailChanges { get; set; } = null!;
        public virtual DbSet<UploadTrackerAtrWsp> UploadTrackerAtrWsps { get; set; } = null!;
        public virtual DbSet<UrbalRural> UrbalRurals { get; set; } = null!;
        public virtual DbSet<User> Users { get; set; } = null!;
        public virtual DbSet<UserBrowserInformation> UserBrowserInformations { get; set; } = null!;
        public virtual DbSet<UserChangeRequest> UserChangeRequests { get; set; } = null!;
        public virtual DbSet<UserChangeRequestAud> UserChangeRequestAuds { get; set; } = null!;
        public virtual DbSet<UserHostingCompany> UserHostingCompanies { get; set; } = null!;
        public virtual DbSet<UserLearnership> UserLearnerships { get; set; } = null!;
        public virtual DbSet<UserLearnershipHist> UserLearnershipHists { get; set; } = null!;
        public virtual DbSet<UserPermission> UserPermissions { get; set; } = null!;
        public virtual DbSet<UserQualification> UserQualifications { get; set; } = null!;
        public virtual DbSet<UserQualificationsHist> UserQualificationsHists { get; set; } = null!;
        public virtual DbSet<UserResponsibility> UserResponsibilities { get; set; } = null!;
        public virtual DbSet<UserSkillsProgramme> UserSkillsProgrammes { get; set; } = null!;
        public virtual DbSet<UserSkillsProgrammeHist> UserSkillsProgrammeHists { get; set; } = null!;
        public virtual DbSet<UserUnitStandard> UserUnitStandards { get; set; } = null!;
        public virtual DbSet<UserUnitStandardHist> UserUnitStandardHists { get; set; } = null!;
        public virtual DbSet<UsersDisability> UsersDisabilities { get; set; } = null!;
        public virtual DbSet<UsersDisabilityAud> UsersDisabilityAuds { get; set; } = null!;
        public virtual DbSet<UsersDisabilityHist> UsersDisabilityHists { get; set; } = null!;
        public virtual DbSet<UsersHist> UsersHists { get; set; } = null!;
        public virtual DbSet<UsersLanguage> UsersLanguages { get; set; } = null!;
        public virtual DbSet<UsersLanguageHist> UsersLanguageHists { get; set; } = null!;
        public virtual DbSet<UsersResponsibilitiesHistory> UsersResponsibilitiesHistories { get; set; } = null!;
        public virtual DbSet<UsersResponsibility> UsersResponsibilities { get; set; } = null!;
        public virtual DbSet<UsersRole> UsersRoles { get; set; } = null!;
        public virtual DbSet<UsersTrainingProvider> UsersTrainingProviders { get; set; } = null!;
        public virtual DbSet<UsersType> UsersTypes { get; set; } = null!;
        public virtual DbSet<VacancyReason> VacancyReasons { get; set; } = null!;
        public virtual DbSet<Validity> Validities { get; set; } = null!;
        public virtual DbSet<WalkingRating> WalkingRatings { get; set; } = null!;
        public virtual DbSet<WithdrawReason> WithdrawReasons { get; set; } = null!;
        public virtual DbSet<WithdrawReasonMultipleSelection> WithdrawReasonMultipleSelections { get; set; } = null!;
        public virtual DbSet<WithdrawReasonMultipleSelectionHist> WithdrawReasonMultipleSelectionHists { get; set; } = null!;
        public virtual DbSet<WorkPlaceApproval> WorkPlaceApprovals { get; set; } = null!;
        public virtual DbSet<WorkPlaceApprovalDatum> WorkPlaceApprovalData { get; set; } = null!;
        public virtual DbSet<WorkPlaceApprovalMentor> WorkPlaceApprovalMentors { get; set; } = null!;
        public virtual DbSet<WorkPlaceApprovalSite> WorkPlaceApprovalSites { get; set; } = null!;
        public virtual DbSet<WorkPlaceApprovalSitesHist> WorkPlaceApprovalSitesHists { get; set; } = null!;
        public virtual DbSet<WorkPlaceApprovalSkillsProgram> WorkPlaceApprovalSkillsPrograms { get; set; } = null!;
        public virtual DbSet<WorkPlaceApprovalSkillsSet> WorkPlaceApprovalSkillsSets { get; set; } = null!;
        public virtual DbSet<WorkPlaceApprovalSkillsSetAud> WorkPlaceApprovalSkillsSetAuds { get; set; } = null!;
        public virtual DbSet<WorkPlaceApprovalToolList> WorkPlaceApprovalToolLists { get; set; } = null!;
        public virtual DbSet<WorkPlaceApprovalTrade> WorkPlaceApprovalTrades { get; set; } = null!;
        public virtual DbSet<WorkPlaceApprovalTradesHist> WorkPlaceApprovalTradesHists { get; set; } = null!;
        public virtual DbSet<WorkPlaceApprovalUnitStandard> WorkPlaceApprovalUnitStandards { get; set; } = null!;
        public virtual DbSet<WorkPlaceApprovalUnitStandardsAud> WorkPlaceApprovalUnitStandardsAuds { get; set; } = null!;
        public virtual DbSet<WorkPlaceApprovalVisitDateLog> WorkPlaceApprovalVisitDateLogs { get; set; } = null!;
        public virtual DbSet<WorkplaceLinked> WorkplaceLinkeds { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoring> WorkplaceMonitorings { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringActionPlan> WorkplaceMonitoringActionPlans { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringActionPlanHist> WorkplaceMonitoringActionPlanHists { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringDgMonitoring> WorkplaceMonitoringDgMonitorings { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringDgMonitoringHist> WorkplaceMonitoringDgMonitoringHists { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringDiscretionaryGrantComplianceSurvey> WorkplaceMonitoringDiscretionaryGrantComplianceSurveys { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringDiscretionaryGrantComplianceSurveyHist> WorkplaceMonitoringDiscretionaryGrantComplianceSurveyHists { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringLearnerInduction> WorkplaceMonitoringLearnerInductions { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringLearnerInductionHist> WorkplaceMonitoringLearnerInductionHists { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringLearnerPayment> WorkplaceMonitoringLearnerPayments { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringLearnerPaymentsHist> WorkplaceMonitoringLearnerPaymentsHists { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringLearnerSurvey> WorkplaceMonitoringLearnerSurveys { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringLearnerSurveyAnswer> WorkplaceMonitoringLearnerSurveyAnswers { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringLearnerSurveyAnswersHist> WorkplaceMonitoringLearnerSurveyAnswersHists { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringLearnerSurveyHist> WorkplaceMonitoringLearnerSurveyHists { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringMitigation> WorkplaceMonitoringMitigations { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringMitigationPlan> WorkplaceMonitoringMitigationPlans { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringMitigationPlanHist> WorkplaceMonitoringMitigationPlanHists { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringPurposeOfSiteVisit> WorkplaceMonitoringPurposeOfSiteVisits { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringSiteVisit> WorkplaceMonitoringSiteVisits { get; set; } = null!;
        public virtual DbSet<WorkplaceMonitoringSiteVisitHist> WorkplaceMonitoringSiteVisitHists { get; set; } = null!;
        public virtual DbSet<WpaChangeLog> WpaChangeLogs { get; set; } = null!;
        public virtual DbSet<Wsp> Wsps { get; set; } = null!;
        public virtual DbSet<WspApprovedCheck> WspApprovedChecks { get; set; } = null!;
        public virtual DbSet<WspCalculationDatum> WspCalculationData { get; set; } = null!;
        public virtual DbSet<WspChecklist> WspChecklists { get; set; } = null!;
        public virtual DbSet<WspChecklistAud> WspChecklistAuds { get; set; } = null!;
        public virtual DbSet<WspCompanyAddressHistory> WspCompanyAddressHistories { get; set; } = null!;
        public virtual DbSet<WspCompanyEmployeesHistory> WspCompanyEmployeesHistories { get; set; } = null!;
        public virtual DbSet<WspCompanyHistory> WspCompanyHistories { get; set; } = null!;
        public virtual DbSet<WspCompanyMainHistory> WspCompanyMainHistories { get; set; } = null!;
        public virtual DbSet<WspCompanyTrainingComitteeHistory> WspCompanyTrainingComitteeHistories { get; set; } = null!;
        public virtual DbSet<WspDispute> WspDisputes { get; set; } = null!;
        public virtual DbSet<WspHist> WspHists { get; set; } = null!;
        public virtual DbSet<WspHistoricDatum> WspHistoricData { get; set; } = null!;
        public virtual DbSet<WspImpactOfStaffTraining> WspImpactOfStaffTrainings { get; set; } = null!;
        public virtual DbSet<WspLocation> WspLocations { get; set; } = null!;
        public virtual DbSet<WspRejectionInformation> WspRejectionInformations { get; set; } = null!;
        public virtual DbSet<WspSdfCompanyHistory> WspSdfCompanyHistories { get; set; } = null!;
        public virtual DbSet<WspSignoff> WspSignoffs { get; set; } = null!;
        public virtual DbSet<WspSignoffHist> WspSignoffHists { get; set; } = null!;
        public virtual DbSet<WspSkillsGap> WspSkillsGaps { get; set; } = null!;
        public virtual DbSet<WspSkillsRequirement> WspSkillsRequirements { get; set; } = null!;
        public virtual DbSet<WspStrategicPriority> WspStrategicPriorities { get; set; } = null!;
        public virtual DbSet<YesNoLookup> YesNoLookups { get; set; } = null!;
        public virtual DbSet<YesNoLookupHist> YesNoLookupHists { get; set; } = null!;
        public virtual DbSet<YoutubeVideo> YoutubeVideos { get; set; } = null!;
        public virtual DbSet<training> training { get; set; } = null!;
        public virtual DbSet<LearnerProgramIndicator> LearnerProgramIndicators { get; set; } = null;
        public virtual DbSet<LearnerApplicationLifecycle> LearnerApplicationLifecycles { get; set; } = null;
        public virtual DbSet<AssessmentBatchRejectionReason> AssessmentBatchRejectionReasons { get; set; } = null;

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseMySql("data source=127.0.0.1;port=3305;initial catalog=merseta;uid=merseta;pwd=M3rseta@345", Microsoft.EntityFrameworkCore.ServerVersion.Parse("8.0.27-mysql"));
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("latin1_swedish_ci")
                .HasCharSet("latin1");

            modelBuilder.Entity<AbetBand>(entity =>
            {
                entity.ToTable("abet_band");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<AccreditationStatus>(entity =>
            {
                entity.ToTable("accreditation_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.LegacyStatus)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_status");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<AssessmentProcessBatch>(entity =>
            {
                entity.ToTable("assessment_process_batch");

                entity.Property(e => e.AssessmentProcessBatchId).HasColumnName("assessment_process_batch_id");

                entity.Property(e => e.ProcessDate)
                   .HasColumnType("datetime")
                   .HasColumnName("process_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Comments)
                    .HasMaxLength(500)
                    .HasColumnName("comment");

                entity.Property(e => e.ProcessStatusId).HasColumnName("process_status_id");
                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");
                entity.Property(e => e.CompanyId).HasColumnName("company_id");
            });

            modelBuilder.Entity<ExternalModerationQuestion>(entity =>
            {
                entity.ToTable("external_moderation_question");

                entity.Property(e => e.ExternalModerationQuestionId).HasColumnName("external_moderation_question_id");
                entity.Property(e => e.SeqNo).HasColumnName("seq_no");
                entity.Property(e => e.Question).HasColumnName("question");
                entity.Property(e => e.ExternalModerationQuestionSectionId).HasColumnName("external_moderation_question_section_id");

            });

            modelBuilder.Entity<ExternalModerationQuestionSection>(entity =>
            {
                entity.ToTable("external_moderation_question_section");

                entity.Property(e => e.ExternalModerationQuestionSectionId).HasColumnName("external_moderation_question_section_id");
                entity.Property(e => e.Description).HasColumnName("description");

            });

            modelBuilder.Entity<ExternalModerationValidation>(entity =>
            {
                entity.ToTable("external_moderation_validation");

                entity.Property(e => e.ExternalModerationValidationId).HasColumnName("external_moderation_validation_id");
                entity.Property(e => e.AssessmentProcessBatchId).HasColumnName("assessment_process_batch_id");
                entity.Property(e => e.StageOfModerationId).HasColumnName("stage_of_moderation_id");
                entity.Property(e => e.IsLearnersEmployed).HasColumnName("is_learners_employed");
                entity.Property(e => e.NumberOfLearners).HasColumnName("number_of_learners");
                entity.Property(e => e.NumberOfAssessors).HasColumnName("number_of_assessors");
                entity.Property(e => e.AssessmentId).HasColumnName("assessment_id");
                entity.Property(e => e.IssueSor).HasColumnName("issue_sor");
                entity.Property(e => e.IsLearnersEmployed).HasColumnName("is_learners_employed");
                entity.Property(e => e.ModerationDate)
                   .HasColumnType("datetime")
                   .HasColumnName("moderation_date");

                entity.Property(e => e.QualityAssurorSignatureDate)
                    .HasColumnType("datetime")
                    .HasColumnName("quality_assuror_signature_date");

                entity.Property(e => e.ExternalModerationAssessorsBehaviour)
                    .HasMaxLength(500)
                    .HasColumnName("external_moderation_assessors_behaviour");

                entity.Property(e => e.ProviderCreditRemarks)
                    .HasMaxLength(500)
                    .HasColumnName("provider_credit_remarks ");
                entity.Property(e => e.HasProviderLoadedCredits)
                    .HasColumnName("has_provider_loaded_credits ");

                entity.Property(e => e.ExternalModerationAssessmentToolsAndDocumentation)
                    .HasMaxLength(500)
                    .HasColumnName("external_moderation_assessment_tools_and_documentation");
                entity.Property(e => e.ValidationFindingsAndRecommendations)
                    .HasMaxLength(500)
                    .HasColumnName("validation_findings_and_recommendations");

                entity.Property(e => e.ProviderId).HasColumnName("provider_id");
                entity.Property(e => e.QualityAssurorId).HasColumnName("quality_assuror_id");
                entity.Property(e => e.HasProviderLoadedCredits).HasColumnName("has_provider_loaded_credits");
                entity.Property(e => e.ProviderCreditRemarks).HasColumnName("provider_credit_remarks");

            });

            modelBuilder.Entity<ExternalModerationValidationChecklist>(entity =>
            {
                entity.ToTable("external_moderation_validation_checklist");

                entity.Property(e => e.ExternalModerationValidationChecklistId).HasColumnName("external_moderation_validation_checklist_id");
                entity.Property(e => e.ExternalModerationValidationId).HasColumnName("external_moderation_validation_id");
                entity.Property(e => e.ModerationQuestionId).HasColumnName("moderation_question_id");
                entity.Property(e => e.Answer).HasColumnName("answer");


                entity.Property(e => e.EvidenceComments)
                    .HasMaxLength(500)
                    .HasColumnName("evidence_comments");


                //entity.Property(e => e.QualityAssurorId).HasColumnName("quality_assuror_id");

            });
            modelBuilder.Entity<AssessmentProcessBatchDetail>(entity =>
            {
                entity.ToTable("assessment_process_batch_detail");

                entity.Property(e => e.AssessmentProcessBatchDetailId).HasColumnName("assessment_process_batch_detail_id");

                entity.Property(e => e.AssessmentProcessBatchId)
                   .HasColumnName("assessment_process_batch_id");

               

                entity.Property(e => e.AssessmentId).HasColumnName("assessment_id");
            });
            modelBuilder.Entity<AssessmentBatchRejectionReason>(entity =>
            {
                entity.ToTable("assessment_batch_rejection_reason");

                entity.Property(e => e.AssessmentBatchRejectionReasonId).HasColumnName("assessment_batch_rejection_reason_id");

                entity.Property(e => e.AssessmentProcessBatchId)
                   .HasColumnName("assessment_process_batch_id");



                entity.Property(e => e.RejectionReasonId).HasColumnName("rejection_reason_id");
            });
            modelBuilder.Entity<LearnerProgramIndicator>(entity =>
            {
                entity.ToTable("learning_program_indicator");

                entity.Property(e => e.Id)
                .HasColumnName("id");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("name");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("description");

                entity.Property(e => e.Source_Document)
                    .HasMaxLength(50)
                    .HasColumnName("source_document");

                entity.Property(e => e.Business_Rules)
                    .HasMaxLength(255)
                    .HasColumnName("business_rules");

                entity.Property(e => e.Learning_Program_Id)
                   .HasMaxLength(255)
                   .HasColumnName("learning_program_id");
            });
            modelBuilder.Entity<LearnerApplicationLifecycle>(entity =>
            {
                entity.ToTable("learner_application_lifecycle");

                entity.Property(e => e.Id)
                .HasColumnName("id");

                entity.Property(e => e.Learner_Status_Id)
                    .HasColumnName("learner_status_id");

                entity.Property(e => e.Learner_Status_Date)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_status_date");

                entity.Property(e => e.Is_Notification_Set)
                    .HasColumnType("bit(1)")
                    .HasColumnName("is_notification_sent");

                entity.Property(e => e.Notes)
                    .HasMaxLength(250)
                    .HasColumnName("notes");

                entity.Property(e => e.Is_Deleted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("is_deleted");

                entity.Property(e => e.Deleted_On)
                    .HasColumnType("datetime")
                    .HasColumnName("deleted_on");

                entity.Property(e => e.Action_User_Id)
                    .HasColumnName("action_user_id");

                entity.Property(e => e.Company_Learner_Id)
                    .HasColumnName("company_learner_id");
            });
            modelBuilder.Entity<ActiveContract>(entity =>
            {
                entity.ToTable("active_contracts");

                entity.HasIndex(e => e.SdfId, "FK1099bxmh6x48erwhsclon6yke");

                entity.HasIndex(e => e.RejectionUser, "FK12qq94kmi9pwvowwl2sxuqegi");

                entity.HasIndex(e => e.CompanyId, "FK3epcnwf38jcwjk5padoxev10g");

                entity.HasIndex(e => e.DepartmentId, "FK5imt8xi9r39rqrhgxcmymsfva");

                entity.HasIndex(e => e.CrmId, "FKgtht1b4qtj2085beiccta1nni");

                entity.HasIndex(e => e.DgAllocationParentId, "FKibrjgrh6s2vtob50i9rk4nhoo");

                entity.HasIndex(e => e.WspId, "FKn6y4ogr03k4jd3c7ryrmn4uv4");

                entity.HasIndex(e => e.WithdrawnUserId, "FKogd9817uty9b5sfugvucob7gw");

                entity.HasIndex(e => e.UserResponsibleMoaSignOffId, "FKps5xp43k7dagsjaj1gmly5fgt");

                entity.HasIndex(e => e.InterventionId, "FKr6e4lx79qfb8hmkfel4gpkau6");

                entity.HasIndex(e => e.ValidityId, "FKry336pwtfrrxkeil6mb2jkmwc");

                entity.HasIndex(e => e.CloId, "FKsehp3f2lxammleu8lysqwu7op");

                entity.HasIndex(e => e.RefNo, "UK_rpslnhij8kaq0s80bqdxvu12r")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccrualRaised).HasColumnName("accrual_raised");

                entity.Property(e => e.AmendmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("amendment_date");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.AwaitingBatchSignOff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("awaiting_batch_sign_off");

                entity.Property(e => e.CloId).HasColumnName("clo_id");

                entity.Property(e => e.CloSignDate)
                    .HasColumnType("datetime")
                    .HasColumnName("clo_sign_date");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.ContractStatusEnum)
                    .HasMaxLength(255)
                    .HasColumnName("contract_status_enum");

                entity.Property(e => e.ContractValue).HasColumnName("contract_value");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CrmId).HasColumnName("crm_id");

                entity.Property(e => e.CrmSignDate)
                    .HasColumnType("datetime")
                    .HasColumnName("crm_sign_date");

                entity.Property(e => e.DeadlineDate)
                    .HasColumnType("datetime")
                    .HasColumnName("deadline_date");

                entity.Property(e => e.DepartmentId).HasColumnName("department_id");

                entity.Property(e => e.DgAllocationParentId).HasColumnName("dg_allocation_parent_id");

                entity.Property(e => e.EletronicSignoff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("eletronic_signoff")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.EtensionTerminationWorkflowActive)
                    .HasColumnType("bit(1)")
                    .HasColumnName("etension_termination_workflow_active");

                entity.Property(e => e.InterventionId).HasColumnName("intervention_id");

                entity.Property(e => e.MoaType)
                    .HasMaxLength(255)
                    .HasColumnName("moa_type");

                entity.Property(e => e.NoOfLearners).HasColumnName("no_of_learners");

                entity.Property(e => e.OriginalEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("original_end_date");

                entity.Property(e => e.ProjectName).HasColumnName("project_name");

                entity.Property(e => e.ProjectedRegistrationDateEnd)
                    .HasColumnType("datetime")
                    .HasColumnName("projected_registration_date_end");

                entity.Property(e => e.ProjectedRegistrationDateStart)
                    .HasColumnType("datetime")
                    .HasColumnName("projected_registration_date_start");

                entity.Property(e => e.RecoverableAmount).HasColumnName("recoverable_amount");

                entity.Property(e => e.RefNo).HasColumnName("ref_no");

                entity.Property(e => e.RejectionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("rejection_date");

                entity.Property(e => e.RejectionUser).HasColumnName("rejection_user");

                entity.Property(e => e.Reminder)
                    .HasMaxLength(255)
                    .HasColumnName("reminder");

                entity.Property(e => e.ReviseDate)
                    .HasColumnType("datetime")
                    .HasColumnName("revise_date");

                entity.Property(e => e.SdfId).HasColumnName("sdf_id");

                entity.Property(e => e.SdfSignDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sdf_sign_date");

                entity.Property(e => e.SignDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sign_date");

                entity.Property(e => e.SignOffState)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sign_off_state");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Submitted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("submitted");

                entity.Property(e => e.TranchIntervals).HasColumnName("tranch_intervals");

                entity.Property(e => e.UserResponsibleMoaSignOffId).HasColumnName("user_responsible_moa_sign_off_id");

                entity.Property(e => e.ValidityId).HasColumnName("validity_id");

                entity.Property(e => e.WithdrawalAppealEnum).HasColumnName("withdrawal_appeal_enum");

                entity.Property(e => e.WithdrawnDate)
                    .HasColumnType("datetime")
                    .HasColumnName("withdrawn_date");

                entity.Property(e => e.WithdrawnUserId).HasColumnName("withdrawn_user_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.Clo)
                    .WithMany(p => p.ActiveContractClos)
                    .HasForeignKey(d => d.CloId)
                    .HasConstraintName("FKsehp3f2lxammleu8lysqwu7op");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.ActiveContracts)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK3epcnwf38jcwjk5padoxev10g");

                entity.HasOne(d => d.Crm)
                    .WithMany(p => p.ActiveContractCrms)
                    .HasForeignKey(d => d.CrmId)
                    .HasConstraintName("FKgtht1b4qtj2085beiccta1nni");

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.ActiveContracts)
                    .HasForeignKey(d => d.DepartmentId)
                    .HasConstraintName("FK5imt8xi9r39rqrhgxcmymsfva");

                entity.HasOne(d => d.DgAllocationParent)
                    .WithMany(p => p.ActiveContracts)
                    .HasForeignKey(d => d.DgAllocationParentId)
                    .HasConstraintName("FKibrjgrh6s2vtob50i9rk4nhoo");

                entity.HasOne(d => d.Intervention)
                    .WithMany(p => p.ActiveContracts)
                    .HasForeignKey(d => d.InterventionId)
                    .HasConstraintName("FKr6e4lx79qfb8hmkfel4gpkau6");

                entity.HasOne(d => d.RejectionUserNavigation)
                    .WithMany(p => p.ActiveContractRejectionUserNavigations)
                    .HasForeignKey(d => d.RejectionUser)
                    .HasConstraintName("FK12qq94kmi9pwvowwl2sxuqegi");

                entity.HasOne(d => d.Sdf)
                    .WithMany(p => p.ActiveContractSdfs)
                    .HasForeignKey(d => d.SdfId)
                    .HasConstraintName("FK1099bxmh6x48erwhsclon6yke");

                entity.HasOne(d => d.UserResponsibleMoaSignOff)
                    .WithMany(p => p.ActiveContractUserResponsibleMoaSignOffs)
                    .HasForeignKey(d => d.UserResponsibleMoaSignOffId)
                    .HasConstraintName("FKps5xp43k7dagsjaj1gmly5fgt");

                entity.HasOne(d => d.Validity)
                    .WithMany(p => p.ActiveContracts)
                    .HasForeignKey(d => d.ValidityId)
                    .HasConstraintName("FKry336pwtfrrxkeil6mb2jkmwc");

                entity.HasOne(d => d.WithdrawnUser)
                    .WithMany(p => p.ActiveContractWithdrawnUsers)
                    .HasForeignKey(d => d.WithdrawnUserId)
                    .HasConstraintName("FKogd9817uty9b5sfugvucob7gw");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.ActiveContracts)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKn6y4ogr03k4jd3c7ryrmn4uv4");
            });

            modelBuilder.Entity<ActiveContractDetail>(entity =>
            {
                entity.ToTable("active_contract_detail");

                entity.HasIndex(e => e.ProjectImplementationPlanLearnersId, "FK3m8telgkryf1lafi19igolgcp");

                entity.HasIndex(e => e.InterventionTypeId, "FK5hwdheliofbm15h7xsefoslad");

                entity.HasIndex(e => e.ProjectImplementationPlanId, "FKb2wt2g23qmi05my36om02t3c6");

                entity.HasIndex(e => e.CompanyLearnersId, "FKk2atbcjt87ofitu6wd0nt4fs9");

                entity.HasIndex(e => e.UsersId, "FKoba09239pjnv3dgcq91dmkeid");

                entity.HasIndex(e => e.ActiveContractsId, "FKs4ojdvp7nv2ewjjbgd8svgk61");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accruals).HasColumnName("accruals");

                entity.Property(e => e.AccrualsReversals).HasColumnName("accruals_reversals");

                entity.Property(e => e.ActiveContractsId).HasColumnName("active_contracts_id");

                entity.Property(e => e.AddendumsAmmendments).HasColumnName("addendums_ammendments");

                entity.Property(e => e.Additions).HasColumnName("additions");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ClosingBalance)
                    .HasPrecision(19, 2)
                    .HasColumnName("closing_balance");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CorrectionToBalances).HasColumnName("correction_to_balances");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.NoOfTerminations).HasColumnName("no_of_terminations");

                entity.Property(e => e.OpeningBalance)
                    .HasPrecision(19, 2)
                    .HasColumnName("opening_balance");

                entity.Property(e => e.PaymentMonth)
                    .HasColumnType("datetime")
                    .HasColumnName("payment_month");

                entity.Property(e => e.Payments).HasColumnName("payments");

                entity.Property(e => e.ProjectImplementationPlanId).HasColumnName("project_implementation_plan_id");

                entity.Property(e => e.ProjectImplementationPlanLearnersId).HasColumnName("project_implementation_plan_learners_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TerminationValue).HasColumnName("termination_value");

                entity.Property(e => e.Total)
                    .HasPrecision(19, 2)
                    .HasColumnName("total");

                entity.Property(e => e.TrancheEnum)
                    .HasMaxLength(255)
                    .HasColumnName("tranche_enum");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.Property(e => e.WriteBack).HasColumnName("write_back");

                entity.HasOne(d => d.ActiveContracts)
                    .WithMany(p => p.ActiveContractDetails)
                    .HasForeignKey(d => d.ActiveContractsId)
                    .HasConstraintName("FKs4ojdvp7nv2ewjjbgd8svgk61");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.ActiveContractDetails)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FKk2atbcjt87ofitu6wd0nt4fs9");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.ActiveContractDetails)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FK5hwdheliofbm15h7xsefoslad");

                entity.HasOne(d => d.ProjectImplementationPlan)
                    .WithMany(p => p.ActiveContractDetails)
                    .HasForeignKey(d => d.ProjectImplementationPlanId)
                    .HasConstraintName("FKb2wt2g23qmi05my36om02t3c6");

                entity.HasOne(d => d.ProjectImplementationPlanLearners)
                    .WithMany(p => p.ActiveContractDetails)
                    .HasForeignKey(d => d.ProjectImplementationPlanLearnersId)
                    .HasConstraintName("FK3m8telgkryf1lafi19igolgcp");

                entity.HasOne(d => d.Users)
                    .WithMany(p => p.ActiveContractDetails)
                    .HasForeignKey(d => d.UsersId)
                    .HasConstraintName("FKoba09239pjnv3dgcq91dmkeid");
            });

            modelBuilder.Entity<ActiveContractDetailHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("active_contract_detail_hist");

                entity.HasIndex(e => e.Rev, "FKggv4dw7l8jmvflfw3b7qpnv6a");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Accruals).HasColumnName("accruals");

                entity.Property(e => e.AccrualsReversals).HasColumnName("accruals_reversals");

                entity.Property(e => e.ActiveContractsId).HasColumnName("active_contracts_id");

                entity.Property(e => e.AddendumsAmmendments).HasColumnName("addendums_ammendments");

                entity.Property(e => e.Additions).HasColumnName("additions");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ClosingBalance)
                    .HasPrecision(19, 2)
                    .HasColumnName("closing_balance");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CorrectionToBalances).HasColumnName("correction_to_balances");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.NoOfTerminations).HasColumnName("no_of_terminations");

                entity.Property(e => e.OpeningBalance)
                    .HasPrecision(19, 2)
                    .HasColumnName("opening_balance");

                entity.Property(e => e.PaymentMonth)
                    .HasColumnType("datetime")
                    .HasColumnName("payment_month");

                entity.Property(e => e.Payments).HasColumnName("payments");

                entity.Property(e => e.ProjectImplementationPlanId).HasColumnName("project_implementation_plan_id");

                entity.Property(e => e.ProjectImplementationPlanLearnersId).HasColumnName("project_implementation_plan_learners_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TerminationValue).HasColumnName("termination_value");

                entity.Property(e => e.Total)
                    .HasPrecision(19, 2)
                    .HasColumnName("total");

                entity.Property(e => e.TrancheEnum)
                    .HasMaxLength(255)
                    .HasColumnName("tranche_enum");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.Property(e => e.WriteBack).HasColumnName("write_back");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.ActiveContractDetailHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKggv4dw7l8jmvflfw3b7qpnv6a");
            });

            modelBuilder.Entity<ActiveContractExtensionRequest>(entity =>
            {
                entity.ToTable("active_contract_extension_request");

                entity.HasIndex(e => e.UserUpdatedDateId, "FKfjl5db2rpfyqkgdenrlgfo8oc");

                entity.HasIndex(e => e.ApproveUserId, "FKlah7o9hrcfarinvghnyrmv5gf");

                entity.HasIndex(e => e.ActiveAontractsId, "FKmd2e16pkxd4xpmk6k16taorh0");

                entity.HasIndex(e => e.RequestUserId, "FKr11fuq1s0ihboqwy9rsy3qun8");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActiveAontractsId).HasColumnName("active_aontracts_id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApproveUserId).HasColumnName("approve_user_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateUpdatedExtensionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("date_updated_extension_date");

                entity.Property(e => e.EnteredDate)
                    .HasColumnType("datetime")
                    .HasColumnName("entered_date");

                entity.Property(e => e.ExtenionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("extenion_date");

                entity.Property(e => e.OrginalDueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("orginal_due_date");

                entity.Property(e => e.RequestUserId).HasColumnName("request_user_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.UseSystemGeneratedDate)
                    .HasColumnType("bit(1)")
                    .HasColumnName("use_system_generated_Date")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.UserUpdatedDateId).HasColumnName("user_updated_date_id");

                entity.HasOne(d => d.ActiveAontracts)
                    .WithMany(p => p.ActiveContractExtensionRequests)
                    .HasForeignKey(d => d.ActiveAontractsId)
                    .HasConstraintName("FKmd2e16pkxd4xpmk6k16taorh0");

                entity.HasOne(d => d.ApproveUser)
                    .WithMany(p => p.ActiveContractExtensionRequestApproveUsers)
                    .HasForeignKey(d => d.ApproveUserId)
                    .HasConstraintName("FKlah7o9hrcfarinvghnyrmv5gf");

                entity.HasOne(d => d.RequestUser)
                    .WithMany(p => p.ActiveContractExtensionRequestRequestUsers)
                    .HasForeignKey(d => d.RequestUserId)
                    .HasConstraintName("FKr11fuq1s0ihboqwy9rsy3qun8");

                entity.HasOne(d => d.UserUpdatedDate)
                    .WithMany(p => p.ActiveContractExtensionRequestUserUpdatedDates)
                    .HasForeignKey(d => d.UserUpdatedDateId)
                    .HasConstraintName("FKfjl5db2rpfyqkgdenrlgfo8oc");
            });

            modelBuilder.Entity<ActiveContractExtensionRequestHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("active_contract_extension_request_hist");

                entity.HasIndex(e => e.Rev, "FKewg999fqpxkbgr1rjewuy06fl");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActiveAontractsId).HasColumnName("active_aontracts_id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApproveUserId).HasColumnName("approve_user_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateUpdatedExtensionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("date_updated_extension_date");

                entity.Property(e => e.EnteredDate)
                    .HasColumnType("datetime")
                    .HasColumnName("entered_date");

                entity.Property(e => e.ExtenionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("extenion_date");

                entity.Property(e => e.OrginalDueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("orginal_due_date");

                entity.Property(e => e.RequestUserId).HasColumnName("request_user_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.UseSystemGeneratedDate)
                    .HasColumnType("bit(1)")
                    .HasColumnName("use_system_generated_Date")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.UserUpdatedDateId).HasColumnName("user_updated_date_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.ActiveContractExtensionRequestHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKewg999fqpxkbgr1rjewuy06fl");
            });

            modelBuilder.Entity<ActiveContractTerminationRequest>(entity =>
            {
                entity.ToTable("active_contract_termination_request");

                entity.HasIndex(e => e.ApproveUserId, "FK97ystgk6knto5fwximlbb3bk2");

                entity.HasIndex(e => e.ActiveAontractsId, "FKfvwf2sycbfgn2t36mkgfe1pe9");

                entity.HasIndex(e => e.RequestUserId, "FKp6i5321fc52juen06yjhmm1w2");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActiveAontractsId).HasColumnName("active_aontracts_id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApproveUserId).HasColumnName("approve_user_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRequested)
                    .HasColumnType("datetime")
                    .HasColumnName("date_requested");

                entity.Property(e => e.RequestUserId).HasColumnName("request_user_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SystemGenerated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_generated");

                entity.HasOne(d => d.ActiveAontracts)
                    .WithMany(p => p.ActiveContractTerminationRequests)
                    .HasForeignKey(d => d.ActiveAontractsId)
                    .HasConstraintName("FKfvwf2sycbfgn2t36mkgfe1pe9");

                entity.HasOne(d => d.ApproveUser)
                    .WithMany(p => p.ActiveContractTerminationRequestApproveUsers)
                    .HasForeignKey(d => d.ApproveUserId)
                    .HasConstraintName("FK97ystgk6knto5fwximlbb3bk2");

                entity.HasOne(d => d.RequestUser)
                    .WithMany(p => p.ActiveContractTerminationRequestRequestUsers)
                    .HasForeignKey(d => d.RequestUserId)
                    .HasConstraintName("FKp6i5321fc52juen06yjhmm1w2");
            });

            modelBuilder.Entity<ActiveContractTerminationRequestHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("active_contract_termination_request_hist");

                entity.HasIndex(e => e.Rev, "FKqyxq36i7hdd85235ldghw7w3y");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActiveAontractsId).HasColumnName("active_aontracts_id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApproveUserId).HasColumnName("approve_user_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRequested)
                    .HasColumnType("datetime")
                    .HasColumnName("date_requested");

                entity.Property(e => e.RequestUserId).HasColumnName("request_user_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SystemGenerated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_generated");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.ActiveContractTerminationRequestHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKqyxq36i7hdd85235ldghw7w3y");
            });

            modelBuilder.Entity<ActiveContractsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("active_contracts_hist");

                entity.HasIndex(e => e.Rev, "FK4k1ud9un2ahplb8208yjpyqe7");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AccrualRaised).HasColumnName("accrual_raised");

                entity.Property(e => e.AmendmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("amendment_date");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.AwaitingBatchSignOff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("awaiting_batch_sign_off");

                entity.Property(e => e.CloId).HasColumnName("clo_id");

                entity.Property(e => e.CloSignDate)
                    .HasColumnType("datetime")
                    .HasColumnName("clo_sign_date");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.ContractStatusEnum)
                    .HasMaxLength(255)
                    .HasColumnName("contract_status_enum");

                entity.Property(e => e.ContractValue).HasColumnName("contract_value");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CrmId).HasColumnName("crm_id");

                entity.Property(e => e.CrmSignDate)
                    .HasColumnType("datetime")
                    .HasColumnName("crm_sign_date");

                entity.Property(e => e.DeadlineDate)
                    .HasColumnType("datetime")
                    .HasColumnName("deadline_date");

                entity.Property(e => e.DepartmentId).HasColumnName("department_id");

                entity.Property(e => e.DgAllocationParentId).HasColumnName("dg_allocation_parent_id");

                entity.Property(e => e.EletronicSignoff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("eletronic_signoff")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.EtensionTerminationWorkflowActive)
                    .HasColumnType("bit(1)")
                    .HasColumnName("etension_termination_workflow_active");

                entity.Property(e => e.InterventionId).HasColumnName("intervention_id");

                entity.Property(e => e.MoaType)
                    .HasMaxLength(255)
                    .HasColumnName("moa_type");

                entity.Property(e => e.NoOfLearners).HasColumnName("no_of_learners");

                entity.Property(e => e.OriginalEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("original_end_date");

                entity.Property(e => e.ProjectName).HasColumnName("project_name");

                entity.Property(e => e.ProjectedRegistrationDateEnd)
                    .HasColumnType("datetime")
                    .HasColumnName("projected_registration_date_end");

                entity.Property(e => e.ProjectedRegistrationDateStart)
                    .HasColumnType("datetime")
                    .HasColumnName("projected_registration_date_start");

                entity.Property(e => e.RecoverableAmount).HasColumnName("recoverable_amount");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(255)
                    .HasColumnName("ref_no");

                entity.Property(e => e.RejectionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("rejection_date");

                entity.Property(e => e.RejectionUser).HasColumnName("rejection_user");

                entity.Property(e => e.Reminder)
                    .HasMaxLength(255)
                    .HasColumnName("reminder");

                entity.Property(e => e.ReviseDate)
                    .HasColumnType("datetime")
                    .HasColumnName("revise_date");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SdfId).HasColumnName("sdf_id");

                entity.Property(e => e.SdfSignDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sdf_sign_date");

                entity.Property(e => e.SignDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sign_date");

                entity.Property(e => e.SignOffState)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sign_off_state");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Submitted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("submitted");

                entity.Property(e => e.TranchIntervals).HasColumnName("tranch_intervals");

                entity.Property(e => e.UserResponsibleMoaSignOffId).HasColumnName("user_responsible_moa_sign_off_id");

                entity.Property(e => e.ValidityId).HasColumnName("validity_id");

                entity.Property(e => e.WithdrawalAppealEnum).HasColumnName("withdrawal_appeal_enum");

                entity.Property(e => e.WithdrawnDate)
                    .HasColumnType("datetime")
                    .HasColumnName("withdrawn_date");

                entity.Property(e => e.WithdrawnUserId).HasColumnName("withdrawn_user_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.ActiveContractsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK4k1ud9un2ahplb8208yjpyqe7");
            });

            modelBuilder.Entity<Addendum>(entity =>
            {
                entity.ToTable("addenda");

                entity.HasIndex(e => e.ActiveContractsId, "FKmc2558s22v9tlbla7hdy3556l");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActiveContractsId).HasColumnName("active_contracts_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.Title).HasColumnName("title");

                entity.HasOne(d => d.ActiveContracts)
                    .WithMany(p => p.Addenda)
                    .HasForeignKey(d => d.ActiveContractsId)
                    .HasConstraintName("FKmc2558s22v9tlbla7hdy3556l");
            });

            modelBuilder.Entity<Address>(entity =>
            {
                entity.ToTable("address");

                entity.HasIndex(e => e.SitesId, "FK6fmh4x869656vhacsplc0ce2w");

                entity.HasIndex(e => e.UserId, "FK6i66ijb8twgcqtetl8eeeed6v");

                entity.HasIndex(e => e.MunicipalityId, "FK7qxjnqkl1hcpwvk0une4m6p3x");

                entity.HasIndex(e => e.CompanyId, "FK8263jp74f5k4gbslhc2crs1te");

                entity.HasIndex(e => e.StatsSaareaCodeId, "FK8lihl663thsig4co77t7fnxms");

                entity.HasIndex(e => e.HostingCompanyId, "FKbh2y35ldfwauc5aycr4o5acj");

                entity.HasIndex(e => e.TownId, "FKbuf0he9m01a59bsqgmsr3pysh");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUser).HasColumnName("create_user");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.InitialValidation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("initialValidation");

                entity.Property(e => e.LastUpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_update_date");

                entity.Property(e => e.LastUpdateUser).HasColumnName("last_update_user");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.LatitudeDegrees).HasColumnName("latitude_degrees");

                entity.Property(e => e.LatitudeMinutes).HasColumnName("latitude_minutes");

                entity.Property(e => e.LatitudeSeconds).HasColumnName("latitude_seconds");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.LongitudeDegrees).HasColumnName("longitude_degrees");

                entity.Property(e => e.LongitudeMinutes).HasColumnName("longitude_minutes");

                entity.Property(e => e.LongitudeSeconds).HasColumnName("longitude_seconds");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(10)
                    .HasColumnName("postcode");

                entity.Property(e => e.PrimaryAddr)
                    .HasColumnType("bit(1)")
                    .HasColumnName("primary_addr");

                entity.Property(e => e.SameAddress)
                    .HasColumnType("bit(1)")
                    .HasColumnName("same_address");

                entity.Property(e => e.SitesId).HasColumnName("sites_id");

                entity.Property(e => e.StatsSaareaCodeId).HasColumnName("stats_saarea_code_id");

                entity.Property(e => e.TownId).HasColumnName("town_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.ValidiationRanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("validiationRanDate");

                entity.Property(e => e.WorkflowValidation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("workflowValidation");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.Addresses)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK8263jp74f5k4gbslhc2crs1te");

                entity.HasOne(d => d.HostingCompany)
                    .WithMany(p => p.Addresses)
                    .HasForeignKey(d => d.HostingCompanyId)
                    .HasConstraintName("FKbh2y35ldfwauc5aycr4o5acj");

                entity.HasOne(d => d.Municipality)
                    .WithMany(p => p.Addresses)
                    .HasForeignKey(d => d.MunicipalityId)
                    .HasConstraintName("FK7qxjnqkl1hcpwvk0une4m6p3x");

                /*entity.HasOne(d => d.Sites)
                    .WithMany(p => p.Addresses)
                    .HasForeignKey(d => d.SitesId)
                    .HasConstraintName("FK6fmh4x869656vhacsplc0ce2w");*/

                entity.HasOne(d => d.StatsSaareaCode)
                    .WithMany(p => p.Addresses)
                    .HasForeignKey(d => d.StatsSaareaCodeId)
                    .HasConstraintName("FK8lihl663thsig4co77t7fnxms");

                entity.HasOne(d => d.Town)
                    .WithMany(p => p.Addresses)
                    .HasForeignKey(d => d.TownId)
                    .HasConstraintName("FKbuf0he9m01a59bsqgmsr3pysh");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Addresses)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK6i66ijb8twgcqtetl8eeeed6v");
            });

            modelBuilder.Entity<AddressChange>(entity =>
            {
                entity.ToTable("address_change");

                entity.HasIndex(e => e.SitesId, "FK5f3mxyjeyi6yap1c13b0w6o4j");

                entity.HasIndex(e => e.MunicipalityId, "FK7c5og3m36g15y1kg47ne3sjhs");

                entity.HasIndex(e => e.TownId, "FK7g9wboum101iej11bip3ulgea");

                entity.HasIndex(e => e.HostingCompanyId, "FK7kteevabuvtlyjepvgr5qvs4l");

                entity.HasIndex(e => e.CompanyId, "FKcxbbl7xr2u9pcrhmcapk64t6u");

                entity.HasIndex(e => e.ResidentialAddressId, "FKiyo9kctidriinjtrxj9uamxdy");

                entity.HasIndex(e => e.PostalAddressId, "FKlxjjfvpiglwv5xbtvikw3xq3l");

                entity.HasIndex(e => e.StatsSaareaCodeId, "FKoclfqe3pi8m89tp9hseq3ekna");

                entity.HasIndex(e => e.UserId, "FKren5yfeeesjgo2lxa6a7vrw95");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AddressEnum).HasColumnName("address_enum");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(50)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.LatitudeDegrees).HasColumnName("latitude_degrees");

                entity.Property(e => e.LatitudeMinutes).HasColumnName("latitude_minutes");

                entity.Property(e => e.LatitudeSeconds).HasColumnName("latitude_seconds");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.LongitudeDegrees).HasColumnName("longitude_degrees");

                entity.Property(e => e.LongitudeMinutes).HasColumnName("longitude_minutes");

                entity.Property(e => e.LongitudeSeconds).HasColumnName("longitude_seconds");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.PostalAddressId).HasColumnName("postal_address_id");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(10)
                    .HasColumnName("postcode");

                entity.Property(e => e.PrimaryAddr)
                    .HasColumnType("bit(1)")
                    .HasColumnName("primary_addr");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.SameAddress)
                    .HasColumnType("bit(1)")
                    .HasColumnName("same_address");

                entity.Property(e => e.SitesId).HasColumnName("sites_id");

                entity.Property(e => e.StatsSaareaCodeId).HasColumnName("stats_saarea_code_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TownId).HasColumnName("town_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.AddressChanges)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKcxbbl7xr2u9pcrhmcapk64t6u");

                entity.HasOne(d => d.HostingCompany)
                    .WithMany(p => p.AddressChanges)
                    .HasForeignKey(d => d.HostingCompanyId)
                    .HasConstraintName("FK7kteevabuvtlyjepvgr5qvs4l");

                entity.HasOne(d => d.Municipality)
                    .WithMany(p => p.AddressChanges)
                    .HasForeignKey(d => d.MunicipalityId)
                    .HasConstraintName("FK7c5og3m36g15y1kg47ne3sjhs");

                entity.HasOne(d => d.PostalAddress)
                    .WithMany(p => p.AddressChangePostalAddresses)
                    .HasForeignKey(d => d.PostalAddressId)
                    .HasConstraintName("FKlxjjfvpiglwv5xbtvikw3xq3l");

                entity.HasOne(d => d.ResidentialAddress)
                    .WithMany(p => p.AddressChangeResidentialAddresses)
                    .HasForeignKey(d => d.ResidentialAddressId)
                    .HasConstraintName("FKiyo9kctidriinjtrxj9uamxdy");

                /*entity.HasOne(d => d.Sites)
                    .WithMany(p => p.AddressChanges)
                    .HasForeignKey(d => d.SitesId)
                    .HasConstraintName("FK5f3mxyjeyi6yap1c13b0w6o4j");*/

                entity.HasOne(d => d.StatsSaareaCode)
                    .WithMany(p => p.AddressChanges)
                    .HasForeignKey(d => d.StatsSaareaCodeId)
                    .HasConstraintName("FKoclfqe3pi8m89tp9hseq3ekna");

                entity.HasOne(d => d.Town)
                    .WithMany(p => p.AddressChanges)
                    .HasForeignKey(d => d.TownId)
                    .HasConstraintName("FK7g9wboum101iej11bip3ulgea");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.AddressChanges)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKren5yfeeesjgo2lxa6a7vrw95");
            });

            modelBuilder.Entity<AddressChangeAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("address_change_AUD");

                entity.HasIndex(e => e.Rev, "FK1ot2wnuavbfdjt38ljjnbgtyk");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AddressEnum).HasColumnName("address_enum");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.LatitudeDegrees).HasColumnName("latitude_degrees");

                entity.Property(e => e.LatitudeMinutes).HasColumnName("latitude_minutes");

                entity.Property(e => e.LatitudeSeconds).HasColumnName("latitude_seconds");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.LongitudeDegrees).HasColumnName("longitude_degrees");

                entity.Property(e => e.LongitudeMinutes).HasColumnName("longitude_minutes");

                entity.Property(e => e.LongitudeSeconds).HasColumnName("longitude_seconds");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.PostalAddressId).HasColumnName("postal_address_id");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(10)
                    .HasColumnName("postcode");

                entity.Property(e => e.PrimaryAddr)
                    .HasColumnType("bit(1)")
                    .HasColumnName("primary_addr");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SameAddress)
                    .HasColumnType("bit(1)")
                    .HasColumnName("same_address");

                entity.Property(e => e.SitesId).HasColumnName("sites_id");

                entity.Property(e => e.StatsSaareaCodeId).HasColumnName("stats_saarea_code_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TownId).HasColumnName("town_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.AddressChangeAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK1ot2wnuavbfdjt38ljjnbgtyk");
            });

            modelBuilder.Entity<AddressHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("address_hist");

                entity.HasIndex(e => e.Rev, "FK7puyx2jw7s7ui7awvm3m492kn");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.InitialValidation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("initialValidation");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.LatitudeDegrees).HasColumnName("latitude_degrees");

                entity.Property(e => e.LatitudeMinutes).HasColumnName("latitude_minutes");

                entity.Property(e => e.LatitudeSeconds).HasColumnName("latitude_seconds");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.LongitudeDegrees).HasColumnName("longitude_degrees");

                entity.Property(e => e.LongitudeMinutes).HasColumnName("longitude_minutes");

                entity.Property(e => e.LongitudeSeconds).HasColumnName("longitude_seconds");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(10)
                    .HasColumnName("postcode");

                entity.Property(e => e.PrimaryAddr)
                    .HasColumnType("bit(1)")
                    .HasColumnName("primary_addr");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SameAddress)
                    .HasColumnType("bit(1)")
                    .HasColumnName("same_address");

                entity.Property(e => e.SitesId).HasColumnName("sites_id");

                entity.Property(e => e.StatsSaareaCodeId).HasColumnName("stats_saarea_code_id");

                entity.Property(e => e.TownId).HasColumnName("town_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.ValidiationRanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("validiationRanDate");

                entity.Property(e => e.WorkflowValidation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("workflowValidation");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.AddressHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK7puyx2jw7s7ui7awvm3m492kn");
            });

            modelBuilder.Entity<AddressHistory>(entity =>
            {
                entity.ToTable("address_history");

                entity.HasIndex(e => e.ForAddressId, "FK3iyiqw9bcuaojgkmprk0ovwe9");

                entity.HasIndex(e => e.UserId, "FK784g7gdoi6xeamry0o0fpb1he");

                entity.HasIndex(e => e.HostingCompanyId, "FK9hs80ycc7elvlipqnxnokg0h9");

                entity.HasIndex(e => e.TownId, "FKgwbl8ttwofk6r182o23aav0p5");

                entity.HasIndex(e => e.SitesId, "FKo0ap37pau2avlnbiw92fnds8");

                entity.HasIndex(e => e.MunicipalityId, "FKoq2qjb21k8n12ifagwrrcrkxb");

                entity.HasIndex(e => e.CompanyId, "FKp8js85c7nwcyam1d0v6wydxfi");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(50)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForAddressId).HasColumnName("for_address_id");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.LatitudeDegrees).HasColumnName("latitudeDegrees");

                entity.Property(e => e.LatitudeMinutes).HasColumnName("latitudeMinutes");

                entity.Property(e => e.LatitudeSeconds).HasColumnName("latitudeSeconds");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.LongitudeDegrees).HasColumnName("longitudeDegrees");

                entity.Property(e => e.LongitudeMinutes).HasColumnName("longitudeMinutes");

                entity.Property(e => e.LongitudeSeconds).HasColumnName("longitudeSeconds");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(10)
                    .HasColumnName("postcode");

                entity.Property(e => e.PrimaryAddr)
                    .HasColumnType("bit(1)")
                    .HasColumnName("primary_addr");

                entity.Property(e => e.SameAddress)
                    .HasColumnType("bit(1)")
                    .HasColumnName("same_address");

                entity.Property(e => e.SitesId).HasColumnName("sites_id");

                entity.Property(e => e.TownId).HasColumnName("town_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.AddressHistories)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKp8js85c7nwcyam1d0v6wydxfi");

                entity.HasOne(d => d.ForAddress)
                    .WithMany(p => p.AddressHistories)
                    .HasForeignKey(d => d.ForAddressId)
                    .HasConstraintName("FK3iyiqw9bcuaojgkmprk0ovwe9");

                entity.HasOne(d => d.HostingCompany)
                    .WithMany(p => p.AddressHistories)
                    .HasForeignKey(d => d.HostingCompanyId)
                    .HasConstraintName("FK9hs80ycc7elvlipqnxnokg0h9");

                entity.HasOne(d => d.Municipality)
                    .WithMany(p => p.AddressHistories)
                    .HasForeignKey(d => d.MunicipalityId)
                    .HasConstraintName("FKoq2qjb21k8n12ifagwrrcrkxb");

                /*entity.HasOne(d => d.Sites)
                    .WithMany(p => p.AddressHistories)
                    .HasForeignKey(d => d.SitesId)
                    .HasConstraintName("FKo0ap37pau2avlnbiw92fnds8");*/

                entity.HasOne(d => d.Town)
                    .WithMany(p => p.AddressHistories)
                    .HasForeignKey(d => d.TownId)
                    .HasConstraintName("FKgwbl8ttwofk6r182o23aav0p5");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.AddressHistories)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK784g7gdoi6xeamry0o0fpb1he");
            });

            modelBuilder.Entity<AdministrationOfApq>(entity =>
            {
                entity.ToTable("administration_of_apq");

                entity.HasIndex(e => e.AssessorId, "FK1n5drp9pca3637bv90ohg0uv6");

                entity.HasIndex(e => e.UsersId, "FKdkmus95qh5bcnm6flnifq4xxm");

                entity.HasIndex(e => e.ModeratorId, "FKewd6ptsqjif487ca2qnpchwoc");

                entity.HasIndex(e => e.AssessmentCenterId, "FKk7swe460xyf46bip6b1p548wj");

                entity.HasIndex(e => e.QualificationId, "FKthgovlev3wyoaiuatdq158aol");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.AssessmentCenterId).HasColumnName("assessment_center_id");

                entity.Property(e => e.AssessorId).HasColumnName("assessor_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.EisaDate)
                    .HasColumnType("datetime")
                    .HasColumnName("eisa_date");

                entity.Property(e => e.EndTime)
                    .HasColumnType("datetime")
                    .HasColumnName("end_time");

                entity.Property(e => e.EntryRequirementsMet).HasColumnName("entry_requirements_met");

                entity.Property(e => e.ExemplarEisaHasBeenPublished).HasColumnName("exemplar_eisa_has_been_published");

                entity.Property(e => e.InPossessionFinalEisa).HasColumnName("in_possession_final_eisa");

                entity.Property(e => e.ModeratorId).HasColumnName("moderator_id");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RecievedRequiredTraining).HasColumnName("recieved_required_training");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.AssessmentCenter)
                    .WithMany(p => p.AdministrationOfApqs)
                    .HasForeignKey(d => d.AssessmentCenterId)
                    .HasConstraintName("FKk7swe460xyf46bip6b1p548wj");

                entity.HasOne(d => d.Assessor)
                    .WithMany(p => p.AdministrationOfApqAssessors)
                    .HasForeignKey(d => d.AssessorId)
                    .HasConstraintName("FK1n5drp9pca3637bv90ohg0uv6");

                entity.HasOne(d => d.Moderator)
                    .WithMany(p => p.AdministrationOfApqModerators)
                    .HasForeignKey(d => d.ModeratorId)
                    .HasConstraintName("FKewd6ptsqjif487ca2qnpchwoc");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.AdministrationOfApqs)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKthgovlev3wyoaiuatdq158aol");

                entity.HasOne(d => d.Users)
                    .WithMany(p => p.AdministrationOfApqUsers)
                    .HasForeignKey(d => d.UsersId)
                    .HasConstraintName("FKdkmus95qh5bcnm6flnifq4xxm");
            });

            modelBuilder.Entity<AdministrationOfApqHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("administration_of_apq_hist");

                entity.HasIndex(e => e.Rev, "FK7uf08sqnyt8tm6rwwwujujknv");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.AssessmentCenterId).HasColumnName("assessment_center_id");

                entity.Property(e => e.AssessorId).HasColumnName("assessor_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.EisaDate)
                    .HasColumnType("datetime")
                    .HasColumnName("eisa_date");

                entity.Property(e => e.EndTime)
                    .HasColumnType("datetime")
                    .HasColumnName("end_time");

                entity.Property(e => e.EntryRequirementsMet).HasColumnName("entry_requirements_met");

                entity.Property(e => e.ExemplarEisaHasBeenPublished).HasColumnName("exemplar_eisa_has_been_published");

                entity.Property(e => e.InPossessionFinalEisa).HasColumnName("in_possession_final_eisa");

                entity.Property(e => e.ModeratorId).HasColumnName("moderator_id");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RecievedRequiredTraining).HasColumnName("recieved_required_training");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.AdministrationOfApqHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK7uf08sqnyt8tm6rwwwujujknv");
            });

            modelBuilder.Entity<AdministrationOfApqLearner>(entity =>
            {
                entity.ToTable("administration_of_apq_learners");

                entity.HasIndex(e => e.CompanyLearnersId, "FK2ugfjuqr4c8ud12tpa42yhwwd");

                entity.HasIndex(e => e.AdministrationOfAqpId, "FK671jpv7534tpv91kycko0664y");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdministrationOfAqpId).HasColumnName("administration_of_aqp_id");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.HasOne(d => d.AdministrationOfAqp)
                    .WithMany(p => p.AdministrationOfApqLearners)
                    .HasForeignKey(d => d.AdministrationOfAqpId)
                    .HasConstraintName("FK671jpv7534tpv91kycko0664y");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.AdministrationOfApqLearners)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FK2ugfjuqr4c8ud12tpa42yhwwd");
            });

            modelBuilder.Entity<AdministrationOfApqLearnersHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("administration_of_apq_learners_hist");

                entity.HasIndex(e => e.Rev, "FKbbfr6kki985u6qg39142py97p");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AdministrationOfAqpId).HasColumnName("administration_of_aqp_id");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.AdministrationOfApqLearnersHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKbbfr6kki985u6qg39142py97p");
            });

            modelBuilder.Entity<AetProgrammeLevel>(entity =>
            {
                entity.ToTable("aet_programme_level");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<AllocationChange>(entity =>
            {
                entity.ToTable("allocation_change");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AllocationChangeType)
                    .HasMaxLength(255)
                    .HasColumnName("allocation_change_type");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<AllocationChangeHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("allocation_change_hist");

                entity.HasIndex(e => e.Rev, "FKkkm8yuiivxcimqwlha4ctgcos");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AllocationChangeType)
                    .HasMaxLength(255)
                    .HasColumnName("allocation_change_type");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.AllocationChangeHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKkkm8yuiivxcimqwlha4ctgcos");
            });

            modelBuilder.Entity<AllocationChangesReason>(entity =>
            {
                entity.ToTable("allocation_changes_reasons");

                entity.HasIndex(e => e.DgAllocationParentId, "FK4h492skb1m5eybfuw6n15ctqp");

                entity.HasIndex(e => e.AllocationChangeId, "FKbo49wdj4xueh2siwfchl9ybxp");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AllocationChangeId).HasColumnName("allocation_change_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DgAllocationParentId).HasColumnName("dg_allocation_parent_id");

                entity.HasOne(d => d.AllocationChange)
                    .WithMany(p => p.AllocationChangesReasons)
                    .HasForeignKey(d => d.AllocationChangeId)
                    .HasConstraintName("FKbo49wdj4xueh2siwfchl9ybxp");

                entity.HasOne(d => d.DgAllocationParent)
                    .WithMany(p => p.AllocationChangesReasons)
                    .HasForeignKey(d => d.DgAllocationParentId)
                    .HasConstraintName("FK4h492skb1m5eybfuw6n15ctqp");
            });

            modelBuilder.Entity<AllocationChangesReasonsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("allocation_changes_reasons_hist");

                entity.HasIndex(e => e.Rev, "FK74kxba7okbvp4ohnibybvuv9c");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AllocationChangeId).HasColumnName("allocation_change_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DgAllocationParentId).HasColumnName("dg_allocation_parent_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.AllocationChangesReasonsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK74kxba7okbvp4ohnibybvuv9c");
            });

            modelBuilder.Entity<AllocationList>(entity =>
            {
                entity.ToTable("allocation_list");

                entity.HasIndex(e => e.QualificationId, "FKao6omt5mm9ms8q42qfvtl0lmr");

                entity.HasIndex(e => e.InterventionTypeId, "FKdm13tx3r5lsviry4oblledlk6");

               entity.HasIndex(e => e.DgYearId, "FKjs8im5393wkwnc74u6lbeii4s");

                entity.HasIndex(e => e.OfoCodesId, "FKqf9i7axykenqaxfxpeuua1uit");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DgYearId).HasColumnName("dgYear_id");

                entity.Property(e => e.EmploymentStatus)
                    .HasMaxLength(255)
                    .HasColumnName("employment_status");

                entity.Property(e => e.FinYear).HasColumnName("fin_year");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SspPriority)
                    .HasMaxLength(255)
                    .HasColumnName("ssp_priority");

                entity.Property(e => e.TotalAllocationForYear).HasColumnName("total_allocation_for_year");

                entity.HasOne(d => d.DgYear)
                    .WithMany(p => p.AllocationLists)
                    .HasForeignKey(d => d.DgYearId)
                    .HasConstraintName("FKjs8im5393wkwnc74u6lbeii4s"); 

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.AllocationLists)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FKdm13tx3r5lsviry4oblledlk6");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.AllocationLists)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKqf9i7axykenqaxfxpeuua1uit");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.AllocationLists)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKao6omt5mm9ms8q42qfvtl0lmr");
            });

            modelBuilder.Entity<AlternativeIdType>(entity =>
            {
                entity.ToTable("Alternative_id_type");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<ApplicantType>(entity =>
            {
                entity.ToTable("applicant_type");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Appointment>(entity =>
            {
                entity.ToTable("appointment");

                entity.HasIndex(e => e.AppointmentWithUserId, "FK4n4k9vclhyfmb09tcd53dbqgb");

                entity.HasIndex(e => e.UserId, "FK7bo52i6usixwb7ira9l16y3bu");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdditionalInfo).HasColumnName("additional_info");

                entity.Property(e => e.AppointmentWithUserId).HasColumnName("appointment_with_user_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateAndTime)
                    .HasColumnType("datetime")
                    .HasColumnName("date_and_time");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Title).HasColumnName("title");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.Venue).HasColumnName("venue");

                entity.HasOne(d => d.AppointmentWithUser)
                    .WithMany(p => p.AppointmentAppointmentWithUsers)
                    .HasForeignKey(d => d.AppointmentWithUserId)
                    .HasConstraintName("FK4n4k9vclhyfmb09tcd53dbqgb");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.AppointmentUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK7bo52i6usixwb7ira9l16y3bu");
            });

            modelBuilder.Entity<Appraisal>(entity =>
            {
                entity.ToTable("appraisals");

                entity.HasIndex(e => e.OfoCodesId, "FK3mryd7o4tb32ks0962wfq1nhl");

                entity.HasIndex(e => e.QualificationId, "FK7ek99qqfuhnxwqrhvug89va4j");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.Appraisals)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FK3mryd7o4tb32ks0962wfq1nhl");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.Appraisals)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK7ek99qqfuhnxwqrhvug89va4j");
            });

            modelBuilder.Entity<AppraisalCategory>(entity =>
            {
                entity.ToTable("appraisal_categories");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<AppraisalCategoryCode>(entity =>
            {
                entity.ToTable("appraisal_category_code");

                entity.HasIndex(e => e.AppraisalCategoryId, "FK8wdr0nhwqfrqbh194g95cwir9");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AppraisalCategoryId).HasColumnName("appraisal_category_id");

                entity.Property(e => e.AppraisalCode)
                    .HasMaxLength(500)
                    .HasColumnName("appraisal_code");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.AppraisalCategory)
                    .WithMany(p => p.AppraisalCategoryCodes)
                    .HasForeignKey(d => d.AppraisalCategoryId)
                    .HasConstraintName("FK8wdr0nhwqfrqbh194g95cwir9");
            });

            modelBuilder.Entity<AppraisalChecklist>(entity =>
            {
                entity.ToTable("appraisal_checklist");

                entity.HasIndex(e => e.AppraisalCategoryId, "FK1k5hny6y597eul4l6wy07d8h4");

                entity.HasIndex(e => e.AppraisalCategoryCodeId, "FK3kkt28bxykee8icj72tylnyjd");

                entity.HasIndex(e => e.AppraisalsId, "FK637y72m67ufb18sacda6agc36");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AppraisalCategoryCodeId).HasColumnName("appraisal_category_code_id");

                entity.Property(e => e.AppraisalCategoryId).HasColumnName("appraisal_category_id");

                entity.Property(e => e.AppraisalsId).HasColumnName("appraisals_id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.AppraisalCategoryCode)
                    .WithMany(p => p.AppraisalChecklists)
                    .HasForeignKey(d => d.AppraisalCategoryCodeId)
                    .HasConstraintName("FK3kkt28bxykee8icj72tylnyjd");

                entity.HasOne(d => d.AppraisalCategory)
                    .WithMany(p => p.AppraisalChecklists)
                    .HasForeignKey(d => d.AppraisalCategoryId)
                    .HasConstraintName("FK1k5hny6y597eul4l6wy07d8h4");

                entity.HasOne(d => d.Appraisals)
                    .WithMany(p => p.AppraisalChecklists)
                    .HasForeignKey(d => d.AppraisalsId)
                    .HasConstraintName("FK637y72m67ufb18sacda6agc36");
            });

            modelBuilder.Entity<Aqp>(entity =>
            {
                entity.ToTable("aqp");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<AreaForImprovement>(entity =>
            {
                entity.ToTable("area_for_improvement");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<AssessorModExtensionOfScope>(entity =>
            {
                entity.ToTable("assessor_mod_extension_of_scope");

                entity.HasIndex(e => e.PreviousReviewCommitteeMeetingId, "FK1qoddcoasxw1xcyyw2yn78rlh");

                entity.HasIndex(e => e.CreateUsersId, "FK41gdqx6l2iobmfa9qjsk0mc2s");

                entity.HasIndex(e => e.ReviewCommitteeMeetingAgendaId, "FKayqwop8vpj6sk1xgt9qjjt3id");

                entity.HasIndex(e => e.AssessorModeratorApplicationId, "FKbl5l3vjs55y15jrr9ky24ojva");

                entity.HasIndex(e => e.PreviousReviewCommitteeMeetingAgendaId, "FKcvxeqqdmrj3c7wvmeaxd1m4dv");

                entity.HasIndex(e => e.ReviewCommitteeMeetingId, "FKlvm24fng75qufq2eru3e931fg");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.AssessorModeratorApplicationId).HasColumnName("assessor_moderator_application_id");

                entity.Property(e => e.CodeOfConductAccepted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("code_of_conduct_accepted");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUsersId).HasColumnName("create_users_id");

                entity.Property(e => e.PreviousApplicationType).HasColumnName("previous_application_type");

                entity.Property(e => e.PreviousCodeOfConductAcceptDate)
                    .HasColumnType("datetime")
                    .HasColumnName("previous_code_of_conduct_accept_date");

                entity.Property(e => e.PreviousReviewCommitteeMeetingAgendaId).HasColumnName("previous_review_committee_meeting_agenda_id");

                entity.Property(e => e.PreviousReviewCommitteeMeetingId).HasColumnName("previous_review_committee_meeting_id");

                entity.Property(e => e.ReviewCommitteeMeetingAgendaId).HasColumnName("review_committee_meeting_agenda_id");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.HasOne(d => d.AssessorModeratorApplication)
                    .WithMany(p => p.AssessorModExtensionOfScopes)
                    .HasForeignKey(d => d.AssessorModeratorApplicationId)
                    .HasConstraintName("FKbl5l3vjs55y15jrr9ky24ojva");

                entity.HasOne(d => d.CreateUsers)
                    .WithMany(p => p.AssessorModExtensionOfScopes)
                    .HasForeignKey(d => d.CreateUsersId)
                    .HasConstraintName("FK41gdqx6l2iobmfa9qjsk0mc2s");

                entity.HasOne(d => d.PreviousReviewCommitteeMeetingAgenda)
                    .WithMany(p => p.AssessorModExtensionOfScopePreviousReviewCommitteeMeetingAgenda)
                    .HasForeignKey(d => d.PreviousReviewCommitteeMeetingAgendaId)
                    .HasConstraintName("FKcvxeqqdmrj3c7wvmeaxd1m4dv");

                entity.HasOne(d => d.PreviousReviewCommitteeMeeting)
                    .WithMany(p => p.AssessorModExtensionOfScopePreviousReviewCommitteeMeetings)
                    .HasForeignKey(d => d.PreviousReviewCommitteeMeetingId)
                    .HasConstraintName("FK1qoddcoasxw1xcyyw2yn78rlh");

                entity.HasOne(d => d.ReviewCommitteeMeetingAgenda)
                    .WithMany(p => p.AssessorModExtensionOfScopeReviewCommitteeMeetingAgenda)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingAgendaId)
                    .HasConstraintName("FKayqwop8vpj6sk1xgt9qjjt3id");

                entity.HasOne(d => d.ReviewCommitteeMeeting)
                    .WithMany(p => p.AssessorModExtensionOfScopeReviewCommitteeMeetings)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingId)
                    .HasConstraintName("FKlvm24fng75qufq2eru3e931fg");
            });

            modelBuilder.Entity<AssessorModReRegistration>(entity =>
            {
                entity.ToTable("assessor_mod_re_registration");

                entity.HasIndex(e => e.ReviewCommitteeMeetingAgendaId, "FK4wf7terikrvqkauegt43p7e39");

                entity.HasIndex(e => e.ReviewCommitteeMeetingId, "FK56pqo83fb3s0s05stkfw26j60");

                entity.HasIndex(e => e.UsersId, "FKdjena772mx2dlkkntveddr4j9");

                entity.HasIndex(e => e.PreviousReviewCommitteeMeetingAgendaId, "FKntqvy620r9yayn4id15ioc29");

                entity.HasIndex(e => e.AssessorModeratorApplicationId, "FKrup9yjyr293ptqgvpn7mgdmi1");

                entity.HasIndex(e => e.PreviousReviewCommitteeMeetingId, "FKssvyd09idqpmqrlo2ki9iud2p");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.AssessorModeratorApplicationId).HasColumnName("assessor_moderator_application_id");

                entity.Property(e => e.CodeOfConductAccepted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("code_of_conduct_accepted");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.PreviousApplicationType).HasColumnName("previous_application_type");

                entity.Property(e => e.PreviousCodeOfConductAcceptDate)
                    .HasColumnType("datetime")
                    .HasColumnName("previous_code_of_conduct_accept_date");

                entity.Property(e => e.PreviousCreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("previous_create_date");

                entity.Property(e => e.PreviousReviewCommitteeMeetingAgendaId).HasColumnName("previous_review_committee_meeting_agenda_id");

                entity.Property(e => e.PreviousReviewCommitteeMeetingId).HasColumnName("previous_review_committee_meeting_id");

                entity.Property(e => e.ReviewCommitteeMeetingAgendaId).HasColumnName("review_committee_meeting_agenda_id");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.AssessorModeratorApplication)
                    .WithMany(p => p.AssessorModReRegistrations)
                    .HasForeignKey(d => d.AssessorModeratorApplicationId)
                    .HasConstraintName("FKrup9yjyr293ptqgvpn7mgdmi1");

                entity.HasOne(d => d.PreviousReviewCommitteeMeetingAgenda)
                    .WithMany(p => p.AssessorModReRegistrationPreviousReviewCommitteeMeetingAgenda)
                    .HasForeignKey(d => d.PreviousReviewCommitteeMeetingAgendaId)
                    .HasConstraintName("FKntqvy620r9yayn4id15ioc29");

                entity.HasOne(d => d.PreviousReviewCommitteeMeeting)
                    .WithMany(p => p.AssessorModReRegistrationPreviousReviewCommitteeMeetings)
                    .HasForeignKey(d => d.PreviousReviewCommitteeMeetingId)
                    .HasConstraintName("FKssvyd09idqpmqrlo2ki9iud2p");

                entity.HasOne(d => d.ReviewCommitteeMeetingAgenda)
                    .WithMany(p => p.AssessorModReRegistrationReviewCommitteeMeetingAgenda)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingAgendaId)
                    .HasConstraintName("FK4wf7terikrvqkauegt43p7e39");

                entity.HasOne(d => d.ReviewCommitteeMeeting)
                    .WithMany(p => p.AssessorModReRegistrationReviewCommitteeMeetings)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingId)
                    .HasConstraintName("FK56pqo83fb3s0s05stkfw26j60");

                entity.HasOne(d => d.Users)
                    .WithMany(p => p.AssessorModReRegistrations)
                    .HasForeignKey(d => d.UsersId)
                    .HasConstraintName("FKdjena772mx2dlkkntveddr4j9");
            });

            modelBuilder.Entity<AssessorModeratorApplication>(entity =>
            {
                entity.ToTable("assessor_moderator_application");

                entity.HasIndex(e => e.ReviewCommitteeMeetingId, "FK4woq8rcxdhi7kl5ybtcwqam4q");

                entity.HasIndex(e => e.LegacyModeratorAccreditationId, "FK5tn8k8mbx13uflut5g4khnwfh");

                entity.HasIndex(e => e.JobTitleId, "FK99ck7gjmgh4s03jju9ismeijg");

                entity.HasIndex(e => e.CreateUserId, "FK9h8s1rw7miq1wodfkn17m2u7r");

                entity.HasIndex(e => e.LegacyAssessorAccreditationId, "FKa62ut5qd01sjypix0gw0wg3f6");

                entity.HasIndex(e => e.ReviewCommitteeMeetingAgendaId, "FKad4j1syrn8y80c5pi9sqnn2gm");

                entity.HasIndex(e => e.LastUpdateUserId, "FKlr80mep8bb38qbcuxxjhkea4");

                entity.HasIndex(e => e.UsersId, "FKlrtc6o9f5id62wwp67rk52gu7");

                entity.HasIndex(e => e.OfoCodesId, "FKlswebum5d1438rs60eut2mvpt");

                entity.HasIndex(e => e.EtqaId, "FKm566or558ttdffj2xau4ncjbm");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApplicationType).HasColumnName("application_type");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.AssessorApplication)
                    .HasColumnType("bit(1)")
                    .HasColumnName("assessor_application")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(255)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.CodeOfConductAcceptDate)
                    .HasColumnType("datetime")
                    .HasColumnName("code_of_conduct_accept_date");

                entity.Property(e => e.CodeOfConductAccepted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("code_of_conduct_accepted");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.DuplicateApplication)
                    .HasColumnType("bit(1)")
                    .HasColumnName("duplicate_application")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("end_date");

                entity.Property(e => e.EtqaId).HasColumnName("etqa_id");

                entity.Property(e => e.FinalApproved)
                    .HasColumnType("bit(1)")
                    .HasColumnName("final_approved")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.FinalRejected)
                    .HasColumnType("bit(1)")
                    .HasColumnName("final_rejected")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.JobTitleId).HasColumnName("job_title_id");

                entity.Property(e => e.LastUpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_update_date");

                entity.Property(e => e.LastUpdateUserId).HasColumnName("last_update_user_id");

                entity.Property(e => e.LegacyAssessorAccreditationId).HasColumnName("legacy_assessor_accreditation_id");

                entity.Property(e => e.LegacyModeratorAccreditationId).HasColumnName("legacy_moderator_accreditation_id");

                entity.Property(e => e.ModeratorApplication)
                    .HasColumnType("bit(1)")
                    .HasColumnName("moderator_application")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.ReviewCommitteeMeetingAgendaId).HasColumnName("review_committee_meeting_agenda_id");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SystemUpdate)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_update")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TradeTestCenterApplication)
                    .HasColumnType("bit(1)")
                    .HasColumnName("trade_test_center_application")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TypeAssessorModerator).HasColumnName("type_assessor_moderator");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.AssessorModeratorApplicationCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FK9h8s1rw7miq1wodfkn17m2u7r");

                entity.HasOne(d => d.Etqa)
                    .WithMany(p => p.AssessorModeratorApplications)
                    .HasForeignKey(d => d.EtqaId)
                    .HasConstraintName("FKm566or558ttdffj2xau4ncjbm");

                entity.HasOne(d => d.JobTitle)
                    .WithMany(p => p.AssessorModeratorApplications)
                    .HasForeignKey(d => d.JobTitleId)
                    .HasConstraintName("FK99ck7gjmgh4s03jju9ismeijg");

                entity.HasOne(d => d.LastUpdateUser)
                    .WithMany(p => p.AssessorModeratorApplicationLastUpdateUsers)
                    .HasForeignKey(d => d.LastUpdateUserId)
                    .HasConstraintName("FKlr80mep8bb38qbcuxxjhkea4");

                entity.HasOne(d => d.LegacyAssessorAccreditation)
                    .WithMany(p => p.AssessorModeratorApplications)
                    .HasForeignKey(d => d.LegacyAssessorAccreditationId)
                    .HasConstraintName("FKa62ut5qd01sjypix0gw0wg3f6");

                entity.HasOne(d => d.LegacyModeratorAccreditation)
                    .WithMany(p => p.AssessorModeratorApplications)
                    .HasForeignKey(d => d.LegacyModeratorAccreditationId)
                    .HasConstraintName("FK5tn8k8mbx13uflut5g4khnwfh");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.AssessorModeratorApplications)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKlswebum5d1438rs60eut2mvpt");

                entity.HasOne(d => d.ReviewCommitteeMeetingAgenda)
                    .WithMany(p => p.AssessorModeratorApplications)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingAgendaId)
                    .HasConstraintName("FKad4j1syrn8y80c5pi9sqnn2gm");

                entity.HasOne(d => d.ReviewCommitteeMeeting)
                    .WithMany(p => p.AssessorModeratorApplications)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingId)
                    .HasConstraintName("FK4woq8rcxdhi7kl5ybtcwqam4q");

                entity.HasOne(d => d.Users)
                    .WithMany(p => p.AssessorModeratorApplicationUsers)
                    .HasForeignKey(d => d.UsersId)
                    .HasConstraintName("FKlrtc6o9f5id62wwp67rk52gu7");
            });

            modelBuilder.Entity<AssessorModeratorApplicationHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("assessor_moderator_application_hist");

                entity.HasIndex(e => e.Rev, "FK6aunft125lmco6h9klbnjekga");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApplicationType).HasColumnName("application_type");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.AssessorApplication)
                    .HasColumnType("bit(1)")
                    .HasColumnName("assessor_application")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(255)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.CodeOfConductAcceptDate)
                    .HasColumnType("datetime")
                    .HasColumnName("code_of_conduct_accept_date");

                entity.Property(e => e.CodeOfConductAccepted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("code_of_conduct_accepted");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.DuplicateApplication)
                    .HasColumnType("bit(1)")
                    .HasColumnName("duplicate_application")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("end_date");

                entity.Property(e => e.EtqaId).HasColumnName("etqa_id");

                entity.Property(e => e.FinalApproved)
                    .HasColumnType("bit(1)")
                    .HasColumnName("final_approved")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.FinalRejected)
                    .HasColumnType("bit(1)")
                    .HasColumnName("final_rejected")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.JobTitleId).HasColumnName("job_title_id");

                entity.Property(e => e.LastUpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_update_date");

                entity.Property(e => e.LastUpdateUserId).HasColumnName("last_update_user_id");

                entity.Property(e => e.LegacyAssessorAccreditationId).HasColumnName("legacy_assessor_accreditation_id");

                entity.Property(e => e.LegacyModeratorAccreditationId).HasColumnName("legacy_moderator_accreditation_id");

                entity.Property(e => e.ModeratorApplication)
                    .HasColumnType("bit(1)")
                    .HasColumnName("moderator_application")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.ReviewCommitteeMeetingAgendaId).HasColumnName("review_committee_meeting_agenda_id");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SystemUpdate)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_update")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TradeTestCenterApplication)
                    .HasColumnType("bit(1)")
                    .HasColumnName("trade_test_center_application")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TypeAssessorModerator).HasColumnName("type_assessor_moderator");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.AssessorModeratorApplicationHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK6aunft125lmco6h9klbnjekga");
            });

            modelBuilder.Entity<AssessorModeratorCompany>(entity =>
            {
                entity.ToTable("assessor_moderator_company");

                entity.HasIndex(e => e.AssessorModeratorId, "FK2ugis8geogijgcl7fbyb8oy6o");

                entity.HasIndex(e => e.ForAssessorModeratorApplicationId, "FKipvtke36har9n66txtyosr593");

                entity.HasIndex(e => e.CompanyId, "FKrlri0tl5cxkd7xis7j2b6al1u");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AssessorModeratorId).HasColumnName("assessor_moderator_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForAssessorModeratorApplicationId).HasColumnName("for_assessor_moderator_application_id");

                entity.HasOne(d => d.AssessorModerator)
                    .WithMany(p => p.AssessorModeratorCompanies)
                    .HasForeignKey(d => d.AssessorModeratorId)
                    .HasConstraintName("FK2ugis8geogijgcl7fbyb8oy6o");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.AssessorModeratorCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKrlri0tl5cxkd7xis7j2b6al1u");

                entity.HasOne(d => d.ForAssessorModeratorApplication)
                    .WithMany(p => p.AssessorModeratorCompanies)
                    .HasForeignKey(d => d.ForAssessorModeratorApplicationId)
                    .HasConstraintName("FKipvtke36har9n66txtyosr593");
            });

            modelBuilder.Entity<AssessorModeratorCompanySite>(entity =>
            {
                entity.ToTable("assessor_moderator_company_sites");

                entity.HasIndex(e => e.LastActionUser, "FK676wjrmv2rvx962lf4q4ufnry");

                entity.HasIndex(e => e.CreateUserId, "FKd8mgqq6yffhn0nsril46s0589");

                entity.HasIndex(e => e.CompanyId, "FKf7txtb0ynn9sdwlsm0g6tcq3g");

                entity.HasIndex(e => e.TrainingSiteId, "FKfx4crefxi9arq7w4m43yc8vea");

                entity.HasIndex(e => e.AssessorModeratorApplicationId, "FKig5sx22v1eskbct7xc6ld9vdm");

                entity.HasIndex(e => new { e.AssessorModeratorId, e.CompanyId }, "assessormoderatorsites_user_company");

                entity.HasIndex(e => new { e.AssessorModeratorId, e.CompanyId, e.TrainingSiteId }, "assessormoderatorsites_user_company_site");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.AssessorModType).HasColumnName("assessor_mod_type");

                entity.Property(e => e.AssessorModeratorApplicationId).HasColumnName("assessor_moderator_application_id");

                entity.Property(e => e.AssessorModeratorId).HasColumnName("assessor_moderator_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.TrainingSiteId).HasColumnName("training_site_id");

                entity.HasOne(d => d.AssessorModeratorApplication)
                    .WithMany(p => p.AssessorModeratorCompanySites)
                    .HasForeignKey(d => d.AssessorModeratorApplicationId)
                    .HasConstraintName("FKig5sx22v1eskbct7xc6ld9vdm");

                entity.HasOne(d => d.AssessorModerator)
                    .WithMany(p => p.AssessorModeratorCompanySiteAssessorModerators)
                    .HasForeignKey(d => d.AssessorModeratorId)
                    .HasConstraintName("FK7kiqkmq4l7orkw9wxp7wfhtv9");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.AssessorModeratorCompanySites)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKf7txtb0ynn9sdwlsm0g6tcq3g");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.AssessorModeratorCompanySiteCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKd8mgqq6yffhn0nsril46s0589");

                entity.HasOne(d => d.LastActionUserNavigation)
                    .WithMany(p => p.AssessorModeratorCompanySiteLastActionUserNavigations)
                    .HasForeignKey(d => d.LastActionUser)
                    .HasConstraintName("FK676wjrmv2rvx962lf4q4ufnry");

                entity.HasOne(d => d.TrainingSite)
                    .WithMany(p => p.AssessorModeratorCompanySites)
                    .HasForeignKey(d => d.TrainingSiteId)
                    .HasConstraintName("FKfx4crefxi9arq7w4m43yc8vea");
            });

            modelBuilder.Entity<AssessorModeratorCompanySitesHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("assessor_moderator_company_sites_hist");

                entity.HasIndex(e => e.Rev, "FKs1nf4ei0qptijt3u4h3pi1pxv");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.AssessorModType).HasColumnName("assessor_mod_type");

                entity.Property(e => e.AssessorModeratorApplicationId).HasColumnName("assessor_moderator_application_id");

                entity.Property(e => e.AssessorModeratorId).HasColumnName("assessor_moderator_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TrainingSiteId).HasColumnName("training_site_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.AssessorModeratorCompanySitesHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKs1nf4ei0qptijt3u4h3pi1pxv");
            });

            modelBuilder.Entity<AuditorMonitorReview>(entity =>
            {
                entity.ToTable("auditor_monitor_review");

                entity.HasIndex(e => e.TrainingProviderMonitoring, "FKgrthnadopm885e90rh35rfxgu");

                entity.HasIndex(e => e.AreasForImprovementId, "FKjgdt1gb31ax3rdyl6o4digybf");

                entity.HasIndex(e => e.ForProcess, "auditor_monitor_review_for_process");

                entity.HasIndex(e => e.TargetClass, "auditor_monitor_review_target_class");

                entity.HasIndex(e => new { e.TargetClass, e.TargetKey }, "auditor_monitor_review_target_class_key");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationCriteria)
                    .HasMaxLength(500)
                    .HasColumnName("accreditation_criteria");

                entity.Property(e => e.AreasForImprovementId).HasColumnName("areas_for_improvement_id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.Comment).HasColumnName("comment");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.EvidenceRequired).HasColumnName("evidence_required");

                entity.Property(e => e.EvidenceRequiredEvaluatorOutcome).HasColumnName("evidence_required_evaluator_outcome");

                entity.Property(e => e.EvidenceRequirements).HasColumnName("evidence_requirements");

                entity.Property(e => e.ForProcess).HasColumnName("for_process");

                entity.Property(e => e.IsNotRelevant)
                    .HasColumnType("bit(1)")
                    .HasColumnName("is_not_relevant")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.Section).HasColumnName("section");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.TargetClass).HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TpAccreditationApplicationType).HasColumnName("tp_accreditation_application_type");

                entity.Property(e => e.TrainingProviderMonitoring).HasColumnName("training_provider_monitoring");

                entity.HasOne(d => d.AreasForImprovement)
                    .WithMany(p => p.AuditorMonitorReviews)
                    .HasForeignKey(d => d.AreasForImprovementId)
                    .HasConstraintName("FKjgdt1gb31ax3rdyl6o4digybf");

                entity.HasOne(d => d.TrainingProviderMonitoringNavigation)
                    .WithMany(p => p.AuditorMonitorReviews)
                    .HasForeignKey(d => d.TrainingProviderMonitoring)
                    .HasConstraintName("FKgrthnadopm885e90rh35rfxgu");
            });

            modelBuilder.Entity<Bank>(entity =>
            {
                entity.ToTable("bank");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<BankingDetail>(entity =>
            {
                entity.ToTable("banking_details");

                entity.HasIndex(e => e.BankId, "FK22c1rt3khbyf1wx0xkgmk185e");

                entity.HasIndex(e => e.CompanyId, "FKb1crepqnwwwoni9r4xg1iml6p");

                entity.HasIndex(e => e.ApprovalUserId, "FKrqxhc6sq0lhf821v0fp70a54v");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalUserId).HasColumnName("approval_user_id");

                entity.Property(e => e.AreOriginalRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("are_original_required");

                entity.Property(e => e.BankAccNumber)
                    .HasMaxLength(100)
                    .HasColumnName("bank_acc_number");

                entity.Property(e => e.BankHolder)
                    .HasMaxLength(100)
                    .HasColumnName("bank_holder");

                entity.Property(e => e.BankId).HasColumnName("bank_id");

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(100)
                    .HasColumnName("branch_code");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.ConfirmationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirmation_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NotificationSentRegardingOriginal)
                    .HasColumnType("bit(1)")
                    .HasColumnName("notification_sent_regarding_original");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SwiftCode)
                    .HasMaxLength(100)
                    .HasColumnName("swift_code");

                entity.HasOne(d => d.ApprovalUser)
                    .WithMany(p => p.BankingDetails)
                    .HasForeignKey(d => d.ApprovalUserId)
                    .HasConstraintName("FKrqxhc6sq0lhf821v0fp70a54v");

                entity.HasOne(d => d.Bank)
                    .WithMany(p => p.BankingDetails)
                    .HasForeignKey(d => d.BankId)
                    .HasConstraintName("FK22c1rt3khbyf1wx0xkgmk185e");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.BankingDetails)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKb1crepqnwwwoni9r4xg1iml6p");
            });

            modelBuilder.Entity<BankingDetailsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("banking_details_hist");

                entity.HasIndex(e => e.Rev, "FKp7mr3d141ogam3du1g1p95kdv");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalUserId).HasColumnName("approval_user_id");

                entity.Property(e => e.AreOriginalRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("are_original_required");

                entity.Property(e => e.BankAccNumber)
                    .HasMaxLength(100)
                    .HasColumnName("bank_acc_number");

                entity.Property(e => e.BankHolder)
                    .HasMaxLength(100)
                    .HasColumnName("bank_holder");

                entity.Property(e => e.BankId).HasColumnName("bank_id");

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(100)
                    .HasColumnName("branch_code");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.ConfirmationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirmation_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NotificationSentRegardingOriginal)
                    .HasColumnType("bit(1)")
                    .HasColumnName("notification_sent_regarding_original");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SwiftCode)
                    .HasMaxLength(100)
                    .HasColumnName("swift_code");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.BankingDetailsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKp7mr3d141ogam3du1g1p95kdv");
            });

            modelBuilder.Entity<BugReport>(entity =>
            {
                entity.ToTable("bug_report");

                entity.HasIndex(e => e.UserId, "FKmnrw36kp77qhs3e8866457xxb");

                entity.HasIndex(e => e.CompanyUsersId, "FKnk04x9bk0nnxiofoylvs16dui");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BugReport1).HasColumnName("bug_report");

                entity.Property(e => e.BugTitle).HasColumnName("bug_title");

                entity.Property(e => e.Comment).HasColumnName("comment");

                entity.Property(e => e.CompanyUsersId).HasColumnName("company_users_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.IssueClosed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("issue_closed")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ReportType).HasColumnName("report_type");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.CompanyUsers)
                    .WithMany(p => p.BugReports)
                    .HasForeignKey(d => d.CompanyUsersId)
                    .HasConstraintName("FKnk04x9bk0nnxiofoylvs16dui");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.BugReports)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKmnrw36kp77qhs3e8866457xxb");
            });

            modelBuilder.Entity<CategorizationDatum>(entity =>
            {
                entity.ToTable("categorization_data");

                entity.HasIndex(e => e.CompanyId, "FKe47w16gqnu7gaj5n5w46rxanq");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Categorization).HasColumnName("categorization");

                entity.Property(e => e.CompanyCategory)
                    .HasMaxLength(255)
                    .HasColumnName("company_category");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(255)
                    .HasColumnName("levy_number");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.CategorizationData)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKe47w16gqnu7gaj5n5w46rxanq");
            });

            modelBuilder.Entity<Chamber>(entity =>
            {
                entity.ToTable("chamber");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.GpAccountNumberCode)
                    .HasMaxLength(500)
                    .HasColumnName("gp_account_number_code");

                entity.Property(e => e.GpVendorClass).HasColumnName("gp_vendor_class");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<ChangeReason>(entity =>
            {
                entity.ToTable("change_reason");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(1000)
                    .HasColumnName("description");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");
            });

            modelBuilder.Entity<ChatMessage>(entity =>
            {
                entity.ToTable("chat_message");

                entity.HasIndex(e => e.AttendToByStaffId, "FK6wem4llp14vhgejnrh1mmtaur");

                entity.HasIndex(e => e.ParentChatId, "FK8ej8b5dte179a6aj59owy6e8j");

                entity.HasIndex(e => e.UserId, "FKd3oo2bhroe16913kh5pwtgk3h");

                entity.HasIndex(e => e.HostingCompanyDepartmentId, "FKf6yo4uf5dbbmx6x5hyg1yea62");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AttendToByStaffId).HasColumnName("attend_to_by_staff_id");

                entity.Property(e => e.AttendToDateByStaff)
                    .HasColumnType("datetime")
                    .HasColumnName("attend_to_date_by_staff");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyDepartmentId).HasColumnName("hosting_company_department_id");

                entity.Property(e => e.Msg).HasColumnName("msg");

                entity.Property(e => e.ParentChatId).HasColumnName("parent_chat_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.AttendToByStaff)
                    .WithMany(p => p.ChatMessageAttendToByStaffs)
                    .HasForeignKey(d => d.AttendToByStaffId)
                    .HasConstraintName("FK6wem4llp14vhgejnrh1mmtaur");

                entity.HasOne(d => d.HostingCompanyDepartment)
                    .WithMany(p => p.ChatMessages)
                    .HasForeignKey(d => d.HostingCompanyDepartmentId)
                    .HasConstraintName("FKf6yo4uf5dbbmx6x5hyg1yea62");

                entity.HasOne(d => d.ParentChat)
                    .WithMany(p => p.InverseParentChat)
                    .HasForeignKey(d => d.ParentChatId)
                    .HasConstraintName("FK8ej8b5dte179a6aj59owy6e8j");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.ChatMessageUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKd3oo2bhroe16913kh5pwtgk3h");
            });

            modelBuilder.Entity<CitizenResidentStatus>(entity =>
            {
                entity.ToTable("citizen_resident_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<ClQualificationAchievement>(entity =>
            {
                entity.ToTable("cl_qualification_achievement");

                entity.HasIndex(e => e.AdministrationOfAqpLearnersId, "FK8kpj4ldy9ffegc0l1ey830qcd");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdministrationOfAqpLearnersId).HasColumnName("administration_of_aqp_learners_id");

                entity.Property(e => e.AssessmentCentreCode)
                    .HasMaxLength(20)
                    .HasColumnName("assessment_centre_code");

                entity.Property(e => e.AssessmentPartnerCode)
                    .HasMaxLength(20)
                    .HasColumnName("assessment_partner_code");

                entity.Property(e => e.CurrentDateStamp)
                    .HasMaxLength(8)
                    .HasColumnName("current_date_stamp");

                entity.Property(e => e.EmploymentStatus)
                    .HasMaxLength(3)
                    .HasColumnName("employment_status");

                entity.Property(e => e.EnrolledSdpCode)
                    .HasMaxLength(20)
                    .HasColumnName("enrolled_sdp_code");

                entity.Property(e => e.ExpectedTrainingCompletionDate)
                    .HasMaxLength(8)
                    .HasColumnName("expected_training_completion_date");

                entity.Property(e => e.Flc)
                    .HasMaxLength(3)
                    .HasColumnName("flc");

                entity.Property(e => e.FlcStatementResultNumber)
                    .HasMaxLength(15)
                    .HasColumnName("flc_statement_result_number");

                entity.Property(e => e.LearnerAlternateId)
                    .HasMaxLength(20)
                    .HasColumnName("learner_alternate_id");

                entity.Property(e => e.LearnerEnrolledDate)
                    .HasMaxLength(8)
                    .HasColumnName("learner_enrolled_date");

                entity.Property(e => e.LearnerModularAchievementDate)
                    .HasMaxLength(8)
                    .HasColumnName("learner_modular_achievement_date");

                entity.Property(e => e.LearnerModularAchievementTypeId)
                    .HasMaxLength(3)
                    .HasColumnName("learner_modular_achievement_type_id");

                entity.Property(e => e.LearnerReadinessForEisaTypeId)
                    .HasMaxLength(3)
                    .HasColumnName("learner_readiness_for_eisa_type_id");

                entity.Property(e => e.LinkedToWorkplace)
                    .HasMaxLength(2)
                    .HasColumnName("linked_to_workplace");

                entity.Property(e => e.ModuleAchievementStatus)
                    .HasMaxLength(3)
                    .HasColumnName("module_achievement_status");

                entity.Property(e => e.ModuleCode)
                    .HasMaxLength(20)
                    .HasColumnName("module_code");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(15)
                    .HasColumnName("national_id");

                entity.Property(e => e.QualificationEntryRequirement)
                    .HasMaxLength(3)
                    .HasColumnName("qualification_entry_requirement");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(20)
                    .HasColumnName("qualification_id");

                entity.Property(e => e.StatementResultsIssueDate)
                    .HasMaxLength(8)
                    .HasColumnName("statement_results_issue_date");

                entity.Property(e => e.StatementResultsStatus)
                    .HasMaxLength(3)
                    .HasColumnName("statement_results_status");

                entity.HasOne(d => d.AdministrationOfAqpLearners)
                    .WithMany(p => p.ClQualificationAchievements)
                    .HasForeignKey(d => d.AdministrationOfAqpLearnersId)
                    .HasConstraintName("FK8kpj4ldy9ffegc0l1ey830qcd");
            });

            modelBuilder.Entity<ClQualificationAchievementHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("cl_qualification_achievement_hist");

                entity.HasIndex(e => e.Rev, "FKk6pojwtiokp40xiygylj9a4ie");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AdministrationOfAqpLearnersId).HasColumnName("administration_of_aqp_learners_id");

                entity.Property(e => e.AssessmentCentreCode)
                    .HasMaxLength(20)
                    .HasColumnName("assessment_centre_code");

                entity.Property(e => e.AssessmentPartnerCode)
                    .HasMaxLength(20)
                    .HasColumnName("assessment_partner_code");

                entity.Property(e => e.CurrentDateStamp)
                    .HasMaxLength(8)
                    .HasColumnName("current_date_stamp");

                entity.Property(e => e.EmploymentStatus)
                    .HasMaxLength(3)
                    .HasColumnName("employment_status");

                entity.Property(e => e.EnrolledSdpCode)
                    .HasMaxLength(20)
                    .HasColumnName("enrolled_sdp_code");

                entity.Property(e => e.ExpectedTrainingCompletionDate)
                    .HasMaxLength(8)
                    .HasColumnName("expected_training_completion_date");

                entity.Property(e => e.Flc)
                    .HasMaxLength(3)
                    .HasColumnName("flc");

                entity.Property(e => e.FlcStatementResultNumber)
                    .HasMaxLength(15)
                    .HasColumnName("flc_statement_result_number");

                entity.Property(e => e.LearnerAlternateId)
                    .HasMaxLength(20)
                    .HasColumnName("learner_alternate_id");

                entity.Property(e => e.LearnerEnrolledDate)
                    .HasMaxLength(8)
                    .HasColumnName("learner_enrolled_date");

                entity.Property(e => e.LearnerModularAchievementDate)
                    .HasMaxLength(8)
                    .HasColumnName("learner_modular_achievement_date");

                entity.Property(e => e.LearnerModularAchievementTypeId)
                    .HasMaxLength(3)
                    .HasColumnName("learner_modular_achievement_type_id");

                entity.Property(e => e.LearnerReadinessForEisaTypeId)
                    .HasMaxLength(3)
                    .HasColumnName("learner_readiness_for_eisa_type_id");

                entity.Property(e => e.LinkedToWorkplace)
                    .HasMaxLength(2)
                    .HasColumnName("linked_to_workplace");

                entity.Property(e => e.ModuleAchievementStatus)
                    .HasMaxLength(3)
                    .HasColumnName("module_achievement_status");

                entity.Property(e => e.ModuleCode)
                    .HasMaxLength(20)
                    .HasColumnName("module_code");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(15)
                    .HasColumnName("national_id");

                entity.Property(e => e.QualificationEntryRequirement)
                    .HasMaxLength(3)
                    .HasColumnName("qualification_entry_requirement");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(20)
                    .HasColumnName("qualification_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.StatementResultsIssueDate)
                    .HasMaxLength(8)
                    .HasColumnName("statement_results_issue_date");

                entity.Property(e => e.StatementResultsStatus)
                    .HasMaxLength(3)
                    .HasColumnName("statement_results_status");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.ClQualificationAchievementHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKk6pojwtiokp40xiygylj9a4ie");
            });

            modelBuilder.Entity<CollectDetail>(entity =>
            {
                entity.ToTable("collect_detail");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CollectionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("collection_date");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(255)
                    .HasColumnName("company_name");

                entity.Property(e => e.CompetenceEnum).HasColumnName("competence_enum");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.IdNumber)
                    .HasMaxLength(255)
                    .HasColumnName("id_number");

                entity.Property(e => e.LastName)
                    .HasMaxLength(255)
                    .HasColumnName("last_name");

                entity.Property(e => e.RegisteredMailNumber)
                    .HasMaxLength(255)
                    .HasColumnName("registered_mail_number");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.WaybillNumber)
                    .HasMaxLength(255)
                    .HasColumnName("waybill_number");
            });

            modelBuilder.Entity<CommunicatingRating>(entity =>
            {
                entity.ToTable("communicating_rating");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Company>(entity =>
            {
                entity.ToTable("company");

                entity.HasIndex(e => e.PostalAddressId, "FK2iusyh0m10k828q2yvrghs26b");

                entity.HasIndex(e => e.CompanyId, "FK2lxqdb13jlcrjl00kh2sxtn5y");

                entity.HasIndex(e => e.RecognitionAgreementId, "FK4arqhomhf39y1x1irq8dlt6hl");

                entity.HasIndex(e => e.EtqaId, "FK4srfut1f4pcmdqpcd6q131vvj");

                entity.HasIndex(e => e.RegisteredAddressId, "FK4vc8sopo1qsxlkcnb8terht3");

                entity.HasIndex(e => e.OrganisationTypeId, "FK5hnpqebq0gy5yih03dqluhv91");

                entity.HasIndex(e => e.SicCodeId, "FK60779r89dlk7x7vlnuod0e57c");

                entity.HasIndex(e => e.InstitutionTypeId, "FK7mgbtlhe0sp8qapm7j0vjdwfy");

                entity.HasIndex(e => e.FormUserId, "FKbqi3mfbo2t4066wfh6p5caq1h");

                entity.HasIndex(e => e.BankingDetailsId, "FKe8oyx1ivi3j7kh0ds14254hta");

                entity.HasIndex(e => e.ChamberId, "FKg4qki0ydeefy48rxva8a1uarb");

                entity.HasIndex(e => e.ResidentialAddressId, "FKimtqm5a1oo15ntl8ub96yvkmj");

                entity.HasIndex(e => e.PreviousCompanyId, "FKktlvnl0qio8rfq9s0lw5d14u8");

                entity.HasIndex(e => e.MajorityUnionId, "FKmepck0d30ppv1cjqvgghb2vyl");

                entity.HasIndex(e => e.DeregisterUserId, "FKn1eik1rwvod71lj41px1gtbqn");

                entity.HasIndex(e => e.SetaId, "FKr2p7t3eklh75mhnf8enfjhnvk");

                entity.HasIndex(e => new { e.CompanyRegistrationNumber, e.SicCodeId }, "company_registration_number");

                entity.HasIndex(e => new { e.Id, e.NumberOfEmployees1 }, "id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_number");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.BankingDetailsId).HasColumnName("banking_details_id");

                entity.Property(e => e.Categorization).HasColumnName("categorization");

                entity.Property(e => e.ChamberId).HasColumnName("chamber_id");

                entity.Property(e => e.CompanyGuid)
                    .HasMaxLength(100)
                    .HasColumnName("company_guid");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(70)
                    .HasColumnName("company_name");

                entity.Property(e => e.CompanyRegistrationNumber)
                    .HasMaxLength(40)
                    .HasColumnName("company_registration_number");

                entity.Property(e => e.CompanySiteNumber)
                    .HasMaxLength(10)
                    .HasColumnName("company_site_number");

                entity.Property(e => e.CompanyStatus).HasColumnName("company_status");

                entity.Property(e => e.CompanyType).HasColumnName("company_type");

                entity.Property(e => e.CompanyWebsite)
                    .HasMaxLength(50)
                    .HasColumnName("company_website");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DeregisterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("deregister_date");

                entity.Property(e => e.DeregisterUserId).HasColumnName("deregister_user_id");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");

                entity.Property(e => e.EtqaId).HasColumnName("etqa_id");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.FinancialYearEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("financial_year_end_date");

                entity.Property(e => e.FinancialYearEndDay).HasColumnName("financial_year_end_day");

                entity.Property(e => e.FinancialYearEndMonth).HasColumnName("financial_year_end_month");

                entity.Property(e => e.FinancialYearStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("financial_year_start_date");

                entity.Property(e => e.FinancialYearStartDay).HasColumnName("financial_year_start_day");

                entity.Property(e => e.FinancialYearStartMonth).HasColumnName("financial_year_start_month");

                entity.Property(e => e.FormUserId).HasColumnName("form_user_id");

                entity.Property(e => e.InstitutionTypeId).HasColumnName("institution_type_id");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(40)
                    .HasColumnName("levy_number");

                entity.Property(e => e.LevyNumberAdditional)
                    .HasMaxLength(40)
                    .HasColumnName("levy_number_additional");

                entity.Property(e => e.Locked)
                    .HasColumnType("bit(1)")
                    .HasColumnName("locked");

                entity.Property(e => e.MajorityUnionId).HasColumnName("majority_union_id");

                entity.Property(e => e.NonLevyPaying)
                    .HasColumnType("bit(1)")
                    .HasColumnName("non_levy_paying");

                entity.Property(e => e.NonSetaCompany)
                    .HasColumnType("bit(1)")
                    .HasColumnName("non_seta_company")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NumberOfEmployees).HasColumnName("number_of_employees");

                entity.Property(e => e.NumberOfEmployees1).HasColumnName("numberOfEmployees");

                entity.Property(e => e.OnGp)
                    .HasColumnType("bit(1)")
                    .HasColumnName("on_gp")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.OrganisationTypeId).HasColumnName("organisation_type_id");

                entity.Property(e => e.PayeSdlNumber)
                    .HasMaxLength(40)
                    .HasColumnName("paye_sdl_number");

                entity.Property(e => e.PostalAddressId).HasColumnName("postal_address_id");

                entity.Property(e => e.PreviousCompanyId).HasColumnName("previous_company_id");

                entity.Property(e => e.RecognitionAgreementId).HasColumnName("recognition_agreement_id");

                entity.Property(e => e.RegisteredAddressId).HasColumnName("registered_address_id");

                entity.Property(e => e.RejectReason).HasColumnName("reject_reason");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.SarsTradingStatus)
                    .HasMaxLength(1)
                    .HasColumnName("sars_trading_status");

                entity.Property(e => e.SetaId).HasColumnName("seta_id");

                entity.Property(e => e.SicCodeId).HasColumnName("sic_code_id");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TradingName)
                    .HasMaxLength(70)
                    .HasColumnName("trading_name");

                entity.Property(e => e.TrainingCommitteeInPlace)
                    .HasColumnType("bit(1)")
                    .HasColumnName("training_committee_in_place");

                entity.Property(e => e.UseTradingNameSetmis)
                    .HasColumnType("bit(1)")
                    .HasColumnName("use_trading_name_setmis")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ValidiationRanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("validiation_ran_date");

                entity.Property(e => e.WorkplaceApprovalNumber)
                    .HasMaxLength(40)
                    .HasColumnName("workplace_approval_number");

                entity.HasOne(d => d.BankingDetailsNavigation)
                    .WithMany(p => p.Companies)
                    .HasForeignKey(d => d.BankingDetailsId)
                    .HasConstraintName("FKe8oyx1ivi3j7kh0ds14254hta");

                entity.HasOne(d => d.Chamber)
                    .WithMany(p => p.Companies)
                    .HasForeignKey(d => d.ChamberId)
                    .HasConstraintName("FKg4qki0ydeefy48rxva8a1uarb");

                entity.HasOne(d => d.CompanyNavigation)
                    .WithMany(p => p.InverseCompanyNavigation)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK2lxqdb13jlcrjl00kh2sxtn5y");

                entity.HasOne(d => d.DeregisterUser)
                    .WithMany(p => p.CompanyDeregisterUsers)
                    .HasForeignKey(d => d.DeregisterUserId)
                    .HasConstraintName("FKn1eik1rwvod71lj41px1gtbqn");

                entity.HasOne(d => d.Etqa)
                    .WithMany(p => p.Companies)
                    .HasForeignKey(d => d.EtqaId)
                    .HasConstraintName("FK4srfut1f4pcmdqpcd6q131vvj");

                entity.HasOne(d => d.FormUser)
                    .WithMany(p => p.CompanyFormUsers)
                    .HasForeignKey(d => d.FormUserId)
                    .HasConstraintName("FKbqi3mfbo2t4066wfh6p5caq1h");

                entity.HasOne(d => d.InstitutionType)
                    .WithMany(p => p.Companies)
                    .HasForeignKey(d => d.InstitutionTypeId)
                    .HasConstraintName("FK7mgbtlhe0sp8qapm7j0vjdwfy");

                entity.HasOne(d => d.MajorityUnion)
                    .WithMany(p => p.Companies)
                    .HasForeignKey(d => d.MajorityUnionId)
                    .HasConstraintName("FKmepck0d30ppv1cjqvgghb2vyl");

                entity.HasOne(d => d.OrganisationType)
                    .WithMany(p => p.Companies)
                    .HasForeignKey(d => d.OrganisationTypeId)
                    .HasConstraintName("FK5hnpqebq0gy5yih03dqluhv91");

                entity.HasOne(d => d.PostalAddress)
                    .WithMany(p => p.CompanyPostalAddresses)
                    .HasForeignKey(d => d.PostalAddressId)
                    .HasConstraintName("FK2iusyh0m10k828q2yvrghs26b");

                entity.HasOne(d => d.PreviousCompany)
                    .WithMany(p => p.InversePreviousCompany)
                    .HasForeignKey(d => d.PreviousCompanyId)
                    .HasConstraintName("FKktlvnl0qio8rfq9s0lw5d14u8");

                entity.HasOne(d => d.RecognitionAgreement)
                    .WithMany(p => p.Companies)
                    .HasForeignKey(d => d.RecognitionAgreementId)
                    .HasConstraintName("FK4arqhomhf39y1x1irq8dlt6hl");

                entity.HasOne(d => d.RegisteredAddress)
                    .WithMany(p => p.CompanyRegisteredAddresses)
                    .HasForeignKey(d => d.RegisteredAddressId)
                    .HasConstraintName("FK4vc8sopo1qsxlkcnb8terht3");

                entity.HasOne(d => d.ResidentialAddress)
                    .WithMany(p => p.CompanyResidentialAddresses)
                    .HasForeignKey(d => d.ResidentialAddressId)
                    .HasConstraintName("FKimtqm5a1oo15ntl8ub96yvkmj");

                entity.HasOne(d => d.Seta)
                    .WithMany(p => p.Companies)
                    .HasForeignKey(d => d.SetaId)
                    .HasConstraintName("FKr2p7t3eklh75mhnf8enfjhnvk");

                entity.HasOne(d => d.SicCode)
                    .WithMany(p => p.Companies)
                    .HasForeignKey(d => d.SicCodeId)
                    .HasConstraintName("FK60779r89dlk7x7vlnuod0e57c");
            });

            modelBuilder.Entity<CompanyCommunication>(entity =>
            {
                entity.ToTable("company_communication");

                entity.HasIndex(e => e.LastUpdateUserId, "FK5h56287n6llutuq5shmv8jc3w");

                entity.HasIndex(e => e.CompanyId, "FKmshnyyj7r37s9g1vtn41ic9kk");

                entity.HasIndex(e => e.CreateUsersId, "FKs12uuaxuelfmc9l57jgoptxfl");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUsersId).HasColumnName("create_users_id");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.Guid)
                    .HasMaxLength(100)
                    .HasColumnName("guid");

                entity.Property(e => e.LastUpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_update_date");

                entity.Property(e => e.LastUpdateUserId).HasColumnName("last_update_user_id");

                entity.Property(e => e.Title).HasColumnName("title");

                entity.Property(e => e.Visible)
                    .HasColumnType("bit(1)")
                    .HasColumnName("visible")
                    .HasDefaultValueSql("b'0'");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.CompanyCommunications)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKmshnyyj7r37s9g1vtn41ic9kk");

                entity.HasOne(d => d.CreateUsers)
                    .WithMany(p => p.CompanyCommunicationCreateUsers)
                    .HasForeignKey(d => d.CreateUsersId)
                    .HasConstraintName("FKs12uuaxuelfmc9l57jgoptxfl");

                entity.HasOne(d => d.LastUpdateUser)
                    .WithMany(p => p.CompanyCommunicationLastUpdateUsers)
                    .HasForeignKey(d => d.LastUpdateUserId)
                    .HasConstraintName("FK5h56287n6llutuq5shmv8jc3w");
            });

            modelBuilder.Entity<CompanyHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_hist");

                entity.HasIndex(e => e.Rev, "FKghlxpk7fl31l7dryw0uf4bdko");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AccreditationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_number");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.Categorization).HasColumnName("categorization");

                entity.Property(e => e.ChamberId).HasColumnName("chamber_id");

                entity.Property(e => e.CompanyGuid)
                    .HasMaxLength(100)
                    .HasColumnName("company_guid");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(70)
                    .HasColumnName("company_name");

                entity.Property(e => e.CompanyRegistrationNumber)
                    .HasMaxLength(40)
                    .HasColumnName("company_registration_number");

                entity.Property(e => e.CompanySiteNumber)
                    .HasMaxLength(10)
                    .HasColumnName("company_site_number");

                entity.Property(e => e.CompanyStatus).HasColumnName("company_status");

                entity.Property(e => e.CompanyType).HasColumnName("company_type");

                entity.Property(e => e.CompanyWebsite)
                    .HasMaxLength(50)
                    .HasColumnName("company_website");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DeregisterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("deregister_date");

                entity.Property(e => e.DeregisterUserId).HasColumnName("deregister_user_id");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .HasColumnName("email");

                entity.Property(e => e.EtqaId).HasColumnName("etqa_id");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.FinancialYearEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("financial_year_end_date");

                entity.Property(e => e.FinancialYearEndDay).HasColumnName("financial_year_end_day");

                entity.Property(e => e.FinancialYearEndMonth).HasColumnName("financial_year_end_month");

                entity.Property(e => e.FinancialYearStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("financial_year_start_date");

                entity.Property(e => e.FinancialYearStartDay).HasColumnName("financial_year_start_day");

                entity.Property(e => e.FinancialYearStartMonth).HasColumnName("financial_year_start_month");

                entity.Property(e => e.FormUserId).HasColumnName("form_user_id");

                entity.Property(e => e.InstitutionTypeId).HasColumnName("institution_type_id");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(10)
                    .HasColumnName("levy_number");

                entity.Property(e => e.LevyNumberAdditional)
                    .HasMaxLength(10)
                    .HasColumnName("levy_number_additional");

                entity.Property(e => e.Locked)
                    .HasColumnType("bit(1)")
                    .HasColumnName("locked");

                entity.Property(e => e.MajorityUnionId).HasColumnName("majority_union_id");

                entity.Property(e => e.NonLevyPaying)
                    .HasColumnType("bit(1)")
                    .HasColumnName("non_levy_paying");

                entity.Property(e => e.NonSetaCompany)
                    .HasColumnType("bit(1)")
                    .HasColumnName("non_seta_company")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NumberOfEmployees).HasColumnName("numberOfEmployees");

                entity.Property(e => e.OnGp)
                    .HasColumnType("bit(1)")
                    .HasColumnName("on_gp")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.OrganisationTypeId).HasColumnName("organisation_type_id");

                entity.Property(e => e.PayeSdlNumber)
                    .HasMaxLength(10)
                    .HasColumnName("paye_sdl_number");

                entity.Property(e => e.PostalAddressId).HasColumnName("postal_address_id");

                entity.Property(e => e.PreviousCompanyId).HasColumnName("previous_company_id");

                entity.Property(e => e.RecognitionAgreementId).HasColumnName("recognition_agreement_id");

                entity.Property(e => e.RegisteredAddressId).HasColumnName("registered_address_id");

                entity.Property(e => e.RejectReason).HasColumnName("reject_reason");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SarsTradingStatus)
                    .HasMaxLength(1)
                    .HasColumnName("sars_trading_status");

                entity.Property(e => e.SetaId).HasColumnName("seta_id");

                entity.Property(e => e.SicCodeId).HasColumnName("sic_code_id");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TradingName)
                    .HasMaxLength(70)
                    .HasColumnName("trading_name");

                entity.Property(e => e.TrainingCommitteeInPlace)
                    .HasColumnType("bit(1)")
                    .HasColumnName("training_committee_in_place");

                entity.Property(e => e.UseTradingNameSetmis)
                    .HasColumnType("bit(1)")
                    .HasColumnName("use_trading_name_setmis")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.UserCellNumber)
                    .HasMaxLength(20)
                    .HasColumnName("user_cell_number");

                entity.Property(e => e.UserEmail)
                    .HasMaxLength(50)
                    .HasColumnName("user_email");

                entity.Property(e => e.UserFirstName)
                    .HasMaxLength(100)
                    .HasColumnName("user_first_name");

                entity.Property(e => e.UserLastName)
                    .HasMaxLength(100)
                    .HasColumnName("user_last_name");

                entity.Property(e => e.UserMiddleName)
                    .HasMaxLength(100)
                    .HasColumnName("user_middle_name");

                entity.Property(e => e.UserTelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("user_tel_number");

                entity.Property(e => e.ValidiationRanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("validiation_ran_date");

                entity.Property(e => e.WorkplaceApprovalNumber)
                    .HasMaxLength(40)
                    .HasColumnName("workplace_approval_number");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKghlxpk7fl31l7dryw0uf4bdko");
            });

            modelBuilder.Entity<CompanyHistory>(entity =>
            {
                entity.ToTable("company_history");

                entity.HasIndex(e => e.ChamberId, "FK27b6tnw73keri9lwdprb6v26");

                entity.HasIndex(e => e.ForCompanyId, "FK2ayq5r1q8unqb94nf4a6ra3jt");

                entity.HasIndex(e => e.MajorityUnionId, "FK2wfb4td1w4u1qig7t875wk0q6");

                entity.HasIndex(e => e.CompanyId, "FK3mq5hx3r7pp7gwogf0yldmyno");

                entity.HasIndex(e => e.InstitutionTypeId, "FKa1t88586oiynwek33xavkj2wq");

                entity.HasIndex(e => e.RegisteredAddressId, "FKawtrj4gpxj9iv13qki1w14c7v");

                entity.HasIndex(e => e.FormUserId, "FKd3wt7neopokn9jjy8y6f2un1t");

                entity.HasIndex(e => e.RecognitionAgreementId, "FKd8gsv5565ybg2lngh2cvi2whv");

                entity.HasIndex(e => e.SicCodeId, "FKhnt697wwm3lm2cua9nv4ta9k");

                entity.HasIndex(e => e.ResidentialAddressId, "FKmxvqt1hutnxtnm34oeneso661");

                entity.HasIndex(e => e.PostalAddressId, "FKmykd2c7g2yvuxflv9r4ib5sm5");

                entity.HasIndex(e => e.OrganisationTypeId, "FKo6s3j9yubt278rich95rjiubf");

                entity.HasIndex(e => e.SetaId, "FKtlk97trw8q2ompvv74vvco0qd");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_number");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.Categorization).HasColumnName("categorization");

                entity.Property(e => e.ChamberId).HasColumnName("chamber_id");

                entity.Property(e => e.CompanyGuid)
                    .HasMaxLength(100)
                    .HasColumnName("company_guid");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(70)
                    .HasColumnName("company_name");

                entity.Property(e => e.CompanyRegistrationNumber)
                    .HasMaxLength(20)
                    .HasColumnName("company_registration_number");

                entity.Property(e => e.CompanyStatus).HasColumnName("company_status");

                entity.Property(e => e.CompanyType).HasColumnName("company_type");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .HasColumnName("email");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.FinancialYearEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("financial_year_end_date");

                entity.Property(e => e.FinancialYearEndDay).HasColumnName("financial_year_end_day");

                entity.Property(e => e.FinancialYearEndMonth).HasColumnName("financial_year_end_month");

                entity.Property(e => e.FinancialYearStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("financial_year_start_date");

                entity.Property(e => e.FinancialYearStartDay).HasColumnName("financial_year_start_day");

                entity.Property(e => e.FinancialYearStartMonth).HasColumnName("financial_year_start_month");

                entity.Property(e => e.ForCompanyId).HasColumnName("for_company_id");

                entity.Property(e => e.FormUserId).HasColumnName("form_user_id");

                entity.Property(e => e.InstitutionTypeId).HasColumnName("institution_type_id");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(10)
                    .HasColumnName("levy_number");

                entity.Property(e => e.LevyNumberAdditional)
                    .HasMaxLength(10)
                    .HasColumnName("levy_number_additional");

                entity.Property(e => e.Locked)
                    .HasColumnType("bit(1)")
                    .HasColumnName("locked");

                entity.Property(e => e.MajorityUnionId).HasColumnName("majority_union_id");

                entity.Property(e => e.NonLevyPaying)
                    .HasColumnType("bit(1)")
                    .HasColumnName("non_levy_paying");

                entity.Property(e => e.NumberOfEmployees).HasColumnName("numberOfEmployees");

                entity.Property(e => e.OnGp)
                    .HasColumnType("bit(1)")
                    .HasColumnName("on_gp")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.OrganisationTypeId).HasColumnName("organisation_type_id");

                entity.Property(e => e.PayeSdlNumber)
                    .HasMaxLength(10)
                    .HasColumnName("paye_sdl_number");

                entity.Property(e => e.PostalAddressId).HasColumnName("postal_address_id");

                entity.Property(e => e.RecognitionAgreementId).HasColumnName("recognition_agreement_id");

                entity.Property(e => e.RegisteredAddressId).HasColumnName("registered_address_id");

                entity.Property(e => e.RejectReason).HasColumnName("reject_reason");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.SarsTradingStatus)
                    .HasMaxLength(1)
                    .HasColumnName("sars_trading_status");

                entity.Property(e => e.SetaId).HasColumnName("seta_id");

                entity.Property(e => e.SicCodeId).HasColumnName("sic_code_id");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TradingName)
                    .HasMaxLength(70)
                    .HasColumnName("trading_name");

                entity.Property(e => e.TrainingCommitteeInPlace)
                    .HasColumnType("bit(1)")
                    .HasColumnName("training_committee_in_place");

                entity.HasOne(d => d.Chamber)
                    .WithMany(p => p.CompanyHistories)
                    .HasForeignKey(d => d.ChamberId)
                    .HasConstraintName("FK27b6tnw73keri9lwdprb6v26");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.CompanyHistoryCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK3mq5hx3r7pp7gwogf0yldmyno");

                entity.HasOne(d => d.ForCompany)
                    .WithMany(p => p.CompanyHistoryForCompanies)
                    .HasForeignKey(d => d.ForCompanyId)
                    .HasConstraintName("FK2ayq5r1q8unqb94nf4a6ra3jt");

                entity.HasOne(d => d.FormUser)
                    .WithMany(p => p.CompanyHistories)
                    .HasForeignKey(d => d.FormUserId)
                    .HasConstraintName("FKd3wt7neopokn9jjy8y6f2un1t");

                entity.HasOne(d => d.InstitutionType)
                    .WithMany(p => p.CompanyHistories)
                    .HasForeignKey(d => d.InstitutionTypeId)
                    .HasConstraintName("FKa1t88586oiynwek33xavkj2wq");

                entity.HasOne(d => d.MajorityUnion)
                    .WithMany(p => p.CompanyHistories)
                    .HasForeignKey(d => d.MajorityUnionId)
                    .HasConstraintName("FK2wfb4td1w4u1qig7t875wk0q6");

                entity.HasOne(d => d.OrganisationType)
                    .WithMany(p => p.CompanyHistories)
                    .HasForeignKey(d => d.OrganisationTypeId)
                    .HasConstraintName("FKo6s3j9yubt278rich95rjiubf");

                entity.HasOne(d => d.PostalAddress)
                    .WithMany(p => p.CompanyHistoryPostalAddresses)
                    .HasForeignKey(d => d.PostalAddressId)
                    .HasConstraintName("FKmykd2c7g2yvuxflv9r4ib5sm5");

                entity.HasOne(d => d.RecognitionAgreement)
                    .WithMany(p => p.CompanyHistories)
                    .HasForeignKey(d => d.RecognitionAgreementId)
                    .HasConstraintName("FKd8gsv5565ybg2lngh2cvi2whv");

                entity.HasOne(d => d.RegisteredAddress)
                    .WithMany(p => p.CompanyHistoryRegisteredAddresses)
                    .HasForeignKey(d => d.RegisteredAddressId)
                    .HasConstraintName("FKawtrj4gpxj9iv13qki1w14c7v");

                entity.HasOne(d => d.ResidentialAddress)
                    .WithMany(p => p.CompanyHistoryResidentialAddresses)
                    .HasForeignKey(d => d.ResidentialAddressId)
                    .HasConstraintName("FKmxvqt1hutnxtnm34oeneso661");

                entity.HasOne(d => d.Seta)
                    .WithMany(p => p.CompanyHistories)
                    .HasForeignKey(d => d.SetaId)
                    .HasConstraintName("FKtlk97trw8q2ompvv74vvco0qd");

                entity.HasOne(d => d.SicCode)
                    .WithMany(p => p.CompanyHistories)
                    .HasForeignKey(d => d.SicCodeId)
                    .HasConstraintName("FKhnt697wwm3lm2cua9nv4ta9k");
            });

            modelBuilder.Entity<CompanyHistoryAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_history_AUD");

                entity.HasIndex(e => e.Rev, "FK1k0pjxr5g05o0wf1cyjbg0v0");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SetaId).HasColumnName("seta_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyHistoryAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK1k0pjxr5g05o0wf1cyjbg0v0");
            });

            modelBuilder.Entity<CompanyHostingCompany>(entity =>
            {
                entity.ToTable("company_hosting_company");

                entity.HasIndex(e => e.HostingCompanyId, "FK2lr230lf7fm6fjq7eogivceeu");

                entity.HasIndex(e => e.CompanyId, "FKkml1jsb1bea7akiq264fsbc4j");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.CompanyHostingCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKkml1jsb1bea7akiq264fsbc4j");

                entity.HasOne(d => d.HostingCompany)
                    .WithMany(p => p.CompanyHostingCompanies)
                    .HasForeignKey(d => d.HostingCompanyId)
                    .HasConstraintName("FK2lr230lf7fm6fjq7eogivceeu");
            });

            modelBuilder.Entity<CompanyLearner>(entity =>
            {
                entity.ToTable("company_learners");

                entity.HasIndex(e => e.QualificationId, "FK1g589kxclgmmb2nh38l63816h");

                entity.HasIndex(e => e.HostCompanyId, "FK1xs2cu7x5mplh7d6ad5kgmepj");

                entity.HasIndex(e => e.SmeQualificationId, "FK2aamwude8rp2pfbkqh94ly34m");

                entity.HasIndex(e => e.CreateUserId, "FK347cx55el60qyiq5x82i9vswg");

                entity.HasIndex(e => e.TvetFetQualificationId, "FK37tyv9ip49qc9lc8arl4cg6mj");

                entity.HasIndex(e => e.MandatoryGrantGetailId, "FK3knffevdcyp62p0a79xi8864");

                entity.HasIndex(e => e.NqfAlignedId, "FK4beagqlx2ml4lct7rg8pha9w5");

                entity.HasIndex(e => e.HighestQualificationId, "FK4ekca24odxqfttn19ohjgsvoe");

                entity.HasIndex(e => e.DundingId, "FK5751v8cww9lmdmklxki9tem1n");

                entity.HasIndex(e => e.LeaningProgrammeId, "FK6hyy9ee56ao6fiaeljo5txu6n");

                entity.HasIndex(e => e.ProjectImplementationPlanId, "FK7h0nhq7bfhyoixbpa69hq3rpx");

                entity.HasIndex(e => e.TrainingSiteId, "FK7jqwg2iqafgifrbk3ne7739oj");

                entity.HasIndex(e => e.EmployerId, "FK84pplv3nrxslvlv00b799tdqi");

                entity.HasIndex(e => e.ScheduledEventId, "FK8tc2xnpy5clt5h52el9jbehgn");

                entity.HasIndex(e => e.ProjecttypeId, "FK91y80d7gmr3nhh9kjpxlk0k0o");

                entity.HasIndex(e => e.CompanyLearnersBursaryLinkId, "FKb98mqov2mivoq84cvaauyv3fr");

                entity.HasIndex(e => e.OrganisedLabourUnionMembershipId, "FKbhw0xl3k8n6v94b2ke2ht6axb");

                entity.HasIndex(e => e.NqfLevelsId, "FKbq3hy43x5sqo0m1asv1be9y33");

                entity.HasIndex(e => e.DesignatedTradeLevelId, "FKc0vy5oastw95w30bi241ki5nn");

                entity.HasIndex(e => e.SiteId, "FKc6x7kkoof2m4leescu6w89f8g");

                entity.HasIndex(e => e.OfoCodesId, "FKcwyc61ypyvcj9cgu1xpcws6pv");

                entity.HasIndex(e => e.ModeratorApplicationId, "FKe5wsh30uo7qf4f3xsqinewcah");

                entity.HasIndex(e => e.UnitStandardId, "FKe6lsu77wg7u984b2556nb51ms");

                entity.HasIndex(e => e.SitesSmeId, "FKeqem197rjk4tonocvnie9rx3u");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKfdxrkam49pnrmsfmauobvk1k7");

                entity.HasIndex(e => e.DesignatedTradeId, "FKgeiaagn38mo8vkw3y8ce10qa4");

                entity.HasIndex(e => e.DgtagId, "FKggiamn87nc57g6r4wvr3po1iw");

                entity.HasIndex(e => e.NonCreditBearingIntervationTitleId, "FKim914m9vqhcvexo3u4cerjxwq");

                entity.HasIndex(e => e.NonSetaCompanyId, "FKit6kxf5ql4d9kyc7iln63o2ac");

                entity.HasIndex(e => e.AssessorApplicationId, "FKj3ldcybs5s1tedyt2p1mu07rg");

                entity.HasIndex(e => e.StatsSaareaCodeId, "FKj9d34vbmabvkv1tr6du00lm14");

                entity.HasIndex(e => e.EmploymentTypeId, "FKjpqwfn131knfr4u6q60y5gw15");

                entity.HasIndex(e => e.SkillsSetId, "FKjyj3h0pbcdycn375v2r0nl2t3");

                entity.HasIndex(e => e.AppointmentId, "FKm4svv3i4np79sibmmlwson0xu");

                entity.HasIndex(e => e.ReviewCommitteeMeetingId, "FKmpulsqy9jkoxpylypxrwg8gwn");

                entity.HasIndex(e => e.UnionMembershipId, "FKmrykccerct7iub7ejuqh8e6p8");

                entity.HasIndex(e => e.TestCentreTrainingProviderApplicationId, "FKn107wyscaq0gn0kex2184mm7x");

                entity.HasIndex(e => e.CompanyId, "FKn1l82rfvmvbkhba2l57nqm2ip");

                entity.HasIndex(e => e.InstitutionId, "FKne0am5ioebvu4otydh53ol8ke");

                entity.HasIndex(e => e.InterventionLevelId, "FKp663k5v774j78o3mkdu9fav7x");

                entity.HasIndex(e => e.PreviousSchools, "FKpbvtvvpqn6uvv2rawalt28j4l");

                entity.HasIndex(e => e.CompanyLearnersParentId, "FKpp8dr9yblq8n4wi34liyrsk8d");

                entity.HasIndex(e => e.DesignatedTradeTypeId, "FKq9x9i1arfbfw174w6fpdehqqx");

                entity.HasIndex(e => e.LearnershipId, "FKrbjflhredelc1c52ehpv5kv9j");

                entity.HasIndex(e => e.SkillsProgramId, "FKtl6chvwmef8h90g3hga8a9850");

                entity.HasIndex(e => e.InterventionTypeId, "companylearners_intervention_type_id");

                entity.HasIndex(e => e.UserId, "companylearners_user");

                entity.HasIndex(e => new { e.UserId, e.CompanyId, e.EmployerId }, "companylearners_user_company_employer");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AppointmentId).HasColumnName("appointment_id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.AssessorApplicationId).HasColumnName("assessor_application_id");

                entity.Property(e => e.CertificateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("certificate_date");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(30)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.CommencementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("commencement_date");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyLearnersBursaryLinkId).HasColumnName("company_learners_bursary_link_id");

                entity.Property(e => e.CompanyLearnersParentId).HasColumnName("company_learners_parent_id");

                entity.Property(e => e.CompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("completion_date");

                entity.Property(e => e.ConditionalPlacementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("conditional_placement_date");

                entity.Property(e => e.ContinuationFlag).HasColumnName("continuation_flag");

                entity.Property(e => e.ContractOfEmploymentCopy).HasColumnName("contract_of_employment_copy");

                entity.Property(e => e.ContractOfEmploymentSpecified).HasColumnName("contract_of_employment_specified");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

              
                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CreatedByEnum).HasColumnName("created_by_enum");

                entity.Property(e => e.Credits)
                    .HasMaxLength(30)
                    .HasColumnName("credits");

                entity.Property(e => e.CurrentJobTitle)
                    .HasMaxLength(255)
                    .HasColumnName("current_job_title");

                entity.Property(e => e.CurrentStatus)
                    .HasMaxLength(100)
                    .HasColumnName("current_status");

                entity.Property(e => e.DateLearnerCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_completed");

                entity.Property(e => e.SocioeconomicStatusCodeId).HasColumnName("socioeconomic_status_code_id");

                entity.Property(e => e.DateLearnerRegistered)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_registered");

                entity.Property(e => e.DateLearnerTerminated)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_terminated");

                entity.Property(e => e.DateQualificationObtained)
                    .HasColumnType("datetime")
                    .HasColumnName("date_qualification_obtained");

                entity.Property(e => e.DesignatedTradeId).HasColumnName("designated_trade_id");

                entity.Property(e => e.DesignatedTradeLevelId).HasColumnName("designated_trade_level_id");

                entity.Property(e => e.DesignatedTradeTypeId).HasColumnName("designated_trade_type_id");

               /* entity.Property(e => e.DgTag)
                    .HasMaxLength(30)
                    .HasColumnName("dg_tag"); */

                entity.Property(e => e.Dgtag1)
                    .HasMaxLength(50)
                    .HasColumnName("dgtag");

               entity.Property(e => e.DgtagId).HasColumnName("dgtag_id");

                entity.Property(e => e.DocumentBoxId)
                    .HasMaxLength(255)
                    .HasColumnName("document_box_id");

                entity.Property(e => e.DocumentChangeStatus).HasColumnName("document_change_status");

                entity.Property(e => e.DundingId).HasColumnName("dunding_id");

                entity.Property(e => e.ELearner)
                    .HasColumnType("bit(1)")
                    .HasColumnName("e_learner")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.EmployedByEmployerBefore).HasColumnName("employed_by_employer_before");

                entity.Property(e => e.EmployerId).HasColumnName("employer_id");

                entity.Property(e => e.EmploymentContractEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employment_contract_end_date");

                entity.Property(e => e.EmploymentContractStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employment_contract_start_date");

                entity.Property(e => e.EmploymentEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employment_end_date");

                entity.Property(e => e.EmploymentStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employment_start_date");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EmploymentTypeId).HasColumnName("employment_type_id");

                entity.Property(e => e.Etqid)
                    .HasMaxLength(10)
                    .HasColumnName("etqid");

                entity.Property(e => e.FileApproval).HasColumnName("file_approval");

                entity.Property(e => e.FileApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("file_approval_date");

                entity.Property(e => e.Funding)
                    .HasMaxLength(30)
                    .HasColumnName("funding");

                entity.Property(e => e.HighestEducationEnum).HasColumnName("highest_education_enum");

                entity.Property(e => e.HighestQualificationId).HasColumnName("highest_qualification_id");

                entity.Property(e => e.HostCompanyAvailable)
                    .HasColumnType("bit(1)")
                    .HasColumnName("host_company_available");

                entity.Property(e => e.HostCompanyId).HasColumnName("host_company_id");

                entity.Property(e => e.HostCompanyYesNoEnum).HasColumnName("host_company_yes_no_enum");

                entity.Property(e => e.Howlong).HasColumnName("howlong");

                entity.Property(e => e.InstitutionId).HasColumnName("institution_id");

                entity.Property(e => e.InterventionLevelId).HasColumnName("intervention_level_id");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.LastPassedTestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_passed_test_date");

                entity.Property(e => e.LastSchoolYear)
                    .HasColumnType("datetime")
                    .HasColumnName("last_school_year");

                entity.Property(e => e.LastUpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_update_date");

                entity.Property(e => e.LastUpdateUser).HasColumnName("last_update_user");

                entity.Property(e => e.LeaningProgrammeId).HasColumnName("leaning_programme_id");

                entity.Property(e => e.LearnerStatus).HasColumnName("learner_status");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(50)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.LegacyId).HasColumnName("legacy_id");

                entity.Property(e => e.LegacyRegistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("legacy_registration_date");

                entity.Property(e => e.LegacyTargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("legacy_target_class");

                entity.Property(e => e.MandatoryGrantGetailId).HasColumnName("mandatory_grant_getail_id");

                entity.Property(e => e.MersetaCompany)
                    .HasColumnType("bit(1)")
                    .HasColumnName("merseta_company");

                entity.Property(e => e.MersetaFunded).HasColumnName("merseta_funded");

                entity.Property(e => e.MersetaRegistration)
                    .HasColumnType("bit(1)")
                    .HasColumnName("merseta_registration");

                entity.Property(e => e.MetroFileBarcode)
                    .HasMaxLength(100)
                    .HasColumnName("metro_file_barcode");

                entity.Property(e => e.ModeratorApplicationId).HasColumnName("moderator_application_id");

                entity.Property(e => e.NewBursary)
                    .HasColumnType("bit(1)")
                    .HasColumnName("new_bursary");

                entity.Property(e => e.NoExplain)
                    .HasMaxLength(50)
                    .HasColumnName("no_explain");

                entity.Property(e => e.NonCredidBearingDescription)
                    .HasMaxLength(150)
                    .HasColumnName("non_credid_bearing_description");

                entity.Property(e => e.NonCreditBearingIntervationTitleId).HasColumnName("non_credit_bearing_intervation_title_id");

                entity.Property(e => e.NonSetaCompanyId).HasColumnName("non_seta_company_id");

                entity.Property(e => e.NqfAlignedId).HasColumnName("nqf_aligned_id");

                entity.Property(e => e.NqfLevelsId).HasColumnName("nqf_levels_id");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OrganisedLabourUnionMembershipId).HasColumnName("organised_labour_union_membership_id");

                entity.Property(e => e.PartOfUnion).HasColumnName("part_of_union");

                entity.Property(e => e.PivotNonPivot).HasColumnName("pivot_non_pivot");

                entity.Property(e => e.PreviousSchools).HasColumnName("previous_schools");

                entity.Property(e => e.ProjectImplementationPlanId).HasColumnName("project_implementation_plan_id");

                entity.Property(e => e.ProjecttypeId).HasColumnName("projecttype_id");

                entity.Property(e => e.ProviderAccredited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("provider_accredited");

                entity.Property(e => e.ProviderWorkplaceApproved)
                    .HasColumnType("bit(1)")
                    .HasColumnName("provider_workplace_approved");

                entity.Property(e => e.QualificationCode)
                    .HasMaxLength(20)
                    .HasColumnName("qualification_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.QualificationTitle)
                    .HasMaxLength(50)
                    .HasColumnName("qualification_title");

                entity.Property(e => e.RegisteredDate)
                    .HasColumnType("datetime")
                    .HasColumnName("registered_date");

                entity.Property(e => e.RegistrationNumber)
                    .HasMaxLength(30)
                    .HasColumnName("registration_number");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.ReviewStatus).HasColumnName("review_status");

                entity.Property(e => e.ScheduledEventId).HasColumnName("scheduled_event_id");

                entity.Property(e => e.SchemeYear).HasColumnName("scheme_year");

                entity.Property(e => e.SignedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("signed_date");

                entity.Property(e => e.Signoff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("signoff");

                entity.Property(e => e.SignoffByEnum).HasColumnName("signoff_by_enum");

                entity.Property(e => e.SiteId).HasColumnName("site_id");

                entity.Property(e => e.SitesSmeId).HasColumnName("sites_sme_id");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.SmeQualificationId).HasColumnName("sme_qualification_id");

                entity.Property(e => e.StatsSaareaCodeId).HasColumnName("stats_saarea_code_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Submission).HasColumnName("submission");

                entity.Property(e => e.SystemTermination)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_termination");

                entity.Property(e => e.TestCentreTrainingProviderApplicationId).HasColumnName("test_centre_training_provider_application_id");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.TrainingSiteId).HasColumnName("training_site_id");

                entity.Property(e => e.TvetFetQualificationId).HasColumnName("tvet_fet_qualification_id");

                entity.Property(e => e.TvetLecturer).HasColumnName("tvet_lecturer");

                entity.Property(e => e.UndertakenLearningProgramBefore).HasColumnName("undertaken_learning_program_before");

                entity.Property(e => e.UnionMembershipId).HasColumnName("union_membership_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WorkplaceBasedBefore).HasColumnName("workplace_based_before");

                entity.Property(e => e.YesSpecify)
                    .HasMaxLength(255)
                    .HasColumnName("yes_specify");

                entity.HasOne(d => d.Appointment)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.AppointmentId)
                    .HasConstraintName("FKm4svv3i4np79sibmmlwson0xu");

                entity.HasOne(d => d.AssessorApplication)
                    .WithMany(p => p.CompanyLearnerAssessorApplications)
                    .HasForeignKey(d => d.AssessorApplicationId)
                    .HasConstraintName("FKj3ldcybs5s1tedyt2p1mu07rg");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.CompanyLearnerCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKn1l82rfvmvbkhba2l57nqm2ip");

                entity.HasOne(d => d.CompanyLearnersBursaryLink)
                    .WithMany(p => p.InverseCompanyLearnersBursaryLink)
                    .HasForeignKey(d => d.CompanyLearnersBursaryLinkId)
                    .HasConstraintName("FKb98mqov2mivoq84cvaauyv3fr");

                entity.HasOne(d => d.CompanyLearnersParent)
                    .WithMany(p => p.InverseCompanyLearnersParent)
                    .HasForeignKey(d => d.CompanyLearnersParentId)
                    .HasConstraintName("FKpp8dr9yblq8n4wi34liyrsk8d");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.CompanyLearnerCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FK347cx55el60qyiq5x82i9vswg");

                entity.HasOne(d => d.DesignatedTrade)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.DesignatedTradeId)
                    .HasConstraintName("FKgeiaagn38mo8vkw3y8ce10qa4");

                entity.HasOne(d => d.DesignatedTradeLevel)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.DesignatedTradeLevelId)
                    .HasConstraintName("FKc0vy5oastw95w30bi241ki5nn");

                entity.HasOne(d => d.DesignatedTradeType)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.DesignatedTradeTypeId)
                    .HasConstraintName("FKq9x9i1arfbfw174w6fpdehqqx");

              /*  entity.HasOne(d => d.Dgtag)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.DgtagId)
                    .HasConstraintName("FKggiamn87nc57g6r4wvr3po1iw"); */

                entity.HasOne(d => d.Dunding)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.DundingId)
                    .HasConstraintName("FK5751v8cww9lmdmklxki9tem1n");

                entity.HasOne(d => d.Employer)
                    .WithMany(p => p.CompanyLearnerEmployers)
                    .HasForeignKey(d => d.EmployerId)
                    .HasConstraintName("FK84pplv3nrxslvlv00b799tdqi");

                entity.HasOne(d => d.EmploymentType)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.EmploymentTypeId)
                    .HasConstraintName("FKjpqwfn131knfr4u6q60y5gw15");

                entity.HasOne(d => d.HighestQualification)
                    .WithMany(p => p.CompanyLearnerHighestQualifications)
                    .HasForeignKey(d => d.HighestQualificationId)
                    .HasConstraintName("FK4ekca24odxqfttn19ohjgsvoe");

                entity.HasOne(d => d.HostCompany)
                    .WithMany(p => p.CompanyLearnerHostCompanies)
                    .HasForeignKey(d => d.HostCompanyId)
                    .HasConstraintName("FK1xs2cu7x5mplh7d6ad5kgmepj");

                entity.HasOne(d => d.Institution)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.InstitutionId)
                    .HasConstraintName("FKne0am5ioebvu4otydh53ol8ke");

                entity.HasOne(d => d.InterventionLevel)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.InterventionLevelId)
                    .HasConstraintName("FKp663k5v774j78o3mkdu9fav7x");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FKn8yn2r2mwpvg729wsfepnpa81");

                entity.HasOne(d => d.LeaningProgramme)
                    .WithMany(p => p.CompanyLearnerLeaningProgrammes)
                    .HasForeignKey(d => d.LeaningProgrammeId)
                    .HasConstraintName("FK6hyy9ee56ao6fiaeljo5txu6n");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FKrbjflhredelc1c52ehpv5kv9j");

                entity.HasOne(d => d.MandatoryGrantGetail)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.MandatoryGrantGetailId)
                    .HasConstraintName("FK3knffevdcyp62p0a79xi8864");

                entity.HasOne(d => d.ModeratorApplication)
                    .WithMany(p => p.CompanyLearnerModeratorApplications)
                    .HasForeignKey(d => d.ModeratorApplicationId)
                    .HasConstraintName("FKe5wsh30uo7qf4f3xsqinewcah");

                entity.HasOne(d => d.NonCreditBearingIntervationTitle)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.NonCreditBearingIntervationTitleId)
                    .HasConstraintName("FKim914m9vqhcvexo3u4cerjxwq");

                entity.HasOne(d => d.NonSetaCompany)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.NonSetaCompanyId)
                    .HasConstraintName("FKit6kxf5ql4d9kyc7iln63o2ac");

                entity.HasOne(d => d.NqfAligned)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.NqfAlignedId)
                    .HasConstraintName("FK4beagqlx2ml4lct7rg8pha9w5");

                entity.HasOne(d => d.NqfLevels)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.NqfLevelsId)
                    .HasConstraintName("FKbq3hy43x5sqo0m1asv1be9y33");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKcwyc61ypyvcj9cgu1xpcws6pv");

                entity.HasOne(d => d.OrganisedLabourUnionMembership)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.OrganisedLabourUnionMembershipId)
                    .HasConstraintName("FKbhw0xl3k8n6v94b2ke2ht6axb");

                entity.HasOne(d => d.PreviousSchoolsNavigation)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.PreviousSchools)
                    .HasConstraintName("FKpbvtvvpqn6uvv2rawalt28j4l");

                entity.HasOne(d => d.ProjectImplementationPlan)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.ProjectImplementationPlanId)
                    .HasConstraintName("FK7h0nhq7bfhyoixbpa69hq3rpx");

                entity.HasOne(d => d.Projecttype)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.ProjecttypeId)
                    .HasConstraintName("FK91y80d7gmr3nhh9kjpxlk0k0o");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.CompanyLearnerQualifications)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK1g589kxclgmmb2nh38l63816h");

                entity.HasOne(d => d.ReviewCommitteeMeeting)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingId)
                    .HasConstraintName("FKmpulsqy9jkoxpylypxrwg8gwn");

                entity.HasOne(d => d.ScheduledEvent)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.ScheduledEventId)
                    .HasConstraintName("FK8tc2xnpy5clt5h52el9jbehgn");

               /* entity.HasOne(d => d.Site)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.SiteId)
                    .HasConstraintName("FKc6x7kkoof2m4leescu6w89f8g");*/

                entity.HasOne(d => d.SitesSme)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.SitesSmeId)
                    .HasConstraintName("FKeqem197rjk4tonocvnie9rx3u");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKtl6chvwmef8h90g3hga8a9850");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FKjyj3h0pbcdycn375v2r0nl2t3");

                entity.HasOne(d => d.SmeQualification)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.SmeQualificationId)
                    .HasConstraintName("FK2aamwude8rp2pfbkqh94ly34m");

                entity.HasOne(d => d.StatsSaareaCode)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.StatsSaareaCodeId)
                    .HasConstraintName("FKj9d34vbmabvkv1tr6du00lm14");

                entity.HasOne(d => d.TestCentreTrainingProviderApplication)
                    .WithMany(p => p.CompanyLearnerTestCentreTrainingProviderApplications)
                    .HasForeignKey(d => d.TestCentreTrainingProviderApplicationId)
                    .HasConstraintName("FKn107wyscaq0gn0kex2184mm7x");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.CompanyLearnerTrainingProviderApplications)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKfdxrkam49pnrmsfmauobvk1k7");

                entity.HasOne(d => d.TrainingSite)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.TrainingSiteId)
                    .HasConstraintName("FK7jqwg2iqafgifrbk3ne7739oj");

                entity.HasOne(d => d.TvetFetQualification)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.TvetFetQualificationId)
                    .HasConstraintName("FK37tyv9ip49qc9lc8arl4cg6mj");

                entity.HasOne(d => d.UnionMembership)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.UnionMembershipId)
                    .HasConstraintName("FKmrykccerct7iub7ejuqh8e6p8");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.CompanyLearners)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKe6lsu77wg7u984b2556nb51ms");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.CompanyLearnerUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKabxwourv2nwkddlr19s1ug2vf");
            });

            modelBuilder.Entity<CompanyLearnerUser>(entity =>
            {
                entity.ToTable("company_learner_users");

                entity.HasIndex(e => e.UserId, "FK2e6qio9x3mrpkfbcynhbo6t0c");

                entity.HasIndex(e => e.LegalGaurdianId, "FKhgcvo2ymrcoyux5gfmlpf9crt");

                entity.HasIndex(e => e.CreateUserId, "FKj0vsrmmuyp0aplo1ua1x67k0o");

                entity.HasIndex(e => e.CompanyId, "FKleos6rqbqy0e3s3pupn6p89u1");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKmjltsjiwg2ysyve7hbhjyxvel");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CreatedByEnum).HasColumnName("created_by_enum");

                entity.Property(e => e.LegalGaurdianId).HasColumnName("legal_gaurdian_id");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.CompanyLearnerUsers)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKleos6rqbqy0e3s3pupn6p89u1");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.CompanyLearnerUserCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKj0vsrmmuyp0aplo1ua1x67k0o");

                entity.HasOne(d => d.LegalGaurdian)
                    .WithMany(p => p.CompanyLearnerUserLegalGaurdians)
                    .HasForeignKey(d => d.LegalGaurdianId)
                    .HasConstraintName("FKhgcvo2ymrcoyux5gfmlpf9crt");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.CompanyLearnerUsers)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKmjltsjiwg2ysyve7hbhjyxvel");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.CompanyLearnerUserUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK2e6qio9x3mrpkfbcynhbo6t0c");
            });

            modelBuilder.Entity<CompanyLearnersAchievementStatusEisa>(entity =>
            {
                entity.ToTable("company_learners_achievement_status_eisa");

                entity.HasIndex(e => e.AdministrationOfAqpLearnersId, "FKkgbyoti3ysoihg8mpgt734icf");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdministrationOfAqpLearnersId).HasColumnName("administration_of_aqp_learners_id");

                entity.Property(e => e.AssessmentCentreCode)
                    .HasMaxLength(20)
                    .HasColumnName("assessment_centre_code");

                entity.Property(e => e.AssessmentPartnerCode)
                    .HasMaxLength(20)
                    .HasColumnName("assessment_partner_code");

                entity.Property(e => e.DateAssessed)
                    .HasMaxLength(8)
                    .HasColumnName("date_assessed");

                entity.Property(e => e.DateStamp)
                    .HasMaxLength(8)
                    .HasColumnName("date_stamp");

                entity.Property(e => e.EisaComponentAchievementValue)
                    .HasMaxLength(20)
                    .HasColumnName("eisa_component_achievement_value");

                entity.Property(e => e.EisaComponentNumber)
                    .HasMaxLength(20)
                    .HasColumnName("eisa_component_number");

                entity.Property(e => e.EisaPercentageObtained)
                    .HasMaxLength(20)
                    .HasColumnName("eisa_percentage_obtained");

                entity.Property(e => e.LearnerAlternateId)
                    .HasMaxLength(20)
                    .HasColumnName("learner_alternate_id");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(15)
                    .HasColumnName("national_id");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(20)
                    .HasColumnName("qualification_id");

                entity.HasOne(d => d.AdministrationOfAqpLearners)
                    .WithMany(p => p.CompanyLearnersAchievementStatusEisas)
                    .HasForeignKey(d => d.AdministrationOfAqpLearnersId)
                    .HasConstraintName("FKkgbyoti3ysoihg8mpgt734icf");
            });

            modelBuilder.Entity<CompanyLearnersAchievementStatusEisaHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_learners_achievement_status_eisa_hist");

                entity.HasIndex(e => e.Rev, "FKhlib4vivqlb71o4bl2djeajuh");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AdministrationOfAqpLearnersId).HasColumnName("administration_of_aqp_learners_id");

                entity.Property(e => e.AssessmentCentreCode)
                    .HasMaxLength(20)
                    .HasColumnName("assessment_centre_code");

                entity.Property(e => e.AssessmentPartnerCode)
                    .HasMaxLength(20)
                    .HasColumnName("assessment_partner_code");

                entity.Property(e => e.DateAssessed)
                    .HasMaxLength(8)
                    .HasColumnName("date_assessed");

                entity.Property(e => e.DateStamp)
                    .HasMaxLength(8)
                    .HasColumnName("date_stamp");

                entity.Property(e => e.EisaComponentAchievementValue)
                    .HasMaxLength(20)
                    .HasColumnName("eisa_component_achievement_value");

                entity.Property(e => e.EisaComponentNumber)
                    .HasMaxLength(20)
                    .HasColumnName("eisa_component_number");

                entity.Property(e => e.EisaPercentageObtained)
                    .HasMaxLength(20)
                    .HasColumnName("eisa_percentage_obtained");

                entity.Property(e => e.LearnerAlternateId)
                    .HasMaxLength(20)
                    .HasColumnName("learner_alternate_id");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(15)
                    .HasColumnName("national_id");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(20)
                    .HasColumnName("qualification_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyLearnersAchievementStatusEisaHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKhlib4vivqlb71o4bl2djeajuh");
            });

            modelBuilder.Entity<CompanyLearnersChange>(entity =>
            {
                entity.ToTable("company_learners_change");

                entity.HasIndex(e => e.CreateUserId, "FK13bnqkdfbggbv7fbh1j1dmu5j");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKae6xxccn86pf2lmv4aqojbq4i");

                entity.HasIndex(e => e.LearnershipId, "FKc4sktrfu6udi5n9vkm6r0djw3");

                entity.HasIndex(e => e.UnitStandardId, "FKd9d4swermk2niel59norkyhct");

                entity.HasIndex(e => e.SkillsSetId, "FKgrbfil4f5up6lx7h15rrf8f6k");

                entity.HasIndex(e => e.CompanyLearnersId, "FKj5tnqr9bi1foo2v3nc2ic2f6s");

                entity.HasIndex(e => e.QualificationId, "FKn7v3u37gpk8ep857on83j64r3");

                entity.HasIndex(e => e.ApprovalUserId, "FKnic50f8g5joblwp15mm0ex5fr");

                entity.HasIndex(e => e.SkillsProgramId, "FKrtm65mvfc3fmbm741y1m6rn5c");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalUserId).HasColumnName("approval_user_id");

                entity.Property(e => e.CommencmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("commencment_date");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("completion_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CreatedByEnum).HasColumnName("created_by_enum");

                entity.Property(e => e.LearnerChangeTypeEnum).HasColumnName("learner_change_type_enum");

                entity.Property(e => e.LearnerStatus).HasColumnName("learner_status");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.NonCredidBearingDescription)
                    .HasMaxLength(50)
                    .HasColumnName("non_credid_bearing_description");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SignoffByEnum).HasColumnName("signoff_by_enum");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.HasOne(d => d.ApprovalUser)
                    .WithMany(p => p.CompanyLearnersChangeApprovalUsers)
                    .HasForeignKey(d => d.ApprovalUserId)
                    .HasConstraintName("FKnic50f8g5joblwp15mm0ex5fr");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.CompanyLearnersChanges)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FKj5tnqr9bi1foo2v3nc2ic2f6s");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.CompanyLearnersChangeCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FK13bnqkdfbggbv7fbh1j1dmu5j");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.CompanyLearnersChanges)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FKc4sktrfu6udi5n9vkm6r0djw3");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.CompanyLearnersChanges)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKn7v3u37gpk8ep857on83j64r3");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.CompanyLearnersChanges)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKrtm65mvfc3fmbm741y1m6rn5c");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.CompanyLearnersChanges)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FKgrbfil4f5up6lx7h15rrf8f6k");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.CompanyLearnersChanges)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKae6xxccn86pf2lmv4aqojbq4i");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.CompanyLearnersChanges)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKd9d4swermk2niel59norkyhct");
            });

            modelBuilder.Entity<CompanyLearnersChangeHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_learners_change_hist");

                entity.HasIndex(e => e.Rev, "FKik9k2cxewtd609msm7ghi43kg");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalUserId).HasColumnName("approval_user_id");

                entity.Property(e => e.CommencmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("commencment_date");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("completion_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CreatedByEnum).HasColumnName("created_by_enum");

                entity.Property(e => e.LearnerChangeTypeEnum).HasColumnName("learner_change_type_enum");

                entity.Property(e => e.LearnerStatus).HasColumnName("learner_status");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.NonCredidBearingDescription)
                    .HasMaxLength(50)
                    .HasColumnName("non_credid_bearing_description");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SignoffByEnum).HasColumnName("signoff_by_enum");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyLearnersChangeHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKik9k2cxewtd609msm7ghi43kg");
            });

            modelBuilder.Entity<CompanyLearnersDetailsChange>(entity =>
            {
                entity.ToTable("company_learners_details_change");

                entity.HasIndex(e => e.ScheduledEventId, "FK1mnuqgq9lmbvicy8ib9ikjwxa");

                entity.HasIndex(e => e.NonCreditBearingIntervationTitleId, "FK324wq0fcd524nvl4sdhp13b0");

                entity.HasIndex(e => e.NqfAlignedId, "FK370d84t1ou912l4lnmwnhqa8n");

                entity.HasIndex(e => e.EmployerId, "FK4beob7swly0nkhuqngfr0n7p8");

                entity.HasIndex(e => e.OfoCodesId, "FK58rl3wytevmoshmi6ovnetbjp");

                entity.HasIndex(e => e.SkillsSetId, "FK6p8o4yhagmxkusl2cxgxcmu3e");

                entity.HasIndex(e => e.DundingId, "FK8g7pkl48goobcsi4wuiouvwnr");

                //entity.HasIndex(e => e.DgtagId, "FK8moip5krkxlgl7pcamsig54gc");

                entity.HasIndex(e => e.SiteId, "FK9gjobdkf2f3rueoxd676mpjx2");

                entity.HasIndex(e => e.UnitStandardId, "FK9vbcjob4clevkwl8ho8uhow35");

                entity.HasIndex(e => e.InterventionTypeId, "FKbmwi74bceu82ecfmwxq9wivni");

                entity.HasIndex(e => e.AppointmentId, "FKbolam1wdam569x39tj6vf1lrt");

                entity.HasIndex(e => e.CreateUserId, "FKc1svgswa5xb0ual3gs0reuj9c");

                entity.HasIndex(e => e.HostCompanyId, "FKc6fqbg98n9h8kwx5a1e7fxua1");

                entity.HasIndex(e => e.DesignatedTradeLevelId, "FKcyni6w0rtcopfv0wnpipxnyls");

                entity.HasIndex(e => e.LearnershipId, "FKdj21hwa0tmeo6pbnyh9dbeh8n");

                entity.HasIndex(e => e.ReviewCommitteeMeetingId, "FKdlx1u05g7mh1jwnkoyl0nlbi6");

                entity.HasIndex(e => e.UnionMembershipId, "FKdwdin1ktacc14w3ga2rujwhwq");

                entity.HasIndex(e => e.OrganisedLabourUnionMembershipId, "FKea7qitrijcb26sa3g5dk16t75");

                entity.HasIndex(e => e.HighestQualificationId, "FKemqb5ennnd81pum2m8a17wixp");

                entity.HasIndex(e => e.MandatoryGrantGetailId, "FKfwn3sexxwmd6i690dj37o1jh1");

                entity.HasIndex(e => e.DesignatedTradeId, "FKgshmre5uuccofldfp4dl74mus");

                entity.HasIndex(e => e.ProjectImplementationPlanId, "FKgspx9fsnhk8kv91ne8d4y9vnc");

                entity.HasIndex(e => e.PreviousSchools, "FKgw91oxcwd7icxjc9id70esq77");

                entity.HasIndex(e => e.InterventionLevelId, "FKhhksoxs8j4y9a8y3j95eoygta");

                entity.HasIndex(e => e.NqfLevelsId, "FKi34s2tco9ii5lmnla4lg53bfb");

                entity.HasIndex(e => e.UserId, "FKiguacjin0sk42kj6yobbd1siu");

                entity.HasIndex(e => e.NonSetaCompanyId, "FKivo37ycqdv7j4ns7rjtrle88f");

                entity.HasIndex(e => e.EmploymentTypeId, "FKj0et0mq57vfe435kp3tktvl2j");

                entity.HasIndex(e => e.QualificationId, "FKj5oad8dn948890l00seja3504");

                entity.HasIndex(e => e.ProjecttypeId, "FKjagu0meyf2i6jgff2770i33dg");

                entity.HasIndex(e => e.CompanyId, "FKktfknt4jyhfc6xotsuja7d2qo");

                entity.HasIndex(e => e.CompanyLearnersParentId, "FKnkf84p9ujlwrc0fsdxy84nao4");

                entity.HasIndex(e => e.StatsSaareaCodeId, "FKnm24y7ac2qwkjtomcofhcttl2");

                entity.HasIndex(e => e.SkillsProgramId, "FKo473w0a3o4l485ikit48u7nuc");

                entity.HasIndex(e => e.DesignatedTradeTypeId, "FKreudtn98rhw6t2vpf57tlldg5");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AppointmentId).HasColumnName("appointment_id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.CertificateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("certificate_date");

                entity.Property(e => e.CommencementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("commencement_date");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyLearnersParentId).HasColumnName("company_learners_parent_id");

                entity.Property(e => e.CompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("completion_date");

                entity.Property(e => e.ConditionalPlacementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("conditional_placement_date");

                entity.Property(e => e.ContractOfEmploymentCopy).HasColumnName("contract_of_employment_copy");

                entity.Property(e => e.ContractOfEmploymentSpecified).HasColumnName("contract_of_employment_specified");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.Credits)
                    .HasMaxLength(30)
                    .HasColumnName("credits");

                entity.Property(e => e.CurrentJobTitle)
                    .HasMaxLength(255)
                    .HasColumnName("current_job_title");

                entity.Property(e => e.CurrentStatus)
                    .HasMaxLength(100)
                    .HasColumnName("current_status");

                entity.Property(e => e.DesignatedTradeId).HasColumnName("designated_trade_id");

                entity.Property(e => e.DesignatedTradeLevelId).HasColumnName("designated_trade_level_id");

                entity.Property(e => e.DesignatedTradeTypeId).HasColumnName("designated_trade_type_id");

                entity.Property(e => e.DgTag)
                    .HasMaxLength(30)
                    .HasColumnName("dg_tag");

                entity.Property(e => e.Dgtag1)
                    .HasMaxLength(50)
                    .HasColumnName("dgtag");

                //entity.Property(e => e.DgtagId).HasColumnName("dgtag_id");

                entity.Property(e => e.DocumentBoxId)
                    .HasMaxLength(255)
                    .HasColumnName("document_box_id");

                entity.Property(e => e.DundingId).HasColumnName("dunding_id");

                entity.Property(e => e.EmployedByEmployerBefore).HasColumnName("employed_by_employer_before");

                entity.Property(e => e.EmployerId).HasColumnName("employer_id");

                entity.Property(e => e.EmploymentContractEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employment_contract_end_date");

                entity.Property(e => e.EmploymentContractStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employment_contract_start_date");

                entity.Property(e => e.EmploymentEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employment_end_date");

                entity.Property(e => e.EmploymentStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employment_start_date");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EmploymentTypeId).HasColumnName("employment_type_id");

                entity.Property(e => e.Etqid)
                    .HasMaxLength(10)
                    .HasColumnName("etqid");

                entity.Property(e => e.FileApproval).HasColumnName("file_approval");

                entity.Property(e => e.FileApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("file_approval_date");

                entity.Property(e => e.Funding)
                    .HasMaxLength(30)
                    .HasColumnName("funding");

                entity.Property(e => e.HighestEducationEnum).HasColumnName("highest_education_enum");

                entity.Property(e => e.HighestQualificationId).HasColumnName("highest_qualification_id");

                entity.Property(e => e.HostCompanyAvailable)
                    .HasColumnType("bit(1)")
                    .HasColumnName("host_company_available");

                entity.Property(e => e.HostCompanyId).HasColumnName("host_company_id");

                entity.Property(e => e.HostCompanyYesNoEnum).HasColumnName("host_company_yes_no_enum");

                entity.Property(e => e.Howlong).HasColumnName("howlong");

                entity.Property(e => e.InterventionLevelId).HasColumnName("intervention_level_id");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.LastSchoolYear)
                    .HasColumnType("datetime")
                    .HasColumnName("last_school_year");

                entity.Property(e => e.LearnerStatus).HasColumnName("learner_status");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(50)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.MandatoryGrantGetailId).HasColumnName("mandatory_grant_getail_id");

                entity.Property(e => e.MersetaCompany)
                    .HasColumnType("bit(1)")
                    .HasColumnName("merseta_company");

                entity.Property(e => e.MersetaFunded).HasColumnName("merseta_funded");

                entity.Property(e => e.MetroFileBarcode)
                    .HasMaxLength(100)
                    .HasColumnName("metro_file_barcode");

                entity.Property(e => e.NoExplain)
                    .HasMaxLength(50)
                    .HasColumnName("no_explain");

                entity.Property(e => e.NonCredidBearingDescription)
                    .HasMaxLength(50)
                    .HasColumnName("non_credid_bearing_description");

                entity.Property(e => e.NonCreditBearingIntervationTitleId).HasColumnName("non_credit_bearing_intervation_title_id");

                entity.Property(e => e.NonSetaCompanyId).HasColumnName("non_seta_company_id");

                entity.Property(e => e.NqfAlignedId).HasColumnName("nqf_aligned_id");

                entity.Property(e => e.NqfLevelsId).HasColumnName("nqf_levels_id");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OrganisedLabourUnionMembershipId).HasColumnName("organised_labour_union_membership_id");

                entity.Property(e => e.PartOfUnion).HasColumnName("part_of_union");

                entity.Property(e => e.PivotNonPivot).HasColumnName("pivot_non_pivot");

                entity.Property(e => e.PreviousSchools).HasColumnName("previous_schools");

                entity.Property(e => e.ProjectImplementationPlanId).HasColumnName("project_implementation_plan_id");

                entity.Property(e => e.ProjecttypeId).HasColumnName("projecttype_id");

                entity.Property(e => e.ProviderAccredited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("provider_accredited");

                entity.Property(e => e.ProviderWorkplaceApproved)
                    .HasColumnType("bit(1)")
                    .HasColumnName("provider_workplace_approved");

                entity.Property(e => e.QualificationCode)
                    .HasMaxLength(20)
                    .HasColumnName("qualification_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.QualificationTitle)
                    .HasMaxLength(50)
                    .HasColumnName("qualification_title");

                entity.Property(e => e.RegisteredDate)
                    .HasColumnType("datetime")
                    .HasColumnName("registered_date");

                entity.Property(e => e.RegistrationNumber)
                    .HasMaxLength(30)
                    .HasColumnName("registration_number");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.ReviewStatus).HasColumnName("review_status");

                entity.Property(e => e.ScheduledEventId).HasColumnName("scheduled_event_id");

                entity.Property(e => e.SchemeYear).HasColumnName("scheme_year");

                entity.Property(e => e.SignedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("signed_date");

                entity.Property(e => e.Signoff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("signoff");

                entity.Property(e => e.SiteId).HasColumnName("site_id");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.StatsSaareaCodeId).HasColumnName("stats_saarea_code_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Submission).HasColumnName("submission");

                entity.Property(e => e.SystemTermination)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_termination");

                entity.Property(e => e.UndertakenLearningProgramBefore).HasColumnName("undertaken_learning_program_before");

                entity.Property(e => e.UnionMembershipId).HasColumnName("union_membership_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WorkplaceBasedBefore).HasColumnName("workplace_based_before");

                entity.Property(e => e.YesSpecify)
                    .HasMaxLength(255)
                    .HasColumnName("yes_specify");

                entity.HasOne(d => d.Appointment)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.AppointmentId)
                    .HasConstraintName("FKbolam1wdam569x39tj6vf1lrt");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.CompanyLearnersDetailsChangeCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKktfknt4jyhfc6xotsuja7d2qo");

               /* entity.HasOne(d => d.CompanyLearnersParent)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.CompanyLearnersParentId)
                    .HasConstraintName("FKnkf84p9ujlwrc0fsdxy84nao4"); */

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.CompanyLearnersDetailsChangeCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKc1svgswa5xb0ual3gs0reuj9c");

                entity.HasOne(d => d.DesignatedTrade)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.DesignatedTradeId)
                    .HasConstraintName("FKgshmre5uuccofldfp4dl74mus");

                entity.HasOne(d => d.DesignatedTradeLevel)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.DesignatedTradeLevelId)
                    .HasConstraintName("FKcyni6w0rtcopfv0wnpipxnyls");

                entity.HasOne(d => d.DesignatedTradeType)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.DesignatedTradeTypeId)
                    .HasConstraintName("FKreudtn98rhw6t2vpf57tlldg5");

               /* entity.HasOne(d => d.Dgtag)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.DgtagId)
                    .HasConstraintName("FK8moip5krkxlgl7pcamsig54gc");*/

                entity.HasOne(d => d.Dunding)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.DundingId)
                    .HasConstraintName("FK8g7pkl48goobcsi4wuiouvwnr");

                entity.HasOne(d => d.Employer)
                    .WithMany(p => p.CompanyLearnersDetailsChangeEmployers)
                    .HasForeignKey(d => d.EmployerId)
                    .HasConstraintName("FK4beob7swly0nkhuqngfr0n7p8");

                entity.HasOne(d => d.EmploymentType)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.EmploymentTypeId)
                    .HasConstraintName("FKj0et0mq57vfe435kp3tktvl2j");

                entity.HasOne(d => d.HighestQualification)
                    .WithMany(p => p.CompanyLearnersDetailsChangeHighestQualifications)
                    .HasForeignKey(d => d.HighestQualificationId)
                    .HasConstraintName("FKemqb5ennnd81pum2m8a17wixp");

                entity.HasOne(d => d.HostCompany)
                    .WithMany(p => p.CompanyLearnersDetailsChangeHostCompanies)
                    .HasForeignKey(d => d.HostCompanyId)
                    .HasConstraintName("FKc6fqbg98n9h8kwx5a1e7fxua1");

                entity.HasOne(d => d.InterventionLevel)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.InterventionLevelId)
                    .HasConstraintName("FKhhksoxs8j4y9a8y3j95eoygta");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FKbmwi74bceu82ecfmwxq9wivni");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FKdj21hwa0tmeo6pbnyh9dbeh8n");

                entity.HasOne(d => d.MandatoryGrantGetail)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.MandatoryGrantGetailId)
                    .HasConstraintName("FKfwn3sexxwmd6i690dj37o1jh1");

                entity.HasOne(d => d.NonCreditBearingIntervationTitle)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.NonCreditBearingIntervationTitleId)
                    .HasConstraintName("FK324wq0fcd524nvl4sdhp13b0");

                entity.HasOne(d => d.NonSetaCompany)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.NonSetaCompanyId)
                    .HasConstraintName("FKivo37ycqdv7j4ns7rjtrle88f");

                entity.HasOne(d => d.NqfAligned)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.NqfAlignedId)
                    .HasConstraintName("FK370d84t1ou912l4lnmwnhqa8n");

                entity.HasOne(d => d.NqfLevels)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.NqfLevelsId)
                    .HasConstraintName("FKi34s2tco9ii5lmnla4lg53bfb");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FK58rl3wytevmoshmi6ovnetbjp");

                entity.HasOne(d => d.OrganisedLabourUnionMembership)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.OrganisedLabourUnionMembershipId)
                    .HasConstraintName("FKea7qitrijcb26sa3g5dk16t75");

                entity.HasOne(d => d.PreviousSchoolsNavigation)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.PreviousSchools)
                    .HasConstraintName("FKgw91oxcwd7icxjc9id70esq77");

                entity.HasOne(d => d.ProjectImplementationPlan)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.ProjectImplementationPlanId)
                    .HasConstraintName("FKgspx9fsnhk8kv91ne8d4y9vnc");

                entity.HasOne(d => d.Projecttype)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.ProjecttypeId)
                    .HasConstraintName("FKjagu0meyf2i6jgff2770i33dg");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.CompanyLearnersDetailsChangeQualifications)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKj5oad8dn948890l00seja3504");

                entity.HasOne(d => d.ReviewCommitteeMeeting)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingId)
                    .HasConstraintName("FKdlx1u05g7mh1jwnkoyl0nlbi6");

                entity.HasOne(d => d.ScheduledEvent)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.ScheduledEventId)
                    .HasConstraintName("FK1mnuqgq9lmbvicy8ib9ikjwxa");

               /* entity.HasOne(d => d.Site)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.SiteId)
                    .HasConstraintName("FK9gjobdkf2f3rueoxd676mpjx2");*/

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKo473w0a3o4l485ikit48u7nuc");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FK6p8o4yhagmxkusl2cxgxcmu3e");

                entity.HasOne(d => d.StatsSaareaCode)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.StatsSaareaCodeId)
                    .HasConstraintName("FKnm24y7ac2qwkjtomcofhcttl2");

                entity.HasOne(d => d.UnionMembership)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.UnionMembershipId)
                    .HasConstraintName("FKdwdin1ktacc14w3ga2rujwhwq");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.CompanyLearnersDetailsChanges)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FK9vbcjob4clevkwl8ho8uhow35");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.CompanyLearnersDetailsChangeUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKiguacjin0sk42kj6yobbd1siu");
            });

            modelBuilder.Entity<CompanyLearnersDetailsChangeAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_learners_details_change_AUD");

                entity.HasIndex(e => e.Rev, "FK3gjtk75sa1ye5wbnloqccmlf0");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AppointmentId).HasColumnName("appointment_id");

                entity.Property(e => e.DesignatedTradeId).HasColumnName("designated_trade_id");

                entity.Property(e => e.DesignatedTradeLevelId).HasColumnName("designated_trade_level_id");

                entity.Property(e => e.DesignatedTradeTypeId).HasColumnName("designated_trade_type_id");

                entity.Property(e => e.DgtagId).HasColumnName("dgtag_id");

                entity.Property(e => e.DundingId).HasColumnName("dunding_id");

                entity.Property(e => e.EmploymentTypeId).HasColumnName("employment_type_id");

                entity.Property(e => e.HighestQualificationId).HasColumnName("highest_qualification_id");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.MandatoryGrantGetailId).HasColumnName("mandatory_grant_getail_id");

                entity.Property(e => e.NonCreditBearingIntervationTitleId).HasColumnName("non_credit_bearing_intervation_title_id");

                entity.Property(e => e.OrganisedLabourUnionMembershipId).HasColumnName("organised_labour_union_membership_id");

                entity.Property(e => e.PreviousSchools).HasColumnName("previous_schools");

                entity.Property(e => e.ProjectImplementationPlanId).HasColumnName("project_implementation_plan_id");

                entity.Property(e => e.ProjecttypeId).HasColumnName("projecttype_id");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.ScheduledEventId).HasColumnName("scheduled_event_id");

                entity.Property(e => e.SiteId).HasColumnName("site_id");

                entity.Property(e => e.StatsSaareaCodeId).HasColumnName("stats_saarea_code_id");

                entity.Property(e => e.UnionMembershipId).HasColumnName("union_membership_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyLearnersDetailsChangeAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK3gjtk75sa1ye5wbnloqccmlf0");
            });

            modelBuilder.Entity<CompanyLearnersHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_learners_hist");

                entity.HasIndex(e => e.Rev, "FK209mqtf1m0dh903gixkfjo4np");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AppointmentId).HasColumnName("appointment_id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.AssessorApplicationId).HasColumnName("assessor_application_id");

                entity.Property(e => e.CertificateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("certificate_date");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(30)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.CommencementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("commencement_date");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyLearnersBursaryLinkId).HasColumnName("company_learners_bursary_link_id");

                entity.Property(e => e.CompanyLearnersParentId).HasColumnName("company_learners_parent_id");

                entity.Property(e => e.CompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("completion_date");

                entity.Property(e => e.ConditionalPlacementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("conditional_placement_date");

                entity.Property(e => e.ContinuationFlag).HasColumnName("continuation_flag");

                entity.Property(e => e.ContractOfEmploymentCopy).HasColumnName("contract_of_employment_copy");

                entity.Property(e => e.ContractOfEmploymentSpecified).HasColumnName("contract_of_employment_specified");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CreatedByEnum).HasColumnName("created_by_enum");

                entity.Property(e => e.Credits)
                    .HasMaxLength(30)
                    .HasColumnName("credits");

                entity.Property(e => e.CurrentJobTitle)
                    .HasMaxLength(255)
                    .HasColumnName("current_job_title");

                entity.Property(e => e.CurrentStatus)
                    .HasMaxLength(100)
                    .HasColumnName("current_status");

                entity.Property(e => e.DateLearnerCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_completed");

                entity.Property(e => e.DateLearnerRegistered)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_registered");

                entity.Property(e => e.DateLearnerTerminated)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_terminated");

                entity.Property(e => e.DateQualificationObtained)
                    .HasColumnType("datetime")
                    .HasColumnName("date_qualification_obtained");

                entity.Property(e => e.DesignatedTradeId).HasColumnName("designated_trade_id");

                entity.Property(e => e.DesignatedTradeLevelId).HasColumnName("designated_trade_level_id");

                entity.Property(e => e.DesignatedTradeTypeId).HasColumnName("designated_trade_type_id");

                entity.Property(e => e.DgTag1)
                    .HasMaxLength(30)
                    .HasColumnName("dg_tag");

                entity.Property(e => e.Dgtag)
                    .HasMaxLength(50)
                    .HasColumnName("dgtag");

                entity.Property(e => e.DgtagId).HasColumnName("dgtag_id");

                entity.Property(e => e.DocumentBoxId)
                    .HasMaxLength(255)
                    .HasColumnName("document_box_id");

                entity.Property(e => e.DocumentChangeStatus).HasColumnName("document_change_status");

                entity.Property(e => e.DundingId).HasColumnName("dunding_id");

                entity.Property(e => e.ELearner)
                    .HasColumnType("bit(1)")
                    .HasColumnName("e_learner")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.EmployedByEmployerBefore).HasColumnName("employed_by_employer_before");

                entity.Property(e => e.EmployerId).HasColumnName("employer_id");

                entity.Property(e => e.EmploymentContractEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employment_contract_end_date");

                entity.Property(e => e.EmploymentContractStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employment_contract_start_date");

                entity.Property(e => e.EmploymentEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employment_end_date");

                entity.Property(e => e.EmploymentStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employment_start_date");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EmploymentTypeId).HasColumnName("employment_type_id");

                entity.Property(e => e.Etqid)
                    .HasMaxLength(10)
                    .HasColumnName("etqid");

                entity.Property(e => e.FileApproval).HasColumnName("file_approval");

                entity.Property(e => e.FileApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("file_approval_date");

                entity.Property(e => e.Funding)
                    .HasMaxLength(30)
                    .HasColumnName("funding");

                entity.Property(e => e.HighestEducationEnum).HasColumnName("highest_education_enum");

                entity.Property(e => e.HighestQualificationId).HasColumnName("highest_qualification_id");

                entity.Property(e => e.HostCompanyAvailable)
                    .HasColumnType("bit(1)")
                    .HasColumnName("host_company_available");

                entity.Property(e => e.HostCompanyId).HasColumnName("host_company_id");

                entity.Property(e => e.HostCompanyYesNoEnum).HasColumnName("host_company_yes_no_enum");

                entity.Property(e => e.Howlong).HasColumnName("howlong");

                entity.Property(e => e.InstitutionId).HasColumnName("institution_id");

                entity.Property(e => e.InterventionLevelId).HasColumnName("intervention_level_id");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.LastPassedTestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_passed_test_date");

                entity.Property(e => e.LastSchoolYear)
                    .HasColumnType("datetime")
                    .HasColumnName("last_school_year");

                entity.Property(e => e.LeaningProgrammeId).HasColumnName("leaning_programme_id");

                entity.Property(e => e.LearnerStatus).HasColumnName("learner_status");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(50)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.LegacyId).HasColumnName("legacy_id");

                entity.Property(e => e.LegacyRegistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("legacy_registration_date");

                entity.Property(e => e.LegacyTargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("legacy_target_class");

                entity.Property(e => e.MandatoryGrantGetailId).HasColumnName("mandatory_grant_getail_id");

                entity.Property(e => e.MersetaCompany)
                    .HasColumnType("bit(1)")
                    .HasColumnName("merseta_company");

                entity.Property(e => e.MersetaFunded).HasColumnName("merseta_funded");

                entity.Property(e => e.MersetaRegistration)
                    .HasColumnType("bit(1)")
                    .HasColumnName("merseta_registration");

                entity.Property(e => e.MetroFileBarcode)
                    .HasMaxLength(100)
                    .HasColumnName("metro_file_barcode");

                entity.Property(e => e.ModeratorApplicationId).HasColumnName("moderator_application_id");

                entity.Property(e => e.NewBursary)
                    .HasColumnType("bit(1)")
                    .HasColumnName("new_bursary");

                entity.Property(e => e.NoExplain)
                    .HasMaxLength(50)
                    .HasColumnName("no_explain");

                entity.Property(e => e.NonCredidBearingDescription)
                    .HasMaxLength(150)
                    .HasColumnName("non_credid_bearing_description");

                entity.Property(e => e.NonCreditBearingIntervationTitleId).HasColumnName("non_credit_bearing_intervation_title_id");

                entity.Property(e => e.NonSetaCompanyId).HasColumnName("non_seta_company_id");

                entity.Property(e => e.NqfAlignedId).HasColumnName("nqf_aligned_id");

                entity.Property(e => e.NqfLevelsId).HasColumnName("nqf_levels_id");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OrganisedLabourUnionMembershipId).HasColumnName("organised_labour_union_membership_id");

                entity.Property(e => e.PartOfUnion).HasColumnName("part_of_union");

                entity.Property(e => e.PivotNonPivot).HasColumnName("pivot_non_pivot");

                entity.Property(e => e.PreviousSchools).HasColumnName("previous_schools");

                entity.Property(e => e.ProjectImplementationPlanId).HasColumnName("project_implementation_plan_id");

                entity.Property(e => e.ProjecttypeId).HasColumnName("projecttype_id");

                entity.Property(e => e.ProviderAccredited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("provider_accredited");

                entity.Property(e => e.ProviderWorkplaceApproved)
                    .HasColumnType("bit(1)")
                    .HasColumnName("provider_workplace_approved");

                entity.Property(e => e.QualificationCode)
                    .HasMaxLength(20)
                    .HasColumnName("qualification_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.QualificationTitle)
                    .HasMaxLength(50)
                    .HasColumnName("qualification_title");

                entity.Property(e => e.RegisteredDate)
                    .HasColumnType("datetime")
                    .HasColumnName("registered_date");

                entity.Property(e => e.RegistrationNumber)
                    .HasMaxLength(30)
                    .HasColumnName("registration_number");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.ReviewStatus).HasColumnName("review_status");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.ScheduledEventId).HasColumnName("scheduled_event_id");

                entity.Property(e => e.SchemeYear).HasColumnName("scheme_year");

                entity.Property(e => e.SignedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("signed_date");

                entity.Property(e => e.Signoff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("signoff");

                entity.Property(e => e.SignoffByEnum).HasColumnName("signoff_by_enum");

                entity.Property(e => e.SiteId).HasColumnName("site_id");

                entity.Property(e => e.SitesSmeId).HasColumnName("sites_sme_id");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.SmeQualificationId).HasColumnName("sme_qualification_id");

                entity.Property(e => e.StatsSaareaCodeId).HasColumnName("stats_saarea_code_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Submission).HasColumnName("submission");

                entity.Property(e => e.SystemTermination)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_termination");

                entity.Property(e => e.TestCentreTrainingProviderApplicationId).HasColumnName("test_centre_training_provider_application_id");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.TrainingSiteId).HasColumnName("training_site_id");

                entity.Property(e => e.TvetFetQualificationId).HasColumnName("tvet_fet_qualification_id");

                entity.Property(e => e.TvetLecturer).HasColumnName("tvet_lecturer");

                entity.Property(e => e.UndertakenLearningProgramBefore).HasColumnName("undertaken_learning_program_before");

                entity.Property(e => e.UnionMembershipId).HasColumnName("union_membership_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WorkplaceBasedBefore).HasColumnName("workplace_based_before");

                entity.Property(e => e.YesSpecify)
                    .HasMaxLength(255)
                    .HasColumnName("yes_specify");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyLearnersHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK209mqtf1m0dh903gixkfjo4np");
            });

            modelBuilder.Entity<CompanyLearnersIgnoreSetmi>(entity =>
            {
                entity.ToTable("company_learners_ignore_setmis");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyLearnerIdFlat).HasColumnName("company_learner_id_flat");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Note).HasColumnName("note");
            });

            modelBuilder.Entity<CompanyLearnersLostTime>(entity =>
            {
                entity.ToTable("company_learners_lost_time");

                entity.HasIndex(e => e.ApprovalUserId, "FK1hm874nlq6n390tnnkg85smcw");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FK2wc82urvxawauy3adtp9sl87u");

                entity.HasIndex(e => e.CompanyLearnersId, "FKa4neb1b2lot85gexiq45y615d");

                entity.HasIndex(e => e.DesignatedTradeLevelId, "FKqqf9cr0wv4rxoy9auweprmvpn");

                entity.HasIndex(e => e.CreateUserId, "FKrf13tltjtkkqh93y9h1efm82o");

                entity.HasIndex(e => e.DesignatedTradeId, "FKsbf3bds1ipnk4wmdbf3uttunq");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalUserId).HasColumnName("approval_user_id");

                entity.Property(e => e.CalculatedEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("calculated_end_date");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CreatedByEnum).HasColumnName("created_by_enum");

                entity.Property(e => e.DaysExtended).HasColumnName("days_extended");

                entity.Property(e => e.DesignatedTradeExtension)
                    .HasColumnType("bit(1)")
                    .HasColumnName("designatedTradeExtension");

                entity.Property(e => e.DesignatedTradeId).HasColumnName("designated_trade_id");

                entity.Property(e => e.DesignatedTradeLevelId).HasColumnName("designated_trade_level_id");

                entity.Property(e => e.FirstApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("first_approval_date");

                entity.Property(e => e.LostTimeEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("lost_time_end_date");

                entity.Property(e => e.LostTimeReason).HasColumnName("lost_time_reason");

                entity.Property(e => e.LostTimeStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("lost_time_start_date");

                entity.Property(e => e.NewCompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("new_completion_date");

                entity.Property(e => e.OrginalEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("orginal_end_date");

                entity.Property(e => e.SignoffByEnum).HasColumnName("signoff_by_enum");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.WeeksAssigned).HasColumnName("weeks_assigned");

                entity.HasOne(d => d.ApprovalUser)
                    .WithMany(p => p.CompanyLearnersLostTimeApprovalUsers)
                    .HasForeignKey(d => d.ApprovalUserId)
                    .HasConstraintName("FK1hm874nlq6n390tnnkg85smcw");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.CompanyLearnersLostTimes)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FKa4neb1b2lot85gexiq45y615d");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.CompanyLearnersLostTimeCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKrf13tltjtkkqh93y9h1efm82o");

                entity.HasOne(d => d.DesignatedTrade)
                    .WithMany(p => p.CompanyLearnersLostTimes)
                    .HasForeignKey(d => d.DesignatedTradeId)
                    .HasConstraintName("FKsbf3bds1ipnk4wmdbf3uttunq");

                entity.HasOne(d => d.DesignatedTradeLevel)
                    .WithMany(p => p.CompanyLearnersLostTimes)
                    .HasForeignKey(d => d.DesignatedTradeLevelId)
                    .HasConstraintName("FKqqf9cr0wv4rxoy9auweprmvpn");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.CompanyLearnersLostTimes)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FK2wc82urvxawauy3adtp9sl87u");
            });

            modelBuilder.Entity<CompanyLearnersLostTimeHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_learners_lost_time_hist");

                entity.HasIndex(e => e.Rev, "FK2jyi6921cyqlr34l90alaqa78");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalUserId).HasColumnName("approval_user_id");

                entity.Property(e => e.CalculatedEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("calculated_end_date");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CreatedByEnum).HasColumnName("created_by_enum");

                entity.Property(e => e.DaysExtended).HasColumnName("days_extended");

                entity.Property(e => e.DesignatedTradeExtension)
                    .HasColumnType("bit(1)")
                    .HasColumnName("designatedTradeExtension");

                entity.Property(e => e.DesignatedTradeId).HasColumnName("designated_trade_id");

                entity.Property(e => e.DesignatedTradeLevelId).HasColumnName("designated_trade_level_id");

                entity.Property(e => e.FirstApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("first_approval_date");

                entity.Property(e => e.LostTimeEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("lost_time_end_date");

                entity.Property(e => e.LostTimeReason).HasColumnName("lost_time_reason");

                entity.Property(e => e.LostTimeStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("lost_time_start_date");

                entity.Property(e => e.NewCompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("new_completion_date");

                entity.Property(e => e.OrginalEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("orginal_end_date");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SignoffByEnum).HasColumnName("signoff_by_enum");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.WeeksAssigned).HasColumnName("weeks_assigned");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyLearnersLostTimeHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK2jyi6921cyqlr34l90alaqa78");
            });

            modelBuilder.Entity<CompanyLearnersProgress>(entity =>
            {
                entity.ToTable("company_learners_progress");

                entity.HasIndex(e => e.DesignatedTradeLevelId, "FKfa3qqvg6hu8hms4qfam1tkefd");

                entity.HasIndex(e => e.CompanyLearnersId, "FKtgghdac2849loxsvodn2b0d38");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreditsCompleted).HasColumnName("credits_completed");

                entity.Property(e => e.CreditsNeeded).HasColumnName("credits_needed");

                entity.Property(e => e.DesignatedTradeLevelId).HasColumnName("designated_trade_level_id");

                entity.Property(e => e.ProgressType)
                    .HasMaxLength(255)
                    .HasColumnName("progress_type");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.CompanyLearnersProgresses)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FKtgghdac2849loxsvodn2b0d38");

                entity.HasOne(d => d.DesignatedTradeLevel)
                    .WithMany(p => p.CompanyLearnersProgresses)
                    .HasForeignKey(d => d.DesignatedTradeLevelId)
                    .HasConstraintName("FKfa3qqvg6hu8hms4qfam1tkefd");
            });

            modelBuilder.Entity<CompanyLearnersProgressHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_learners_progress_hist");

                entity.HasIndex(e => e.Rev, "FKprohwgonc9a7d8g2g9o1b4bdy");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreditsCompleted).HasColumnName("credits_completed");

                entity.Property(e => e.CreditsNeeded).HasColumnName("credits_needed");

                entity.Property(e => e.DesignatedTradeLevelId).HasColumnName("designated_trade_level_id");

                entity.Property(e => e.ProgressType)
                    .HasMaxLength(255)
                    .HasColumnName("progress_type");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyLearnersProgressHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKprohwgonc9a7d8g2g9o1b4bdy");
            });

            modelBuilder.Entity<CompanyLearnersRatio>(entity =>
            {
                entity.ToTable("company_learners_ratio");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");
            });

            modelBuilder.Entity<CompanyLearnersTermination>(entity =>
            {
                entity.ToTable("company_learners_termination");

                entity.HasIndex(e => e.CompanyLearnersId, "FK2fgj9npj26jm1acrq02rvr7n3");

                entity.HasIndex(e => e.ReviewCommitteeMeetingAgendaId, "FK2ht0xbuxelle9xuqme5v3iaqo");

                entity.HasIndex(e => e.TaskId, "FK6erxrfmyjc37fh7bh3r1nh4br");

                entity.HasIndex(e => e.CompanyLearnersTerminationParentId, "FK8b3clsu3qj5o3lwg5nbm33i75");

                entity.HasIndex(e => e.InvestigatorUserId, "FKcys46wiqte6ebdjvekgsqhyhy");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKdkj6oi5vslessfxxd6ktrqafd");

                entity.HasIndex(e => e.ReviewCommitteeMeetingId, "FKj6lfxgc7x4g339xnwok6l03jm");

                entity.HasIndex(e => e.CreateUserId, "FKrlne7as99745rhw8mtevxkong");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CompanyLearnersTerminationParentId).HasColumnName("company_learners_termination_parent_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CreatedByEnum).HasColumnName("created_by_enum");

                entity.Property(e => e.InvestigateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("investigate_date");

                entity.Property(e => e.InvestigatorUserId).HasColumnName("investigator_user_id");

                entity.Property(e => e.LastWorkingDayOfLearner)
                    .HasColumnType("datetime")
                    .HasColumnName("last_working_day_of_learner");

                entity.Property(e => e.ReviewCommitteeMeetingAgendaId).HasColumnName("review_committee_meeting_agenda_id");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.SignoffByEnum).HasColumnName("signoff_by_enum");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TaskId).HasColumnName("task_id");

                entity.Property(e => e.TerminationTypeEnum).HasColumnName("termination_type_enum");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.CompanyLearnersTerminations)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FK2fgj9npj26jm1acrq02rvr7n3");

                entity.HasOne(d => d.CompanyLearnersTerminationParent)
                    .WithMany(p => p.InverseCompanyLearnersTerminationParent)
                    .HasForeignKey(d => d.CompanyLearnersTerminationParentId)
                    .HasConstraintName("FK8b3clsu3qj5o3lwg5nbm33i75");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.CompanyLearnersTerminationCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKrlne7as99745rhw8mtevxkong");

                entity.HasOne(d => d.InvestigatorUser)
                    .WithMany(p => p.CompanyLearnersTerminationInvestigatorUsers)
                    .HasForeignKey(d => d.InvestigatorUserId)
                    .HasConstraintName("FKcys46wiqte6ebdjvekgsqhyhy");

                entity.HasOne(d => d.ReviewCommitteeMeetingAgenda)
                    .WithMany(p => p.CompanyLearnersTerminations)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingAgendaId)
                    .HasConstraintName("FK2ht0xbuxelle9xuqme5v3iaqo");

                entity.HasOne(d => d.ReviewCommitteeMeeting)
                    .WithMany(p => p.CompanyLearnersTerminations)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingId)
                    .HasConstraintName("FKj6lfxgc7x4g339xnwok6l03jm");

                entity.HasOne(d => d.Task)
                    .WithMany(p => p.CompanyLearnersTerminations)
                    .HasForeignKey(d => d.TaskId)
                    .HasConstraintName("FK6erxrfmyjc37fh7bh3r1nh4br");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.CompanyLearnersTerminations)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKdkj6oi5vslessfxxd6ktrqafd");
            });

            modelBuilder.Entity<CompanyLearnersTradeTest>(entity =>
            {
                entity.ToTable("company_learners_trade_test");

                entity.HasIndex(e => e.DesignatedTradeLevelId, "FK3a0wpbpi12oiwbkeafntv83m6");

                entity.HasIndex(e => e.TestCenterUserId, "FK5ep113v5nj5jv1nc61ipqe8uw");

                entity.HasIndex(e => e.LearnerId, "FK5mrmd4ak64t1cph1ylx6fn5cy");

                entity.HasIndex(e => e.EmpoyerId, "FK5pxq2hwyurvmnn9actuflwvh3");

                entity.HasIndex(e => e.OccupationCategoryId, "FK5qhqf052y2h75c6iuvdmumgdo");

                entity.HasIndex(e => e.ModeratorEtqaId, "FK7aj2mjf8ws4mafg09j2vi5bm6");

                entity.HasIndex(e => e.ApprovedUserId, "FK7ry1kxuglbep1c0w6dwxy7xws");

                entity.HasIndex(e => e.ClientServiceAdminUserId, "FK85og5c73edf9gmuxy0inahua8");

                entity.HasIndex(e => e.AssessorApplicationId, "FK85xduqg8h76fr3feiij73wynb");

                entity.HasIndex(e => e.CompanyProviderId, "FKa5cnbvx2muk4po6b9fwn5r7gp");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKd3vjj9atj51ki1oinpngrk1u9");

                entity.HasIndex(e => e.CompanyEmployer, "FKf0s3rb5y134qidytg33m326oa");

                entity.HasIndex(e => e.CompanyLearnersId, "FKfnf7gvj8u53p38grb5hhvbyf9");

                entity.HasIndex(e => e.DisabilityStatus, "FKg4fx96p6t5yglk28cm9bvg9qe");

                entity.HasIndex(e => e.AdminUserId, "FKgj9llba9h6adcc7hefqg0ql8r");

                entity.HasIndex(e => e.QualityAssurorUserId, "FKgl4n3hdmorc124bxe9grlguy7");

                entity.HasIndex(e => e.AssessorEtqaId, "FKh5fqvq26beljusksfgswgtxup");

                entity.HasIndex(e => e.CollectDetailId, "FKh5p99f0yabvpboxuud1tjbbh3");

                entity.HasIndex(e => e.ReleventSetaId, "FKhgxbf6c45v9hf5w5gmgffk2vh");

                entity.HasIndex(e => e.ModeratorApplicationId, "FKhjdkyw05t2cxijp0oa8mbm391");

                entity.HasIndex(e => e.OfoCodeId, "FKig7ejpqu6ni8885qi635qo09g");

                entity.HasIndex(e => e.PreviousTrainingCenterId, "FKk5r9h0xu62tcqhfedqna0cch");

                entity.HasIndex(e => e.PreferredTrainingCenterId, "FKp5arob5sqtubnhrg40bxq8q8f");

                entity.HasIndex(e => e.QualificationId, "FKr0bqv3tara90p1a7t7wh2gfoi");

                entity.HasIndex(e => e.CreateUserId, "FKre3grd27dejxht783968r5a95");

                entity.HasIndex(e => e.CoordinatorUserId, "FKrpiwm27ni36u8e4gjvytwj2x6");

                entity.HasIndex(e => e.DisabilityRatingId, "FKthmh4fgfe64kpt52uq71crhd7");

                entity.HasIndex(e => e.LegacySectTwentyEightId, "FKtk3igtf7m3bucpbn1o30s3fyq");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActualFromDateOfTest)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_from_date_of_test");

                entity.Property(e => e.ActualToDateOfTest)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_to_date_of_test");

                entity.Property(e => e.AdminUserId).HasColumnName("admin_user_id");

                entity.Property(e => e.AlterEmployerInfo)
                    .HasColumnType("bit(1)")
                    .HasColumnName("alter_employer_info");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovedUserId).HasColumnName("approved_user_id");

                entity.Property(e => e.AprlProgressEnum).HasColumnName("aprl_progress_enum");

                entity.Property(e => e.ArplReporting).HasColumnName("arpl_reporting");

                entity.Property(e => e.AssessorApplicationId).HasColumnName("assessor_application_id");

                entity.Property(e => e.AssessorCertificateNumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_certificate_number");

                entity.Property(e => e.AssessorEmail)
                    .HasMaxLength(100)
                    .HasColumnName("assessor_email");

                entity.Property(e => e.AssessorEtqaId).HasColumnName("assessor_etqa_id");

                entity.Property(e => e.AssessorFirstName)
                    .HasMaxLength(100)
                    .HasColumnName("assessor_first_name");

                entity.Property(e => e.AssessorLastName)
                    .HasMaxLength(100)
                    .HasColumnName("assessor_last_name");

                entity.Property(e => e.AttemptNumber).HasColumnName("attempt_number");

                entity.Property(e => e.AttemptedTradeTest).HasColumnName("attempted_trade_test");

                entity.Property(e => e.CbmtQualification)
                    .HasColumnType("bit(1)")
                    .HasColumnName("cbmt_qualification");

                entity.Property(e => e.CertificateCollected)
                    .HasColumnType("bit(1)")
                    .HasColumnName("certificate_collected");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(30)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.ClientServiceAdminUserId).HasColumnName("client_service_admin_user_id");

                entity.Property(e => e.CollectDetailId).HasColumnName("collect_detail_id");

                entity.Property(e => e.CollectionInformation)
                    .HasMaxLength(255)
                    .HasColumnName("collection_information");

                entity.Property(e => e.CollectionType).HasColumnName("collection_type");

                entity.Property(e => e.CompanyEmployer).HasColumnName("company_employer");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CompanyProviderId).HasColumnName("company_provider_id");

                entity.Property(e => e.CompetenceEnum).HasColumnName("competence_enum");

                entity.Property(e => e.ContractNo)
                    .HasMaxLength(255)
                    .HasColumnName("contract_no");

                entity.Property(e => e.CoordinatorUserId).HasColumnName("coordinator_user_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CurrentEmployerAddress).HasColumnName("current_employer_address");

                entity.Property(e => e.CurrentOcc).HasColumnName("current_occ");

                entity.Property(e => e.DateCertified)
                    .HasColumnType("datetime")
                    .HasColumnName("date_certified");

                entity.Property(e => e.DateOfCollection)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_collection");

                entity.Property(e => e.DateOfTest)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_test");

                entity.Property(e => e.DateOfTestToDate)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_test_to_date");

                entity.Property(e => e.DateSetToAwaitingNamb)
                    .HasColumnType("datetime")
                    .HasColumnName("date_set_to_awaiting_namb");

                entity.Property(e => e.DateSubmissionOriginalDoc)
                    .HasColumnType("datetime")
                    .HasColumnName("date_submission_original_doc");

                entity.Property(e => e.DateSubmittedToTestCenter)
                    .HasColumnType("datetime")
                    .HasColumnName("date_submitted_to_test_center");

                entity.Property(e => e.DateToProvideOriginalCopies)
                    .HasColumnType("datetime")
                    .HasColumnName("date_to_provide_original_copies");

                entity.Property(e => e.DesignatedTradeLevelId).HasColumnName("designated_trade_level_id");

                entity.Property(e => e.DetailsOfExperience)
                    .HasMaxLength(255)
                    .HasColumnName("details_of_experience");

                entity.Property(e => e.Disability).HasColumnName("disability");

                entity.Property(e => e.DisabilityInfo).HasColumnName("disability_info");

                entity.Property(e => e.DisabilityRatingId).HasColumnName("disability_rating_id");

                entity.Property(e => e.DisabilityStatus).HasColumnName("disabilityStatus");

                entity.Property(e => e.DueDateSubmissionOriginalDoc)
                    .HasColumnType("datetime")
                    .HasColumnName("due_date_submission_original_doc");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerOnNsdms).HasColumnName("employer_on_nsdms");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EmpoyerId).HasColumnName("empoyer_id");

                entity.Property(e => e.FinalCbmtQualification)
                    .HasColumnType("bit(1)")
                    .HasColumnName("final_cbmt_qualification");

                entity.Property(e => e.Flc).HasColumnName("flc");

                entity.Property(e => e.FlcEnglish).HasColumnName("flc_english");

                entity.Property(e => e.FlcMathsLit).HasColumnName("flc_maths_lit");

                entity.Property(e => e.LearnerAgreement).HasColumnName("learner_agreement");

                entity.Property(e => e.LearnerAgreementNumber)
                    .HasMaxLength(255)
                    .HasColumnName("learner_agreement_number");

                entity.Property(e => e.LearnerId).HasColumnName("learner_id");

                entity.Property(e => e.LearnerReadinessDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_readiness_date");

                entity.Property(e => e.LegacySectTwentyEightId).HasColumnName("legacy_sect_twenty_eight_id");

                entity.Property(e => e.MaxDate)
                    .HasColumnType("datetime")
                    .HasColumnName("max_date");

                entity.Property(e => e.MedicalInfo).HasColumnName("medical_info");

                entity.Property(e => e.MinDate)
                    .HasColumnType("datetime")
                    .HasColumnName("min_date");

                entity.Property(e => e.ModeratorApplicationId).HasColumnName("moderator_application_id");

                entity.Property(e => e.ModeratorCertificateNumber)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_certificate_number");

                entity.Property(e => e.ModeratorEmail)
                    .HasMaxLength(100)
                    .HasColumnName("moderator_email");

                entity.Property(e => e.ModeratorEtqaId).HasColumnName("moderator_etqa_id");

                entity.Property(e => e.ModeratorFirstName)
                    .HasMaxLength(100)
                    .HasColumnName("moderator_first_name");

                entity.Property(e => e.ModeratorLastName)
                    .HasMaxLength(100)
                    .HasColumnName("moderator_last_name");

                entity.Property(e => e.NambDecision).HasColumnName("namb_decision");

                entity.Property(e => e.NambReceivedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("namb_received_date");

                entity.Property(e => e.NambSubmissionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("namb_submission_date");

                entity.Property(e => e.NatureMedicalInfo).HasColumnName("nature_medical_info");

                entity.Property(e => e.OccupationCategoryId).HasColumnName("occupation_category_id");

                entity.Property(e => e.OfoCodeId).HasColumnName("ofo_code_id");

                entity.Property(e => e.OnHold)
                    .HasColumnType("bit(1)")
                    .HasColumnName("on_hold")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.PreferredTrainingCenterId).HasColumnName("preferred_training_center_id");

                entity.Property(e => e.PreviousAttemptDate)
                    .HasColumnType("datetime")
                    .HasColumnName("previous_attempt_date");

                entity.Property(e => e.PreviousTrainingCenterId).HasColumnName("previous_training_center_id");

                entity.Property(e => e.QualificationCode).HasColumnName("qualification_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.QualityAssurorUserId).HasColumnName("quality_assuror_user_id");

                entity.Property(e => e.Region)
                    .HasMaxLength(255)
                    .HasColumnName("region");

                entity.Property(e => e.ReleventSetaId).HasColumnName("relevent_seta_id");

                entity.Property(e => e.ResultsVerified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("results_verified");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(30)
                    .HasColumnName("serial_number");

                entity.Property(e => e.Specialisation)
                    .HasMaxLength(255)
                    .HasColumnName("specialisation");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TestCenterSubmitted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("test_center_submitted");

                entity.Property(e => e.TestCenterUserId).HasColumnName("test_center_user_id");

                entity.Property(e => e.TestDatesProvided)
                    .HasColumnType("bit(1)")
                    .HasColumnName("test_dates_provided");

                entity.Property(e => e.TradeTestProgress).HasColumnName("trade_test_progress");

                entity.Property(e => e.TradeTestType).HasColumnName("trade_test_type");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.HasOne(d => d.AdminUser)
                    .WithMany(p => p.CompanyLearnersTradeTestAdminUsers)
                    .HasForeignKey(d => d.AdminUserId)
                    .HasConstraintName("FKgj9llba9h6adcc7hefqg0ql8r");

                entity.HasOne(d => d.ApprovedUser)
                    .WithMany(p => p.CompanyLearnersTradeTestApprovedUsers)
                    .HasForeignKey(d => d.ApprovedUserId)
                    .HasConstraintName("FK7ry1kxuglbep1c0w6dwxy7xws");

                entity.HasOne(d => d.AssessorApplication)
                    .WithMany(p => p.CompanyLearnersTradeTestAssessorApplications)
                    .HasForeignKey(d => d.AssessorApplicationId)
                    .HasConstraintName("FK85xduqg8h76fr3feiij73wynb");

                entity.HasOne(d => d.AssessorEtqa)
                    .WithMany(p => p.CompanyLearnersTradeTestAssessorEtqas)
                    .HasForeignKey(d => d.AssessorEtqaId)
                    .HasConstraintName("FKh5fqvq26beljusksfgswgtxup");

                entity.HasOne(d => d.ClientServiceAdminUser)
                    .WithMany(p => p.CompanyLearnersTradeTestClientServiceAdminUsers)
                    .HasForeignKey(d => d.ClientServiceAdminUserId)
                    .HasConstraintName("FK85og5c73edf9gmuxy0inahua8");

                entity.HasOne(d => d.CollectDetail)
                    .WithMany(p => p.CompanyLearnersTradeTests)
                    .HasForeignKey(d => d.CollectDetailId)
                    .HasConstraintName("FKh5p99f0yabvpboxuud1tjbbh3");

                entity.HasOne(d => d.CompanyEmployerNavigation)
                    .WithMany(p => p.CompanyLearnersTradeTestCompanyEmployerNavigations)
                    .HasForeignKey(d => d.CompanyEmployer)
                    .HasConstraintName("FKf0s3rb5y134qidytg33m326oa");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.CompanyLearnersTradeTests)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FKfnf7gvj8u53p38grb5hhvbyf9");

                entity.HasOne(d => d.CompanyProvider)
                    .WithMany(p => p.CompanyLearnersTradeTestCompanyProviders)
                    .HasForeignKey(d => d.CompanyProviderId)
                    .HasConstraintName("FKa5cnbvx2muk4po6b9fwn5r7gp");

                entity.HasOne(d => d.CoordinatorUser)
                    .WithMany(p => p.CompanyLearnersTradeTestCoordinatorUsers)
                    .HasForeignKey(d => d.CoordinatorUserId)
                    .HasConstraintName("FKrpiwm27ni36u8e4gjvytwj2x6");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.CompanyLearnersTradeTestCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKre3grd27dejxht783968r5a95");

                entity.HasOne(d => d.DesignatedTradeLevel)
                    .WithMany(p => p.CompanyLearnersTradeTests)
                    .HasForeignKey(d => d.DesignatedTradeLevelId)
                    .HasConstraintName("FK3a0wpbpi12oiwbkeafntv83m6");

                entity.HasOne(d => d.DisabilityRating)
                    .WithMany(p => p.CompanyLearnersTradeTests)
                    .HasForeignKey(d => d.DisabilityRatingId)
                    .HasConstraintName("FKthmh4fgfe64kpt52uq71crhd7");

                entity.HasOne(d => d.DisabilityStatusNavigation)
                    .WithMany(p => p.CompanyLearnersTradeTests)
                    .HasForeignKey(d => d.DisabilityStatus)
                    .HasConstraintName("FKg4fx96p6t5yglk28cm9bvg9qe");

                entity.HasOne(d => d.Empoyer)
                    .WithMany(p => p.CompanyLearnersTradeTests)
                    .HasForeignKey(d => d.EmpoyerId)
                    .HasConstraintName("FK5pxq2hwyurvmnn9actuflwvh3");

                entity.HasOne(d => d.Learner)
                    .WithMany(p => p.CompanyLearnersTradeTestLearners)
                    .HasForeignKey(d => d.LearnerId)
                    .HasConstraintName("FK5mrmd4ak64t1cph1ylx6fn5cy");

                entity.HasOne(d => d.LegacySectTwentyEight)
                    .WithMany(p => p.CompanyLearnersTradeTests)
                    .HasForeignKey(d => d.LegacySectTwentyEightId)
                    .HasConstraintName("FKtk3igtf7m3bucpbn1o30s3fyq");

                entity.HasOne(d => d.ModeratorApplication)
                    .WithMany(p => p.CompanyLearnersTradeTestModeratorApplications)
                    .HasForeignKey(d => d.ModeratorApplicationId)
                    .HasConstraintName("FKhjdkyw05t2cxijp0oa8mbm391");

                entity.HasOne(d => d.ModeratorEtqa)
                    .WithMany(p => p.CompanyLearnersTradeTestModeratorEtqas)
                    .HasForeignKey(d => d.ModeratorEtqaId)
                    .HasConstraintName("FK7aj2mjf8ws4mafg09j2vi5bm6");

                entity.HasOne(d => d.OccupationCategory)
                    .WithMany(p => p.CompanyLearnersTradeTests)
                    .HasForeignKey(d => d.OccupationCategoryId)
                    .HasConstraintName("FK5qhqf052y2h75c6iuvdmumgdo");

                entity.HasOne(d => d.OfoCode)
                    .WithMany(p => p.CompanyLearnersTradeTests)
                    .HasForeignKey(d => d.OfoCodeId)
                    .HasConstraintName("FKig7ejpqu6ni8885qi635qo09g");

                entity.HasOne(d => d.PreferredTrainingCenter)
                    .WithMany(p => p.CompanyLearnersTradeTestPreferredTrainingCenters)
                    .HasForeignKey(d => d.PreferredTrainingCenterId)
                    .HasConstraintName("FKp5arob5sqtubnhrg40bxq8q8f");

                entity.HasOne(d => d.PreviousTrainingCenter)
                    .WithMany(p => p.CompanyLearnersTradeTestPreviousTrainingCenters)
                    .HasForeignKey(d => d.PreviousTrainingCenterId)
                    .HasConstraintName("FKk5r9h0xu62tcqhfedqna0cch");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.CompanyLearnersTradeTests)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKr0bqv3tara90p1a7t7wh2gfoi");

                entity.HasOne(d => d.QualityAssurorUser)
                    .WithMany(p => p.CompanyLearnersTradeTestQualityAssurorUsers)
                    .HasForeignKey(d => d.QualityAssurorUserId)
                    .HasConstraintName("FKgl4n3hdmorc124bxe9grlguy7");

                entity.HasOne(d => d.ReleventSeta)
                    .WithMany(p => p.CompanyLearnersTradeTests)
                    .HasForeignKey(d => d.ReleventSetaId)
                    .HasConstraintName("FKhgxbf6c45v9hf5w5gmgffk2vh");

                entity.HasOne(d => d.TestCenterUser)
                    .WithMany(p => p.CompanyLearnersTradeTestTestCenterUsers)
                    .HasForeignKey(d => d.TestCenterUserId)
                    .HasConstraintName("FK5ep113v5nj5jv1nc61ipqe8uw");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.CompanyLearnersTradeTests)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKd3vjj9atj51ki1oinpngrk1u9");
            });

            modelBuilder.Entity<CompanyLearnersTradeTestHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_learners_trade_test_hist");

                entity.HasIndex(e => e.Rev, "FKte9ue2hyoonsu4o3wst6jnegr");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActualFromDateOfTest)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_from_date_of_test");

                entity.Property(e => e.ActualToDateOfTest)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_to_date_of_test");

                entity.Property(e => e.AdminUserId).HasColumnName("admin_user_id");

                entity.Property(e => e.AlterEmployerInfo)
                    .HasColumnType("bit(1)")
                    .HasColumnName("alter_employer_info");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovedUserId).HasColumnName("approved_user_id");

                entity.Property(e => e.AprlProgressEnum).HasColumnName("aprl_progress_enum");

                entity.Property(e => e.ArplReporting).HasColumnName("arpl_reporting");

                entity.Property(e => e.AssessorApplicationId).HasColumnName("assessor_application_id");

                entity.Property(e => e.AssessorCertificateNumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_certificate_number");

                entity.Property(e => e.AssessorEmail)
                    .HasMaxLength(100)
                    .HasColumnName("assessor_email");

                entity.Property(e => e.AssessorEtqaId).HasColumnName("assessor_etqa_id");

                entity.Property(e => e.AssessorFirstName)
                    .HasMaxLength(100)
                    .HasColumnName("assessor_first_name");

                entity.Property(e => e.AssessorLastName)
                    .HasMaxLength(100)
                    .HasColumnName("assessor_last_name");

                entity.Property(e => e.AttemptNumber).HasColumnName("attempt_number");

                entity.Property(e => e.AttemptedTradeTest).HasColumnName("attempted_trade_test");

                entity.Property(e => e.CbmtQualification)
                    .HasColumnType("bit(1)")
                    .HasColumnName("cbmt_qualification");

                entity.Property(e => e.CertificateCollected)
                    .HasColumnType("bit(1)")
                    .HasColumnName("certificate_collected");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(30)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.ClientServiceAdminUserId).HasColumnName("client_service_admin_user_id");

                entity.Property(e => e.CollectDetailId).HasColumnName("collect_detail_id");

                entity.Property(e => e.CollectionInformation)
                    .HasMaxLength(255)
                    .HasColumnName("collection_information");

                entity.Property(e => e.CollectionType).HasColumnName("collection_type");

                entity.Property(e => e.CompanyEmployer).HasColumnName("company_employer");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CompanyProviderId).HasColumnName("company_provider_id");

                entity.Property(e => e.CompetenceEnum).HasColumnName("competence_enum");

                entity.Property(e => e.ContractNo)
                    .HasMaxLength(255)
                    .HasColumnName("contract_no");

                entity.Property(e => e.CoordinatorUserId).HasColumnName("coordinator_user_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CurrentEmployerAddress).HasColumnName("current_employer_address");

                entity.Property(e => e.CurrentOcc).HasColumnName("current_occ");

                entity.Property(e => e.DateCertified)
                    .HasColumnType("datetime")
                    .HasColumnName("date_certified");

                entity.Property(e => e.DateOfCollection)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_collection");

                entity.Property(e => e.DateOfTest)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_test");

                entity.Property(e => e.DateOfTestToDate)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_test_to_date");

                entity.Property(e => e.DateSetToAwaitingNamb)
                    .HasColumnType("datetime")
                    .HasColumnName("date_set_to_awaiting_namb");

                entity.Property(e => e.DateSubmissionOriginalDoc)
                    .HasColumnType("datetime")
                    .HasColumnName("date_submission_original_doc");

                entity.Property(e => e.DateSubmittedToTestCenter)
                    .HasColumnType("datetime")
                    .HasColumnName("date_submitted_to_test_center");

                entity.Property(e => e.DateToProvideOriginalCopies)
                    .HasColumnType("datetime")
                    .HasColumnName("date_to_provide_original_copies");

                entity.Property(e => e.DesignatedTradeLevelId).HasColumnName("designated_trade_level_id");

                entity.Property(e => e.DetailsOfExperience)
                    .HasMaxLength(255)
                    .HasColumnName("details_of_experience");

                entity.Property(e => e.Disability).HasColumnName("disability");

                entity.Property(e => e.DisabilityInfo).HasColumnName("disability_info");

                entity.Property(e => e.DisabilityRatingId).HasColumnName("disability_rating_id");

                entity.Property(e => e.DisabilityStatus).HasColumnName("disabilityStatus");

                entity.Property(e => e.DueDateSubmissionOriginalDoc)
                    .HasColumnType("datetime")
                    .HasColumnName("due_date_submission_original_doc");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerOnNsdms).HasColumnName("employer_on_nsdms");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EmpoyerId).HasColumnName("empoyer_id");

                entity.Property(e => e.FinalCbmtQualification)
                    .HasColumnType("bit(1)")
                    .HasColumnName("final_cbmt_qualification");

                entity.Property(e => e.Flc).HasColumnName("flc");

                entity.Property(e => e.FlcEnglish).HasColumnName("flc_english");

                entity.Property(e => e.FlcMathsLit).HasColumnName("flc_maths_lit");

                entity.Property(e => e.LearnerAgreement).HasColumnName("learner_agreement");

                entity.Property(e => e.LearnerAgreementNumber)
                    .HasMaxLength(255)
                    .HasColumnName("learner_agreement_number");

                entity.Property(e => e.LearnerId).HasColumnName("learner_id");

                entity.Property(e => e.LearnerReadinessDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_readiness_date");

                entity.Property(e => e.LegacySectTwentyEightId).HasColumnName("legacy_sect_twenty_eight_id");

                entity.Property(e => e.MaxDate)
                    .HasColumnType("datetime")
                    .HasColumnName("max_date");

                entity.Property(e => e.MedicalInfo).HasColumnName("medical_info");

                entity.Property(e => e.MinDate)
                    .HasColumnType("datetime")
                    .HasColumnName("min_date");

                entity.Property(e => e.ModeratorApplicationId).HasColumnName("moderator_application_id");

                entity.Property(e => e.ModeratorCertificateNumber)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_certificate_number");

                entity.Property(e => e.ModeratorEmail)
                    .HasMaxLength(100)
                    .HasColumnName("moderator_email");

                entity.Property(e => e.ModeratorEtqaId).HasColumnName("moderator_etqa_id");

                entity.Property(e => e.ModeratorFirstName)
                    .HasMaxLength(100)
                    .HasColumnName("moderator_first_name");

                entity.Property(e => e.ModeratorLastName)
                    .HasMaxLength(100)
                    .HasColumnName("moderator_last_name");

                entity.Property(e => e.NambDecision).HasColumnName("namb_decision");

                entity.Property(e => e.NambReceivedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("namb_received_date");

                entity.Property(e => e.NambSubmissionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("namb_submission_date");

                entity.Property(e => e.NatureMedicalInfo).HasColumnName("nature_medical_info");

                entity.Property(e => e.OccupationCategoryId).HasColumnName("occupation_category_id");

                entity.Property(e => e.OfoCodeId).HasColumnName("ofo_code_id");

                entity.Property(e => e.OnHold)
                    .HasColumnType("bit(1)")
                    .HasColumnName("on_hold")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.PreferredTrainingCenterId).HasColumnName("preferred_training_center_id");

                entity.Property(e => e.PreviousAttemptDate)
                    .HasColumnType("datetime")
                    .HasColumnName("previous_attempt_date");

                entity.Property(e => e.PreviousTrainingCenterId).HasColumnName("previous_training_center_id");

                entity.Property(e => e.QualificationCode).HasColumnName("qualification_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.QualityAssurorUserId).HasColumnName("quality_assuror_user_id");

                entity.Property(e => e.Region)
                    .HasMaxLength(255)
                    .HasColumnName("region");

                entity.Property(e => e.ReleventSetaId).HasColumnName("relevent_seta_id");

                entity.Property(e => e.ResultsVerified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("results_verified");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(30)
                    .HasColumnName("serial_number");

                entity.Property(e => e.Specialisation)
                    .HasMaxLength(255)
                    .HasColumnName("specialisation");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TestCenterSubmitted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("test_center_submitted");

                entity.Property(e => e.TestCenterUserId).HasColumnName("test_center_user_id");

                entity.Property(e => e.TestDatesProvided)
                    .HasColumnType("bit(1)")
                    .HasColumnName("test_dates_provided");

                entity.Property(e => e.TradeTestProgress).HasColumnName("trade_test_progress");

                entity.Property(e => e.TradeTestType).HasColumnName("trade_test_type");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyLearnersTradeTestHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKte9ue2hyoonsu4o3wst6jnegr");
            });

            modelBuilder.Entity<CompanyLearnersTransfer>(entity =>
            {
                entity.ToTable("company_learners_transfer");

                entity.HasIndex(e => e.TransferToCompanyId, "FK1ddlvfbympsp8fi66fgcreb7k");

                entity.HasIndex(e => e.CoordinatorUserId, "FK4hivpki1h5toio81b7g0jqy40");

                entity.HasIndex(e => e.CompanySelectedApprovalUser, "FK5sel7h5b1g96xyal1i765uym1");

                entity.HasIndex(e => e.ApproveUser, "FK68fnytnbub250hieet6l5cj92");

                entity.HasIndex(e => e.TransferCompanyRepresentativeUserId, "FK8f387dcko58cc9vihfxrrajye");

                entity.HasIndex(e => e.LearnerApproved, "FK9a5xfw42kybu578amxqyllgud");

                entity.HasIndex(e => e.CreateUserId, "FK9lexeskq2hwfjachbpyf9vr7e");

                entity.HasIndex(e => e.CreateUser, "FKa6xnmi4yiq3prnu4nn43r39jx");

                entity.HasIndex(e => e.CurrentCompanyAssignedId, "FKchh6alia5o3e85tbgac74yclg");

                entity.HasIndex(e => e.TransferTrainingProviderApplicationId, "FKds2yomurib0gxkmm16vko3x7i");

                entity.HasIndex(e => e.LearnerUserId, "FKe36r5e3b1u4313eynbn6vnb7v");

                entity.HasIndex(e => e.CompanyLearnersId, "FKebew4qew542nr86m4x9kk0cca");

                entity.HasIndex(e => e.TasksId, "FKgjvx2c0iph7ob9ajf74326455");

                entity.HasIndex(e => e.ApproveUserId, "FKkv190ig7dtaeq46qqxx6152do");

                entity.HasIndex(e => e.OrginalTrainingProviderApplicationId, "FKpeswrsatp83tdgi2ndcmib364");

                entity.HasIndex(e => e.AdminUserId, "FKw8gpl2n1oyb1t4tmhyf3ropn");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdminUserId).HasColumnName("admin_user_id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalDateCompanySelected)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date_company_selected");

                entity.Property(e => e.ApprovalDateLearner)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date_learner");

                entity.Property(e => e.ApproveUser).HasColumnName("approve_user");

                entity.Property(e => e.ApproveUserId).HasColumnName("approve_user_id");

                entity.Property(e => e.CompanyLearnerPreviousStatus).HasColumnName("company_learner_previous_status");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CompanySelectedApprovalUser).HasColumnName("company_selected_approval_user");

                entity.Property(e => e.CoordinatorUserId).HasColumnName("coordinator_user_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUser).HasColumnName("create_user");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CurrentCompanyAssignedId).HasColumnName("current_company_assigned_id");

                entity.Property(e => e.LearnerApproved).HasColumnName("learner_approved");

                entity.Property(e => e.LearnerPreviousStatus).HasColumnName("learner_previous_status");

                entity.Property(e => e.LearnerTransferApproval).HasColumnName("learner_transfer_approval");

                entity.Property(e => e.LearnerTransferType).HasColumnName("learner_transfer_type");

                entity.Property(e => e.LearnerUserId).HasColumnName("learner_user_id");

                entity.Property(e => e.OrginalTrainingProviderApplicationId).HasColumnName("orginal_training_provider_application_id");

                entity.Property(e => e.Recommendation).HasColumnName("recommendation");

                entity.Property(e => e.RejectionNote).HasColumnName("rejection_note");

                entity.Property(e => e.SiteVisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("site_visit_date");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TasksId).HasColumnName("tasks_id");

                entity.Property(e => e.TransferCompanyRepresentativeUserId).HasColumnName("transfer_company_representative_user_id");

                entity.Property(e => e.TransferReason)
                    .HasMaxLength(255)
                    .HasColumnName("transfer_reason");

                entity.Property(e => e.TransferRequestType).HasColumnName("transfer_request_type");

                entity.Property(e => e.TransferToCompanyId).HasColumnName("transfer_to_company_id");

                entity.Property(e => e.TransferTrainingProviderApplicationId).HasColumnName("transfer_training_provider_application_id");

                entity.Property(e => e.WithNewProvider)
                    .HasColumnType("bit(1)")
                    .HasColumnName("with_new_provider");

                entity.HasOne(d => d.AdminUser)
                    .WithMany(p => p.CompanyLearnersTransferAdminUsers)
                    .HasForeignKey(d => d.AdminUserId)
                    .HasConstraintName("FKw8gpl2n1oyb1t4tmhyf3ropn");

                entity.HasOne(d => d.ApproveUserNavigation)
                    .WithMany(p => p.CompanyLearnersTransferApproveUserNavigations)
                    .HasForeignKey(d => d.ApproveUser)
                    .HasConstraintName("FK68fnytnbub250hieet6l5cj92");

                entity.HasOne(d => d.ApproveUser1)
                    .WithMany(p => p.CompanyLearnersTransferApproveUser1s)
                    .HasForeignKey(d => d.ApproveUserId)
                    .HasConstraintName("FKkv190ig7dtaeq46qqxx6152do");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.CompanyLearnersTransfers)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FKebew4qew542nr86m4x9kk0cca");

                entity.HasOne(d => d.CompanySelectedApprovalUserNavigation)
                    .WithMany(p => p.CompanyLearnersTransferCompanySelectedApprovalUserNavigations)
                    .HasForeignKey(d => d.CompanySelectedApprovalUser)
                    .HasConstraintName("FK5sel7h5b1g96xyal1i765uym1");

                entity.HasOne(d => d.CoordinatorUser)
                    .WithMany(p => p.CompanyLearnersTransferCoordinatorUsers)
                    .HasForeignKey(d => d.CoordinatorUserId)
                    .HasConstraintName("FK4hivpki1h5toio81b7g0jqy40");

                entity.HasOne(d => d.CreateUserNavigation)
                    .WithMany(p => p.CompanyLearnersTransferCreateUserNavigations)
                    .HasForeignKey(d => d.CreateUser)
                    .HasConstraintName("FKa6xnmi4yiq3prnu4nn43r39jx");

                entity.HasOne(d => d.CreateUser1)
                    .WithMany(p => p.CompanyLearnersTransferCreateUser1s)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FK9lexeskq2hwfjachbpyf9vr7e");

                entity.HasOne(d => d.CurrentCompanyAssigned)
                    .WithMany(p => p.CompanyLearnersTransferCurrentCompanyAssigneds)
                    .HasForeignKey(d => d.CurrentCompanyAssignedId)
                    .HasConstraintName("FKchh6alia5o3e85tbgac74yclg");

                entity.HasOne(d => d.LearnerApprovedNavigation)
                    .WithMany(p => p.CompanyLearnersTransferLearnerApprovedNavigations)
                    .HasForeignKey(d => d.LearnerApproved)
                    .HasConstraintName("FK9a5xfw42kybu578amxqyllgud");

                entity.HasOne(d => d.LearnerUser)
                    .WithMany(p => p.CompanyLearnersTransferLearnerUsers)
                    .HasForeignKey(d => d.LearnerUserId)
                    .HasConstraintName("FKe36r5e3b1u4313eynbn6vnb7v");

                entity.HasOne(d => d.OrginalTrainingProviderApplication)
                    .WithMany(p => p.CompanyLearnersTransferOrginalTrainingProviderApplications)
                    .HasForeignKey(d => d.OrginalTrainingProviderApplicationId)
                    .HasConstraintName("FKpeswrsatp83tdgi2ndcmib364");

                entity.HasOne(d => d.Tasks)
                    .WithMany(p => p.CompanyLearnersTransfers)
                    .HasForeignKey(d => d.TasksId)
                    .HasConstraintName("FKgjvx2c0iph7ob9ajf74326455");

                entity.HasOne(d => d.TransferCompanyRepresentativeUser)
                    .WithMany(p => p.CompanyLearnersTransferTransferCompanyRepresentativeUsers)
                    .HasForeignKey(d => d.TransferCompanyRepresentativeUserId)
                    .HasConstraintName("FK8f387dcko58cc9vihfxrrajye");

                entity.HasOne(d => d.TransferToCompany)
                    .WithMany(p => p.CompanyLearnersTransferTransferToCompanies)
                    .HasForeignKey(d => d.TransferToCompanyId)
                    .HasConstraintName("FK1ddlvfbympsp8fi66fgcreb7k");

                entity.HasOne(d => d.TransferTrainingProviderApplication)
                    .WithMany(p => p.CompanyLearnersTransferTransferTrainingProviderApplications)
                    .HasForeignKey(d => d.TransferTrainingProviderApplicationId)
                    .HasConstraintName("FKds2yomurib0gxkmm16vko3x7i");
            });

            modelBuilder.Entity<CompanyLearnersTransferHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_learners_transfer_hist");

                entity.HasIndex(e => e.Rev, "FK4uxitv2xyawmeurkgw8u8b9sf");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AdminUserId).HasColumnName("admin_user_id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalDateCompanySelected)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date_company_selected");

                entity.Property(e => e.ApprovalDateLearner)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date_learner");

                entity.Property(e => e.ApproveUser).HasColumnName("approve_user");

                entity.Property(e => e.ApproveUserId).HasColumnName("approve_user_id");

                entity.Property(e => e.CompanyLearnerPreviousStatus).HasColumnName("company_learner_previous_status");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CompanySelectedApprovalUser).HasColumnName("company_selected_approval_user");

                entity.Property(e => e.CoordinatorUserId).HasColumnName("coordinator_user_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUser).HasColumnName("create_user");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CurrentCompanyAssignedId).HasColumnName("current_company_assigned_id");

                entity.Property(e => e.LearnerApproved).HasColumnName("learner_approved");

                entity.Property(e => e.LearnerPreviousStatus).HasColumnName("learner_previous_status");

                entity.Property(e => e.LearnerTransferApproval).HasColumnName("learner_transfer_approval");

                entity.Property(e => e.LearnerTransferType).HasColumnName("learner_transfer_type");

                entity.Property(e => e.LearnerUserId).HasColumnName("learner_user_id");

                entity.Property(e => e.OrginalTrainingProviderApplicationId).HasColumnName("orginal_training_provider_application_id");

                entity.Property(e => e.Recommendation).HasColumnName("recommendation");

                entity.Property(e => e.RejectionNote).HasColumnName("rejection_note");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SiteVisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("site_visit_date");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TasksId).HasColumnName("tasks_id");

                entity.Property(e => e.TransferCompanyRepresentativeUserId).HasColumnName("transfer_company_representative_user_id");

                entity.Property(e => e.TransferReason)
                    .HasMaxLength(255)
                    .HasColumnName("transfer_reason");

                entity.Property(e => e.TransferRequestType).HasColumnName("transfer_request_type");

                entity.Property(e => e.TransferToCompanyId).HasColumnName("transfer_to_company_id");

                entity.Property(e => e.TransferTrainingProviderApplicationId).HasColumnName("transfer_training_provider_application_id");

                entity.Property(e => e.WithNewProvider)
                    .HasColumnType("bit(1)")
                    .HasColumnName("with_new_provider");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyLearnersTransferHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK4uxitv2xyawmeurkgw8u8b9sf");
            });

            modelBuilder.Entity<CompanyQualification>(entity =>
            {
                entity.ToTable("company_qualifications");

                entity.HasIndex(e => e.CompanyId, "FK4mxu2x13mduunauuwk0py6722");

                entity.HasIndex(e => e.QualificationId, "FK5hmgijvv7tkk25xftlo7cuc8s");

                entity.HasIndex(e => e.TrainingProviderDocParentId, "FKjxiqqrmxrdv4dwqnq8c1s0b3j");

                entity.HasIndex(e => e.NonSetaCompanyId, "FKqmx05b5gm6wds3uhk6fnq8n0h");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ManuallyAdded)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manually_added")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NonSetaCompanyId).HasColumnName("non_seta_company_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.CompanyQualifications)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK4mxu2x13mduunauuwk0py6722");

                entity.HasOne(d => d.NonSetaCompany)
                    .WithMany(p => p.CompanyQualifications)
                    .HasForeignKey(d => d.NonSetaCompanyId)
                    .HasConstraintName("FKqmx05b5gm6wds3uhk6fnq8n0h");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.CompanyQualifications)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK5hmgijvv7tkk25xftlo7cuc8s");

                entity.HasOne(d => d.TrainingProviderDocParent)
                    .WithMany(p => p.CompanyQualifications)
                    .HasForeignKey(d => d.TrainingProviderDocParentId)
                    .HasConstraintName("FKjxiqqrmxrdv4dwqnq8c1s0b3j");
            });

            modelBuilder.Entity<CompanyQualificationsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_qualifications_hist");

                entity.HasIndex(e => e.Rev, "FKaovynkivh86q8y60qa2bqub75");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ManuallyAdded)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manually_added")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NonSetaCompanyId).HasColumnName("non_seta_company_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyQualificationsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKaovynkivh86q8y60qa2bqub75");
            });

            modelBuilder.Entity<CompanyTradeTestEmployer>(entity =>
            {
                entity.ToTable("company_trade_test_employer");

                entity.HasIndex(e => e.CompanyId, "FK6i9yn52csbncp0d4ogaxyre59");

                entity.HasIndex(e => e.RegisteredAddressId, "FKa08yy2vfuuu1mq82hbgstlsjn");

                entity.HasIndex(e => e.ResidentialAddressId, "FKhjgwu8uvheos6jvas7la3sa63");

                entity.HasIndex(e => e.PostalAddressId, "FKtcpxsdco0sjnw9wqr60pe038n");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyGuid)
                    .HasMaxLength(100)
                    .HasColumnName("company_guid");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(70)
                    .HasColumnName("company_name")
                    .HasDefaultValueSql("''");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(10)
                    .HasColumnName("levy_number");

                entity.Property(e => e.PostalAddressId).HasColumnName("postal_address_id");

                entity.Property(e => e.RegisteredAddressId).HasColumnName("registered_address_id");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TradingName)
                    .HasMaxLength(70)
                    .HasColumnName("trading_name");

                entity.Property(e => e.UserCellNumber)
                    .HasMaxLength(20)
                    .HasColumnName("user_cell_number");

                entity.Property(e => e.UserEmail)
                    .HasMaxLength(50)
                    .HasColumnName("user_email");

                entity.Property(e => e.UserFirstName)
                    .HasMaxLength(100)
                    .HasColumnName("user_first_name")
                    .HasDefaultValueSql("''");

                entity.Property(e => e.UserLastName)
                    .HasMaxLength(100)
                    .HasColumnName("user_last_name")
                    .HasDefaultValueSql("''");

                entity.Property(e => e.UserMiddleName)
                    .HasMaxLength(100)
                    .HasColumnName("user_middle_name");

                entity.Property(e => e.UserTelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("user_tel_number");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.CompanyTradeTestEmployers)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK6i9yn52csbncp0d4ogaxyre59");

                entity.HasOne(d => d.PostalAddress)
                    .WithMany(p => p.CompanyTradeTestEmployerPostalAddresses)
                    .HasForeignKey(d => d.PostalAddressId)
                    .HasConstraintName("FKtcpxsdco0sjnw9wqr60pe038n");

                entity.HasOne(d => d.RegisteredAddress)
                    .WithMany(p => p.CompanyTradeTestEmployerRegisteredAddresses)
                    .HasForeignKey(d => d.RegisteredAddressId)
                    .HasConstraintName("FKa08yy2vfuuu1mq82hbgstlsjn");

                entity.HasOne(d => d.ResidentialAddress)
                    .WithMany(p => p.CompanyTradeTestEmployerResidentialAddresses)
                    .HasForeignKey(d => d.ResidentialAddressId)
                    .HasConstraintName("FKhjgwu8uvheos6jvas7la3sa63");
            });

            modelBuilder.Entity<CompanyTradeTestEmployerAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_trade_test_employer_AUD");

                entity.HasIndex(e => e.Rev, "FK3akeop7bpu16k6qpf3kko3klu");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyTradeTestEmployerAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK3akeop7bpu16k6qpf3kko3klu");
            });

            modelBuilder.Entity<CompanyUnitStandard>(entity =>
            {
                entity.ToTable("company_unit_standard");

                entity.HasIndex(e => e.NonSetaCompanyId, "FK8r22lctawfdsvb0x2i5wqtcto");

                entity.HasIndex(e => e.CompanyId, "FKb1a1uqdoyjjhbglibwctlor0w");

                entity.HasIndex(e => e.UnitStandardId, "FKcx93xe1qiu33jynffyqxrh00d");

                entity.HasIndex(e => e.ForQualificationId, "FKft6fge9sxmhsra3rcdt7m60wf");

                entity.HasIndex(e => e.TrainingProviderDocParentId, "FKnwqutgqpk8afhrmh8g5uyyeal");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForQualificationId).HasColumnName("for_qualification_id");

                entity.Property(e => e.ManuallyAdded)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manually_added")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NonSetaCompanyId).HasColumnName("non_seta_company_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.CompanyUnitStandards)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKb1a1uqdoyjjhbglibwctlor0w");

                entity.HasOne(d => d.ForQualification)
                    .WithMany(p => p.CompanyUnitStandards)
                    .HasForeignKey(d => d.ForQualificationId)
                    .HasConstraintName("FKft6fge9sxmhsra3rcdt7m60wf");

                entity.HasOne(d => d.NonSetaCompany)
                    .WithMany(p => p.CompanyUnitStandards)
                    .HasForeignKey(d => d.NonSetaCompanyId)
                    .HasConstraintName("FK8r22lctawfdsvb0x2i5wqtcto");

                entity.HasOne(d => d.TrainingProviderDocParent)
                    .WithMany(p => p.CompanyUnitStandards)
                    .HasForeignKey(d => d.TrainingProviderDocParentId)
                    .HasConstraintName("FKnwqutgqpk8afhrmh8g5uyyeal");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.CompanyUnitStandards)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKcx93xe1qiu33jynffyqxrh00d");
            });

            modelBuilder.Entity<CompanyUnitStandardHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_unit_standard_hist");

                entity.HasIndex(e => e.Rev, "FKbcfdywe171vebvv2pj79g5rk7");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForQualificationId).HasColumnName("for_qualification_id");

                entity.Property(e => e.ManuallyAdded)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manually_added")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NonSetaCompanyId).HasColumnName("non_seta_company_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyUnitStandardHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKbcfdywe171vebvv2pj79g5rk7");
            });

            modelBuilder.Entity<CompanyUser>(entity =>
            {
                entity.ToTable("company_users");

                entity.HasIndex(e => e.UserResponsibilityId, "FKc4dc6f27ixyt5w2mborysn6t0");

                entity.HasIndex(e => e.PositionId, "FKh73d4s5jewl7v2alycobl3rnw");

                entity.HasIndex(e => e.DesignationId, "FKivj8oweug5l0fh9fhn57qjxfu");

                entity.HasIndex(e => e.CompanyId, "FKkwk4foy88lulxos847o0qt4ig");

                entity.HasIndex(e => e.UserId, "FKqya3ry7anconlbhk6qgssd4y");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.AssessorModType).HasColumnName("assessor_mod_type");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyUserType).HasColumnName("company_user_type");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DesignationId).HasColumnName("designation_id");

                entity.Property(e => e.ExistingUser)
                    .HasColumnType("bit(1)")
                    .HasColumnName("existing_user")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NoResponsibility)
                    .HasColumnType("bit(1)")
                    .HasColumnName("no_responsibility");

                entity.Property(e => e.PositionId).HasColumnName("position_id");

                entity.Property(e => e.SmeType).HasColumnName("sme_type");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.UserIdHistory).HasColumnName("user_id_history");

                entity.Property(e => e.UserResponsibilityId).HasColumnName("user_responsibility_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.CompanyUsers)
                    .HasForeignKey(d => d.CompanyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKkwk4foy88lulxos847o0qt4ig");

                entity.HasOne(d => d.Designation)
                    .WithMany(p => p.CompanyUsers)
                    .HasForeignKey(d => d.DesignationId)
                    .HasConstraintName("FKivj8oweug5l0fh9fhn57qjxfu");

                entity.HasOne(d => d.Position)
                    .WithMany(p => p.CompanyUsers)
                    .HasForeignKey(d => d.PositionId)
                    .HasConstraintName("FKh73d4s5jewl7v2alycobl3rnw");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.CompanyUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKqya3ry7anconlbhk6qgssd4y");

                entity.HasOne(d => d.UserResponsibility)
                    .WithMany(p => p.CompanyUsers)
                    .HasForeignKey(d => d.UserResponsibilityId)
                    .HasConstraintName("FKc4dc6f27ixyt5w2mborysn6t0");
            });

            modelBuilder.Entity<CompanyUserPosition>(entity =>
            {
                entity.ToTable("company_user_position");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<CompanyUsersHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_users_hist");

                entity.HasIndex(e => e.Rev, "FKoboerf844ge3qbtsy0924op9k");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.AssessorModType).HasColumnName("assessor_mod_type");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyUserType).HasColumnName("company_user_type");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DesignationId).HasColumnName("designation_id");

                entity.Property(e => e.ExistingUser)
                    .HasColumnType("bit(1)")
                    .HasColumnName("existing_user")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NoResponsibility)
                    .HasColumnType("bit(1)")
                    .HasColumnName("no_responsibility");

                entity.Property(e => e.PositionId).HasColumnName("position_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SmeType).HasColumnName("sme_type");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.UserResponsibilityId).HasColumnName("user_responsibility_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyUsersHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKoboerf844ge3qbtsy0924op9k");
            });

            modelBuilder.Entity<CompanyUsersHistory>(entity =>
            {
                entity.ToTable("company_users_history");

                entity.HasIndex(e => e.UserResponsibilityId, "FK6hifd7q97jdcapedcwwaokdc3");

                entity.HasIndex(e => e.PositionId, "FK6nx5sr9wjjad2n28432kk3ccu");

                entity.HasIndex(e => e.UserId, "FKchj9jd1ik97tfiqpbh78lf2md");

                entity.HasIndex(e => e.DesignationId, "FKf6twulj6uqtthorl15pd81h4k");

                entity.HasIndex(e => e.CompanyId, "FKoyjc1edqjgcogcykcbxl98gk9");

                entity.HasIndex(e => e.ForCompanyUser, "FKtkhngfc9mpa00eyggq9gmxesi");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyUserType).HasColumnName("company_user_type");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DesignationId).HasColumnName("designation_id");

                entity.Property(e => e.ForCompanyUser).HasColumnName("for_company_user");

                entity.Property(e => e.NoResponsibility)
                    .HasColumnType("bit(1)")
                    .HasColumnName("no_responsibility");

                entity.Property(e => e.PositionId).HasColumnName("position_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.UserResponsibilityId).HasColumnName("user_responsibility_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.CompanyUsersHistories)
                    .HasForeignKey(d => d.CompanyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKoyjc1edqjgcogcykcbxl98gk9");

                entity.HasOne(d => d.Designation)
                    .WithMany(p => p.CompanyUsersHistories)
                    .HasForeignKey(d => d.DesignationId)
                    .HasConstraintName("FKf6twulj6uqtthorl15pd81h4k");

                entity.HasOne(d => d.ForCompanyUserNavigation)
                    .WithMany(p => p.CompanyUsersHistories)
                    .HasForeignKey(d => d.ForCompanyUser)
                    .HasConstraintName("FKtkhngfc9mpa00eyggq9gmxesi");

                entity.HasOne(d => d.Position)
                    .WithMany(p => p.CompanyUsersHistories)
                    .HasForeignKey(d => d.PositionId)
                    .HasConstraintName("FK6nx5sr9wjjad2n28432kk3ccu");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.CompanyUsersHistories)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKchj9jd1ik97tfiqpbh78lf2md");

                entity.HasOne(d => d.UserResponsibility)
                    .WithMany(p => p.CompanyUsersHistories)
                    .HasForeignKey(d => d.UserResponsibilityId)
                    .HasConstraintName("FK6hifd7q97jdcapedcwwaokdc3");
            });

            modelBuilder.Entity<CompanyUsersHistoryAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("company_users_history_AUD");

                entity.HasIndex(e => e.Rev, "FKfoivetkuh6umf6mm6f0n1t65f");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.DesignationId).HasColumnName("designation_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.CompanyUsersHistoryAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKfoivetkuh6umf6mm6f0n1t65f");
            });

            modelBuilder.Entity<CompletionLetter>(entity =>
            {
                entity.ToTable("completion_letter");

                entity.HasIndex(e => e.TrainingProviderId, "FK9xahtskyqty0myxuc8dm5jpkt");

                entity.HasIndex(e => e.CreateUserId, "FKet4nkwe6u217r487nnibh7aep");

                entity.HasIndex(e => e.SummativeAssessmentReportId, "FKjpaprg5d0bo4cmgimwyrwbt4n");

                entity.HasIndex(e => e.CompanyId, "FKknh9fb0nmq58agrmsaiqepti");

                entity.HasIndex(e => e.CompanyLearnersId, "FKmfqwilj22v4uelgasr1gxx6ac");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AchievementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("achievement_date");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.AssessmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("assessment_date");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CompetenceEnum).HasColumnName("competence_enum");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.ModerationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("moderation_date");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SummativeAssessmentReportId).HasColumnName("summative_assessment_report_id");

                entity.Property(e => e.TrainingProviderId).HasColumnName("training_provider_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.CompletionLetterCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKknh9fb0nmq58agrmsaiqepti");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.CompletionLetters)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FKmfqwilj22v4uelgasr1gxx6ac");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.CompletionLetters)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKet4nkwe6u217r487nnibh7aep");

             /*   entity.HasOne(d => d.SummativeAssessmentReport)
                    .WithMany(p => p.CompletionLetters)
                    .HasForeignKey(d => d.SummativeAssessmentReportId)
                    .HasConstraintName("FKjpaprg5d0bo4cmgimwyrwbt4n");*/

                entity.HasOne(d => d.TrainingProvider)
                    .WithMany(p => p.CompletionLetterTrainingProviders)
                    .HasForeignKey(d => d.TrainingProviderId)
                    .HasConstraintName("FK9xahtskyqty0myxuc8dm5jpkt");
            });

            modelBuilder.Entity<ConfigDoc>(entity =>
            {
                entity.ToTable("config_doc");

                entity.HasIndex(e => e.ProcessRoles, "FKbci6p2ag9eriww13xdvag1dp8");

                entity.HasIndex(e => e.HostingCompanyId, "FKq9y9kq35eelpm2v1843fxjp93");

                entity.HasIndex(e => e.ParentConfigDocId, "FKsv4i12vbne19l56qc7rjoghcn");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ArplDocRequirements).HasColumnName("arpl_doc_requirements");

                entity.Property(e => e.CofigCount).HasColumnName("cofig_count");

                entity.Property(e => e.CompanyOrUserDocument).HasColumnName("company_or_user_document");

                entity.Property(e => e.ConfigDocProcess).HasColumnName("config_doc_process");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.JasperReport)
                    .HasMaxLength(300)
                    .HasColumnName("jasper_report");

                entity.Property(e => e.LearnerDocRequirements).HasColumnName("learner_doc_requirements");

                entity.Property(e => e.Name)
                    .HasMaxLength(300)
                    .HasColumnName("name");

                entity.Property(e => e.OriginalRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("original_required")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ParentConfigDocId).HasColumnName("parent_config_doc_id");

                entity.Property(e => e.ProcessRoles).HasColumnName("process_roles");

                entity.Property(e => e.ReqImmediate)
                    .HasColumnType("bit(1)")
                    .HasColumnName("req_immediate")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.RequiredDocument)
                    .HasColumnType("bit(1)")
                    .HasColumnName("required_document")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.RequiredForAppeal)
                    .HasColumnType("bit(1)")
                    .HasColumnName("required_for_appeal")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SdfRegistartionDoc).HasColumnName("sdf_registartion_doc");

                entity.Property(e => e.TransferDocumentsEnum).HasColumnName("transfer_documents_enum");

                entity.Property(e => e.UseAsDownload)
                    .HasColumnType("bit(1)")
                    .HasColumnName("use_as_download")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.WpaDocRequirements).HasColumnName("wpa_doc_requirements");

                entity.Property(e => e.WspDocRequirements).HasColumnName("wsp_doc_requirements");

                entity.HasOne(d => d.HostingCompany)
                    .WithMany(p => p.ConfigDocs)
                    .HasForeignKey(d => d.HostingCompanyId)
                    .HasConstraintName("FKq9y9kq35eelpm2v1843fxjp93");

                entity.HasOne(d => d.ParentConfigDoc)
                    .WithMany(p => p.InverseParentConfigDoc)
                    .HasForeignKey(d => d.ParentConfigDocId)
                    .HasConstraintName("FKsv4i12vbne19l56qc7rjoghcn");

                entity.HasOne(d => d.ProcessRolesNavigation)
                    .WithMany(p => p.ConfigDocs)
                    .HasForeignKey(d => d.ProcessRoles)
                    .HasConstraintName("FKbci6p2ag9eriww13xdvag1dp8");
            });

            modelBuilder.Entity<Country>(entity =>
            {
                entity.ToTable("country");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<CoursewareDistibution>(entity =>
            {
                entity.ToTable("courseware_distibution");

                entity.HasIndex(e => e.ModulesId, "FK7vf0k6xejs95h81xmessta8sr");

                entity.HasIndex(e => e.UserId, "FKj6pn4q353lpbxq0urb6kpcnqn");

                entity.HasIndex(e => e.UnitStandardsId, "FKkqllyot84kjkmup3v2gycgwi9");

                entity.HasIndex(e => e.CompanyId, "FKpl3vcjxilf2fv70mga08ccj1l");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ModulesId).HasColumnName("modules_id");

                entity.Property(e => e.UnitStandardsId).HasColumnName("unit_standards_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.CoursewareDistibutions)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKpl3vcjxilf2fv70mga08ccj1l");

                entity.HasOne(d => d.Modules)
                    .WithMany(p => p.CoursewareDistibutions)
                    .HasForeignKey(d => d.ModulesId)
                    .HasConstraintName("FK7vf0k6xejs95h81xmessta8sr");

                entity.HasOne(d => d.UnitStandards)
                    .WithMany(p => p.CoursewareDistibutions)
                    .HasForeignKey(d => d.UnitStandardsId)
                    .HasConstraintName("FKkqllyot84kjkmup3v2gycgwi9");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.CoursewareDistibutions)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKj6pn4q353lpbxq0urb6kpcnqn");
            });

            modelBuilder.Entity<DateChangeMultipleSelection>(entity =>
            {
                entity.ToTable("date_change_multiple_selection");

                entity.HasIndex(e => e.DateChangeReasonId, "FK17fuvoffrgxv9syp4jltnbnb5");

                entity.HasIndex(e => e.CreateUserId, "FKcv1wxmumc691g55fc9ie2tul9");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.DateChangeReasonId).HasColumnName("date_change_reason_id");

                entity.Property(e => e.ForProcess).HasColumnName("for_process");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.DateChangeMultipleSelections)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKcv1wxmumc691g55fc9ie2tul9");

                entity.HasOne(d => d.DateChangeReason)
                    .WithMany(p => p.DateChangeMultipleSelections)
                    .HasForeignKey(d => d.DateChangeReasonId)
                    .HasConstraintName("FK17fuvoffrgxv9syp4jltnbnb5");
            });

            modelBuilder.Entity<DateChangeMultipleSelectionHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("date_change_multiple_selection_hist");

                entity.HasIndex(e => e.Rev, "FKb5amdh61fbtkrxf63956wsfa7");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.DateChangeReasonId).HasColumnName("date_change_reason_id");

                entity.Property(e => e.ForProcess).HasColumnName("for_process");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.DateChangeMultipleSelectionHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKb5amdh61fbtkrxf63956wsfa7");
            });

            modelBuilder.Entity<DateChangeReason>(entity =>
            {
                entity.ToTable("date_change_reasons");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.ForManagerSelection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_manager_selection");

                entity.Property(e => e.ForProcess).HasColumnName("for_process");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Department>(entity =>
            {
                entity.ToTable("department");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<DesignatedTrade>(entity =>
            {
                entity.ToTable("designated_trade");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AutoExtend)
                    .HasColumnType("bit(1)")
                    .HasColumnName("auto_extend");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.DesignatedTradeType).HasColumnName("designated_trade_type");

                entity.Property(e => e.Duration).HasColumnName("duration");

                entity.Property(e => e.Extention).HasColumnName("extention");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(50)
                    .HasColumnName("qualification_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<DesignatedTradeHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("designated_trade_hist");

                entity.HasIndex(e => e.Rev, "FKd3jrpvnw4ovgx4oxm9gqg969u");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AutoExtend)
                    .HasColumnType("bit(1)")
                    .HasColumnName("auto_extend");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.DesignatedTradeType).HasColumnName("designated_trade_type");

                entity.Property(e => e.Duration).HasColumnName("duration");

                entity.Property(e => e.Extention).HasColumnName("extention");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(50)
                    .HasColumnName("qualification_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.DesignatedTradeHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKd3jrpvnw4ovgx4oxm9gqg969u");
            });

            modelBuilder.Entity<DesignatedTradeLevel>(entity =>
            {
                entity.ToTable("designated_trade_level");

                entity.HasIndex(e => e.DesignatedTradeTypeId, "FK7yi8uy0q09l98xl6vjf3c7g0m");

                entity.HasIndex(e => e.DesignatedTradeId, "FK85btgox5pbolpknn7ehay913m");

                entity.HasIndex(e => e.QualificationId, "FKoa8swvajcifwsh34r1ig11623");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateLegacyAttempts)
                    .HasColumnType("datetime")
                    .HasColumnName("dateLegacyAttempts");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.DesignatedTradeId).HasColumnName("designated_trade_id");

                entity.Property(e => e.DesignatedTradeTypeId).HasColumnName("designated_trade_type_id");

                entity.Property(e => e.DocumentNumber)
                    .HasMaxLength(500)
                    .HasColumnName("document_number");

                entity.Property(e => e.DocumentTitle)
                    .HasMaxLength(500)
                    .HasColumnName("document_title");

                entity.Property(e => e.Extension)
                    .HasColumnType("bit(1)")
                    .HasColumnName("extension");

                entity.Property(e => e.LegacyMaxAttemptsAmount).HasColumnName("legacy_max_attempts_amount");

                entity.Property(e => e.Level).HasColumnName("level");

                entity.Property(e => e.MaxAttemptsAmount).HasColumnName("max_attempts_amount");

                entity.Property(e => e.Maxweeks).HasColumnName("maxweeks");

                entity.Property(e => e.Minweeks).HasColumnName("minweeks");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NoOrder)
                    .HasColumnType("bit(1)")
                    .HasColumnName("no_order")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.ReportDisplayName)
                    .HasMaxLength(500)
                    .HasColumnName("report_display_name");

                entity.Property(e => e.ReportDownloadName)
                    .HasMaxLength(500)
                    .HasColumnName("report_download_name");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.TotalModulesAssigned).HasColumnName("total_modules_assigned");

                entity.HasOne(d => d.DesignatedTrade)
                    .WithMany(p => p.DesignatedTradeLevels)
                    .HasForeignKey(d => d.DesignatedTradeId)
                    .HasConstraintName("FK85btgox5pbolpknn7ehay913m");

                entity.HasOne(d => d.DesignatedTradeType)
                    .WithMany(p => p.DesignatedTradeLevels)
                    .HasForeignKey(d => d.DesignatedTradeTypeId)
                    .HasConstraintName("FK7yi8uy0q09l98xl6vjf3c7g0m");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.DesignatedTradeLevels)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKoa8swvajcifwsh34r1ig11623");
            });

            modelBuilder.Entity<DesignatedTradeLevelHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("designated_trade_level_hist");

                entity.HasIndex(e => e.Rev, "FKe1mvoawfv61x5e8igp3is5wyk");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.DateLegacyAttempts)
                    .HasColumnType("datetime")
                    .HasColumnName("dateLegacyAttempts");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.DesignatedTradeId).HasColumnName("designated_trade_id");

                entity.Property(e => e.DesignatedTradeTypeId).HasColumnName("designated_trade_type_id");

                entity.Property(e => e.DocumentNumber)
                    .HasMaxLength(500)
                    .HasColumnName("document_number");

                entity.Property(e => e.DocumentTitle)
                    .HasMaxLength(500)
                    .HasColumnName("document_title");

                entity.Property(e => e.Extension)
                    .HasColumnType("bit(1)")
                    .HasColumnName("extension");

                entity.Property(e => e.LegacyMaxAttemptsAmount).HasColumnName("legacy_max_attempts_amount");

                entity.Property(e => e.Level).HasColumnName("level");

                entity.Property(e => e.MaxAttemptsAmount).HasColumnName("max_attempts_amount");

                entity.Property(e => e.Maxweeks).HasColumnName("maxweeks");

                entity.Property(e => e.Minweeks).HasColumnName("minweeks");

                entity.Property(e => e.NoOrder)
                    .HasColumnType("bit(1)")
                    .HasColumnName("no_order")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.ReportDisplayName)
                    .HasMaxLength(500)
                    .HasColumnName("report_display_name");

                entity.Property(e => e.ReportDownloadName)
                    .HasMaxLength(500)
                    .HasColumnName("report_download_name");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TotalModulesAssigned).HasColumnName("total_modules_assigned");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.DesignatedTradeLevelHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKe1mvoawfv61x5e8igp3is5wyk");
            });

            modelBuilder.Entity<DesignatedTradeLevelItem>(entity =>
            {
                entity.ToTable("designated_trade_level_items");

                entity.HasIndex(e => e.DesignatedTradeLevelId, "FKi94j9d8psbrn1ct7ui2lxjfgh");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.DesignatedTradeLevelId).HasColumnName("designated_trade_level_id");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.DesignatedTradeLevel)
                    .WithMany(p => p.DesignatedTradeLevelItems)
                    .HasForeignKey(d => d.DesignatedTradeLevelId)
                    .HasConstraintName("FKi94j9d8psbrn1ct7ui2lxjfgh");
            });

            modelBuilder.Entity<DesignatedTradeLevelItemsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("designated_trade_level_items_hist");

                entity.HasIndex(e => e.Rev, "FKk80dsii7nxpe40sevxkibiyld");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.DesignatedTradeLevelId).HasColumnName("designated_trade_level_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.DesignatedTradeLevelItemsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKk80dsii7nxpe40sevxkibiyld");
            });

            modelBuilder.Entity<DesignatedTradeType>(entity =>
            {
                entity.ToTable("designated_trade_type");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Designation>(entity =>
            {
                entity.ToTable("designation");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SdpDesignation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sdp_designation")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<DesignationStructureStatusStructureStatus>(entity =>
            {
                entity.ToTable("DesignationStructureStatus_structure_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<DetailsOfExperienceArpl>(entity =>
            {
                entity.ToTable("details_of_experience_arpl");

                entity.HasIndex(e => e.CompanyLearnersTradeTestId, "FKcvt0bohma9i6te98191nji1ir");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyLearnersTradeTestId).HasColumnName("company_learners_trade_test_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Detail).HasColumnName("detail");

                entity.Property(e => e.FromDate)
                    .HasColumnType("datetime")
                    .HasColumnName("from_date");

                entity.Property(e => e.NameAddressWorkplace).HasColumnName("name_address_workplace");

                entity.Property(e => e.ToDate)
                    .HasColumnType("datetime")
                    .HasColumnName("to_date");

                entity.HasOne(d => d.CompanyLearnersTradeTest)
                    .WithMany(p => p.DetailsOfExperienceArpls)
                    .HasForeignKey(d => d.CompanyLearnersTradeTestId)
                    .HasConstraintName("FKcvt0bohma9i6te98191nji1ir");
            });

            modelBuilder.Entity<DetailsOfTrainingArpl>(entity =>
            {
                entity.ToTable("details_of_training_arpl");

                entity.HasIndex(e => e.CompanyLearnersTradeTestId, "FK1qyqw5kjcne6725ixieg9td78");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyLearnersTradeTestId).HasColumnName("company_learners_trade_test_id");

                entity.Property(e => e.Course).HasColumnName("course");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FromDate)
                    .HasColumnType("datetime")
                    .HasColumnName("from_date");

                entity.Property(e => e.NameSkillsProvider).HasColumnName("name_skills_provider");

                entity.Property(e => e.ToDate)
                    .HasColumnType("datetime")
                    .HasColumnName("to_date");

                entity.HasOne(d => d.CompanyLearnersTradeTest)
                    .WithMany(p => p.DetailsOfTrainingArpls)
                    .HasForeignKey(d => d.CompanyLearnersTradeTestId)
                    .HasConstraintName("FK1qyqw5kjcne6725ixieg9td78");
            });

            modelBuilder.Entity<DeviationPercentage>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("deviation_percentage");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(70)
                    .HasColumnName("company_name");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(40)
                    .HasColumnName("levy_number");

                entity.Property(e => e.Percentage)
                    .HasPrecision(62, 4)
                    .HasColumnName("percentage");

                entity.Property(e => e.TotalCalcData)
                    .HasPrecision(55)
                    .HasColumnName("total_calc_data");

                entity.Property(e => e.TotalTrainData)
                    .HasPrecision(55)
                    .HasColumnName("total_train_data");
            });

            modelBuilder.Entity<DeviationReason>(entity =>
            {
                entity.ToTable("deviation_reasons");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<DgAllocation>(entity =>
            {
                entity.ToTable("dg_allocation");

                entity.HasIndex(e => e.MandatoryGrantId, "FK744jia9nm5ibxvvhjthbdrdi4");

                entity.HasIndex(e => e.InterventionTypeId, "FKk6569e09flyljnq9f55513rh6");

                entity.HasIndex(e => e.DgAllocationParentId, "FKruguu05au4ynate15obmw9otw");

                entity.HasIndex(e => e.WspId, "FKs2cwd7pe1q66smot3wsreoph1");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AllocationStatusEnum)
                    .HasMaxLength(255)
                    .HasColumnName("allocation_status_enum");

                entity.Property(e => e.AvailableAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("available_amount");

                entity.Property(e => e.AwardAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("award_amount");

                entity.Property(e => e.BalanceRemaining)
                    .HasPrecision(19, 2)
                    .HasColumnName("balance_remaining");

                entity.Property(e => e.BalanceRemainingWithCoFunding)
                    .HasPrecision(19, 2)
                    .HasColumnName("balance_remaining_with_co_funding");

                entity.Property(e => e.ChangeAllocationLearners).HasColumnName("change_allocation_learners");

                entity.Property(e => e.CloLearners).HasColumnName("clo_learners");

                entity.Property(e => e.CoFundingAwardAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("co_funding_award_amount");

                entity.Property(e => e.CoFundingBalanceRemaining)
                    .HasPrecision(19, 2)
                    .HasColumnName("co_funding_balance_remaining");

                entity.Property(e => e.CoFundingGrantAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("co_funding_grant_amount");

                entity.Property(e => e.CoFundingLearnersAwarded).HasColumnName("co_funding_learners_awarded");

                entity.Property(e => e.CoFundingRunningTotal)
                    .HasPrecision(19, 2)
                    .HasColumnName("co_funding_running_total");

                entity.Property(e => e.CompanyCategorization).HasColumnName("company_categorization");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CrmLearners).HasColumnName("crm_learners");

                entity.Property(e => e.DgAllocationParentId).HasColumnName("dg_allocation_parent_id");

                entity.Property(e => e.DgLevyAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("dg_levy_amount");

                entity.Property(e => e.DisabledGrantAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("disabled_grant_amount");

                entity.Property(e => e.DisabledTotalLearners).HasColumnName("disabled_total_learners");

                entity.Property(e => e.EmployedLearners).HasColumnName("employed_learners");

                entity.Property(e => e.GrantAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("grant_amount");

                entity.Property(e => e.InitialLearners).HasColumnName("initial_learners");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.MandatoryGrantId).HasColumnName("mandatory_grant_id");

                entity.Property(e => e.MaxLearners).HasColumnName("max_learners");

                entity.Property(e => e.MaxPossibleAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("max_possible_amount");

                entity.Property(e => e.MaxPossibleAmountRemaining)
                    .HasPrecision(19, 2)
                    .HasColumnName("max_possible_amount_remaining");

                entity.Property(e => e.MaxPossibleLearners).HasColumnName("max_possible_learners");

                entity.Property(e => e.MaxPossibleLearnersRemaining).HasColumnName("max_possible_learners_remaining");

                entity.Property(e => e.NumberDisabled).HasColumnName("number_disabled");

                entity.Property(e => e.NumberOfLearners).HasColumnName("number_of_learners");

                entity.Property(e => e.RecommendedAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("recommended_amount");

                entity.Property(e => e.RemainingCoFundingGrantAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("remaining_co_funding_grant_amount");

                entity.Property(e => e.RequestedAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("requested_amount");

                entity.Property(e => e.RunningTotal)
                    .HasPrecision(19, 2)
                    .HasColumnName("running_total");

                entity.Property(e => e.SystemChangeAllocationLearners)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_change_allocation_learners")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TotalAwardAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("total_award_amount");

                entity.Property(e => e.TotalLearners).HasColumnName("total_learners");

                entity.Property(e => e.TotalLevyAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("total_levy_amount");

                entity.Property(e => e.UnemployedLearners).HasColumnName("unemployed_learners");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.DgAllocationParent)
                    .WithMany(p => p.DgAllocations)
                    .HasForeignKey(d => d.DgAllocationParentId)
                    .HasConstraintName("FKruguu05au4ynate15obmw9otw");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.DgAllocations)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FKk6569e09flyljnq9f55513rh6");

                entity.HasOne(d => d.MandatoryGrant)
                    .WithMany(p => p.DgAllocations)
                    .HasForeignKey(d => d.MandatoryGrantId)
                    .HasConstraintName("FK744jia9nm5ibxvvhjthbdrdi4");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.DgAllocations)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKs2cwd7pe1q66smot3wsreoph1");
            });

            modelBuilder.Entity<DgAllocationHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("dg_allocation_hist");

                entity.HasIndex(e => e.Rev, "FKhs6ak8x11qwkypw5xrq2iaarw");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AllocationStatusEnum)
                    .HasMaxLength(255)
                    .HasColumnName("allocation_status_enum");

                entity.Property(e => e.AvailableAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("available_amount");

                entity.Property(e => e.AwardAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("award_amount");

                entity.Property(e => e.BalanceRemaining)
                    .HasPrecision(19, 2)
                    .HasColumnName("balance_remaining");

                entity.Property(e => e.BalanceRemainingWithCoFunding)
                    .HasPrecision(19, 2)
                    .HasColumnName("balance_remaining_with_co_funding");

                entity.Property(e => e.ChangeAllocationLearners).HasColumnName("change_allocation_learners");

                entity.Property(e => e.CloLearners).HasColumnName("clo_learners");

                entity.Property(e => e.CoFundingAwardAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("co_funding_award_amount");

                entity.Property(e => e.CoFundingGrantAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("co_funding_grant_amount");

                entity.Property(e => e.CoFundingLearnersAwarded).HasColumnName("co_funding_learners_awarded");

                entity.Property(e => e.CoFundingRunningTotal)
                    .HasPrecision(19, 2)
                    .HasColumnName("co_funding_running_total");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CrmLearners).HasColumnName("crm_learners");

                entity.Property(e => e.DgAllocationParentId).HasColumnName("dg_allocation_parent_id");

                entity.Property(e => e.DisabledGrantAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("disabled_grant_amount");

                entity.Property(e => e.DisabledTotalLearners).HasColumnName("disabled_total_learners");

                entity.Property(e => e.EmployedLearners).HasColumnName("employed_learners");

                entity.Property(e => e.GrantAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("grant_amount");

                entity.Property(e => e.InitialLearners).HasColumnName("initial_learners");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.MandatoryGrantId).HasColumnName("mandatory_grant_id");

                entity.Property(e => e.MaxLearners).HasColumnName("max_learners");

                entity.Property(e => e.MaxPossibleAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("max_possible_amount");

                entity.Property(e => e.MaxPossibleAmountRemaining)
                    .HasPrecision(19, 2)
                    .HasColumnName("max_possible_amount_remaining");

                entity.Property(e => e.MaxPossibleLearners).HasColumnName("max_possible_learners");

                entity.Property(e => e.MaxPossibleLearnersRemaining).HasColumnName("max_possible_learners_remaining");

                entity.Property(e => e.NumberDisabled).HasColumnName("number_disabled");

                entity.Property(e => e.NumberOfLearners).HasColumnName("number_of_learners");

                entity.Property(e => e.RecommendedAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("recommended_amount");

                entity.Property(e => e.RemainingCoFundingGrantAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("remaining_co_funding_grant_amount");

                entity.Property(e => e.RequestedAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("requested_amount");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RunningTotal)
                    .HasPrecision(19, 2)
                    .HasColumnName("running_total");

                entity.Property(e => e.SystemChangeAllocationLearners)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_change_allocation_learners")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TotalAwardAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("total_award_amount");

                entity.Property(e => e.TotalLearners).HasColumnName("total_learners");

                entity.Property(e => e.TotalLevyAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("total_levy_amount");

                entity.Property(e => e.UnemployedLearners).HasColumnName("unemployed_learners");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.DgAllocationHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKhs6ak8x11qwkypw5xrq2iaarw");
            });

            modelBuilder.Entity<DgAllocationParent>(entity =>
            {
                entity.ToTable("dg_allocation_parent");

                entity.HasIndex(e => e.UserApproveRejectedAppeal, "FKbca986i3draf2vjii93somasm");

                entity.HasIndex(e => e.SubmissionUserId, "FKhlpdbw1cvk6p1eqsers59qfu1");

                entity.HasIndex(e => e.WspId, "FKi35y43x6178nk5013swt0nnmy");

                entity.HasIndex(e => e.UserAppealed, "FKkh8k7bspifx07kb6t9hpg1n26");

                entity.HasIndex(e => e.AllocationParentId, "FKl52vqay4ancqr42ealbk9vpqe");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AcceptanceDate)
                    .HasColumnType("datetime")
                    .HasColumnName("acceptance_date");

                entity.Property(e => e.AllocationParentId).HasColumnName("allocation_parent_id");

                entity.Property(e => e.AllocationStatusEnum)
                    .HasMaxLength(255)
                    .HasColumnName("allocation_status_enum");

                entity.Property(e => e.AlreadyRequested)
                    .HasColumnType("bit(1)")
                    .HasColumnName("already_requested")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AppealStatus).HasColumnName("appeal_status");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.AvailableCoFundingAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("available_co_funding_amount");

                entity.Property(e => e.CompanyCategorization).HasColumnName("company_categorization");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateAppealed)
                    .HasColumnType("datetime")
                    .HasColumnName("date_appealed");

                entity.Property(e => e.DateAppealedApprovedRejected)
                    .HasColumnType("datetime")
                    .HasColumnName("date_appealed_approved_rejected");

                entity.Property(e => e.DgLevyAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("dg_levy_amount");

                entity.Property(e => e.DgLevyOriginalAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("dg_levy_original_amount");

                entity.Property(e => e.DiscretionalWithdrawalAppealEnum).HasColumnName("discretional_withdrawal_appeal_enum");

                entity.Property(e => e.DontAllocate)
                    .HasColumnType("bit(1)")
                    .HasColumnName("dont_allocate")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SubmissionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("submission_date");

                entity.Property(e => e.SubmissionUserId).HasColumnName("submission_user_id");

                entity.Property(e => e.UserAppealed).HasColumnName("user_appealed");

                entity.Property(e => e.UserApproveRejectedAppeal).HasColumnName("user_approve_rejected_appeal");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.AllocationParent)
                    .WithMany(p => p.InverseAllocationParent)
                    .HasForeignKey(d => d.AllocationParentId)
                    .HasConstraintName("FKl52vqay4ancqr42ealbk9vpqe");

                entity.HasOne(d => d.SubmissionUser)
                    .WithMany(p => p.DgAllocationParentSubmissionUsers)
                    .HasForeignKey(d => d.SubmissionUserId)
                    .HasConstraintName("FKhlpdbw1cvk6p1eqsers59qfu1");

                entity.HasOne(d => d.UserAppealedNavigation)
                    .WithMany(p => p.DgAllocationParentUserAppealedNavigations)
                    .HasForeignKey(d => d.UserAppealed)
                    .HasConstraintName("FKkh8k7bspifx07kb6t9hpg1n26");

                entity.HasOne(d => d.UserApproveRejectedAppealNavigation)
                    .WithMany(p => p.DgAllocationParentUserApproveRejectedAppealNavigations)
                    .HasForeignKey(d => d.UserApproveRejectedAppeal)
                    .HasConstraintName("FKbca986i3draf2vjii93somasm");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.DgAllocationParents)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKi35y43x6178nk5013swt0nnmy");
            });

            modelBuilder.Entity<DgAllocationParentHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("dg_allocation_parent_hist");

                entity.HasIndex(e => e.Rev, "FK491maj96d2d06bk9963ou2wek");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AcceptanceDate)
                    .HasColumnType("datetime")
                    .HasColumnName("acceptance_date");

                entity.Property(e => e.AllocationParentId).HasColumnName("allocation_parent_id");

                entity.Property(e => e.AllocationStatusEnum)
                    .HasMaxLength(255)
                    .HasColumnName("allocation_status_enum");

                entity.Property(e => e.AlreadyRequested)
                    .HasColumnType("bit(1)")
                    .HasColumnName("already_requested")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AppealStatus).HasColumnName("appeal_status");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.AvailableCoFundingAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("available_co_funding_amount");

                entity.Property(e => e.CompanyCategorization).HasColumnName("company_categorization");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateAppealed)
                    .HasColumnType("datetime")
                    .HasColumnName("date_appealed");

                entity.Property(e => e.DateAppealedApprovedRejected)
                    .HasColumnType("datetime")
                    .HasColumnName("date_appealed_approved_rejected");

                entity.Property(e => e.DgLevyAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("dg_levy_amount");

                entity.Property(e => e.DgLevyOriginalAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("dg_levy_original_amount");

                entity.Property(e => e.DiscretionalWithdrawalAppealEnum).HasColumnName("discretional_withdrawal_appeal_enum");

                entity.Property(e => e.DontAllocate)
                    .HasColumnType("bit(1)")
                    .HasColumnName("dont_allocate")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SubmissionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("submission_date");

                entity.Property(e => e.SubmissionUserId).HasColumnName("submission_user_id");

                entity.Property(e => e.UserAppealed).HasColumnName("user_appealed");

                entity.Property(e => e.UserApproveRejectedAppeal).HasColumnName("user_approve_rejected_appeal");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.DgAllocationParentHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK491maj96d2d06bk9963ou2wek");
            });

            modelBuilder.Entity<DgContractingBulkEntry>(entity =>
            {
                entity.ToTable("dg_contracting_bulk_entry");

                entity.HasIndex(e => e.CreateUserId, "FK5xf2ujlrq0ofnhskungpsd83d");

                entity.HasIndex(e => e.SubmissionUser, "FK88614e6ijntc5gfpou2q0th06");

                entity.HasIndex(e => e.ApprovalUserId, "FKjkayp9v1klimf9tsy6gnvyg9k");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalUserId).HasColumnName("approval_user_id");

                entity.Property(e => e.BatchNumber).HasColumnName("batch_number");

                entity.Property(e => e.BulkApproval).HasColumnName("bulk_approval");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SubmissionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("submission_date");

                entity.Property(e => e.SubmissionUser).HasColumnName("submission_user");

                entity.HasOne(d => d.ApprovalUser)
                    .WithMany(p => p.DgContractingBulkEntryApprovalUsers)
                    .HasForeignKey(d => d.ApprovalUserId)
                    .HasConstraintName("FKjkayp9v1klimf9tsy6gnvyg9k");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.DgContractingBulkEntryCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FK5xf2ujlrq0ofnhskungpsd83d");

                entity.HasOne(d => d.SubmissionUserNavigation)
                    .WithMany(p => p.DgContractingBulkEntrySubmissionUserNavigations)
                    .HasForeignKey(d => d.SubmissionUser)
                    .HasConstraintName("FK88614e6ijntc5gfpou2q0th06");
            });

            modelBuilder.Entity<DgContractingBulkItem>(entity =>
            {
                entity.ToTable("dg_contracting_bulk_items");

                entity.HasIndex(e => e.ActiveContractsId, "FK4tlxfrntv2ny34f89ujjdubq7");

                entity.HasIndex(e => e.ApprovalUserId, "FKau35fxo6vk1qc5uoj3mbtiee9");

                entity.HasIndex(e => e.DgContractingBulkEntryId, "FKn5ucp18xsfotavl6farb92ecr");

                entity.HasIndex(e => e.CreateUserId, "FKqbwmxxy72jct0ee3eihpxoomx");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActiveContractsId).HasColumnName("active_contracts_id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalUserId).HasColumnName("approval_user_id");

                entity.Property(e => e.BulkApproval).HasColumnName("bulk_approval");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.DgContractingBulkEntryId).HasColumnName("dg_contracting_bulk_entry_id");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.StatusAssigned).HasColumnName("status_assigned");

                entity.Property(e => e.WithdrawalAppealEnum).HasColumnName("withdrawal_appeal_enum");

                entity.HasOne(d => d.ActiveContracts)
                    .WithMany(p => p.DgContractingBulkItems)
                    .HasForeignKey(d => d.ActiveContractsId)
                    .HasConstraintName("FK4tlxfrntv2ny34f89ujjdubq7");

                entity.HasOne(d => d.ApprovalUser)
                    .WithMany(p => p.DgContractingBulkItemApprovalUsers)
                    .HasForeignKey(d => d.ApprovalUserId)
                    .HasConstraintName("FKau35fxo6vk1qc5uoj3mbtiee9");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.DgContractingBulkItemCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKqbwmxxy72jct0ee3eihpxoomx");

                entity.HasOne(d => d.DgContractingBulkEntry)
                    .WithMany(p => p.DgContractingBulkItems)
                    .HasForeignKey(d => d.DgContractingBulkEntryId)
                    .HasConstraintName("FKn5ucp18xsfotavl6farb92ecr");
            });

            modelBuilder.Entity<DgLegacyPayment>(entity =>
            {
                entity.ToTable("dg_legacy_payments");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CurrentTrxAmount)
                    .HasMaxLength(255)
                    .HasColumnName("current_trx_amount");

                entity.Property(e => e.CurrentTrxAmountConverted).HasColumnName("current_trx_amount_converted");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.DocumentAmount)
                    .HasMaxLength(255)
                    .HasColumnName("document_amount");

                entity.Property(e => e.DocumentAmountConverted).HasColumnName("document_amount_converted");

                entity.Property(e => e.DocumentDate)
                    .HasMaxLength(255)
                    .HasColumnName("document_date");

                entity.Property(e => e.DocumentDateConverted)
                    .HasColumnType("datetime")
                    .HasColumnName("document_date_converted");

                entity.Property(e => e.DocumentNumber)
                    .HasMaxLength(255)
                    .HasColumnName("document_number");

                entity.Property(e => e.DocumentStatus)
                    .HasMaxLength(255)
                    .HasColumnName("document_status");

                entity.Property(e => e.DocumentType)
                    .HasMaxLength(255)
                    .HasColumnName("document_type");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.PostedDate)
                    .HasMaxLength(255)
                    .HasColumnName("posted_date");

                entity.Property(e => e.PostedDateConverted)
                    .HasColumnType("datetime")
                    .HasColumnName("posted_date_converted");

                entity.Property(e => e.PostingDate)
                    .HasMaxLength(255)
                    .HasColumnName("posting_date");

                entity.Property(e => e.PostingDateConverted)
                    .HasColumnType("datetime")
                    .HasColumnName("posting_date_converted");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SchemeYear)
                    .HasMaxLength(255)
                    .HasColumnName("scheme_year");

                entity.Property(e => e.SchemeYearConverted).HasColumnName("scheme_year_converted");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.TransactionDescription)
                    .HasMaxLength(255)
                    .HasColumnName("transaction_description");

                entity.Property(e => e.TrxSource)
                    .HasMaxLength(255)
                    .HasColumnName("trx_source");

                entity.Property(e => e.VendorId)
                    .HasMaxLength(255)
                    .HasColumnName("vendor_id");

                entity.Property(e => e.VendorName)
                    .HasMaxLength(255)
                    .HasColumnName("vendor_name");

                entity.Property(e => e.Voided)
                    .HasMaxLength(255)
                    .HasColumnName("voided");

                entity.Property(e => e.VoucherNumber)
                    .HasMaxLength(255)
                    .HasColumnName("voucher_number");
            });

            modelBuilder.Entity<DgLegacyPaymentsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("dg_legacy_payments_hist");

                entity.HasIndex(e => e.Rev, "FK29o04dyi8vehibxfr7dgdi9mu");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CurrentTrxAmount)
                    .HasMaxLength(255)
                    .HasColumnName("current_trx_amount");

                entity.Property(e => e.CurrentTrxAmountConverted).HasColumnName("current_trx_amount_converted");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.DocumentAmount)
                    .HasMaxLength(255)
                    .HasColumnName("document_amount");

                entity.Property(e => e.DocumentAmountConverted).HasColumnName("document_amount_converted");

                entity.Property(e => e.DocumentDate)
                    .HasMaxLength(255)
                    .HasColumnName("document_date");

                entity.Property(e => e.DocumentDateConverted)
                    .HasColumnType("datetime")
                    .HasColumnName("document_date_converted");

                entity.Property(e => e.DocumentNumber)
                    .HasMaxLength(255)
                    .HasColumnName("document_number");

                entity.Property(e => e.DocumentStatus)
                    .HasMaxLength(255)
                    .HasColumnName("document_status");

                entity.Property(e => e.DocumentType)
                    .HasMaxLength(255)
                    .HasColumnName("document_type");

                entity.Property(e => e.PostedDate)
                    .HasMaxLength(255)
                    .HasColumnName("posted_date");

                entity.Property(e => e.PostedDateConverted)
                    .HasColumnType("datetime")
                    .HasColumnName("posted_date_converted");

                entity.Property(e => e.PostingDate)
                    .HasMaxLength(255)
                    .HasColumnName("posting_date");

                entity.Property(e => e.PostingDateConverted)
                    .HasColumnType("datetime")
                    .HasColumnName("posting_date_converted");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SchemeYear)
                    .HasMaxLength(255)
                    .HasColumnName("scheme_year");

                entity.Property(e => e.SchemeYearConverted).HasColumnName("scheme_year_converted");

                entity.Property(e => e.TransactionDescription)
                    .HasMaxLength(255)
                    .HasColumnName("transaction_description");

                entity.Property(e => e.TrxSource)
                    .HasMaxLength(255)
                    .HasColumnName("trx_source");

                entity.Property(e => e.VendorId)
                    .HasMaxLength(255)
                    .HasColumnName("vendor_id");

                entity.Property(e => e.VendorName)
                    .HasMaxLength(255)
                    .HasColumnName("vendor_name");

                entity.Property(e => e.Voided)
                    .HasMaxLength(255)
                    .HasColumnName("voided");

                entity.Property(e => e.VoucherNumber)
                    .HasMaxLength(255)
                    .HasColumnName("voucher_number");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.DgLegacyPaymentsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK29o04dyi8vehibxfr7dgdi9mu");
            });

            modelBuilder.Entity<DgProjectType>(entity =>
            {
                entity.ToTable("dg_project_type");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<DgProjectTypeHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("dg_project_type_hist");

                entity.HasIndex(e => e.Rev, "FKocgqbmjxs0tebwfi1ff4kfm79");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.DgProjectTypeHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKocgqbmjxs0tebwfi1ff4kfm79");
            });

            modelBuilder.Entity<DgVerification>(entity =>
            {
                entity.ToTable("dg_verification");

                entity.HasIndex(e => e.CloUserId, "FK2hya7lv87u4mxglypc50tjte2");

                entity.HasIndex(e => e.AccessMaterialConsumable, "FK466i07t3w04nloibxrloyxhri");

                entity.HasIndex(e => e.CrmUserId, "FK8y9rtlotjl7yfy9waolip8fhr");

                entity.HasIndex(e => e.FinalResponseId, "FKca6pwoqbgafnd8g12fjd2k9qj");

                entity.HasIndex(e => e.AsPerSkillsArea, "FKcysd6uivbg8d7kefdbdwa2trm");

                entity.HasIndex(e => e.ExtensionOfScope, "FKftqof1hski4iraiqo47cfnl8n");

                entity.HasIndex(e => e.SuitableQualifiedMentor, "FKhjpdg0gkttstvcep4p60tb4vq");

                entity.HasIndex(e => e.EffectiveRecord, "FKibwg3m0eg8n0f6xfqfhsuxusm");

                entity.HasIndex(e => e.RelevantLearnerRatio, "FKlx1oynb7wtsmi9iaw6eq9sn0n");

                entity.HasIndex(e => e.PretectiveWear, "FKn32dehsew08w028rv0ky9iw6g");

                entity.HasIndex(e => e.NewApplication, "FKntr1cn5vr04vpnqybe7uhu0an");

                entity.HasIndex(e => e.AccessCover, "FKo48fl62fmswt460fyrjxd9ns9");

                entity.HasIndex(e => e.WspId, "FKp34nfoucppxtm4vpilm7ofysh");

                entity.HasIndex(e => e.WorkplaceLayout, "FKqw4opotex2yt2af08js73i6if");

                entity.HasIndex(e => e.PreviouslyApproved, "FKrkgm8n45sw66d9q5kyegjwr9h");

                entity.HasIndex(e => e.HealthSafetyOfficer, "FKrqqq6ywh8t3s45hus9fcwwq29");

                entity.HasIndex(e => e.RelevantCoreWork, "FKs1yo4gk1m5n3hiuwq34pk57tr");

                entity.HasIndex(e => e.ApprovedBySeta, "FKs6ce0tj9ac34f8045alscafaq");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccessCover).HasColumnName("access_cover");

                entity.Property(e => e.AccessMaterialConsumable).HasColumnName("access_material_consumable");

                entity.Property(e => e.ApplicationAppealed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_appealed");

                entity.Property(e => e.ApprovedBySeta).HasColumnName("approved_by_seta");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.AsPerSkillsArea).HasColumnName("as_per_skills_area");

                entity.Property(e => e.CloAlteration)
                    .HasColumnType("bit(1)")
                    .HasColumnName("clo_alteration");

                entity.Property(e => e.CloRecommendation).HasColumnName("clo_recommendation");

                entity.Property(e => e.CloUserId).HasColumnName("clo_user_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CrmAppealedDateApproved)
                    .HasColumnType("datetime")
                    .HasColumnName("crm_appealed_date_approved");

                entity.Property(e => e.CrmApprovalRejectionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("crm_approval_rejection_date");

                entity.Property(e => e.CrmDecision).HasColumnName("crm_decision");

                entity.Property(e => e.CrmUserId).HasColumnName("crm_user_id");

                entity.Property(e => e.DateAppealed)
                    .HasColumnType("datetime")
                    .HasColumnName("date_appealed");

                entity.Property(e => e.DateCaptured)
                    .HasColumnType("datetime")
                    .HasColumnName("date_captured");

                entity.Property(e => e.DiscretionalWithdrawalAppealEnum).HasColumnName("discretional_withdrawal_appeal_enum");

                entity.Property(e => e.EffectiveRecord).HasColumnName("effective_record");

                entity.Property(e => e.EnsureExplanation).HasColumnName("ensure_explanation");

                entity.Property(e => e.ExtensionOfScope).HasColumnName("extension_of_scope");

                entity.Property(e => e.FinalResponse).HasColumnName("final_response");

                entity.Property(e => e.FinalResponseId).HasColumnName("final_response_id");

                entity.Property(e => e.HealthSafetyOfficer).HasColumnName("health_safety_officer");

                entity.Property(e => e.LiaisonApplicationNotRecommended)
                    .HasColumnType("bit(1)")
                    .HasColumnName("liaison_application_not_recommended");

                entity.Property(e => e.LiaisonApplicationNotRecommendedDetail)
                    .HasMaxLength(500)
                    .HasColumnName("liaison_application_not_recommended_detail");

                entity.Property(e => e.LiaisonApplicationRecommended)
                    .HasColumnType("bit(1)")
                    .HasColumnName("liaison_application_recommended");

                entity.Property(e => e.NewApplication).HasColumnName("new_application");

                entity.Property(e => e.PretectiveWear).HasColumnName("pretective_wear");

                entity.Property(e => e.PreviouslyApproved).HasColumnName("previously_approved");

                entity.Property(e => e.ReadyForAllocation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("ready_for_allocation");

                entity.Property(e => e.RelevantCoreWork).HasColumnName("relevant_core_work");

                entity.Property(e => e.RelevantLearnerRatio).HasColumnName("relevant_learner_ratio");

                entity.Property(e => e.RequiresSiteVisit)
                    .HasColumnType("bit(1)")
                    .HasColumnName("requires_site_visit");

                entity.Property(e => e.RmApplicationNotRecommended)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rm_application_not_recommended");

                entity.Property(e => e.RmApplicationRecommended)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rm_application_recommended");

                entity.Property(e => e.RmNonDgApplicationNotRecommendedDetail)
                    .HasMaxLength(500)
                    .HasColumnName("rm_non_dg_application_not_recommended_detail");

                entity.Property(e => e.RmOveridingNonDgApplicationRecommendedDetail)
                    .HasMaxLength(500)
                    .HasColumnName("rm_overiding_non_dg_application_recommended_detail");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SuitableQualifiedMentor).HasColumnName("suitable_qualified_mentor");

                entity.Property(e => e.SystemApprovalRejection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_approval_rejection");

                entity.Property(e => e.WithSdf)
                    .HasColumnType("bit(1)")
                    .HasColumnName("with_sdf");

                entity.Property(e => e.WorkplaceLayout).HasColumnName("workplace_layout");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.AccessCoverNavigation)
                    .WithMany(p => p.DgVerificationAccessCoverNavigations)
                    .HasForeignKey(d => d.AccessCover)
                    .HasConstraintName("FKo48fl62fmswt460fyrjxd9ns9");

                entity.HasOne(d => d.AccessMaterialConsumableNavigation)
                    .WithMany(p => p.DgVerificationAccessMaterialConsumableNavigations)
                    .HasForeignKey(d => d.AccessMaterialConsumable)
                    .HasConstraintName("FK466i07t3w04nloibxrloyxhri");

                entity.HasOne(d => d.ApprovedBySetaNavigation)
                    .WithMany(p => p.DgVerifications)
                    .HasForeignKey(d => d.ApprovedBySeta)
                    .HasConstraintName("FKs6ce0tj9ac34f8045alscafaq");

                entity.HasOne(d => d.AsPerSkillsAreaNavigation)
                    .WithMany(p => p.DgVerificationAsPerSkillsAreaNavigations)
                    .HasForeignKey(d => d.AsPerSkillsArea)
                    .HasConstraintName("FKcysd6uivbg8d7kefdbdwa2trm");

                entity.HasOne(d => d.CloUser)
                    .WithMany(p => p.DgVerificationCloUsers)
                    .HasForeignKey(d => d.CloUserId)
                    .HasConstraintName("FK2hya7lv87u4mxglypc50tjte2");

                entity.HasOne(d => d.CrmUser)
                    .WithMany(p => p.DgVerificationCrmUsers)
                    .HasForeignKey(d => d.CrmUserId)
                    .HasConstraintName("FK8y9rtlotjl7yfy9waolip8fhr");

                entity.HasOne(d => d.EffectiveRecordNavigation)
                    .WithMany(p => p.DgVerificationEffectiveRecordNavigations)
                    .HasForeignKey(d => d.EffectiveRecord)
                    .HasConstraintName("FKibwg3m0eg8n0f6xfqfhsuxusm");

                entity.HasOne(d => d.ExtensionOfScopeNavigation)
                    .WithMany(p => p.DgVerificationExtensionOfScopeNavigations)
                    .HasForeignKey(d => d.ExtensionOfScope)
                    .HasConstraintName("FKftqof1hski4iraiqo47cfnl8n");

                entity.HasOne(d => d.FinalResponseNavigation)
                    .WithMany(p => p.DgVerificationFinalResponseNavigations)
                    .HasForeignKey(d => d.FinalResponseId)
                    .HasConstraintName("FKca6pwoqbgafnd8g12fjd2k9qj");

                entity.HasOne(d => d.HealthSafetyOfficerNavigation)
                    .WithMany(p => p.DgVerificationHealthSafetyOfficerNavigations)
                    .HasForeignKey(d => d.HealthSafetyOfficer)
                    .HasConstraintName("FKrqqq6ywh8t3s45hus9fcwwq29");

                entity.HasOne(d => d.NewApplicationNavigation)
                    .WithMany(p => p.DgVerificationNewApplicationNavigations)
                    .HasForeignKey(d => d.NewApplication)
                    .HasConstraintName("FKntr1cn5vr04vpnqybe7uhu0an");

                entity.HasOne(d => d.PretectiveWearNavigation)
                    .WithMany(p => p.DgVerificationPretectiveWearNavigations)
                    .HasForeignKey(d => d.PretectiveWear)
                    .HasConstraintName("FKn32dehsew08w028rv0ky9iw6g");

                entity.HasOne(d => d.PreviouslyApprovedNavigation)
                    .WithMany(p => p.DgVerificationPreviouslyApprovedNavigations)
                    .HasForeignKey(d => d.PreviouslyApproved)
                    .HasConstraintName("FKrkgm8n45sw66d9q5kyegjwr9h");

                entity.HasOne(d => d.RelevantCoreWorkNavigation)
                    .WithMany(p => p.DgVerificationRelevantCoreWorkNavigations)
                    .HasForeignKey(d => d.RelevantCoreWork)
                    .HasConstraintName("FKs1yo4gk1m5n3hiuwq34pk57tr");

                entity.HasOne(d => d.RelevantLearnerRatioNavigation)
                    .WithMany(p => p.DgVerificationRelevantLearnerRatioNavigations)
                    .HasForeignKey(d => d.RelevantLearnerRatio)
                    .HasConstraintName("FKlx1oynb7wtsmi9iaw6eq9sn0n");

                entity.HasOne(d => d.SuitableQualifiedMentorNavigation)
                    .WithMany(p => p.DgVerificationSuitableQualifiedMentorNavigations)
                    .HasForeignKey(d => d.SuitableQualifiedMentor)
                    .HasConstraintName("FKhjpdg0gkttstvcep4p60tb4vq");

                entity.HasOne(d => d.WorkplaceLayoutNavigation)
                    .WithMany(p => p.DgVerificationWorkplaceLayoutNavigations)
                    .HasForeignKey(d => d.WorkplaceLayout)
                    .HasConstraintName("FKqw4opotex2yt2af08js73i6if");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.DgVerifications)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKp34nfoucppxtm4vpilm7ofysh");
            });

            modelBuilder.Entity<DgVerificationHistory>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("dg_verification_history");

                entity.HasIndex(e => e.Rev, "FKg21j76krsxgeecrkk4kc09d5t");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AccessCover).HasColumnName("access_cover");

                entity.Property(e => e.AccessMaterialConsumable).HasColumnName("access_material_consumable");

                entity.Property(e => e.ApplicationAppealed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_appealed");

                entity.Property(e => e.ApprovedBySeta).HasColumnName("approved_by_seta");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.AsPerSkillsArea).HasColumnName("as_per_skills_area");

                entity.Property(e => e.CloAlteration)
                    .HasColumnType("bit(1)")
                    .HasColumnName("clo_alteration");

                entity.Property(e => e.CloRecommendation).HasColumnName("clo_recommendation");

                entity.Property(e => e.CloUserId).HasColumnName("clo_user_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CrmAppealedDateApproved)
                    .HasColumnType("datetime")
                    .HasColumnName("crm_appealed_date_approved");

                entity.Property(e => e.CrmApprovalRejectionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("crm_approval_rejection_date");

                entity.Property(e => e.CrmDecision).HasColumnName("crm_decision");

                entity.Property(e => e.CrmUserId).HasColumnName("crm_user_id");

                entity.Property(e => e.DateAppealed)
                    .HasColumnType("datetime")
                    .HasColumnName("date_appealed");

                entity.Property(e => e.DateCaptured)
                    .HasColumnType("datetime")
                    .HasColumnName("date_captured");

                entity.Property(e => e.DiscretionalWithdrawalAppealEnum).HasColumnName("discretional_withdrawal_appeal_enum");

                entity.Property(e => e.EffectiveRecord).HasColumnName("effective_record");

                entity.Property(e => e.EnsureExplanation).HasColumnName("ensure_explanation");

                entity.Property(e => e.ExtensionOfScope).HasColumnName("extension_of_scope");

                entity.Property(e => e.FinalResponse).HasColumnName("final_response");

                entity.Property(e => e.FinalResponseId).HasColumnName("final_response_id");

                entity.Property(e => e.HealthSafetyOfficer).HasColumnName("health_safety_officer");

                entity.Property(e => e.LiaisonApplicationNotRecommended)
                    .HasColumnType("bit(1)")
                    .HasColumnName("liaison_application_not_recommended");

                entity.Property(e => e.LiaisonApplicationNotRecommendedDetail)
                    .HasMaxLength(500)
                    .HasColumnName("liaison_application_not_recommended_detail");

                entity.Property(e => e.LiaisonApplicationRecommended)
                    .HasColumnType("bit(1)")
                    .HasColumnName("liaison_application_recommended");

                entity.Property(e => e.NewApplication).HasColumnName("new_application");

                entity.Property(e => e.PretectiveWear).HasColumnName("pretective_wear");

                entity.Property(e => e.PreviouslyApproved).HasColumnName("previously_approved");

                entity.Property(e => e.ReadyForAllocation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("ready_for_allocation");

                entity.Property(e => e.RelevantCoreWork).HasColumnName("relevant_core_work");

                entity.Property(e => e.RelevantLearnerRatio).HasColumnName("relevant_learner_ratio");

                entity.Property(e => e.RequiresSiteVisit)
                    .HasColumnType("bit(1)")
                    .HasColumnName("requires_site_visit");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RmApplicationNotRecommended)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rm_application_not_recommended");

                entity.Property(e => e.RmApplicationRecommended)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rm_application_recommended");

                entity.Property(e => e.RmNonDgApplicationNotRecommendedDetail)
                    .HasMaxLength(500)
                    .HasColumnName("rm_non_dg_application_not_recommended_detail");

                entity.Property(e => e.RmOveridingNonDgApplicationRecommendedDetail)
                    .HasMaxLength(500)
                    .HasColumnName("rm_overiding_non_dg_application_recommended_detail");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SuitableQualifiedMentor).HasColumnName("suitable_qualified_mentor");

                entity.Property(e => e.SystemApprovalRejection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_approval_rejection");

                entity.Property(e => e.WithSdf)
                    .HasColumnType("bit(1)")
                    .HasColumnName("with_sdf");

                entity.Property(e => e.WorkplaceLayout).HasColumnName("workplace_layout");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.DgVerificationHistories)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKg21j76krsxgeecrkk4kc09d5t");
            });

            modelBuilder.Entity<DgVerificationRejectionInformation>(entity =>
            {
                entity.ToTable("dg_verification_rejection_information");

                entity.HasIndex(e => e.RejectReasonId, "FKn89l34p3k6m6wu0sx6hhrck92");

                entity.HasIndex(e => e.UserId, "FKpcvomhv38gmlbul0k3a6xy27w");

                entity.HasIndex(e => e.DgVerificationId, "FKqba1c0j2gqsgamx5w1cnudwei");

                entity.HasIndex(e => e.RoleId, "FKtfhog73jsxh4ha3h4jhl48to6");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DgVerificationId).HasColumnName("dg_verification_id");

                entity.Property(e => e.FlatTaskLinkId).HasColumnName("flat_task_link_id");

                entity.Property(e => e.LatestEntry)
                    .HasColumnType("bit(1)")
                    .HasColumnName("latest_entry")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.RejectReasonId).HasColumnName("reject_reason_id");

                entity.Property(e => e.RoleId).HasColumnName("role_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.DgVerification)
                    .WithMany(p => p.DgVerificationRejectionInformations)
                    .HasForeignKey(d => d.DgVerificationId)
                    .HasConstraintName("FKqba1c0j2gqsgamx5w1cnudwei");

                entity.HasOne(d => d.RejectReason)
                    .WithMany(p => p.DgVerificationRejectionInformations)
                    .HasForeignKey(d => d.RejectReasonId)
                    .HasConstraintName("FKn89l34p3k6m6wu0sx6hhrck92");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.DgVerificationRejectionInformations)
                    .HasForeignKey(d => d.RoleId)
                    .HasConstraintName("FKtfhog73jsxh4ha3h4jhl48to6");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.DgVerificationRejectionInformations)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKpcvomhv38gmlbul0k3a6xy27w");
            });

            modelBuilder.Entity<DgVerificationSite>(entity =>
            {
                entity.ToTable("dg_verification_sites");

                entity.HasIndex(e => e.SitesId, "FK1q5pwx5urxf8nk6fcgljiorjl");

                entity.HasIndex(e => e.MandatoryGrantId, "FK2d3c5hcfgccwrs9ni1ah671tr");

                entity.HasIndex(e => e.QualificationId, "FKr2842we4jrutw9s9ugb1upxkt");

                entity.HasIndex(e => e.DgVerificationId, "FKsm425lb70sdp32n70v39p98ik");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DgVerificationId).HasColumnName("dg_verification_id");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.IdentityNumber)
                    .HasMaxLength(100)
                    .HasColumnName("identity_number");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.LearnershipRegistrationNumber).HasColumnName("learnership_registration_number");

                entity.Property(e => e.MandatoryGrantId).HasColumnName("mandatory_grant_id");

                entity.Property(e => e.NumberOfArtisans).HasColumnName("number_of_artisans");

                entity.Property(e => e.NumberOfLearners).HasColumnName("number_of_learners");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SitesId).HasColumnName("sites_id");

                entity.HasOne(d => d.DgVerification)
                    .WithMany(p => p.DgVerificationSites)
                    .HasForeignKey(d => d.DgVerificationId)
                    .HasConstraintName("FKsm425lb70sdp32n70v39p98ik");

                entity.HasOne(d => d.MandatoryGrant)
                    .WithMany(p => p.DgVerificationSites)
                    .HasForeignKey(d => d.MandatoryGrantId)
                    .HasConstraintName("FK2d3c5hcfgccwrs9ni1ah671tr");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.DgVerificationSites)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKr2842we4jrutw9s9ugb1upxkt");

               /* entity.HasOne(d => d.Sites)
                    .WithMany(p => p.DgVerificationSites)
                    .HasForeignKey(d => d.SitesId)
                    .HasConstraintName("FK1q5pwx5urxf8nk6fcgljiorjl");*/
            });

            modelBuilder.Entity<DgYear>(entity =>
            {
                entity.ToTable("dg_year");

                entity.HasIndex(e => e.DocId, "FKi6gxqpxr2up8p83t7ex45miqx");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AllocationAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("allocation_amount");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.DgWindowType).HasColumnName("dg_window_type");

                entity.Property(e => e.DocId).HasColumnName("doc_id");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("end_date");

                entity.Property(e => e.FinYear).HasColumnName("fin_year");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.HasOne(d => d.Doc)
                    .WithMany(p => p.DgYears)
                    .HasForeignKey(d => d.DocId)
                    .HasConstraintName("FKi6gxqpxr2up8p83t7ex45miqx");
            });

            modelBuilder.Entity<DgYearAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("dg_year_AUD");

                entity.HasIndex(e => e.Rev, "FK1j9jtmrmxhkpk6isc3ocifahu");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.DocId).HasColumnName("doc_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.DgYearAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK1j9jtmrmxhkpk6isc3ocifahu");
            });

            modelBuilder.Entity<DgYearLearningProgram>(entity =>
            {
                entity.ToTable("dg_year_learning_programs");

               entity.HasIndex(e => e.DgYearId, "FKl1pg5r2y8fa4351lncj1fv7s6");

                entity.HasIndex(e => e.InterventionTypeId, "FKlwyj0l6bhqwskx63s4vi9gbpo");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AllocationAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("allocation_amount");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

               entity.Property(e => e.DgYearId).HasColumnName("dg_year_id");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NumberOfEmployedLearners).HasColumnName("number_of_employed_learners");

                entity.Property(e => e.NumberOfUnemployedLearners).HasColumnName("number_of_unemployed_learners");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.DgYear)
                    .WithMany(p => p.DgYearLearningPrograms)
                    .HasForeignKey(d => d.DgYearId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKl1pg5r2y8fa4351lncj1fv7s6"); 

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.DgYearLearningPrograms)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKlwyj0l6bhqwskx63s4vi9gbpo");
            });

            modelBuilder.Entity<DhetReporting>(entity =>
            {
                entity.ToTable("dhet_reporting");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("description");

                entity.Property(e => e.DhetFileNumberEnum).HasColumnName("dhet_file_number_enum");

                entity.Property(e => e.NativeSql).HasColumnName("native_sql");
            });

            modelBuilder.Entity<DisabilityRating>(entity =>
            {
                entity.ToTable("disability_rating");

                entity.HasIndex(e => e.DisabilityStatus, "FKmbame2bcijv8idcfbom7wqpa6");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.DisabilityStatus).HasColumnName("disabilityStatus");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.DisabilityStatusNavigation)
                    .WithMany(p => p.DisabilityRatings)
                    .HasForeignKey(d => d.DisabilityStatus)
                    .HasConstraintName("FKmbame2bcijv8idcfbom7wqpa6");
            });

            modelBuilder.Entity<DisabilityRatingAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("disability_rating_AUD");

                entity.HasIndex(e => e.Rev, "FKbq34irtbwp6u4nm47tbaf56dw");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.DisabilityStatus).HasColumnName("disabilityStatus");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.DisabilityRatingAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKbq34irtbwp6u4nm47tbaf56dw");
            });

            modelBuilder.Entity<DisabilityStatus>(entity =>
            {
                entity.ToTable("disability_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CanSelect)
                    .HasColumnType("bit(1)")
                    .HasColumnName("can_select");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

              //  entity.Property(e => e.SetmisDisabilityIndicator).HasColumnName("setmis_disability_indicator");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Doc>(entity =>
            {
                entity.ToTable("doc");

                entity.HasIndex(e => e.ExtensionRequestId, "FK29bwo2oylfhiv77po68mk5hs1");

                entity.HasIndex(e => e.ModulesId, "FK3ian1ijcftnx5bs5lye4iqjnr");

                entity.HasIndex(e => e.ChangeReasonId, "FK3wyo546d112q5eaxulgcln5jw");

                entity.HasIndex(e => e.MailLogId, "FK4u68jv1i52hoi4rfyxrrfreok");

                entity.HasIndex(e => e.ConfigDocId, "FK58x416jr27s3f7pvy1083w7vr");

                entity.HasIndex(e => e.BankingDetailsId, "FK6rokd8u5a8yg40ck8c9u4ynk7");

                entity.HasIndex(e => e.SarsLeviesPaidId, "FKak6h40jhpp2ymj59pkgk3sysp");

                entity.HasIndex(e => e.HostingCompanyTemplatesId, "FKcp4rdk1f854p8qdoecn4u2n3k");

                entity.HasIndex(e => e.WspId, "FKhtt62rfrnpcr5l9obtrgysw2t");

                entity.HasIndex(e => e.OriginalDocId, "FKim70tqrl8ayi7v9pcnspksajc");

                entity.HasIndex(e => e.ModulesTitlesId, "FKkow5c9bs8817nucx0w0o0es6i");

                entity.HasIndex(e => e.UserId, "FKlrwxmqgvesjr0u9jb0o6280pn");

                entity.HasIndex(e => e.CompanyId, "FKpopy01gd67pdbsks2t5khukdr");

                entity.HasIndex(e => e.ForUserId, "FKqwfa5uvkjsecpnf5jrwanxyix");

                entity.HasIndex(e => e.DgVerificationId, "FKtil9lycspy8enexfa7rdsd6pd");

                entity.HasIndex(e => new { e.TargetClass, e.TargetKey, e.OriginalDocId }, "hs_idx_001");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.BankingDetailsId).HasColumnName("banking_details_id");

                entity.Property(e => e.ChangeReasonId).HasColumnName("change_reason_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.ConfigDocId).HasColumnName("config_doc_id");

                entity.Property(e => e.ContentType)
                    .HasMaxLength(200)
                    .HasColumnName("content_type");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.Property(e => e.DgVerificationId).HasColumnName("dg_verification_id");

                entity.Property(e => e.DocumentRequiredCheckEnum).HasColumnName("document_required_check_enum");

                entity.Property(e => e.Extension)
                    .HasMaxLength(20)
                    .HasColumnName("extension");

                entity.Property(e => e.ExtensionRequestId).HasColumnName("extension_request_id");

                entity.Property(e => e.ForUserId).HasColumnName("for_user_id");

                entity.Property(e => e.HostingCompanyTemplatesId).HasColumnName("hosting_company_templates_id");

                entity.Property(e => e.MailLogId).HasColumnName("mail_log_id");

                entity.Property(e => e.ModulesId).HasColumnName("modules_id");

                entity.Property(e => e.ModulesTitlesId).HasColumnName("modules_titles_id");

                entity.Property(e => e.NewFname)
                    .HasMaxLength(200)
                    .HasColumnName("new_fname");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.OriginalDocId).HasColumnName("original_doc_id");

                entity.Property(e => e.OriginalFname)
                    .HasMaxLength(500)
                    .HasColumnName("original_fname");

                entity.Property(e => e.SarsLeviesPaidId).HasColumnName("sars_levies_paid_id");

                entity.Property(e => e.TargetClass).HasColumnName("target_class");

                entity.Property(e => e.TargetClassTemp)
                    .HasMaxLength(255)
                    .HasColumnName("target_class_temp");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TargetKeyTemp).HasColumnName("target_key_temp");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.VersionNo).HasColumnName("version_no");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.BankingDetails)
                    .WithMany(p => p.Docs)
                    .HasForeignKey(d => d.BankingDetailsId)
                    .HasConstraintName("FK6rokd8u5a8yg40ck8c9u4ynk7");

                entity.HasOne(d => d.ChangeReason)
                    .WithMany(p => p.Docs)
                    .HasForeignKey(d => d.ChangeReasonId)
                    .HasConstraintName("FK3wyo546d112q5eaxulgcln5jw");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.Docs)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKpopy01gd67pdbsks2t5khukdr");

                entity.HasOne(d => d.ConfigDoc)
                    .WithMany(p => p.Docs)
                    .HasForeignKey(d => d.ConfigDocId)
                    .HasConstraintName("FK58x416jr27s3f7pvy1083w7vr");

                entity.HasOne(d => d.DgVerification)
                    .WithMany(p => p.Docs)
                    .HasForeignKey(d => d.DgVerificationId)
                    .HasConstraintName("FKtil9lycspy8enexfa7rdsd6pd");

                entity.HasOne(d => d.ExtensionRequest)
                    .WithMany(p => p.Docs)
                    .HasForeignKey(d => d.ExtensionRequestId)
                    .HasConstraintName("FK29bwo2oylfhiv77po68mk5hs1");

                entity.HasOne(d => d.ForUser)
                    .WithMany(p => p.DocForUsers)
                    .HasForeignKey(d => d.ForUserId)
                    .HasConstraintName("FKqwfa5uvkjsecpnf5jrwanxyix");

                entity.HasOne(d => d.HostingCompanyTemplates)
                    .WithMany(p => p.Docs)
                    .HasForeignKey(d => d.HostingCompanyTemplatesId)
                    .HasConstraintName("FKcp4rdk1f854p8qdoecn4u2n3k");

                entity.HasOne(d => d.MailLog)
                    .WithMany(p => p.Docs)
                    .HasForeignKey(d => d.MailLogId)
                    .HasConstraintName("FK4u68jv1i52hoi4rfyxrrfreok");

                entity.HasOne(d => d.Modules)
                    .WithMany(p => p.Docs)
                    .HasForeignKey(d => d.ModulesId)
                    .HasConstraintName("FK3ian1ijcftnx5bs5lye4iqjnr");

                entity.HasOne(d => d.ModulesTitles)
                    .WithMany(p => p.Docs)
                    .HasForeignKey(d => d.ModulesTitlesId)
                    .HasConstraintName("FKkow5c9bs8817nucx0w0o0es6i");

                entity.HasOne(d => d.OriginalDoc)
                    .WithMany(p => p.InverseOriginalDoc)
                    .HasForeignKey(d => d.OriginalDocId)
                    .HasConstraintName("FKim70tqrl8ayi7v9pcnspksajc");

                entity.HasOne(d => d.SarsLeviesPaid)
                    .WithMany(p => p.Docs)
                    .HasForeignKey(d => d.SarsLeviesPaidId)
                    .HasConstraintName("FKak6h40jhpp2ymj59pkgk3sysp");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.DocUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKlrwxmqgvesjr0u9jb0o6280pn");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.Docs)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKhtt62rfrnpcr5l9obtrgysw2t");
            });

            modelBuilder.Entity<DocByte>(entity =>
            {
                entity.HasKey(e => e.DocId)
                    .HasName("PRIMARY");

                entity.ToTable("doc_byte");

                entity.Property(e => e.DocId)
                    .ValueGeneratedNever()
                    .HasColumnName("doc_id");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.HasOne(d => d.Doc)
                    .WithOne(p => p.DocByte)
                    .HasForeignKey<DocByte>(d => d.DocId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKiawcj5q3xtgch13c6djxt0b4o");
            });

            modelBuilder.Entity<DocumentTracker>(entity =>
            {
                entity.ToTable("document_tracker");

                entity.HasIndex(e => e.UserId, "FK6f7dis82p3jvoolvq1ns6j9be");

                entity.HasIndex(e => e.DocId, "FKptvt0loefjk0ut5r7jp4ovol4");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("date");

                entity.Property(e => e.DocId).HasColumnName("doc_id");

                entity.Property(e => e.DocumentTrackerEnum).HasColumnName("document_tracker_enum");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Doc)
                    .WithMany(p => p.DocumentTrackers)
                    .HasForeignKey(d => d.DocId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKptvt0loefjk0ut5r7jp4ovol4");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.DocumentTrackers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK6f7dis82p3jvoolvq1ns6j9be");
            });

            modelBuilder.Entity<EconomicStatus>(entity =>
            {
                entity.ToTable("economic_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Employee>(entity =>
            {
                entity.ToTable("employees");

                entity.HasIndex(e => e.SiteId, "FK26h4fmi7gj5ndsakcer4hit4r");

                entity.HasIndex(e => e.CompanyId, "FK3dtsl9h3lnbeeqds8rm23cwja");

                entity.HasIndex(e => e.EquityId, "FK5se0d60nhe28h1b9yh28xyojd");

                entity.HasIndex(e => e.WspId, "FK84cdt5r6vucwig339hfdor65i");

                entity.HasIndex(e => e.OfoCodeId, "FK8kyypd39gdbbigcobpt249nnb");

                entity.HasIndex(e => e.OccupationCategoryId, "FK8pklq3jorxyfebxyu5ntegu0w");

                entity.HasIndex(e => e.HighestQualTitle, "FKgaayoapkf0vw2hatn7w4bj73l");

                entity.HasIndex(e => e.GenderId, "FKjqcgtw45t2dplo4ap4n19in6o");

                entity.HasIndex(e => e.MunicipalityId, "FKkqtc3vpvnd61r00uqn5nj6h96");

                entity.HasIndex(e => e.HighestQualType, "FKmoq2cnltmccpewnl5d7o7k3xe");

                entity.HasIndex(e => e.EmploymentTypeId, "FKomo9teltxa1gst8pyjnon81py");

                entity.HasIndex(e => e.DisabilityId, "FKr3m8crg9k5yjr6c8t8rwysevw");

                entity.HasIndex(e => e.NationalityId, "FKtfjuafuxokv7sgt94syq7kgu");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AgeGroup).HasColumnName("age_group");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompletedTraining)
                    .HasColumnType("bit(1)")
                    .HasColumnName("completed_training")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateOfBirth)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_birth");

                entity.Property(e => e.DisabilityId).HasColumnName("disability_id");

                entity.Property(e => e.EmployedUnemployed).HasColumnName("employed_unemployed");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EmploymentTypeId).HasColumnName("employment_type_id");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.HighestQualTitle).HasColumnName("highest_qual_title");

                entity.Property(e => e.HighestQualType).HasColumnName("highest_qual_type");

                entity.Property(e => e.IdType).HasColumnName("id_type");

                entity.Property(e => e.JobTitle)
                    .HasMaxLength(100)
                    .HasColumnName("job_title");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.NationalityId).HasColumnName("nationality_id");

                entity.Property(e => e.OccupationCategoryId).HasColumnName("occupation_category_id");

                entity.Property(e => e.OfoCodeId).HasColumnName("ofo_code_id");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(30)
                    .HasColumnName("passport_number");

                entity.Property(e => e.PlannedTraining)
                    .HasColumnType("bit(1)")
                    .HasColumnName("planned_training")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.RsaIdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("rsa_id_number");

                entity.Property(e => e.SdlNumber)
                    .HasMaxLength(50)
                    .HasColumnName("sdl_number");

                entity.Property(e => e.SiteId).HasColumnName("site_id");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(50)
                    .HasColumnName("site_name");

                entity.Property(e => e.SiteNumber)
                    .HasMaxLength(50)
                    .HasColumnName("site_number");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK3dtsl9h3lnbeeqds8rm23cwja");

                entity.HasOne(d => d.Disability)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.DisabilityId)
                    .HasConstraintName("FKr3m8crg9k5yjr6c8t8rwysevw");

                entity.HasOne(d => d.EmploymentType)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.EmploymentTypeId)
                    .HasConstraintName("FKomo9teltxa1gst8pyjnon81py");

                entity.HasOne(d => d.Equity)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.EquityId)
                    .HasConstraintName("FK5se0d60nhe28h1b9yh28xyojd");

                entity.HasOne(d => d.Gender)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.GenderId)
                    .HasConstraintName("FKjqcgtw45t2dplo4ap4n19in6o");

                entity.HasOne(d => d.HighestQualTitleNavigation)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.HighestQualTitle)
                    .HasConstraintName("FKgaayoapkf0vw2hatn7w4bj73l");

                entity.HasOne(d => d.HighestQualTypeNavigation)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.HighestQualType)
                    .HasConstraintName("FKmoq2cnltmccpewnl5d7o7k3xe");

                entity.HasOne(d => d.Municipality)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.MunicipalityId)
                    .HasConstraintName("FKkqtc3vpvnd61r00uqn5nj6h96");

                entity.HasOne(d => d.Nationality)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.NationalityId)
                    .HasConstraintName("FKtfjuafuxokv7sgt94syq7kgu");

                entity.HasOne(d => d.OccupationCategory)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.OccupationCategoryId)
                    .HasConstraintName("FK8pklq3jorxyfebxyu5ntegu0w");

                entity.HasOne(d => d.OfoCode)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.OfoCodeId)
                    .HasConstraintName("FK8kyypd39gdbbigcobpt249nnb");

               /* entity.HasOne(d => d.Site)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.SiteId)
                    .HasConstraintName("FK26h4fmi7gj5ndsakcer4hit4r");*/

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FK84cdt5r6vucwig339hfdor65i");
            });

            modelBuilder.Entity<EmployeePage>(entity =>
            {
                entity.ToTable("employee_pages");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Page)
                    .HasMaxLength(100)
                    .HasColumnName("page");
            });

            modelBuilder.Entity<EmployeesHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("employees_hist");

                entity.HasIndex(e => e.Rev, "FK33v2g3s41mjl1bjquw7jgna8u");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AgeGroup).HasColumnName("age_group");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompletedTraining)
                    .HasColumnType("bit(1)")
                    .HasColumnName("completed_training")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateOfBirth)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_birth");

                entity.Property(e => e.DisabilityId).HasColumnName("disability_id");

                entity.Property(e => e.EmployedUnemployed).HasColumnName("employed_unemployed");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EmploymentTypeId).HasColumnName("employment_type_id");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.HighestQualTitle).HasColumnName("highest_qual_title");

                entity.Property(e => e.HighestQualType).HasColumnName("highest_qual_type");

                entity.Property(e => e.IdType).HasColumnName("id_type");

                entity.Property(e => e.JobTitle)
                    .HasMaxLength(100)
                    .HasColumnName("job_title");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.NationalityId).HasColumnName("nationality_id");

                entity.Property(e => e.OccupationCategoryId).HasColumnName("occupation_category_id");

                entity.Property(e => e.OfoCodeId).HasColumnName("ofo_code_id");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(30)
                    .HasColumnName("passport_number");

                entity.Property(e => e.PlannedTraining)
                    .HasColumnType("bit(1)")
                    .HasColumnName("planned_training")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RsaIdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("rsa_id_number");

                entity.Property(e => e.SdlNumber)
                    .HasMaxLength(50)
                    .HasColumnName("sdl_number");

                entity.Property(e => e.SiteId).HasColumnName("site_id");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(50)
                    .HasColumnName("site_name");

                entity.Property(e => e.SiteNumber)
                    .HasMaxLength(50)
                    .HasColumnName("site_number");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.EmployeesHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK33v2g3s41mjl1bjquw7jgna8u");
            });

            modelBuilder.Entity<EmployeesHistory>(entity =>
            {
                entity.ToTable("employees_history");

                entity.HasIndex(e => e.MunicipalityId, "FK13n5qnf640xe63sgdvbgcm913");

                entity.HasIndex(e => e.HighestQualType, "FK357l0vljvva7mj02bsd0bna2g");

                entity.HasIndex(e => e.DisabilityId, "FK7piol73te9p4o0wupjg742oqg");

                entity.HasIndex(e => e.HighestQualTitle, "FK7rexuoy99wc089o30lfxtqo02");

                entity.HasIndex(e => e.NationalityId, "FKchxg2fp39tv967406aaeqk3cd");

                entity.HasIndex(e => e.CompanyId, "FKcyosih69vk39e0dy4gd100ikv");

                entity.HasIndex(e => e.OfoCodeId, "FKeqrvovnrkh10tgka8kqdv0mky");

                entity.HasIndex(e => e.OccupationCategoryId, "FKg51bd4t8tegcs8u7q8lyvdcrm");

                entity.HasIndex(e => e.ForEmployees, "FKgj7uw4mnudgoggkajyfnhuxn6");

                entity.HasIndex(e => e.EquityId, "FKnb6noakdjbi8ilt1vmt7s64wg");

                entity.HasIndex(e => e.WspId, "FKnem1jmg0bvtk7rbm2ureij1sy");

                entity.HasIndex(e => e.EmploymentTypeId, "FKopnl4f5p4tx9rimsj6rns4yyd");

                entity.HasIndex(e => e.GenderId, "FKosb1lhf6t8vydhbftq2wcqrnt");

                entity.HasIndex(e => e.SiteId, "FKqqc14ftwkw49m2lnvdngomcuk");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AgeGroup).HasColumnName("age_group");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompletedTraining)
                    .HasColumnType("bit(1)")
                    .HasColumnName("completed_training")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateOfBirth)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_birth");

                entity.Property(e => e.DisabilityId).HasColumnName("disability_id");

                entity.Property(e => e.EmployedUnemployed).HasColumnName("employed_unemployed");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EmploymentTypeId).HasColumnName("employment_type_id");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.ForEmployees).HasColumnName("for_employees");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.HighestQualTitle).HasColumnName("highest_qual_title");

                entity.Property(e => e.HighestQualType).HasColumnName("highest_qual_type");

                entity.Property(e => e.IdType).HasColumnName("id_type");

                entity.Property(e => e.JobTitle)
                    .HasMaxLength(100)
                    .HasColumnName("job_title");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.NationalityId).HasColumnName("nationality_id");

                entity.Property(e => e.OccupationCategoryId).HasColumnName("occupation_category_id");

                entity.Property(e => e.OfoCodeId).HasColumnName("ofo_code_id");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(30)
                    .HasColumnName("passport_number");

                entity.Property(e => e.PlannedTraining)
                    .HasColumnType("bit(1)")
                    .HasColumnName("planned_training")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.RsaIdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("rsa_id_number");

                entity.Property(e => e.SdlNumber)
                    .HasMaxLength(50)
                    .HasColumnName("sdl_number");

                entity.Property(e => e.SiteId).HasColumnName("site_id");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(50)
                    .HasColumnName("site_name");

                entity.Property(e => e.SiteNumber)
                    .HasMaxLength(50)
                    .HasColumnName("site_number");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.EmployeesHistories)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKcyosih69vk39e0dy4gd100ikv");

                entity.HasOne(d => d.Disability)
                    .WithMany(p => p.EmployeesHistories)
                    .HasForeignKey(d => d.DisabilityId)
                    .HasConstraintName("FK7piol73te9p4o0wupjg742oqg");

                entity.HasOne(d => d.EmploymentType)
                    .WithMany(p => p.EmployeesHistories)
                    .HasForeignKey(d => d.EmploymentTypeId)
                    .HasConstraintName("FKopnl4f5p4tx9rimsj6rns4yyd");

                entity.HasOne(d => d.Equity)
                    .WithMany(p => p.EmployeesHistories)
                    .HasForeignKey(d => d.EquityId)
                    .HasConstraintName("FKnb6noakdjbi8ilt1vmt7s64wg");

                entity.HasOne(d => d.ForEmployeesNavigation)
                    .WithMany(p => p.EmployeesHistories)
                    .HasForeignKey(d => d.ForEmployees)
                    .HasConstraintName("FKgj7uw4mnudgoggkajyfnhuxn6");

                entity.HasOne(d => d.Gender)
                    .WithMany(p => p.EmployeesHistories)
                    .HasForeignKey(d => d.GenderId)
                    .HasConstraintName("FKosb1lhf6t8vydhbftq2wcqrnt");

                entity.HasOne(d => d.HighestQualTitleNavigation)
                    .WithMany(p => p.EmployeesHistories)
                    .HasForeignKey(d => d.HighestQualTitle)
                    .HasConstraintName("FK7rexuoy99wc089o30lfxtqo02");

                entity.HasOne(d => d.HighestQualTypeNavigation)
                    .WithMany(p => p.EmployeesHistories)
                    .HasForeignKey(d => d.HighestQualType)
                    .HasConstraintName("FK357l0vljvva7mj02bsd0bna2g");

                entity.HasOne(d => d.Municipality)
                    .WithMany(p => p.EmployeesHistories)
                    .HasForeignKey(d => d.MunicipalityId)
                    .HasConstraintName("FK13n5qnf640xe63sgdvbgcm913");

                entity.HasOne(d => d.Nationality)
                    .WithMany(p => p.EmployeesHistories)
                    .HasForeignKey(d => d.NationalityId)
                    .HasConstraintName("FKchxg2fp39tv967406aaeqk3cd");

                entity.HasOne(d => d.OccupationCategory)
                    .WithMany(p => p.EmployeesHistories)
                    .HasForeignKey(d => d.OccupationCategoryId)
                    .HasConstraintName("FKg51bd4t8tegcs8u7q8lyvdcrm");

                entity.HasOne(d => d.OfoCode)
                    .WithMany(p => p.EmployeesHistories)
                    .HasForeignKey(d => d.OfoCodeId)
                    .HasConstraintName("FKeqrvovnrkh10tgka8kqdv0mky");

               /* entity.HasOne(d => d.Site)
                    .WithMany(p => p.EmployeesHistories)
                    .HasForeignKey(d => d.SiteId)
                    .HasConstraintName("FKqqc14ftwkw49m2lnvdngomcuk");*/

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.EmployeesHistories)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKnem1jmg0bvtk7rbm2ureij1sy");
            });

            modelBuilder.Entity<EmployeesImport>(entity =>
            {
                entity.ToTable("employees_import");

                entity.HasIndex(e => e.CompanyId, "FK5q5p7r7sgd67qrv3uoy4m65ko");

                entity.HasIndex(e => e.EmpId, "FKfcpp0cfojfl4ut904v6noppvu");

                entity.HasIndex(e => e.WspId, "FKgck7d9exyxaw0t3m958jud3ni");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateOfBirth)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_birth");

                entity.Property(e => e.Disability)
                    .HasMaxLength(100)
                    .HasColumnName("disability");

                entity.Property(e => e.EmpId).HasColumnName("emp_id");

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(255)
                    .HasColumnName("employee_id");

                entity.Property(e => e.EmploymentStatus)
                    .HasMaxLength(100)
                    .HasColumnName("employment_status");

                entity.Property(e => e.EmploymentType)
                    .HasMaxLength(100)
                    .HasColumnName("employment_type");

                entity.Property(e => e.Equity)
                    .HasMaxLength(100)
                    .HasColumnName("equity");

                entity.Property(e => e.Error)
                    .HasMaxLength(1000)
                    .HasColumnName("error");

                entity.Property(e => e.ErrorSort)
                    .HasColumnName("error_sort")
                    .HasDefaultValueSql("'999999'");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.Gender)
                    .HasMaxLength(100)
                    .HasColumnName("gender");

                entity.Property(e => e.HighestQualCode)
                    .HasMaxLength(100)
                    .HasColumnName("highest_qual_code");

                entity.Property(e => e.HighestQualType)
                    .HasMaxLength(100)
                    .HasColumnName("highest_qual_type");

                entity.Property(e => e.IdType)
                    .HasMaxLength(255)
                    .HasColumnName("id_type");

                entity.Property(e => e.Imported)
                    .HasColumnType("bit(1)")
                    .HasColumnName("imported")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.JobTitle)
                    .HasMaxLength(100)
                    .HasColumnName("job_title");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.Municipality)
                    .HasMaxLength(255)
                    .HasColumnName("municipality");

                entity.Property(e => e.Nationality)
                    .HasMaxLength(100)
                    .HasColumnName("nationality");

                entity.Property(e => e.OccupationCategory)
                    .HasMaxLength(100)
                    .HasColumnName("occupation_category");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(100)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.SdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_number");

                entity.Property(e => e.SiteNumber)
                    .HasMaxLength(255)
                    .HasColumnName("site_number");

                entity.Property(e => e.SpecialisationCode)
                    .HasMaxLength(100)
                    .HasColumnName("specialisation_code");

                entity.Property(e => e.UniqueId)
                    .HasMaxLength(200)
                    .HasColumnName("unique_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.EmployeesImports)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK5q5p7r7sgd67qrv3uoy4m65ko");

                entity.HasOne(d => d.Emp)
                    .WithMany(p => p.EmployeesImports)
                    .HasForeignKey(d => d.EmpId)
                    .HasConstraintName("FKfcpp0cfojfl4ut904v6noppvu");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.EmployeesImports)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKgck7d9exyxaw0t3m958jud3ni");
            });

            modelBuilder.Entity<EmployeesImportTraining>(entity =>
            {
                entity.ToTable("employees_import_training");

                entity.HasIndex(e => e.EmpTrainingId, "FK66m1dxx41nxh8bchgl637e4su");

                entity.HasIndex(e => e.EmployeesImportId, "FKa2j9l8vhb6d04wd9ud3qi0l98");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationNumber)
                    .HasMaxLength(100)
                    .HasColumnName("accreditation_number");

                entity.Property(e => e.CompletedPlanned).HasColumnName("completed_planned");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.EmpTrainingId).HasColumnName("emp_training_id");

                entity.Property(e => e.EmpUniqueId)
                    .HasMaxLength(200)
                    .HasColumnName("emp_unique_id");

                entity.Property(e => e.EmployeesImportId).HasColumnName("employees_import_id");

                entity.Property(e => e.Error)
                    .HasMaxLength(1000)
                    .HasColumnName("error");

                entity.Property(e => e.ErrorSort)
                    .HasColumnName("error_sort")
                    .HasDefaultValueSql("'999999'");

                entity.Property(e => e.Etqa)
                    .HasMaxLength(100)
                    .HasColumnName("etqa");

                entity.Property(e => e.Imported)
                    .HasColumnType("bit(1)")
                    .HasColumnName("imported")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.InterventionCost)
                    .HasMaxLength(100)
                    .HasColumnName("intervention_cost");

                entity.Property(e => e.InterventionLevel)
                    .HasMaxLength(100)
                    .HasColumnName("intervention_level");

                entity.Property(e => e.InterventionTitle)
                    .HasMaxLength(100)
                    .HasColumnName("intervention_title");

                entity.Property(e => e.PivotalNonpivotal).HasColumnName("pivotal_nonpivotal");

                entity.Property(e => e.ProviderName)
                    .HasMaxLength(100)
                    .HasColumnName("provider_name");

                entity.Property(e => e.SaqaId)
                    .HasMaxLength(100)
                    .HasColumnName("saqa_id");

                entity.Property(e => e.SourceOfFunding)
                    .HasMaxLength(100)
                    .HasColumnName("source_of_funding");

                entity.HasOne(d => d.EmpTraining)
                    .WithMany(p => p.EmployeesImportTrainings)
                    .HasForeignKey(d => d.EmpTrainingId)
                    .HasConstraintName("FK66m1dxx41nxh8bchgl637e4su");

                entity.HasOne(d => d.EmployeesImport)
                    .WithMany(p => p.EmployeesImportTrainings)
                    .HasForeignKey(d => d.EmployeesImportId)
                    .HasConstraintName("FKa2j9l8vhb6d04wd9ud3qi0l98");
            });

            modelBuilder.Entity<EmployeesTraining>(entity =>
            {
                entity.ToTable("employees_training");

                entity.HasIndex(e => e.EtqaId, "FK569ijsrryl4wal4wx83j3xvgo");

                entity.HasIndex(e => e.SourceOfFunding, "FK6jegownwyi8420vlhqdtv4pqi");

                entity.HasIndex(e => e.NqfLevelId, "FKal9yjyqph0ibc9e28pv2oq4a0");

                entity.HasIndex(e => e.QualificationId, "FKd8vk0i9i49p14sd14syvm3d06");

                entity.HasIndex(e => e.WspId, "FKioqs5audwkahhx43pu2qvqnjj");

                entity.HasIndex(e => e.InterventionLevelId, "FKiye4u96uqk7wcsaqryy3vn9dw");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationNumber)
                    .HasMaxLength(100)
                    .HasColumnName("accreditation_number");

                entity.Property(e => e.CompletedPlanned).HasColumnName("completed_planned");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.EtqaId).HasColumnName("etqa_id");

                entity.Property(e => e.InterventionCost).HasColumnName("intervention_cost");

                entity.Property(e => e.InterventionLevelId).HasColumnName("intervention_level_id");

                entity.Property(e => e.InterventionTitle)
                    .HasMaxLength(100)
                    .HasColumnName("intervention_title");

                entity.Property(e => e.NqfLevelId).HasColumnName("nqf_level_id");

                entity.Property(e => e.PivotNonPivot).HasColumnName("pivot_non_pivot");

                entity.Property(e => e.ProviderName)
                    .HasMaxLength(100)
                    .HasColumnName("provider_name");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SourceOfFunding).HasColumnName("source_of_funding");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.Etqa)
                    .WithMany(p => p.EmployeesTrainings)
                    .HasForeignKey(d => d.EtqaId)
                    .HasConstraintName("FK569ijsrryl4wal4wx83j3xvgo");

                entity.HasOne(d => d.InterventionLevel)
                    .WithMany(p => p.EmployeesTrainings)
                    .HasForeignKey(d => d.InterventionLevelId)
                    .HasConstraintName("FKiye4u96uqk7wcsaqryy3vn9dw");

                entity.HasOne(d => d.NqfLevel)
                    .WithMany(p => p.EmployeesTrainings)
                    .HasForeignKey(d => d.NqfLevelId)
                    .HasConstraintName("FKal9yjyqph0ibc9e28pv2oq4a0");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.EmployeesTrainings)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKd8vk0i9i49p14sd14syvm3d06");

                entity.HasOne(d => d.SourceOfFundingNavigation)
                    .WithMany(p => p.EmployeesTrainings)
                    .HasForeignKey(d => d.SourceOfFunding)
                    .HasConstraintName("FK6jegownwyi8420vlhqdtv4pqi");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.EmployeesTrainings)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKioqs5audwkahhx43pu2qvqnjj");
            });

            modelBuilder.Entity<EmployerApprovalStatus>(entity =>
            {
                entity.ToTable("employer_approval_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<EmploymentType>(entity =>
            {
                entity.ToTable("employment_type");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<EnrolmentStatus>(entity =>
            {
                entity.ToTable("enrolment_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AppearOnAtr)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appear_on_atr");

                entity.Property(e => e.AppearOnWsp)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appear_on_wsp");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<EnrolmentStatusReason>(entity =>
            {
                entity.ToTable("enrolment_status_reason");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<EnrolmentType>(entity =>
            {
                entity.ToTable("enrolment_type");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Equity>(entity =>
            {
                entity.ToTable("equity");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Etqa>(entity =>
            {
                entity.ToTable("etqa");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<ExceptionsTable>(entity =>
            {
                entity.ToTable("exceptions_table");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Exception).HasColumnName("exception");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");
            });

            modelBuilder.Entity<ExceptionsTableHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("exceptions_table_hist");

                entity.HasIndex(e => e.Rev, "FK6cpjyp7oqemk9t3r2kw9xu4dj");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Exception).HasColumnName("exception");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.ExceptionsTableHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK6cpjyp7oqemk9t3r2kw9xu4dj");
            });

            modelBuilder.Entity<ExtensionRequest>(entity =>
            {
                entity.ToTable("extension_request");

                entity.HasIndex(e => e.WspId, "FK6pp1bx60ry37ymwjst8l0t4d6");

                entity.HasIndex(e => e.CompanyId, "FKey6fwurgw2jpfpwkus3b0py86");

                entity.HasIndex(e => e.ApprovedUserId, "FKfbkgo0kgeycjhemrw47bu6mo7");

                entity.HasIndex(e => e.UserId, "FKosk8cil54g0v2wmt5kf25obyw");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovedUserId).HasColumnName("approved_user_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FinYear).HasColumnName("fin_year");

                entity.Property(e => e.NewSubmissionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("new_submission_date");

                entity.Property(e => e.ReasonForExtension).HasColumnName("reason_for_extension");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.ApprovedUser)
                    .WithMany(p => p.ExtensionRequestApprovedUsers)
                    .HasForeignKey(d => d.ApprovedUserId)
                    .HasConstraintName("FKfbkgo0kgeycjhemrw47bu6mo7");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.ExtensionRequests)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKey6fwurgw2jpfpwkus3b0py86");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.ExtensionRequestUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKosk8cil54g0v2wmt5kf25obyw");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.ExtensionRequests)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FK6pp1bx60ry37ymwjst8l0t4d6");
            });

            modelBuilder.Entity<ExtensionRequestHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("extension_request_hist");

                entity.HasIndex(e => e.Rev, "FK4nct0tp6ignfy9wgr9y6t2w7k");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovedUserId).HasColumnName("approved_user_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FinYear).HasColumnName("fin_year");

                entity.Property(e => e.NewSubmissionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("new_submission_date");

                entity.Property(e => e.ReasonForExtension).HasColumnName("reason_for_extension");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.ExtensionRequestHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK4nct0tp6ignfy9wgr9y6t2w7k");
            });

            modelBuilder.Entity<ExtractErrorList>(entity =>
            {
                entity.ToTable("ExtractErrorList");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FileId).HasColumnName("file_id");

                entity.Property(e => e.FileName).HasColumnName("file_name");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");
            });

            modelBuilder.Entity<FailedArchiveEntry>(entity =>
            {
                entity.ToTable("failed_archive_entries");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Exception).HasColumnName("exception");

                entity.Property(e => e.LocationFailed).HasColumnName("location_failed");

                entity.Property(e => e.MandatoryGrantDetailId).HasColumnName("mandatory_grant_detail_id");
            });

            modelBuilder.Entity<FinYearQuartersLookUp>(entity =>
            {
                entity.ToTable("fin_year_quarters_look_up");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.FinYearQuarters).HasColumnName("fin_year_quarters");

                entity.Property(e => e.FromDate)
                    .HasColumnType("datetime")
                    .HasColumnName("from_date");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrderNumber).HasColumnName("order_number");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.ToDate)
                    .HasColumnType("datetime")
                    .HasColumnName("to_date");

                entity.Property(e => e.UseNextYear)
                    .HasColumnType("bit(1)")
                    .HasColumnName("use_next_year")
                    .HasDefaultValueSql("b'0'");
            });

            modelBuilder.Entity<FinYearQuartersLookUpHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("fin_year_quarters_look_up_hist");

                entity.HasIndex(e => e.Rev, "FKmg7ah9182p7jn6x5ilqyh6heh");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.FinYearQuarters).HasColumnName("fin_year_quarters");

                entity.Property(e => e.FromDate)
                    .HasColumnType("datetime")
                    .HasColumnName("from_date");

                entity.Property(e => e.OrderNumber).HasColumnName("order_number");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.ToDate)
                    .HasColumnType("datetime")
                    .HasColumnName("to_date");

                entity.Property(e => e.UseNextYear)
                    .HasColumnType("bit(1)")
                    .HasColumnName("use_next_year")
                    .HasDefaultValueSql("b'0'");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.FinYearQuartersLookUpHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKmg7ah9182p7jn6x5ilqyh6heh");
            });

            modelBuilder.Entity<FinancialYear>(entity =>
            {
                entity.ToTable("financial_years");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.EndYear).HasColumnName("end_year");

                entity.Property(e => e.GrantFocusYear).HasColumnName("grant_focus_year");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.StartYear).HasColumnName("start_year");
            });

            modelBuilder.Entity<FinancialYearsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("financial_years_hist");

                entity.HasIndex(e => e.Rev, "FK5hm5f14auc53dp3d1q62rtawb");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.EndYear).HasColumnName("end_year");

                entity.Property(e => e.GrantFocusYear).HasColumnName("grant_focus_year");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.StartYear).HasColumnName("start_year");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.FinancialYearsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK5hm5f14auc53dp3d1q62rtawb");
            });

            modelBuilder.Entity<Flc>(entity =>
            {
                entity.ToTable("flc");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<FrequentlyAskedQuestion>(entity =>
            {
                entity.ToTable("frequently_asked_questions");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.QuestionActive)
                    .HasColumnType("bit(1)")
                    .HasColumnName("question_active")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.QuestionAnswer).HasColumnName("question_answer");

                entity.Property(e => e.QuestionAsked).HasColumnName("question_asked");

                entity.Property(e => e.QuestionSection).HasColumnName("question_section");
            });

            modelBuilder.Entity<Funding>(entity =>
            {
                entity.ToTable("funding");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AppearOnWsp)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appear_on_wsp")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetaIndustryFunded).HasColumnName("seta_industry_funded");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Gender>(entity =>
            {
                entity.ToTable("gender");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.GenderCode)
                    .HasMaxLength(1)
                    .HasColumnName("gender_code");

                entity.Property(e => e.GenderName)
                    .HasMaxLength(10)
                    .HasColumnName("gender_name");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Glosssary>(entity =>
            {
                entity.ToTable("glosssary");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Description).HasColumnName("description");
            });

            modelBuilder.Entity<GpBankAccountAlterAudit>(entity =>
            {
                entity.ToTable("gp_bank_account_alter_audit");

                entity.HasIndex(e => e.CompanyId, "FKb3s1nbyjd91jlfhnqpuhuyo7b");

                entity.HasIndex(e => e.UserId, "FKcea3vucwm9s4r158uhu3ndnkm");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Reason)
                    .HasMaxLength(255)
                    .HasColumnName("reason");

                entity.Property(e => e.ReasonForAlteration)
                    .HasMaxLength(255)
                    .HasColumnName("reason_for_alteration");

                entity.Property(e => e.SetToHold)
                    .HasColumnType("bit(1)")
                    .HasColumnName("set_to_hold");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.GpBankAccountAlterAudits)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKb3s1nbyjd91jlfhnqpuhuyo7b");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.GpBankAccountAlterAudits)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKcea3vucwm9s4r158uhu3ndnkm");
            });

            modelBuilder.Entity<GpCreditor>(entity =>
            {
                entity.ToTable("gp_creditors");

                entity.HasIndex(e => e.VendorId, "UK_hu6y6muwo4t4g3oca0x0162hs")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CurrentBalance).HasColumnName("current_balance");

                entity.Property(e => e.Hold)
                    .HasMaxLength(50)
                    .HasColumnName("hold");

                entity.Property(e => e.VendorClassId)
                    .HasMaxLength(100)
                    .HasColumnName("vendor_class_id");

                entity.Property(e => e.VendorId)
                    .HasMaxLength(50)
                    .HasColumnName("vendor_id");

                entity.Property(e => e.VendorName)
                    .HasMaxLength(255)
                    .HasColumnName("vendor_name");

                entity.Property(e => e.VendorStatus)
                    .HasMaxLength(50)
                    .HasColumnName("vendor_status");
            });

            modelBuilder.Entity<GpGrantBatchEntry>(entity =>
            {
                entity.ToTable("gp_grant_batch_entry");

                entity.HasIndex(e => e.UserActionedId, "FKgnug5su3460jdu3jbw04fctlo");

                entity.HasIndex(e => e.SarsLevyDetailsId, "FKgyhifvwiclyjjhbcny1l9rok7");

                entity.HasIndex(e => e.GpGrantBatchListId, "FKjdoj2p95l1w94tq9lhscveqh1");

                entity.HasIndex(e => e.ActiveContractDetailId, "FKn41a5s1g8i1ws9mkaacrj7x0b");

                entity.HasIndex(e => e.SarsEmployerDetailLinkedId, "FKnhgn6mwkslt7w5aupbtwubyb9");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActiveContractDetailId).HasColumnName("active_contract_detail_id");

                entity.Property(e => e.ArrivalDate1FormSarsFiles)
                    .HasColumnType("datetime")
                    .HasColumnName("arrival_date_1_form_sars_files");

                entity.Property(e => e.ChamberLinkedId).HasColumnName("chamber_linked_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateLoadedToGp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_loaded_to_gp");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("description");

                entity.Property(e => e.DiscretionaryLevy).HasColumnName("discretionary_levy");

                entity.Property(e => e.DiscretionaryLevyFromSarsFiles).HasColumnName("discretionary_levy_from_sars_files");

                entity.Property(e => e.DiscretionaryLevyRounded).HasColumnName("discretionary_levy_rounded");

                entity.Property(e => e.DocDate)
                    .HasColumnType("datetime")
                    .HasColumnName("doc_date");

                entity.Property(e => e.DocumentNumber)
                    .HasMaxLength(35)
                    .HasColumnName("document_number");

                entity.Property(e => e.DocumentTypeDiscretionary).HasColumnName("document_type_discretionary");

                entity.Property(e => e.DocumentTypeMandatory).HasColumnName("document_type_mandatory");

                entity.Property(e => e.EmployerName)
                    .HasMaxLength(255)
                    .HasColumnName("employer_name");

                entity.Property(e => e.ErrorEntry)
                    .HasColumnType("bit(1)")
                    .HasColumnName("errorEntry");

                entity.Property(e => e.ErrorMessage).HasColumnName("errorMessage");

                entity.Property(e => e.FullLevyAmount).HasColumnName("full_levy_amount");

                entity.Property(e => e.FullPercentageCalculation).HasColumnName("full_percentage_calculation");

                entity.Property(e => e.GpGrantBatchListId).HasColumnName("gp_grant_batch_list_id");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(10)
                    .HasColumnName("levy_number");

                entity.Property(e => e.LoadedToGp)
                    .HasColumnType("bit(1)")
                    .HasColumnName("loaded_to_gp")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MandatoryLevy).HasColumnName("mandatory_levy");

                entity.Property(e => e.MandatoryLevyFormSarsFiles).HasColumnName("mandatory_levy_form_sars_files");

                entity.Property(e => e.MandatoryLevyRounded).HasColumnName("mandatory_levy_rounded");

                entity.Property(e => e.Purchases).HasColumnName("purchases");

                entity.Property(e => e.SarsEmployerDetailLinkedId).HasColumnName("sars_employer_detail_linked_id");

                entity.Property(e => e.SarsLevyDetailsId).HasColumnName("sars_levy_details_id");

                entity.Property(e => e.SchemeYear).HasColumnName("scheme_year");

                entity.Property(e => e.ToBeRemoved)
                    .HasColumnType("bit(1)")
                    .HasColumnName("to_be_removed")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Total).HasColumnName("total");

                entity.Property(e => e.TotalFromSars).HasColumnName("total_from_sars");

                entity.Property(e => e.UserActionedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("user_actioned_date");

                entity.Property(e => e.UserActionedId).HasColumnName("user_actioned_id");

                entity.Property(e => e.VoucherNo)
                    .HasMaxLength(10)
                    .HasColumnName("voucher_no");

                entity.HasOne(d => d.ActiveContractDetail)
                    .WithMany(p => p.GpGrantBatchEntries)
                    .HasForeignKey(d => d.ActiveContractDetailId)
                    .HasConstraintName("FKn41a5s1g8i1ws9mkaacrj7x0b");

                entity.HasOne(d => d.GpGrantBatchList)
                    .WithMany(p => p.GpGrantBatchEntries)
                    .HasForeignKey(d => d.GpGrantBatchListId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKjdoj2p95l1w94tq9lhscveqh1");

                entity.HasOne(d => d.SarsEmployerDetailLinked)
                    .WithMany(p => p.GpGrantBatchEntries)
                    .HasForeignKey(d => d.SarsEmployerDetailLinkedId)
                    .HasConstraintName("FKnhgn6mwkslt7w5aupbtwubyb9");

                entity.HasOne(d => d.SarsLevyDetails)
                    .WithMany(p => p.GpGrantBatchEntries)
                    .HasForeignKey(d => d.SarsLevyDetailsId)
                    .HasConstraintName("FKgyhifvwiclyjjhbcny1l9rok7");

                entity.HasOne(d => d.UserActioned)
                    .WithMany(p => p.GpGrantBatchEntries)
                    .HasForeignKey(d => d.UserActionedId)
                    .HasConstraintName("FKgnug5su3460jdu3jbw04fctlo");
            });

            modelBuilder.Entity<GpGrantBatchEntryHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("gp_grant_batch_entry_hist");

                entity.HasIndex(e => e.Rev, "FKk6fi5dmbrkek6qh23tgjum0na");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActiveContractDetailId).HasColumnName("active_contract_detail_id");

                entity.Property(e => e.ArrivalDate1FormSarsFiles)
                    .HasColumnType("datetime")
                    .HasColumnName("arrival_date_1_form_sars_files");

                entity.Property(e => e.ChamberLinkedId).HasColumnName("chamber_linked_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateLoadedToGp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_loaded_to_gp");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("description");

                entity.Property(e => e.DiscretionaryLevy).HasColumnName("discretionary_levy");

                entity.Property(e => e.DiscretionaryLevyFromSarsFiles).HasColumnName("discretionary_levy_from_sars_files");

                entity.Property(e => e.DiscretionaryLevyRounded).HasColumnName("discretionary_levy_rounded");

                entity.Property(e => e.DocDate)
                    .HasColumnType("datetime")
                    .HasColumnName("doc_date");

                entity.Property(e => e.DocumentNumber)
                    .HasMaxLength(30)
                    .HasColumnName("document_number");

                entity.Property(e => e.DocumentTypeDiscretionary).HasColumnName("document_type_discretionary");

                entity.Property(e => e.DocumentTypeMandatory).HasColumnName("document_type_mandatory");

                entity.Property(e => e.EmployerName)
                    .HasMaxLength(255)
                    .HasColumnName("employer_name");

                entity.Property(e => e.ErrorEntry)
                    .HasColumnType("bit(1)")
                    .HasColumnName("errorEntry");

                entity.Property(e => e.ErrorMessage).HasColumnName("errorMessage");

                entity.Property(e => e.FullLevyAmount).HasColumnName("full_levy_amount");

                entity.Property(e => e.FullPercentageCalculation).HasColumnName("full_percentage_calculation");

                entity.Property(e => e.GpGrantBatchListId).HasColumnName("gp_grant_batch_list_id");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(10)
                    .HasColumnName("levy_number");

                entity.Property(e => e.LoadedToGp)
                    .HasColumnType("bit(1)")
                    .HasColumnName("loaded_to_gp")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MandatoryLevy).HasColumnName("mandatory_levy");

                entity.Property(e => e.MandatoryLevyFormSarsFiles).HasColumnName("mandatory_levy_form_sars_files");

                entity.Property(e => e.MandatoryLevyRounded).HasColumnName("mandatory_levy_rounded");

                entity.Property(e => e.Purchases).HasColumnName("purchases");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SarsEmployerDetailLinkedId).HasColumnName("sars_employer_detail_linked_id");

                entity.Property(e => e.SarsLevyDetailsId).HasColumnName("sars_levy_details_id");

                entity.Property(e => e.SchemeYear).HasColumnName("scheme_year");

                entity.Property(e => e.ToBeRemoved)
                    .HasColumnType("bit(1)")
                    .HasColumnName("to_be_removed")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Total).HasColumnName("total");

                entity.Property(e => e.TotalFromSars).HasColumnName("total_from_sars");

                entity.Property(e => e.UserActionedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("user_actioned_date");

                entity.Property(e => e.UserActionedId).HasColumnName("user_actioned_id");

                entity.Property(e => e.VoucherNo)
                    .HasMaxLength(10)
                    .HasColumnName("voucher_no");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.GpGrantBatchEntryHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKk6fi5dmbrkek6qh23tgjum0na");
            });

            modelBuilder.Entity<GpGrantBatchList>(entity =>
            {
                entity.ToTable("gp_grant_batch_list");

                entity.HasIndex(e => e.ApproveUserId, "FKb8i9njp6w1jcy59pq8jujls0k");

                entity.HasIndex(e => e.CreateUsersId, "FKs59n24a69w1h1jidmvi9l8to8");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdditionalRejectionReason).HasColumnName("additional_rejection_reason");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.ApproveUserId).HasColumnName("approve_user_id");

                entity.Property(e => e.BatchDescription)
                    .HasMaxLength(1000)
                    .HasColumnName("batch_description");

                entity.Property(e => e.BatchNumber).HasColumnName("batch_number");

                entity.Property(e => e.CompletedGpTransation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("completed_gp_transation");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUsersId).HasColumnName("create_users_id");

                entity.Property(e => e.DateCompletedGpTransation)
                    .HasColumnType("datetime")
                    .HasColumnName("date_completed_gp_transation");

                entity.Property(e => e.DateFinalApproved)
                    .HasColumnType("datetime")
                    .HasColumnName("date_final_approved");

                entity.Property(e => e.DateValidiationRun)
                    .HasColumnType("datetime")
                    .HasColumnName("date_validiation_run");

                entity.Property(e => e.FilteredSchemeYear).HasColumnName("filtered_scheme_year");

                entity.Property(e => e.FromDatePeriod)
                    .HasColumnType("datetime")
                    .HasColumnName("from_date_period");

                entity.Property(e => e.OriginalAmount).HasColumnName("original_amount");

                entity.Property(e => e.SarsFromDatePeriod)
                    .HasColumnType("datetime")
                    .HasColumnName("sars_from_date_period");

                entity.Property(e => e.SarsToDatePeriod)
                    .HasColumnType("datetime")
                    .HasColumnName("sars_to_date_period");

                entity.Property(e => e.ToDatePeriod)
                    .HasColumnType("datetime")
                    .HasColumnName("to_date_period");

                entity.Property(e => e.ValidiationRun)
                    .HasColumnType("bit(1)")
                    .HasColumnName("validiation_run");

                entity.Property(e => e.ValidiationUnderway)
                    .HasColumnType("bit(1)")
                    .HasColumnName("validiation_underway");

                entity.Property(e => e.WspType).HasColumnName("wsp_type");

                entity.HasOne(d => d.ApproveUser)
                    .WithMany(p => p.GpGrantBatchListApproveUsers)
                    .HasForeignKey(d => d.ApproveUserId)
                    .HasConstraintName("FKb8i9njp6w1jcy59pq8jujls0k");

                entity.HasOne(d => d.CreateUsers)
                    .WithMany(p => p.GpGrantBatchListCreateUsers)
                    .HasForeignKey(d => d.CreateUsersId)
                    .HasConstraintName("FKs59n24a69w1h1jidmvi9l8to8");
            });

            modelBuilder.Entity<GpGrantBatchListHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("gp_grant_batch_list_hist");

                entity.HasIndex(e => e.Rev, "FKp9m05gd9yx1xqijpcjfcyhab1");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AdditionalRejectionReason).HasColumnName("additional_rejection_reason");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.ApproveUserId).HasColumnName("approve_user_id");

                entity.Property(e => e.BatchDescription)
                    .HasMaxLength(500)
                    .HasColumnName("batch_description");

                entity.Property(e => e.BatchNumber).HasColumnName("batch_number");

                entity.Property(e => e.CompletedGpTransation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("completed_gp_transation");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUsersId).HasColumnName("create_users_id");

                entity.Property(e => e.DateCompletedGpTransation)
                    .HasColumnType("datetime")
                    .HasColumnName("date_completed_gp_transation");

                entity.Property(e => e.DateFinalApproved)
                    .HasColumnType("datetime")
                    .HasColumnName("date_final_approved");

                entity.Property(e => e.DateValidiationRun)
                    .HasColumnType("datetime")
                    .HasColumnName("date_validiation_run");

                entity.Property(e => e.FilteredSchemeYear).HasColumnName("filtered_scheme_year");

                entity.Property(e => e.FromDatePeriod)
                    .HasColumnType("datetime")
                    .HasColumnName("from_date_period");

                entity.Property(e => e.OriginalAmount).HasColumnName("original_amount");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SarsFromDatePeriod)
                    .HasColumnType("datetime")
                    .HasColumnName("sars_from_date_period");

                entity.Property(e => e.SarsToDatePeriod)
                    .HasColumnType("datetime")
                    .HasColumnName("sars_to_date_period");

                entity.Property(e => e.ToDatePeriod)
                    .HasColumnType("datetime")
                    .HasColumnName("to_date_period");

                entity.Property(e => e.ValidiationRun)
                    .HasColumnType("bit(1)")
                    .HasColumnName("validiation_run");

                entity.Property(e => e.ValidiationUnderway)
                    .HasColumnType("bit(1)")
                    .HasColumnName("validiation_underway");

                entity.Property(e => e.WspType).HasColumnName("wsp_type");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.GpGrantBatchListHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKp9m05gd9yx1xqijpcjfcyhab1");
            });

            modelBuilder.Entity<GrantAmount>(entity =>
            {
                entity.ToTable("grant_amount");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.GrantAmount1).HasColumnName("grant_amount");

                entity.Property(e => e.GrantType).HasColumnName("grant_type");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<GrantOfoSelection>(entity =>
            {
                entity.ToTable("grant_ofo_selection");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.GrantYear).HasColumnName("grant_year");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OfoAtrSelectionYear).HasColumnName("ofo_atr_selection_year");

                entity.Property(e => e.OfoWspSelectionYear).HasColumnName("ofo_wsp_selection_year");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<HajProperty>(entity =>
            {
                entity.HasKey(e => e.EPropertyId)
                    .HasName("PRIMARY");

                entity.ToTable("haj_properties");

                entity.Property(e => e.EPropertyId).HasColumnName("e_property_id");

                entity.Property(e => e.EProperty)
                    .HasMaxLength(100)
                    .HasColumnName("e_property");

                entity.Property(e => e.EValue)
                    .HasMaxLength(100)
                    .HasColumnName("e_value");
            });

            modelBuilder.Entity<HearingRating>(entity =>
            {
                entity.ToTable("hearing_rating");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<HighestQualificationRequired>(entity =>
            {
                entity.ToTable("highest_qualification_required");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<HistoricalIntersetaTransfer>(entity =>
            {
                entity.ToTable("historical_interseta_transfers");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Amount).HasColumnName("amount");

                entity.Property(e => e.GrantType)
                    .HasColumnType("text")
                    .HasColumnName("grant_type");

                entity.Property(e => e.MersetaSchemeYear).HasColumnName("merseta_scheme_year");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(50)
                    .HasColumnName("ref_no");

                entity.Property(e => e.Seta).HasColumnName("seta");

                entity.Property(e => e.SetaName)
                    .HasMaxLength(200)
                    .HasColumnName("seta_name");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("text")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionDateD)
                    .HasColumnType("datetime")
                    .HasColumnName("transaction_date_d");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<HomeAffair>(entity =>
            {
                entity.ToTable("home_affairs");

                entity.HasIndex(e => e.DhaIdNumber, "dha_id_number");

                entity.HasIndex(e => new { e.DhaIdNumber, e.DeathStatus }, "dha_id_number_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DeathDate)
                    .HasMaxLength(255)
                    .HasColumnName("death_date");

                entity.Property(e => e.DeathStatus).HasColumnName("death_status");

                entity.Property(e => e.DhaIdNumber).HasColumnName("dha_id_number");

                entity.Property(e => e.FullNames)
                    .HasMaxLength(255)
                    .HasColumnName("full_names");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdBookDateIssued)
                    .HasMaxLength(255)
                    .HasColumnName("id_book_date_issued");

                entity.Property(e => e.IdCardDateIssued)
                    .HasMaxLength(255)
                    .HasColumnName("id_card_date_issued");

                entity.Property(e => e.IdStatus)
                    .HasMaxLength(255)
                    .HasColumnName("id_status");

                entity.Property(e => e.MaidenName)
                    .HasMaxLength(255)
                    .HasColumnName("maiden_name");

                entity.Property(e => e.MersetaIdNo)
                    .HasMaxLength(255)
                    .HasColumnName("merseta_id_no");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");
            });

            modelBuilder.Entity<HonoursClassification>(entity =>
            {
                entity.ToTable("honours_classification");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(3)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<HostingCompany>(entity =>
            {
                entity.ToTable("hosting_company");

                entity.HasIndex(e => e.ProfileImageId, "FK38joejsinybefcy0tyhegp28l");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ArTakeOn)
                    .HasColumnType("bit(1)")
                    .HasColumnName("ar_take_on");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(70)
                    .HasColumnName("company_name");

                entity.Property(e => e.CompanyRegNumber)
                    .HasMaxLength(20)
                    .HasColumnName("company_reg_number");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.IncomeTaxNumber)
                    .HasMaxLength(100)
                    .HasColumnName("income_tax_number");

                entity.Property(e => e.Logo)
                    .HasMaxLength(200)
                    .HasColumnName("logo");

                entity.Property(e => e.ProfileImageId).HasColumnName("profile_image_id");

                entity.Property(e => e.Theme)
                    .HasMaxLength(100)
                    .HasColumnName("theme");

                entity.Property(e => e.Title)
                    .HasMaxLength(200)
                    .HasColumnName("title");

                entity.Property(e => e.VatNumber)
                    .HasMaxLength(100)
                    .HasColumnName("vat_number");

                entity.HasOne(d => d.ProfileImage)
                    .WithMany(p => p.HostingCompanies)
                    .HasForeignKey(d => d.ProfileImageId)
                    .HasConstraintName("FK38joejsinybefcy0tyhegp28l");
            });

            modelBuilder.Entity<HostingCompanyAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("hosting_company_AUD");

                entity.HasIndex(e => e.Rev, "FKjmuk7ittix41jskwjv6cqq62e");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ProfileImageId).HasColumnName("profile_image_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.HostingCompanyAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKjmuk7ittix41jskwjv6cqq62e");
            });

            modelBuilder.Entity<HostingCompanyCompany>(entity =>
            {
                entity.ToTable("hosting_company_companies");

                entity.HasIndex(e => e.HostingCompanyId, "FKbntsr3je4m364dv272ijnm4rp");

                entity.HasIndex(e => e.CompanyId, "FKj2p0itm0xbwau06fttg7xusnv");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Active)
                    .HasColumnType("bit(1)")
                    .HasColumnName("active");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.HostingCompanyCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKj2p0itm0xbwau06fttg7xusnv");

                entity.HasOne(d => d.HostingCompany)
                    .WithMany(p => p.HostingCompanyCompanies)
                    .HasForeignKey(d => d.HostingCompanyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKbntsr3je4m364dv272ijnm4rp");
            });

            modelBuilder.Entity<HostingCompanyDepartment>(entity =>
            {
                entity.ToTable("hosting_company_departments");

                entity.HasIndex(e => e.HostingCompanyId, "FK4glyj1nx4xwf4f6rm090xvi64");

                entity.HasIndex(e => e.HostingCompanyDepartmentParentId, "FK8fwsyl4cogs0a43cpfjbp1af4");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Department)
                    .HasMaxLength(500)
                    .HasColumnName("department");

                entity.Property(e => e.HostingCompanyDepartmentParentId).HasColumnName("hosting_company_department_parent_id");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.HasOne(d => d.HostingCompanyDepartmentParent)
                    .WithMany(p => p.InverseHostingCompanyDepartmentParent)
                    .HasForeignKey(d => d.HostingCompanyDepartmentParentId)
                    .HasConstraintName("FK8fwsyl4cogs0a43cpfjbp1af4");

                entity.HasOne(d => d.HostingCompany)
                    .WithMany(p => p.HostingCompanyDepartments)
                    .HasForeignKey(d => d.HostingCompanyId)
                    .HasConstraintName("FK4glyj1nx4xwf4f6rm090xvi64");
            });

            modelBuilder.Entity<HostingCompanyDepartmentsChatEmployee>(entity =>
            {
                entity.ToTable("hosting_company_departments_chat_employees");

                entity.HasIndex(e => e.HostingCompanyDepartmentId, "FKq7e9dx4p3xmpxjlpjove0fmvu");

                entity.HasIndex(e => e.HostingCompanyEmployeesId, "FKriamjwwju5vcr327wt2uiagyj");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyDepartmentId).HasColumnName("hosting_company_department_id");

                entity.Property(e => e.HostingCompanyEmployeesId).HasColumnName("hosting_company_employees_id");

                entity.HasOne(d => d.HostingCompanyDepartment)
                    .WithMany(p => p.HostingCompanyDepartmentsChatEmployees)
                    .HasForeignKey(d => d.HostingCompanyDepartmentId)
                    .HasConstraintName("FKq7e9dx4p3xmpxjlpjove0fmvu");

                entity.HasOne(d => d.HostingCompanyEmployees)
                    .WithMany(p => p.HostingCompanyDepartmentsChatEmployees)
                    .HasForeignKey(d => d.HostingCompanyEmployeesId)
                    .HasConstraintName("FKriamjwwju5vcr327wt2uiagyj");
            });

            modelBuilder.Entity<HostingCompanyDepartmentsEmployee>(entity =>
            {
                entity.ToTable("hosting_company_departments_employees");

                entity.HasIndex(e => e.HostingCompanyEmployeesId, "FK42j8v925g4sdx71wub2cf2xef");

                entity.HasIndex(e => e.HostingCompanyDepartmentId, "FKi5qfsqld03r761v7kobo5rggk");

                entity.HasIndex(e => e.RoleId, "FKkpjisjovrxe5t97ucx6kj6wu4");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyDepartmentId).HasColumnName("hosting_company_department_id");

                entity.Property(e => e.HostingCompanyEmployeesId).HasColumnName("hosting_company_employees_id");

                entity.Property(e => e.RoleId).HasColumnName("role_id");

                entity.HasOne(d => d.HostingCompanyDepartment)
                    .WithMany(p => p.HostingCompanyDepartmentsEmployees)
                    .HasForeignKey(d => d.HostingCompanyDepartmentId)
                    .HasConstraintName("FKi5qfsqld03r761v7kobo5rggk");

                entity.HasOne(d => d.HostingCompanyEmployees)
                    .WithMany(p => p.HostingCompanyDepartmentsEmployees)
                    .HasForeignKey(d => d.HostingCompanyEmployeesId)
                    .HasConstraintName("FK42j8v925g4sdx71wub2cf2xef");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.HostingCompanyDepartmentsEmployees)
                    .HasForeignKey(d => d.RoleId)
                    .HasConstraintName("FKkpjisjovrxe5t97ucx6kj6wu4");
            });

            modelBuilder.Entity<HostingCompanyDepartmentsProcess>(entity =>
            {
                entity.ToTable("hosting_company_departments_process");

                entity.HasIndex(e => e.HostingCompanyDepartmentId, "FK6qinttcdkt4b8rwb0dxo7au5p");

                entity.HasIndex(e => e.HostingCompanyProcessId, "FKw7l0t6djwyy6b0ja110ah4l9");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyDepartmentId).HasColumnName("hosting_company_department_id");

                entity.Property(e => e.HostingCompanyProcessId).HasColumnName("hosting_company_process_id");

                entity.HasOne(d => d.HostingCompanyDepartment)
                    .WithMany(p => p.HostingCompanyDepartmentsProcesses)
                    .HasForeignKey(d => d.HostingCompanyDepartmentId)
                    .HasConstraintName("FK6qinttcdkt4b8rwb0dxo7au5p");

                entity.HasOne(d => d.HostingCompanyProcess)
                    .WithMany(p => p.HostingCompanyDepartmentsProcesses)
                    .HasForeignKey(d => d.HostingCompanyProcessId)
                    .HasConstraintName("FKw7l0t6djwyy6b0ja110ah4l9");
            });

            modelBuilder.Entity<HostingCompanyEmployee>(entity =>
            {
                entity.ToTable("hosting_company_employees");

                entity.HasIndex(e => e.HostingCompanyId, "FK58xdkfj0tt3ewutnpj3aowbw6");

                entity.HasIndex(e => e.UserId, "FKeatydpeo2dluwvmyhmrei4quv");

                entity.HasIndex(e => e.JobTitleId, "FKti12pi4xe90n4tniuoiauy9ri");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Active)
                    .HasColumnType("bit(1)")
                    .HasColumnName("active");

                entity.Property(e => e.Admin)
                    .HasColumnType("bit(1)")
                    .HasColumnName("admin")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.JobTitleId).HasColumnName("job_title_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.HostingCompany)
                    .WithMany(p => p.HostingCompanyEmployees)
                    .HasForeignKey(d => d.HostingCompanyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK58xdkfj0tt3ewutnpj3aowbw6");

                entity.HasOne(d => d.JobTitle)
                    .WithMany(p => p.HostingCompanyEmployees)
                    .HasForeignKey(d => d.JobTitleId)
                    .HasConstraintName("FKti12pi4xe90n4tniuoiauy9ri");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.HostingCompanyEmployees)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKeatydpeo2dluwvmyhmrei4quv");
            });

            modelBuilder.Entity<HostingCompanyEmployeeTemplate>(entity =>
            {
                entity.ToTable("hosting_company_employee_templates");

                entity.HasIndex(e => e.HostingCompanyId, "FK9r8ohvriwprssjs327su8dxhr");

                entity.HasIndex(e => e.TemplateId, "FKqg8kjmmoh76i75b8dh64ae181");

                entity.HasIndex(e => e.Uid, "FKrs4d4yjoaws9jhlhpc8b7ye05");

                entity.HasIndex(e => e.OrigTemplateId, "FKsfydcl4uowp6e7t8aieftmgvv");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.OrigTemplateId).HasColumnName("orig_template_id");

                entity.Property(e => e.TemplateId).HasColumnName("template_id");

                entity.Property(e => e.TemplateType).HasColumnName("template_type");

                entity.Property(e => e.Title).HasColumnName("title");

                entity.Property(e => e.Uid).HasColumnName("uid");

                entity.Property(e => e.UniqueId)
                    .HasMaxLength(50)
                    .HasColumnName("unique_id");

                entity.HasOne(d => d.HostingCompany)
                    .WithMany(p => p.HostingCompanyEmployeeTemplates)
                    .HasForeignKey(d => d.HostingCompanyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK9r8ohvriwprssjs327su8dxhr");

                entity.HasOne(d => d.OrigTemplate)
                    .WithMany(p => p.InverseOrigTemplate)
                    .HasForeignKey(d => d.OrigTemplateId)
                    .HasConstraintName("FKsfydcl4uowp6e7t8aieftmgvv");

                entity.HasOne(d => d.Template)
                    .WithMany(p => p.InverseTemplate)
                    .HasForeignKey(d => d.TemplateId)
                    .HasConstraintName("FKqg8kjmmoh76i75b8dh64ae181");

                entity.HasOne(d => d.UidNavigation)
                    .WithMany(p => p.HostingCompanyEmployeeTemplates)
                    .HasForeignKey(d => d.Uid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKrs4d4yjoaws9jhlhpc8b7ye05");
            });

            modelBuilder.Entity<HostingCompanyProcess>(entity =>
            {
                entity.ToTable("hosting_company_process");

                entity.HasIndex(e => e.HostingCompanyId, "FK23p2pdh7b9i6jb0t1w2fpltuf");

                entity.HasIndex(e => e.NextProcessId, "FKiv2irnewdqsev5xbnx2p4i30y");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.NextProcessId).HasColumnName("next_process_id");

                entity.Property(e => e.Note)
                    .HasMaxLength(300)
                    .HasColumnName("note");

                entity.Property(e => e.WorkflowProcess)
                    .HasMaxLength(255)
                    .HasColumnName("workflow_process");

                entity.HasOne(d => d.HostingCompany)
                    .WithMany(p => p.HostingCompanyProcesses)
                    .HasForeignKey(d => d.HostingCompanyId)
                    .HasConstraintName("FK23p2pdh7b9i6jb0t1w2fpltuf");

                entity.HasOne(d => d.NextProcess)
                    .WithMany(p => p.InverseNextProcess)
                    .HasForeignKey(d => d.NextProcessId)
                    .HasConstraintName("FKiv2irnewdqsev5xbnx2p4i30y");
            });

            modelBuilder.Entity<HostingCompanyTemplate>(entity =>
            {
                entity.ToTable("hosting_company_templates");

                entity.HasIndex(e => e.OrigTemplateId, "FK16r93lxeq1u1jnq32j2tddj7n");

                entity.HasIndex(e => e.Uid, "FKaga60rb3e2dbtwfrunslb6w3j");

                entity.HasIndex(e => e.HostingCompanyId, "FKcpjc9s7sbf2ep2fdn0cvvxtnn");

                entity.HasIndex(e => e.TemplateId, "FKjwvfogdxposmti2lgw9tuyieg");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.OrigTemplateId).HasColumnName("orig_template_id");

                entity.Property(e => e.TemplateId).HasColumnName("template_id");

                entity.Property(e => e.TemplateType).HasColumnName("template_type");

                entity.Property(e => e.Title).HasColumnName("title");

                entity.Property(e => e.Uid).HasColumnName("uid");

                entity.Property(e => e.UniqueId)
                    .HasMaxLength(50)
                    .HasColumnName("unique_id");

                entity.HasOne(d => d.HostingCompany)
                    .WithMany(p => p.HostingCompanyTemplates)
                    .HasForeignKey(d => d.HostingCompanyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKcpjc9s7sbf2ep2fdn0cvvxtnn");

                entity.HasOne(d => d.OrigTemplate)
                    .WithMany(p => p.InverseOrigTemplate)
                    .HasForeignKey(d => d.OrigTemplateId)
                    .HasConstraintName("FK16r93lxeq1u1jnq32j2tddj7n");

                entity.HasOne(d => d.Template)
                    .WithMany(p => p.InverseTemplate)
                    .HasForeignKey(d => d.TemplateId)
                    .HasConstraintName("FKjwvfogdxposmti2lgw9tuyieg");

                entity.HasOne(d => d.UidNavigation)
                    .WithMany(p => p.HostingCompanyTemplates)
                    .HasForeignKey(d => d.Uid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKaga60rb3e2dbtwfrunslb6w3j");
            });

            modelBuilder.Entity<Image>(entity =>
            {
                entity.ToTable("images");

                entity.HasIndex(e => e.UserId, "FK13ljqfrfwbyvnsdhihwta8cpr");

                entity.HasIndex(e => e.BugReportId, "FK5eoxpdex1vf4xov6wflx0j5la");

                entity.HasIndex(e => e.HostingCompanyId, "FKqnke8oguwir6p3pbbt9kvi294");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Active)
                    .HasColumnType("bit(1)")
                    .HasColumnName("active");

                entity.Property(e => e.BugReportId).HasColumnName("bug_report_id");

                entity.Property(e => e.ContentType)
                    .HasMaxLength(200)
                    .HasColumnName("content_type");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Extension)
                    .HasMaxLength(20)
                    .HasColumnName("extension");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.NewFname)
                    .HasMaxLength(200)
                    .HasColumnName("new_fname");

                entity.Property(e => e.OriginalFname)
                    .HasMaxLength(500)
                    .HasColumnName("original_fname");

                entity.Property(e => e.SecurityPic).HasColumnName("security_pic");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.BugReport)
                    .WithMany(p => p.Images)
                    .HasForeignKey(d => d.BugReportId)
                    .HasConstraintName("FK5eoxpdex1vf4xov6wflx0j5la");

                entity.HasOne(d => d.HostingCompany)
                    .WithMany(p => p.Images)
                    .HasForeignKey(d => d.HostingCompanyId)
                    .HasConstraintName("FKqnke8oguwir6p3pbbt9kvi294");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Images)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK13ljqfrfwbyvnsdhihwta8cpr");
            });

            modelBuilder.Entity<ImpactOfStaffTraining>(entity =>
            {
                entity.ToTable("impact_of_staff_training");

                entity.HasIndex(e => e.WspId, "FK2j4k6ry6d0r0h0y837nn93pvw");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DifficultKeepUp).HasColumnName("difficult_keep_up");

                entity.Property(e => e.EasierImportSkills).HasColumnName("easier_import_skills");

                entity.Property(e => e.FindThatTherePositions).HasColumnName("find_that_there_positions");

                entity.Property(e => e.GraduatesSeemGetting).HasColumnName("graduates_seem_getting");

                entity.Property(e => e.MostOurLearners).HasColumnName("most_our_learners");

                entity.Property(e => e.OnlyTrainAccordingToOurBusinessNeeds).HasColumnName("only_train_according_to_our_business_needs");

                entity.Property(e => e.ReadilyEmploy).HasColumnName("readily_employ");

                entity.Property(e => e.ReadilyTrainTheUnemployed).HasColumnName("readily_train_the_unemployed");

                entity.Property(e => e.TherePreference).HasColumnName("there_preference");

                entity.Property(e => e.TrainImproveProductivitys).HasColumnName("train_improve_productivitys");

                entity.Property(e => e.TrainOurStaff).HasColumnName("train_our_staff");

                entity.Property(e => e.TrainOverAndAboveOurImmediateCompanyNeeds).HasColumnName("train_over_and_above_our_immediate_company_needs");

                entity.Property(e => e.TrainToAid).HasColumnName("train_to_aid");

                entity.Property(e => e.TrainToRemainGloballyCompetitive).HasColumnName("train_to_remain_globally_competitive");

                entity.Property(e => e.TrainingCurrent).HasColumnName("training_current");

                entity.Property(e => e.TrainingInstitutions).HasColumnName("training_institutions");

                entity.Property(e => e.TrainingIsNo).HasColumnName("training_is_no");

                entity.Property(e => e.WeReadilyEmployFetGraduates).HasColumnName("we_readily_employ_fet_graduates");

                entity.Property(e => e.WeTrainToKeepUpWithNewTechnologies).HasColumnName("we_train_to_keep_up_with_new_technologies");

                entity.Property(e => e.WorkWithTraining).HasColumnName("work_with_training");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.ImpactOfStaffTrainings)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FK2j4k6ry6d0r0h0y837nn93pvw");
            });

            modelBuilder.Entity<Institution>(entity =>
            {
                entity.ToTable("institution");

                entity.HasIndex(e => e.InstitutionTypeId, "FKtbs67xvuorsyxp7o23usfntgb");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.InstitutionTypeId).HasColumnName("institution_type_id");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.InstitutionType)
                    .WithMany(p => p.Institutions)
                    .HasForeignKey(d => d.InstitutionTypeId)
                    .HasConstraintName("FKtbs67xvuorsyxp7o23usfntgb");
            });

            modelBuilder.Entity<InstitutionType>(entity =>
            {
                entity.ToTable("institution_type");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<InterSetaTransfer>(entity =>
            {
                entity.ToTable("inter_seta_transfer");

                entity.HasIndex(e => e.CompanyId, "FK24ex0b8kgdtsox4a6s0ag7hu7");

                entity.HasIndex(e => e.UsersId, "FKfafkjkljgcmdk2r3qk5c9uayj");

                entity.HasIndex(e => e.CurrentEtqaId, "FKs9blyun0o99fdqmvuda8chjb7");

                entity.HasIndex(e => e.NewEtqaId, "FKsxtn0b235u1obe8nmrssg472s");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("action_date");

                entity.Property(e => e.AdditionalComment)
                    .HasMaxLength(500)
                    .HasColumnName("additional_comment");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CoreBusinessChanged)
                    .HasColumnType("bit(1)")
                    .HasColumnName("core_business_changed")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CurrentEtqaId).HasColumnName("current_etqa_id");

                entity.Property(e => e.Guid)
                    .HasMaxLength(500)
                    .HasColumnName("guid");

                entity.Property(e => e.MoreThanOneSeta)
                    .HasColumnType("bit(1)")
                    .HasColumnName("more_than_one_seta")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NewEtqaId).HasColumnName("new_etqa_id");

                entity.Property(e => e.ScopedWithinSeta)
                    .HasColumnType("bit(1)")
                    .HasColumnName("scoped_within_seta")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.InterSetaTransfers)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK24ex0b8kgdtsox4a6s0ag7hu7");

                entity.HasOne(d => d.CurrentEtqa)
                    .WithMany(p => p.InterSetaTransferCurrentEtqas)
                    .HasForeignKey(d => d.CurrentEtqaId)
                    .HasConstraintName("FKs9blyun0o99fdqmvuda8chjb7");

                entity.HasOne(d => d.NewEtqa)
                    .WithMany(p => p.InterSetaTransferNewEtqas)
                    .HasForeignKey(d => d.NewEtqaId)
                    .HasConstraintName("FKsxtn0b235u1obe8nmrssg472s");

                entity.HasOne(d => d.Users)
                    .WithMany(p => p.InterSetaTransfers)
                    .HasForeignKey(d => d.UsersId)
                    .HasConstraintName("FKfafkjkljgcmdk2r3qk5c9uayj");
            });

            modelBuilder.Entity<InternshipStatus>(entity =>
            {
                entity.ToTable("internship_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<InterventionLevel>(entity =>
            {
                entity.ToTable("intervention_level");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<InterventionLevelHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("intervention_level_hist");

                entity.HasIndex(e => e.Rev, "FKo9pf2j17cxjw2exuhsvxswd6i");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.InterventionLevelHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKo9pf2j17cxjw2exuhsvxswd6i");
            });

            modelBuilder.Entity<InterventionTitle>(entity =>
            {
                entity.ToTable("intervention_title");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<InterventionType>(entity =>
            {
                entity.ToTable("intervention_type");

                entity.HasIndex(e => e.AetProgrammeLevelId, "FKmgkjbngrh46j2rogcug91hjsb");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AetProgrammeLevelId).HasColumnName("aet_programme_level_id");

                entity.Property(e => e.Arpl)
                    .HasColumnType("bit(1)")
                    .HasColumnName("arpl");

                entity.Property(e => e.AtrSelection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("atr_selection")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.BasicGrantAmount).HasColumnName("basic_grant_amount");

                entity.Property(e => e.BursariesDocumentsRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("bursaries_documents_required");

                entity.Property(e => e.Busary)
                    .HasColumnType("bit(1)")
                    .HasColumnName("busary");

                entity.Property(e => e.CanSelect)
                    .HasColumnType("bit(1)")
                    .HasColumnName("can_select")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CompletionLetter)
                    .HasColumnType("bit(1)")
                    .HasColumnName("completion_letter");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.Dhet)
                    .HasMaxLength(255)
                    .HasColumnName("dhet");

                entity.Property(e => e.DisabilityGrantAmount).HasColumnName("disability_grant_amount");

                entity.Property(e => e.Duration).HasColumnName("duration");

                entity.Property(e => e.ExtensionRequest)
                    .HasColumnType("bit(1)")
                    .HasColumnName("extension_request");

                entity.Property(e => e.ForSdpAccreditation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_sdp_accreditation");

                entity.Property(e => e.ForTradeTest)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_trade_test");

                entity.Property(e => e.Form)
                    .HasMaxLength(255)
                    .HasColumnName("form");

                entity.Property(e => e.GovDescription)
                    .HasMaxLength(100)
                    .HasColumnName("gov_description");

                entity.Property(e => e.Institution)
                    .HasColumnType("bit(1)")
                    .HasColumnName("institution")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.InterventionTypeEnum).HasColumnName("intervention_type_enum");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.Onesidedtermination)
                    .HasColumnType("bit(1)")
                    .HasColumnName("onesidedtermination")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.OtherGrantAmount).HasColumnName("other_grant_amount");

                entity.Property(e => e.PartOfIdString)
                    .HasMaxLength(255)
                    .HasColumnName("part_of_id_string");

                entity.Property(e => e.PivotNonpivot).HasColumnName("pivot_nonpivot");

                entity.Property(e => e.PrioritisationScale).HasColumnName("prioritisation_scale");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QmrTvetReport)
                    .HasColumnType("bit(1)")
                    .HasColumnName("qmr_tvet_report")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.QmrTypeSelection).HasColumnName("qmr_type_selection");

                entity.Property(e => e.QualificationTypeSelection).HasColumnName("qualification_type_selection");

                entity.Property(e => e.RegistrationByNonMerseta)
                    .HasColumnType("bit(1)")
                    .HasColumnName("registration_by_non_merseta");

                entity.Property(e => e.RequestVerificationOfAssessments)
                    .HasColumnType("bit(1)")
                    .HasColumnName("request_verification_of_assessments");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.ShortDescription)
                    .HasMaxLength(10)
                    .HasColumnName("short_description");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.TranchIntervals).HasColumnName("tranch_intervals");

                entity.Property(e => e.TrancheRule).HasColumnName("tranche_rule");

                entity.Property(e => e.WorkplaceApprovalRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("workplace_approval_required");

                entity.Property(e => e.WorkplaceBasedLearning)
                    .HasColumnType("bit(1)")
                    .HasColumnName("workplace_based_learning");

                entity.Property(e => e.WspElection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("wsp_election")
                    .HasDefaultValueSql("b'0'");

                entity.HasOne(d => d.AetProgrammeLevel)
                    .WithMany(p => p.InterventionTypes)
                    .HasForeignKey(d => d.AetProgrammeLevelId)
                    .HasConstraintName("FKmgkjbngrh46j2rogcug91hjsb");
            });

            modelBuilder.Entity<InterventionTypeDescription>(entity =>
            {
                entity.ToTable("intervention_type_description");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<InterventionTypeHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("intervention_type_hist");

                entity.HasIndex(e => e.Rev, "FKj5ac72perr2nif69r7m9l7h9p");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AetProgrammeLevelId).HasColumnName("aet_programme_level_id");

                entity.Property(e => e.Arpl)
                    .HasColumnType("bit(1)")
                    .HasColumnName("arpl");

                entity.Property(e => e.AtrSelection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("atr_selection")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.BasicGrantAmount).HasColumnName("basic_grant_amount");

                entity.Property(e => e.BursariesDocumentsRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("bursaries_documents_required");

                entity.Property(e => e.Busary)
                    .HasColumnType("bit(1)")
                    .HasColumnName("busary");

                entity.Property(e => e.CanSelect)
                    .HasColumnType("bit(1)")
                    .HasColumnName("can_select")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.CompletionLetter)
                    .HasColumnType("bit(1)")
                    .HasColumnName("completion_letter");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.Dhet)
                    .HasMaxLength(255)
                    .HasColumnName("dhet");

                entity.Property(e => e.DisabilityGrantAmount).HasColumnName("disability_grant_amount");

                entity.Property(e => e.Duration).HasColumnName("duration");

                entity.Property(e => e.ExtensionRequest)
                    .HasColumnType("bit(1)")
                    .HasColumnName("extension_request");

                entity.Property(e => e.ForSdpAccreditation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_sdp_accreditation");

                entity.Property(e => e.ForTradeTest)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_trade_test");

                entity.Property(e => e.Form)
                    .HasMaxLength(255)
                    .HasColumnName("form");

                entity.Property(e => e.GovDescription)
                    .HasMaxLength(100)
                    .HasColumnName("gov_description");

                entity.Property(e => e.Institution)
                    .HasColumnType("bit(1)")
                    .HasColumnName("institution")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.InterventionTypeEnum).HasColumnName("intervention_type_enum");

                entity.Property(e => e.Onesidedtermination)
                    .HasColumnType("bit(1)")
                    .HasColumnName("onesidedtermination")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.OtherGrantAmount).HasColumnName("other_grant_amount");

                entity.Property(e => e.PartOfIdString)
                    .HasMaxLength(255)
                    .HasColumnName("part_of_id_string");

                entity.Property(e => e.PivotNonpivot).HasColumnName("pivot_nonpivot");

                entity.Property(e => e.PrioritisationScale).HasColumnName("prioritisation_scale");

                entity.Property(e => e.QmrTvetReport)
                    .HasColumnType("bit(1)")
                    .HasColumnName("qmr_tvet_report")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.QmrTypeSelection).HasColumnName("qmr_type_selection");

                entity.Property(e => e.QualificationTypeSelection).HasColumnName("qualification_type_selection");

                entity.Property(e => e.RegistrationByNonMerseta)
                    .HasColumnType("bit(1)")
                    .HasColumnName("registration_by_non_merseta");

                entity.Property(e => e.RequestVerificationOfAssessments)
                    .HasColumnType("bit(1)")
                    .HasColumnName("request_verification_of_assessments");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.ShortDescription)
                    .HasMaxLength(10)
                    .HasColumnName("short_description");

                entity.Property(e => e.TranchIntervals).HasColumnName("tranch_intervals");

                entity.Property(e => e.TrancheRule).HasColumnName("tranche_rule");

                entity.Property(e => e.WorkplaceApprovalRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("workplace_approval_required");

                entity.Property(e => e.WorkplaceBasedLearning)
                    .HasColumnType("bit(1)")
                    .HasColumnName("workplace_based_learning");

                entity.Property(e => e.WspElection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("wsp_election")
                    .HasDefaultValueSql("b'0'");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.InterventionTypeHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKj5ac72perr2nif69r7m9l7h9p");
            });

            modelBuilder.Entity<JasperDownloadTracker>(entity =>
            {
                entity.ToTable("jasper_download_tracker");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Action)
                    .HasMaxLength(255)
                    .HasColumnName("action");

                entity.Property(e => e.AdditionalInformation)
                    .HasMaxLength(255)
                    .HasColumnName("additional_information");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.PageUrl)
                    .HasMaxLength(255)
                    .HasColumnName("page_url");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UserId).HasColumnName("user_id");
            });

            modelBuilder.Entity<JobTitle>(entity =>
            {
                entity.ToTable("job_title");

                entity.HasIndex(e => e.RolesId, "FK8d56n4nkkq7sofg1bxshybeg");

                entity.HasIndex(e => e.RegionId, "FKpceo2sym77hg2cwsepj4ubuo2");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.RegionId).HasColumnName("region_id");

                entity.Property(e => e.RolesId).HasColumnName("roles_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.Region)
                    .WithMany(p => p.JobTitles)
                    .HasForeignKey(d => d.RegionId)
                    .HasConstraintName("FKpceo2sym77hg2cwsepj4ubuo2");

                entity.HasOne(d => d.Roles)
                    .WithMany(p => p.JobTitles)
                    .HasForeignKey(d => d.RolesId)
                    .HasConstraintName("FK8d56n4nkkq7sofg1bxshybeg");
            });

            modelBuilder.Entity<Language>(entity =>
            {
                entity.ToTable("language");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Learner>(entity =>
            {
                entity.ToTable("learners");

                entity.HasIndex(e => e.DisabilityStatus, "FK7ckxffrgp2ud878nt2748b8wp");

                entity.HasIndex(e => e.PostalAddressId, "FK8wtlh78uedumkasqwwxnk9rij");

                entity.HasIndex(e => e.GenderId, "FKj8rrbgpa2gaolu8u93pucraoo");

                entity.HasIndex(e => e.MunicipalityId, "FKleceb2233eenv1t5lkh7yyt5c");

                entity.HasIndex(e => e.ResidentialAddressId, "FKmqa3etfx6xqp6kd9bhganh4io");

                entity.HasIndex(e => e.EquityId, "FKogt9wydkftqwr9rn26o7drwja");

                entity.HasIndex(e => e.DisabledId, "FKq110w68qjlv7tex41m8k1h17a");

                entity.HasIndex(e => e.NationalityId, "FKr09sgki2nvmqm5cjdbe5de6uv");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AgreementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("agreement_date")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.AgreementGuardian)
                    .HasMaxLength(150)
                    .HasColumnName("agreement_guardian")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.AlternativeIdNumber)
                    .HasMaxLength(20)
                    .HasColumnName("alternative_id_number");

                entity.Property(e => e.AnyOtherLoanGrantDetails)
                    .HasMaxLength(255)
                    .HasColumnName("any_other_loan_grant_details");

                entity.Property(e => e.AnyOtherLoanGrantNo)
                    .HasMaxLength(255)
                    .HasColumnName("any_other_loan_grant_no");

                entity.Property(e => e.AnyOtherLoanGrantYes)
                    .HasMaxLength(255)
                    .HasColumnName("any_other_loan_grant_yes");

                entity.Property(e => e.ApplicationReceived)
                    .HasColumnType("datetime")
                    .HasColumnName("application_received")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.ApprenticeApprentice)
                    .HasMaxLength(150)
                    .HasColumnName("apprentice_apprentice")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.AppropriateNo)
                    .HasMaxLength(255)
                    .HasColumnName("appropriate_no");

                entity.Property(e => e.AppropriateYes)
                    .HasMaxLength(255)
                    .HasColumnName("appropriate_yes");

                entity.Property(e => e.AsIndicated)
                    .HasMaxLength(255)
                    .HasColumnName("as_indicated")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.AwardAmount1)
                    .HasMaxLength(255)
                    .HasColumnName("award_amount_1");

                entity.Property(e => e.AwardAmount2)
                    .HasMaxLength(255)
                    .HasColumnName("award_amount_2");

                entity.Property(e => e.ByWhichCompany)
                    .HasMaxLength(255)
                    .HasColumnName("by_which_company");

                entity.Property(e => e.CellNoEmployer)
                    .HasMaxLength(20)
                    .HasColumnName("cell_no_employer");

                entity.Property(e => e.CellNoTrainee)
                    .HasMaxLength(20)
                    .HasColumnName("cell_no_trainee");

                entity.Property(e => e.CellNumber)
                    .HasMaxLength(20)
                    .HasColumnName("cell_number");

                entity.Property(e => e.Citizenship)
                    .HasMaxLength(255)
                    .HasColumnName("citizenship")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.ClientServices)
                    .HasMaxLength(50)
                    .HasColumnName("client_services")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.ClientServicesAdministrator)
                    .HasMaxLength(255)
                    .HasColumnName("client_services_administrator")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.CommencementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("commencement_date")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.CommencementDateLearnershipAgreement)
                    .HasColumnType("datetime")
                    .HasColumnName("commencement_date_learnership_agreement")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.CompletedLearnerAfricanCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("completed_learner_african_citizen")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.CompletedLearnerCell)
                    .HasMaxLength(20)
                    .HasColumnName("completed_learner_cell");

                entity.Property(e => e.CompletedLearnerDateBirth)
                    .HasColumnType("datetime")
                    .HasColumnName("completed_learner_date_birth")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.CompletedLearnerEmailAddress)
                    .HasMaxLength(50)
                    .HasColumnName("completed_learner_email_address");

                entity.Property(e => e.CompletedLearnerHome)
                    .HasMaxLength(20)
                    .HasColumnName("completed_learner_home");

                entity.Property(e => e.CompletedLearnerHowManyCredits)
                    .HasMaxLength(50)
                    .HasColumnName("completed_learner_how_many_credits")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.CompletedLearnerIfSpecify)
                    .HasMaxLength(255)
                    .HasColumnName("completed_learner_if_specify")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.CompletedLearnerNameTheUnion)
                    .HasMaxLength(255)
                    .HasColumnName("completed_Learner_Name_The_Union")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.CompletedLearnerSpecifyRegistration)
                    .HasMaxLength(150)
                    .HasColumnName("completed_learner_specify_registration")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.CompletedLearnerStandardGradeLevels)
                    .HasMaxLength(255)
                    .HasColumnName("completed_learner_standard_gradeLevels")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.CompletedLearnerStartWork)
                    .HasColumnType("datetime")
                    .HasColumnName("completed_learner_start_work")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.CompletedLearnerWork)
                    .HasMaxLength(20)
                    .HasColumnName("completed_learner_work");

                entity.Property(e => e.CompletedLearnerYesSpecifyTitle)
                    .HasMaxLength(255)
                    .HasColumnName("completed_learner_yes_specify_title")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.CompletedLearnerYourHighest)
                    .HasMaxLength(255)
                    .HasColumnName("completed_learner_your_highest")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.CompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("completion_date")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.ConditionsOfEmploymentYes)
                    .HasMaxLength(255)
                    .HasColumnName("conditions_of_employment_yes")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.ContractNumberApprentice)
                    .HasMaxLength(20)
                    .HasColumnName("contractNumberApprentice");

                entity.Property(e => e.ContractNumberDate)
                    .HasMaxLength(20)
                    .HasColumnName("contract_number_date");

                entity.Property(e => e.ContractNumberLearner)
                    .HasMaxLength(20)
                    .HasColumnName("contract_number_learner");

                entity.Property(e => e.ContractualLearner)
                    .HasMaxLength(255)
                    .HasColumnName("contractual_learner")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date_1");

                entity.Property(e => e.Date2)
                    .HasColumnType("datetime")
                    .HasColumnName("date_2");

                entity.Property(e => e.Date3)
                    .HasColumnType("datetime")
                    .HasColumnName("date_3");

                entity.Property(e => e.Date4)
                    .HasColumnType("datetime")
                    .HasColumnName("date_4");

                entity.Property(e => e.Date5)
                    .HasColumnType("datetime")
                    .HasColumnName("date_5");

                entity.Property(e => e.DateApprentice)
                    .HasColumnType("datetime")
                    .HasColumnName("date_apprentice");

                entity.Property(e => e.DateOfBirth)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_birth");

                entity.Property(e => e.DateRegisteredCompany)
                    .HasColumnType("datetime")
                    .HasColumnName("date_registered_company");

                entity.Property(e => e.DepartmentHigherEducation)
                    .HasMaxLength(150)
                    .HasColumnName("department_higher_education")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.DesignationEmployer)
                    .HasMaxLength(150)
                    .HasColumnName("designation_employer")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.DesignationTrainee)
                    .HasMaxLength(255)
                    .HasColumnName("designationTrainee");

                entity.Property(e => e.DhetLearnershipRegistrationNumber)
                    .HasMaxLength(20)
                    .HasColumnName("dhet_learnership_registration_number");

                entity.Property(e => e.DisabilityStatus).HasColumnName("disabilityStatus");

                entity.Property(e => e.DisabledId).HasColumnName("disabled_id");

                entity.Property(e => e.DoLiveTheInstitutionResidence)
                    .HasMaxLength(255)
                    .HasColumnName("do_live_the_institution_residence");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");

                entity.Property(e => e.EmailAddressEmployer)
                    .HasMaxLength(50)
                    .HasColumnName("email_address_employer");

                entity.Property(e => e.EmployedNo)
                    .HasMaxLength(255)
                    .HasColumnName("employed_no");

                entity.Property(e => e.EmployedYes)
                    .HasMaxLength(255)
                    .HasColumnName("employed_yes");

                entity.Property(e => e.EmployerApplicantCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("employer_applicant_citizen")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerCitizenCertified)
                    .HasMaxLength(255)
                    .HasColumnName("employer_citizen_certified")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerCommencementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employer_commencement_date")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.EmployerCorrectionsInitialled)
                    .HasMaxLength(255)
                    .HasColumnName("employer_corrections_initialled")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employer_date");

                entity.Property(e => e.EmployerDesignatedClearly)
                    .HasMaxLength(255)
                    .HasColumnName("employer_designated_clearly")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerDetailsAreRegistered)
                    .HasMaxLength(150)
                    .HasColumnName("employer_details_are_registered")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerDetailsContactPerson)
                    .HasMaxLength(150)
                    .HasColumnName("employer_details_contact_person")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerDetailsEmail)
                    .HasMaxLength(50)
                    .HasColumnName("employer_details_email");

                entity.Property(e => e.EmployerDetailsFax)
                    .HasMaxLength(20)
                    .HasColumnName("employer_details_fax");

                entity.Property(e => e.EmployerDetailsRegisteredEmployer)
                    .HasMaxLength(150)
                    .HasColumnName("employer_details_registered_employer")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerDetailsSdlNo)
                    .HasMaxLength(50)
                    .HasColumnName("employer_details_sdl_no")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerDetailsSic)
                    .HasMaxLength(50)
                    .HasColumnName("employer_details_sic")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerDetailsTel)
                    .HasMaxLength(20)
                    .HasColumnName("employer_details_tel");

                entity.Property(e => e.EmployerDetailsTradingName)
                    .HasMaxLength(150)
                    .HasColumnName("employer_details_trading_name")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerFullNames)
                    .HasMaxLength(255)
                    .HasColumnName("employer_full_names")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerFullNamesApplicant)
                    .HasMaxLength(255)
                    .HasColumnName("employer_full_names_applicant")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerHighestQualification)
                    .HasMaxLength(50)
                    .HasColumnName("employer_highest_qualification")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerIdPassport)
                    .HasMaxLength(20)
                    .HasColumnName("employer_id_passport");

                entity.Property(e => e.EmployerInitialledLearnership)
                    .HasMaxLength(255)
                    .HasColumnName("employer_initialled_learnership")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerOriginalAgreements)
                    .HasMaxLength(255)
                    .HasColumnName("employer_original_agreements")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerPhysicalAddress)
                    .HasMaxLength(255)
                    .HasColumnName("employer_physical_address")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerSignature)
                    .HasMaxLength(255)
                    .HasColumnName("employer_signature");

                entity.Property(e => e.EmployerSigniture)
                    .HasMaxLength(255)
                    .HasColumnName("employer_signiture");

                entity.Property(e => e.EmployerTheTrainingLearner)
                    .HasMaxLength(255)
                    .HasColumnName("employer_the_training_learner")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerTheTrainingLearnerYes)
                    .HasMaxLength(255)
                    .HasColumnName("employer_the_training_learner_yes")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EmployerWitnesses1)
                    .HasMaxLength(255)
                    .HasColumnName("employer_witnesses_1");

                entity.Property(e => e.EmployerWitnesses2)
                    .HasMaxLength(255)
                    .HasColumnName("employer_witnesses_2");

                entity.Property(e => e.EmployereWorkplace)
                    .HasMaxLength(26)
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.ExpectedDateCommencementStudy)
                    .HasColumnType("datetime")
                    .HasColumnName("expected_date_commencement_study");

                entity.Property(e => e.FacultyAndCourse)
                    .HasMaxLength(255)
                    .HasColumnName("faculty_and_course");

                entity.Property(e => e.FaxNoTrainee)
                    .HasMaxLength(20)
                    .HasColumnName("fax_no_trainee");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.FaxNumberEmployer)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number_employer");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.FirstNamesTrainee)
                    .HasMaxLength(255)
                    .HasColumnName("first_names_trainee");

                entity.Property(e => e.FullNameLearner)
                    .HasMaxLength(255)
                    .HasColumnName("full_name_learner");

                entity.Property(e => e.FullNameOfApprentice)
                    .HasMaxLength(255)
                    .HasColumnName("full_name_of_apprentice")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.FullNameSurname)
                    .HasMaxLength(150)
                    .HasColumnName("full_name_surname")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.GenderTickWhichever)
                    .HasMaxLength(255)
                    .HasColumnName("gender_tick_whichever");

                entity.Property(e => e.GerAddress1)
                    .HasMaxLength(240)
                    .HasColumnName("ger_Address1")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GerAddress2)
                    .HasMaxLength(240)
                    .HasColumnName("ger_Address2")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GerAddress3)
                    .HasMaxLength(240)
                    .HasColumnName("ger_Address3")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GerArea)
                    .HasMaxLength(240)
                    .HasColumnName("ger_Area")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GerMaiden)
                    .HasMaxLength(240)
                    .HasColumnName("ger_maiden")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GerMiddleName)
                    .HasMaxLength(240)
                    .HasColumnName("ger_middle_name")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GerNextOfKin)
                    .HasMaxLength(240)
                    .HasColumnName("ger_NextOfKin")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GerNextOfKinPhone)
                    .HasMaxLength(120)
                    .HasColumnName("ger_NextOfKinPhone")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GerPostal)
                    .HasMaxLength(120)
                    .HasColumnName("ger_Postal")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GerPostal1)
                    .HasMaxLength(240)
                    .HasColumnName("ger_postal1")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GerPostal2)
                    .HasMaxLength(240)
                    .HasColumnName("ger_postal2")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GerPostal3)
                    .HasMaxLength(240)
                    .HasColumnName("ger_postal3")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GerPostalIsSame)
                    .HasColumnType("bit(1)")
                    .HasColumnName("ger_postal_is_same")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.GerPostalcode)
                    .HasMaxLength(60)
                    .HasColumnName("ger_postalcode")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GerProvinceId)
                    .HasColumnName("ger_province_id")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.GerResidency)
                    .HasMaxLength(240)
                    .HasColumnName("ger_residency")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GerTitle)
                    .HasMaxLength(60)
                    .HasColumnName("ger_Title")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GiveFullDetailsRelationshipStaffMember)
                    .HasMaxLength(255)
                    .HasColumnName("give_full_details_relationship_staff_member")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.GuardianSigniture)
                    .HasMaxLength(255)
                    .HasColumnName("guardian_signiture");

                entity.Property(e => e.GuardianWitnesses1)
                    .HasMaxLength(255)
                    .HasColumnName("guardian_witnesses_1");

                entity.Property(e => e.GuardianWitnesses2)
                    .HasMaxLength(255)
                    .HasColumnName("guardian_witnesses_2");

                entity.Property(e => e.HaveAppliedForTheTransferApprentice)
                    .HasMaxLength(255)
                    .HasColumnName("have_applied_for_the_transfer_apprentice")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.HereInAfterReferredToAsThe)
                    .HasMaxLength(255)
                    .HasColumnName("here_in_after_referred_to_as_the")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.HerebyTransferredThisDayOf)
                    .HasColumnType("datetime")
                    .HasColumnName("hereby_transferred_this_day_of")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.HigherNameOfCourse1)
                    .HasMaxLength(255)
                    .HasColumnName("higher_name_of_course_1");

                entity.Property(e => e.HigherNameOfCourse2)
                    .HasMaxLength(255)
                    .HasColumnName("higher_name_of_course_2");

                entity.Property(e => e.HigherNameOfCourse3)
                    .HasMaxLength(255)
                    .HasColumnName("higher_name_of_course_3");

                entity.Property(e => e.HigherNameOfCourse4)
                    .HasMaxLength(255)
                    .HasColumnName("higher_name_of_course_4");

                entity.Property(e => e.HigherNameOfUniversity1)
                    .HasMaxLength(255)
                    .HasColumnName("higher_name_of_university_1");

                entity.Property(e => e.HigherNameOfUniversity2)
                    .HasMaxLength(255)
                    .HasColumnName("higher_name_of_university_2");

                entity.Property(e => e.HigherNameOfUniversity3)
                    .HasMaxLength(255)
                    .HasColumnName("higher_name_of_university_3");

                entity.Property(e => e.HigherNameOfUniversity4)
                    .HasMaxLength(255)
                    .HasColumnName("higher_name_of_university_4");

                entity.Property(e => e.HigherResults1)
                    .HasMaxLength(255)
                    .HasColumnName("higherResults1");

                entity.Property(e => e.HigherResults2)
                    .HasMaxLength(255)
                    .HasColumnName("higherResults2");

                entity.Property(e => e.HigherResults3)
                    .HasMaxLength(255)
                    .HasColumnName("higherResults3");

                entity.Property(e => e.HigherResults4)
                    .HasMaxLength(255)
                    .HasColumnName("higherResults4");

                entity.Property(e => e.HigherYearsFrom1)
                    .HasColumnType("datetime")
                    .HasColumnName("higher_years_from_1");

                entity.Property(e => e.HigherYearsFrom2)
                    .HasColumnType("datetime")
                    .HasColumnName("higher_years_from_2");

                entity.Property(e => e.HigherYearsFrom3)
                    .HasColumnType("datetime")
                    .HasColumnName("higher_years_from_3");

                entity.Property(e => e.HigherYearsFrom4)
                    .HasColumnType("datetime")
                    .HasColumnName("higher_years_from_4");

                entity.Property(e => e.HigherYearsTo1)
                    .HasColumnType("datetime")
                    .HasColumnName("higher_Years_to_1");

                entity.Property(e => e.HigherYearsTo2)
                    .HasColumnType("datetime")
                    .HasColumnName("higher_Years_to_2");

                entity.Property(e => e.HigherYearsTo3)
                    .HasColumnType("datetime")
                    .HasColumnName("higher_Years_to_3");

                entity.Property(e => e.HigherYearsTo4)
                    .HasColumnType("datetime")
                    .HasColumnName("higher_Years_to_4");

                entity.Property(e => e.HighestQualification)
                    .HasMaxLength(50)
                    .HasColumnName("highest_qualification")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.HomeLanguage)
                    .HasMaxLength(255)
                    .HasColumnName("home_language");

                entity.Property(e => e.IdNoRegisteredCompany)
                    .HasMaxLength(20)
                    .HasColumnName("id_no_registered_company");

                entity.Property(e => e.IdentityNumberApprentice)
                    .HasMaxLength(13)
                    .HasColumnName("identityNumberApprentice");

                entity.Property(e => e.IdentityNumberDate)
                    .HasMaxLength(13)
                    .HasColumnName("identity_number_date");

                entity.Property(e => e.ImmediateRecognitionFrom1)
                    .HasColumnType("datetime")
                    .HasColumnName("immediate_recognition_from_1");

                entity.Property(e => e.ImmediateRecognitionFrom2)
                    .HasColumnType("datetime")
                    .HasColumnName("immediate_recognition_from_2");

                entity.Property(e => e.ImmediateRecognitionFrom3)
                    .HasColumnType("datetime")
                    .HasColumnName("immediate_recognition_from_3");

                entity.Property(e => e.ImmediateRecognitionPosition1)
                    .HasMaxLength(255)
                    .HasColumnName("immediate_recognition_position_1");

                entity.Property(e => e.ImmediateRecognitionPosition2)
                    .HasMaxLength(255)
                    .HasColumnName("immediate_recognition_position_2");

                entity.Property(e => e.ImmediateRecognitionPosition3)
                    .HasMaxLength(255)
                    .HasColumnName("immediate_recognition_position_3");

                entity.Property(e => e.ImmediateRecognitionTasksPerformed1)
                    .HasMaxLength(255)
                    .HasColumnName("immediate_recognition_tasks_performed_1");

                entity.Property(e => e.ImmediateRecognitionTasksPerformed2)
                    .HasMaxLength(255)
                    .HasColumnName("immediate_recognition_tasks_performed_2");

                entity.Property(e => e.ImmediateRecognitionTasksPerformed3)
                    .HasMaxLength(255)
                    .HasColumnName("immediate_recognition_tasks_performed_3");

                entity.Property(e => e.ImmediateRecognitionTo1)
                    .HasColumnType("datetime")
                    .HasColumnName("immediate_recognition_to_1");

                entity.Property(e => e.ImmediateRecognitionTo2)
                    .HasColumnType("datetime")
                    .HasColumnName("immediate_recognition_to_2");

                entity.Property(e => e.ImmediateRecognitionTo3)
                    .HasColumnType("datetime")
                    .HasColumnName("immediate_recognition_to_3");

                entity.Property(e => e.InsertInstitution)
                    .HasMaxLength(255)
                    .HasColumnName("insert_institution")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.InstitutionPreviouslyNo)
                    .HasMaxLength(255)
                    .HasColumnName("institution_previously_no");

                entity.Property(e => e.InstitutionPreviouslyYes)
                    .HasMaxLength(255)
                    .HasColumnName("institution_previously_yes");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.LastWorkingDayOfApprentice)
                    .HasColumnType("datetime")
                    .HasColumnName("last_working_day_of_apprentice");

                entity.Property(e => e.LastWorkingDayOfLearner)
                    .HasColumnType("datetime")
                    .HasColumnName("last_working_day_of_learner");

                entity.Property(e => e.Learner1)
                    .HasMaxLength(255)
                    .HasColumnName("learner");

                entity.Property(e => e.LearnerCelNo)
                    .HasMaxLength(20)
                    .HasColumnName("learner_cel_no");

                entity.Property(e => e.LearnerDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_date");

                entity.Property(e => e.LearnerNumberBeSupplied)
                    .HasMaxLength(35)
                    .HasColumnName("learner_number_be_supplied");

                entity.Property(e => e.LearnerRsaIdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("learner_rsa_id_number");

                entity.Property(e => e.LearnerSigniture)
                    .HasMaxLength(255)
                    .HasColumnName("learner_signiture");

                entity.Property(e => e.LearnerTelephone)
                    .HasMaxLength(20)
                    .HasColumnName("learner_telephone");

                entity.Property(e => e.LearnerWitnesses1)
                    .HasMaxLength(255)
                    .HasColumnName("learner_witnesses_1");

                entity.Property(e => e.LearnerWitnesses2)
                    .HasMaxLength(255)
                    .HasColumnName("learner_witnesses_2");

                entity.Property(e => e.LearnershipDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learnership_date");

                entity.Property(e => e.LearnershipDesignatedTrade)
                    .HasMaxLength(150)
                    .HasColumnName("learnership_designated_trade")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.LearnershipNameOfEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_name_of_employer")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.LearnershipSignature)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_signature");

                entity.Property(e => e.LegalGuardianDate)
                    .HasColumnType("datetime")
                    .HasColumnName("legal_guardian_date");

                entity.Property(e => e.LegalNameOfEmployer)
                    .HasMaxLength(26)
                    .HasColumnName("legal_name_of_employer")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.LoansGrantsBursariesNo)
                    .HasMaxLength(255)
                    .HasColumnName("loans_grants_bursaries_no");

                entity.Property(e => e.LoansGrantsBursariesYes)
                    .HasMaxLength(255)
                    .HasColumnName("loans_grants_bursaries_yes");

                entity.Property(e => e.ManagerDate)
                    .HasColumnType("datetime")
                    .HasColumnName("manager_date");

                entity.Property(e => e.MonthAndYearObtained)
                    .HasColumnType("datetime")
                    .HasColumnName("month_and_year_obtained");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.NameCompanyWhereEmployed)
                    .HasMaxLength(255)
                    .HasColumnName("name_company_where_employed");

                entity.Property(e => e.NameOfApplicant)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_applicant");

                entity.Property(e => e.NameOfAward1)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_award_1");

                entity.Property(e => e.NameOfAward2)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_award_2");

                entity.Property(e => e.NameOfCertificate)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_certificate");

                entity.Property(e => e.NameOfCompanyA1)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_company_a_1");

                entity.Property(e => e.NameOfCompanyA2)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_company_a_2");

                entity.Property(e => e.NameOfCompanyA3)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_company_a_3");

                entity.Property(e => e.NameOfContactPersonEmployer)
                    .HasMaxLength(150)
                    .HasColumnName("name_of_contact_person_employer")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.NameOfContactPersonTrainee)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_contact_person_trainee");

                entity.Property(e => e.NameOfCourse)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_course");

                entity.Property(e => e.NameOfEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_employer")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.NameOfRegisteredCompany)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_registered_company")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.NameOfSchool1)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_school_1");

                entity.Property(e => e.NameOfSchool2)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_school_2");

                entity.Property(e => e.NameOfSchool3)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_school_3");

                entity.Property(e => e.NameOfSetaRegisteredAt)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_seta_registered_at");

                entity.Property(e => e.NameOfTrainingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_training_provider")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.NameOfUniversity)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_university");

                entity.Property(e => e.NameSkillsProgrammeRegisteredFor)
                    .HasMaxLength(150)
                    .HasColumnName("name_skills_programme_registered_for")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.NameUniversityWhichWillTaken)
                    .HasMaxLength(255)
                    .HasColumnName("name_university_which_will_taken");

                entity.Property(e => e.NationalityId).HasColumnName("nationality_id");

                entity.Property(e => e.NewEmployerSigniture)
                    .HasMaxLength(255)
                    .HasColumnName("new_employer_signiture");

                entity.Property(e => e.NewEmployerWitnesses1)
                    .HasMaxLength(255)
                    .HasColumnName("new_employer_witnesses_1");

                entity.Property(e => e.NewEmployerWitnesses2)
                    .HasMaxLength(255)
                    .HasColumnName("new_employer_witnesses_2");

                entity.Property(e => e.NumberSistersCompletingFinancially)
                    .HasMaxLength(255)
                    .HasColumnName("number_sisters_completing_financially");

                entity.Property(e => e.ObjectionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("objection_date")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.ObjectionPresentEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("objection_present_employer");

                entity.Property(e => e.OfficeThisDayOf)
                    .HasColumnType("datetime")
                    .HasColumnName("office_this_day_of")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.OtherLanguage1)
                    .HasMaxLength(255)
                    .HasColumnName("other_language_1");

                entity.Property(e => e.OtherLanguage2)
                    .HasMaxLength(255)
                    .HasColumnName("other_language_2");

                entity.Property(e => e.ParentGuardianCell)
                    .HasMaxLength(20)
                    .HasColumnName("parent_guardian_cell");

                entity.Property(e => e.ParentGuardianEmailAddress)
                    .HasMaxLength(50)
                    .HasColumnName("parent_guardian_email_address");

                entity.Property(e => e.ParentGuardianFullNames)
                    .HasMaxLength(150)
                    .HasColumnName("parent_guardian_full_names")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.ParentGuardianHome)
                    .HasMaxLength(20)
                    .HasColumnName("parent_guardian_home");

                entity.Property(e => e.ParentGuardianIdentityNumber)
                    .HasMaxLength(13)
                    .HasColumnName("parent_guardian_identity_number");

                entity.Property(e => e.ParentGuardianWork)
                    .HasMaxLength(20)
                    .HasColumnName("parent_guardian_work");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(30)
                    .HasColumnName("passport_number");

                entity.Property(e => e.PositionHeldA1)
                    .HasMaxLength(255)
                    .HasColumnName("position_held_a_1");

                entity.Property(e => e.PositionHeldA2)
                    .HasMaxLength(255)
                    .HasColumnName("position_held_a_2");

                entity.Property(e => e.PositionHeldA3)
                    .HasMaxLength(255)
                    .HasColumnName("position_held_a_3");

                entity.Property(e => e.PostalAddressId).HasColumnName("postal_address_id");

                entity.Property(e => e.PreferToBeTested)
                    .HasMaxLength(255)
                    .HasColumnName("prefer_to_be_tested")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.ProjectAndCodeLinkedTo)
                    .HasMaxLength(255)
                    .HasColumnName("project_and_code_linked_to")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.ProofOfPayment)
                    .HasMaxLength(255)
                    .HasColumnName("Proof_of_payment")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.ProposedCourseOfStudy)
                    .HasMaxLength(255)
                    .HasColumnName("proposed_course_of_study");

                entity.Property(e => e.ProviderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("provider_date");

                entity.Property(e => e.ProviderDetailsContactPerson)
                    .HasMaxLength(150)
                    .HasColumnName("provider_details_contact_person")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.ProviderDetailsEmail)
                    .HasMaxLength(50)
                    .HasColumnName("provider_details_email");

                entity.Property(e => e.ProviderDetailsFax)
                    .HasMaxLength(20)
                    .HasColumnName("provider_details_fax");

                entity.Property(e => e.ProviderDetailsProvider)
                    .HasMaxLength(150)
                    .HasColumnName("provider_details_provider")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.ProviderDetailsSdlNo)
                    .HasMaxLength(50)
                    .HasColumnName("provider_details_sdl_no")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.ProviderDetailsSeta)
                    .HasMaxLength(150)
                    .HasColumnName("provider_details_seta")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.ProviderDetailsSic)
                    .HasMaxLength(50)
                    .HasColumnName("provider_details_sic")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.ProviderDetailsTel)
                    .HasMaxLength(20)
                    .HasColumnName("provider_details_tel");

                entity.Property(e => e.ProviderDetailsTradingName)
                    .HasMaxLength(150)
                    .HasColumnName("provider_details_trading_name")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.ProviderSignature)
                    .HasMaxLength(255)
                    .HasColumnName("provider_signature");

                entity.Property(e => e.QualificationSaqaId)
                    .HasMaxLength(20)
                    .HasColumnName("qualification_saqa_id");

                entity.Property(e => e.RaceTickWhichever)
                    .HasMaxLength(255)
                    .HasColumnName("race_tick_whichever");

                entity.Property(e => e.RegisteredCompanySignature)
                    .HasMaxLength(255)
                    .HasColumnName("registered_company_signature");

                entity.Property(e => e.RegistrationCodeOfSkillsProgrammeRegistered)
                    .HasMaxLength(150)
                    .HasColumnName("registration_code_of_skills_programme_registered")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.Results1)
                    .HasMaxLength(255)
                    .HasColumnName("results_1");

                entity.Property(e => e.Results2)
                    .HasMaxLength(255)
                    .HasColumnName("results_2");

                entity.Property(e => e.Results3)
                    .HasMaxLength(255)
                    .HasColumnName("results_3");

                entity.Property(e => e.Results4)
                    .HasMaxLength(255)
                    .HasColumnName("results_4");

                entity.Property(e => e.Results5)
                    .HasMaxLength(255)
                    .HasColumnName("results_5");

                entity.Property(e => e.RsaIdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("rsa_id_number");

                entity.Property(e => e.SaqaUnitStandardCode)
                    .HasMaxLength(150)
                    .HasColumnName("saqa_unit_standard_code")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.SaqaUnitStandardCode1)
                    .HasMaxLength(150)
                    .HasColumnName("saqa_unit_standard_code_1")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.SaqaUnitStandardCode2)
                    .HasMaxLength(150)
                    .HasColumnName("saqa_unit_standard_code_2")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.SaqaUnitStandardCode3)
                    .HasMaxLength(150)
                    .HasColumnName("saqa_unit_standard_code_3")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.SaqaUnitStandardCode4)
                    .HasMaxLength(150)
                    .HasColumnName("saqa_unit_standard_code_4")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.SaqaUnitStandardTitle)
                    .HasMaxLength(150)
                    .HasColumnName("saqa_unit_standard_title")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.SaqaUnitStandardTitle1)
                    .HasMaxLength(150)
                    .HasColumnName("saqa_unit_standard_title_1")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.SaqaUnitStandardTitle2)
                    .HasMaxLength(150)
                    .HasColumnName("saqa_unit_standard_title_2")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.SaqaUnitStandardTitle3)
                    .HasMaxLength(150)
                    .HasColumnName("saqa_unit_standard_title_3")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.SaqaUnitStandardTitle4)
                    .HasMaxLength(150)
                    .HasColumnName("saqa_unit_standard_title_4")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.SarsLevyNoEmployer)
                    .HasMaxLength(50)
                    .HasColumnName("sars_levy_no_employer")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.SarsLevyRegistrationNumber)
                    .HasMaxLength(20)
                    .HasColumnName("sars_levy_registration_number");

                entity.Property(e => e.SchoolActivities1)
                    .HasMaxLength(255)
                    .HasColumnName("school_activities_1");

                entity.Property(e => e.SchoolActivities2)
                    .HasMaxLength(255)
                    .HasColumnName("school_activities_2");

                entity.Property(e => e.SetaNumberToWhichAffiliated)
                    .HasMaxLength(20)
                    .HasColumnName("seta_number_to_which_affiliated");

                entity.Property(e => e.StartingDateWithCompany)
                    .HasColumnType("datetime")
                    .HasColumnName("starting_date_with_company");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TerminationDateLearnershipAgreement)
                    .HasColumnType("datetime")
                    .HasColumnName("termination_date_learnership_agreement")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.TradeApprentice)
                    .HasMaxLength(150)
                    .HasColumnName("trade_apprentice")
                    .HasDefaultValueSql("'-'");

                entity.Property(e => e.WorkContactNumber)
                    .HasMaxLength(20)
                    .HasColumnName("work_contact_number");

                entity.Property(e => e.XxxXxx)
                    .HasMaxLength(255)
                    .HasColumnName("xxx_xxx")
                    .HasDefaultValueSql("'-'");

                entity.HasOne(d => d.DisabilityStatusNavigation)
                    .WithMany(p => p.Learners)
                    .HasForeignKey(d => d.DisabilityStatus)
                    .HasConstraintName("FK7ckxffrgp2ud878nt2748b8wp");

                entity.HasOne(d => d.Disabled)
                    .WithMany(p => p.Learners)
                    .HasForeignKey(d => d.DisabledId)
                    .HasConstraintName("FKq110w68qjlv7tex41m8k1h17a");

                entity.HasOne(d => d.Equity)
                    .WithMany(p => p.Learners)
                    .HasForeignKey(d => d.EquityId)
                    .HasConstraintName("FKogt9wydkftqwr9rn26o7drwja");

                entity.HasOne(d => d.Gender)
                    .WithMany(p => p.Learners)
                    .HasForeignKey(d => d.GenderId)
                    .HasConstraintName("FKj8rrbgpa2gaolu8u93pucraoo");

                entity.HasOne(d => d.Municipality)
                    .WithMany(p => p.Learners)
                    .HasForeignKey(d => d.MunicipalityId)
                    .HasConstraintName("FKleceb2233eenv1t5lkh7yyt5c");

                entity.HasOne(d => d.Nationality)
                    .WithMany(p => p.Learners)
                    .HasForeignKey(d => d.NationalityId)
                    .HasConstraintName("FKr09sgki2nvmqm5cjdbe5de6uv");

                entity.HasOne(d => d.PostalAddress)
                    .WithMany(p => p.LearnerPostalAddresses)
                    .HasForeignKey(d => d.PostalAddressId)
                    .HasConstraintName("FK8wtlh78uedumkasqwwxnk9rij");

                entity.HasOne(d => d.ResidentialAddress)
                    .WithMany(p => p.LearnerResidentialAddresses)
                    .HasForeignKey(d => d.ResidentialAddressId)
                    .HasConstraintName("FKmqa3etfx6xqp6kd9bhganh4io");
            });

            modelBuilder.Entity<LearnerAchievementStatus>(entity =>
            {
                entity.ToTable("learner_achievement_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<LearnerAchievementType>(entity =>
            {
                entity.ToTable("learner_achievement_type");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<LearnerInduction>(entity =>
            {
                entity.ToTable("learner_induction");

                entity.HasIndex(e => e.WorkplaceMonitoringId, "FKalpt44srfm88mxhjg9jqe6875");

                entity.HasIndex(e => e.UserId, "FKintq2cay425dvkhuapvgjvnyw");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NumberOfAttendees).HasColumnName("number_of_attendees");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WorkplaceMonitoringId).HasColumnName("workplace_monitoring_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.LearnerInductions)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKintq2cay425dvkhuapvgjvnyw");

                entity.HasOne(d => d.WorkplaceMonitoring)
                    .WithMany(p => p.LearnerInductions)
                    .HasForeignKey(d => d.WorkplaceMonitoringId)
                    .HasConstraintName("FKalpt44srfm88mxhjg9jqe6875");
            });

            modelBuilder.Entity<LearnerMentorRatio>(entity =>
            {
                entity.ToTable("learner_mentor_ratio");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NoOfLearners).HasColumnName("no_of_learners");

                entity.Property(e => e.NoOfMentors).HasColumnName("no_of_mentors");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<LearnerMonitoringSurvey>(entity =>
            {
                entity.ToTable("Learner_Monitoring_survey");

                entity.HasIndex(e => e.WorkplaceMonitoring, "FKeg7u45q9ishdhc7fy86vv82dv");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.Question).HasColumnName("question");

                entity.Property(e => e.Section).HasColumnName("section");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.WorkplaceMonitoring).HasColumnName("workplace_monitoring");

                entity.Property(e => e.WorkplaceSurveyType)
                    .HasMaxLength(255)
                    .HasColumnName("workplace_survey_type");

                entity.Property(e => e.YesNo)
                    .HasMaxLength(255)
                    .HasColumnName("yes_no");

                entity.HasOne(d => d.WorkplaceMonitoringNavigation)
                    .WithMany(p => p.LearnerMonitoringSurveys)
                    .HasForeignKey(d => d.WorkplaceMonitoring)
                    .HasConstraintName("FKeg7u45q9ishdhc7fy86vv82dv");
            });

            modelBuilder.Entity<LearnerReadinessEisa>(entity =>
            {
                entity.ToTable("learner_readiness_eisa");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Learnership>(entity =>
            {
                entity.ToTable("learnership");

                entity.HasIndex(e => e.OrginalQualificationAssignedId, "FK7lqosassiacv43igx17qdo389");

                entity.HasIndex(e => e.AqpId, "FKfk7yum7xx0kwb3itsbpnigibd");

                entity.HasIndex(e => e.QualificationId, "FKgcqbvlx9jxu3cjy8mvdptbdi0");

                entity.HasIndex(e => e.OfoCodesId, "FKlyq0v98sl06pirsiddd71ba3g");

                entity.HasIndex(e => e.EtqaId, "FKm9wb23m1np6dxspo6r53jj3f2");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AqpId).HasColumnName("aqp_id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUser).HasColumnName("create_user");

                entity.Property(e => e.Credits).HasColumnName("credits");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.EtqaId).HasColumnName("etqa_id");

                entity.Property(e => e.LastUpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_update_date");

                entity.Property(e => e.LastUpdateUser).HasColumnName("last_update_user");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(500)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OrginalQualificationAssignedId).HasColumnName("orginal_qualification_assigned_id");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.Aqp)
                    .WithMany(p => p.Learnerships)
                    .HasForeignKey(d => d.AqpId)
                    .HasConstraintName("FKfk7yum7xx0kwb3itsbpnigibd");

                entity.HasOne(d => d.Etqa)
                    .WithMany(p => p.Learnerships)
                    .HasForeignKey(d => d.EtqaId)
                    .HasConstraintName("FKm9wb23m1np6dxspo6r53jj3f2");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.Learnerships)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKlyq0v98sl06pirsiddd71ba3g");

                entity.HasOne(d => d.OrginalQualificationAssigned)
                    .WithMany(p => p.LearnershipOrginalQualificationAssigneds)
                    .HasForeignKey(d => d.OrginalQualificationAssignedId)
                    .HasConstraintName("FK7lqosassiacv43igx17qdo389");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LearnershipQualifications)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKgcqbvlx9jxu3cjy8mvdptbdi0");
            });

            modelBuilder.Entity<LearnershipDataUpload>(entity =>
            {
                entity.ToTable("learnership_data_upload");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.EtqaRegisteringLship)
                    .HasMaxLength(255)
                    .HasColumnName("etqa_registering_lship");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.LearnershipTitle)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_title");

                entity.Property(e => e.LshipIdSaqa)
                    .HasMaxLength(255)
                    .HasColumnName("lship_id_saqa");

                entity.Property(e => e.LshipIdSaqaTwo)
                    .HasMaxLength(255)
                    .HasColumnName("lship_id_saqa_two");

                entity.Property(e => e.LshipRegisEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("lship_regis_end_date");

                entity.Property(e => e.MinCredits)
                    .HasMaxLength(255)
                    .HasColumnName("min_credits");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.Pre2009NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("pre_2009_nqf_level");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualId)
                    .HasMaxLength(255)
                    .HasColumnName("qual_Id");

                entity.Property(e => e.QualRegisEnd)
                    .HasMaxLength(255)
                    .HasColumnName("qual_regis_end");

                entity.Property(e => e.QualStatus)
                    .HasMaxLength(255)
                    .HasColumnName("qual_status");

                entity.Property(e => e.QualificationTitle)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_title");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<LearnershipDevelopmentRegistration>(entity =>
            {
                entity.ToTable("learnership_development_registration");

                entity.HasIndex(e => e.OfoCodesId, "FK1ddh46n94c09j8powo62o78wi");

                entity.HasIndex(e => e.ChamberId, "FK2wlq7fc0oluhrg4063gfeurdj");

                entity.HasIndex(e => e.SkillsProgramId, "FK41fs34h59i9pha3kjt19wo9h8");

                entity.HasIndex(e => e.PreviousLearnershipId, "FK7uyxw6h9hrmm642f1hg7vew36");

                entity.HasIndex(e => e.SkillsIdentificationId, "FK8pnxp9br9u9sam1jvhk3i5laj");

                entity.HasIndex(e => e.QualificationId, "FK9e6gvdacpp0yeopiloypi05lx");

                entity.HasIndex(e => e.InterventionTitleId, "FKbhcdyh0alpbskqdrfy0eg74qu");

                entity.HasIndex(e => e.NqfAlignedId, "FKc2p84r6w5tanqbw68g65fm7xt");

                entity.HasIndex(e => e.CompanyId, "FKemkx9xy3sa5lyhxf2tavbha8w");

                entity.HasIndex(e => e.InterventionTypeId, "FKl9kk7kkp91b1r7k6x51g193my");

                entity.HasIndex(e => e.SkillsSetId, "FKnp6k5pgl2r20y21r7ryt56c5l");

                entity.HasIndex(e => e.UserId, "FKoiwo7wqgq7nwigloh3y4935hc");

                entity.HasIndex(e => e.ApplicantType, "FKsqxwxu08orrtqmiwtt5fmt01p");

                entity.HasIndex(e => e.UnitStandardId, "FKtkv0cc5lp64da9ojqi06i5tnd");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApplicantType).HasColumnName("applicant_type");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.ChamberId).HasColumnName("chamber_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Department).HasColumnName("department");

                entity.Property(e => e.Designation).HasColumnName("designation");

                entity.Property(e => e.Guid)
                    .HasMaxLength(100)
                    .HasColumnName("guid");

                entity.Property(e => e.IndustryBodyOrRepresentativeBodyName).HasColumnName("industry_body_or_representative_body_name");

                entity.Property(e => e.InterventionTitleId).HasColumnName("Intervention_title_id");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.LearnerNumber).HasColumnName("learner_number");

                entity.Property(e => e.NewLearnership).HasColumnName("new_learnership");

                entity.Property(e => e.NqfAlignedId).HasColumnName("nqf_aligned_id");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.PivotNonPivot).HasColumnName("pivot_non_pivot");

                entity.Property(e => e.PreviousLearnershipId).HasColumnName("previous_learnership_id");

                entity.Property(e => e.ProfessionalBodyName).HasColumnName("professional_body_name");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RegistrationNumber)
                    .HasMaxLength(20)
                    .HasColumnName("registration_number");

                entity.Property(e => e.SkillsIdentificationId).HasColumnName("skills_identification_id");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.ApplicantTypeNavigation)
                    .WithMany(p => p.LearnershipDevelopmentRegistrations)
                    .HasForeignKey(d => d.ApplicantType)
                    .HasConstraintName("FKsqxwxu08orrtqmiwtt5fmt01p");

                entity.HasOne(d => d.Chamber)
                    .WithMany(p => p.LearnershipDevelopmentRegistrations)
                    .HasForeignKey(d => d.ChamberId)
                    .HasConstraintName("FK2wlq7fc0oluhrg4063gfeurdj");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.LearnershipDevelopmentRegistrations)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKemkx9xy3sa5lyhxf2tavbha8w");

                entity.HasOne(d => d.InterventionTitle)
                    .WithMany(p => p.LearnershipDevelopmentRegistrations)
                    .HasForeignKey(d => d.InterventionTitleId)
                    .HasConstraintName("FKbhcdyh0alpbskqdrfy0eg74qu");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.LearnershipDevelopmentRegistrations)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FKl9kk7kkp91b1r7k6x51g193my");

                entity.HasOne(d => d.NqfAligned)
                    .WithMany(p => p.LearnershipDevelopmentRegistrations)
                    .HasForeignKey(d => d.NqfAlignedId)
                    .HasConstraintName("FKc2p84r6w5tanqbw68g65fm7xt");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.LearnershipDevelopmentRegistrations)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FK1ddh46n94c09j8powo62o78wi");

                entity.HasOne(d => d.PreviousLearnership)
                    .WithMany(p => p.InversePreviousLearnership)
                    .HasForeignKey(d => d.PreviousLearnershipId)
                    .HasConstraintName("FK7uyxw6h9hrmm642f1hg7vew36");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LearnershipDevelopmentRegistrations)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK9e6gvdacpp0yeopiloypi05lx");

                entity.HasOne(d => d.SkillsIdentification)
                    .WithMany(p => p.LearnershipDevelopmentRegistrations)
                    .HasForeignKey(d => d.SkillsIdentificationId)
                    .HasConstraintName("FK8pnxp9br9u9sam1jvhk3i5laj");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.LearnershipDevelopmentRegistrations)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FK41fs34h59i9pha3kjt19wo9h8");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.LearnershipDevelopmentRegistrations)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FKnp6k5pgl2r20y21r7ryt56c5l");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.LearnershipDevelopmentRegistrations)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKtkv0cc5lp64da9ojqi06i5tnd");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.LearnershipDevelopmentRegistrations)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKoiwo7wqgq7nwigloh3y4935hc");
            });

            modelBuilder.Entity<LearnershipHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("learnership_hist");

                entity.HasIndex(e => e.Rev, "FKc1d7er5pp8kkkdch0rpq9lb2y");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AqpId).HasColumnName("aqp_id");

                entity.Property(e => e.Credits).HasColumnName("credits");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.EtqaId).HasColumnName("etqa_id");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(500)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OrginalQualificationAssignedId).HasColumnName("orginal_qualification_assigned_id");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.LearnershipHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKc1d7er5pp8kkkdch0rpq9lb2y");
            });

            modelBuilder.Entity<LearnershipUnitStandard>(entity =>
            {
                entity.ToTable("learnership_unit_standards");

                entity.HasIndex(e => e.LearnershipId, "FK8crstf0qva8nio7m50j7tf1yk");

                entity.HasIndex(e => e.UnitStandardsId, "FKdwoi1h8bdamy05i896sqb77hv");

                entity.HasIndex(e => e.QualificationId, "FKf6k18avt9u2xec16jr5vsf7w9");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.UnitStandardTypeEnum).HasColumnName("unit_standard_type_enum");

                entity.Property(e => e.UnitStandardsId).HasColumnName("unit_standards_id");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.LearnershipUnitStandards)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FK8crstf0qva8nio7m50j7tf1yk");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LearnershipUnitStandards)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKf6k18avt9u2xec16jr5vsf7w9");

                entity.HasOne(d => d.UnitStandards)
                    .WithMany(p => p.LearnershipUnitStandards)
                    .HasForeignKey(d => d.UnitStandardsId)
                    .HasConstraintName("FKdwoi1h8bdamy05i896sqb77hv");
            });

            modelBuilder.Entity<LegacyApprenticeship>(entity =>
            {
                entity.ToTable("legacy_apprenticeship");

                entity.HasIndex(e => e.EmployerId, "FK1tpqnffxbjjfmieqi1vd7584f");

                entity.HasIndex(e => e.QualificationId, "FK5ikhru2ubv61v3gfq17r6c4te");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FKbvtflx75ih2njnt7queoftyvy");

                entity.HasIndex(e => e.CompanyId, "FKe1a8jhxd8fn3a8inn8ynvgbn7");

                entity.HasIndex(e => e.OfoCodesId, "FKotljp74ih0qnhlmwyhrxsgwrw");

                entity.HasIndex(e => e.SdlNo, "hs_inx_002");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AgreementNumber)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_number");

                entity.Property(e => e.AlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.ApprenticeshipRegisterDate)
                    .HasMaxLength(255)
                    .HasColumnName("apprenticeship_register_date");

                entity.Property(e => e.ApprenticeshipType)
                    .HasMaxLength(255)
                    .HasColumnName("apprenticeship_type");

                entity.Property(e => e.CertificateDate)
                    .HasMaxLength(255)
                    .HasColumnName("certificate_date");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(255)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(255)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(255)
                    .HasColumnName("contract_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreatedCompanyLearner)
                    .HasColumnType("bit(1)")
                    .HasColumnName("created_company_learner");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_created");

                entity.Property(e => e.DateLastChanged)
                    .HasMaxLength(255)
                    .HasColumnName("date_last_changed");

                entity.Property(e => e.EmployerId).HasColumnName("employer_id");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.FromDate)
                    .HasMaxLength(255)
                    .HasColumnName("from_date");

                entity.Property(e => e.Id2)
                    .HasMaxLength(255)
                    .HasColumnName("id2");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.LastDateChanged)
                    .HasMaxLength(255)
                    .HasColumnName("last_date_changed");

                entity.Property(e => e.LegacyOrganisationSites)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_sites");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.MagisterialDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("magisterial_district");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.MinTraining)
                    .HasMaxLength(255)
                    .HasColumnName("min_training");

                entity.Property(e => e.N2)
                    .HasMaxLength(255)
                    .HasColumnName("n2");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OfoDescription)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_description");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.ProjectType)
                    .HasMaxLength(255)
                    .HasColumnName("project_type");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualCode)
                    .HasMaxLength(255)
                    .HasColumnName("qual_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Region)
                    .HasMaxLength(255)
                    .HasColumnName("region");

                entity.Property(e => e.RsaIdNumberAppearsOnApprenticeshipTradeTest)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_id_number_appears_on_apprenticeship_trade_test");

                entity.Property(e => e.SdlNo).HasColumnName("sdl_no");

                entity.Property(e => e.SetaRegion)
                    .HasMaxLength(255)
                    .HasColumnName("seta_region");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SocioEcoStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("socio_eco_status_desc");

                entity.Property(e => e.StatusDate)
                    .HasMaxLength(255)
                    .HasColumnName("status_date");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.ToDate)
                    .HasMaxLength(255)
                    .HasColumnName("to_date");

                entity.Property(e => e.TradeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("trade_description");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.Property(e => e.WaLegalName)
                    .HasMaxLength(255)
                    .HasColumnName("wa_legal_name");

                entity.Property(e => e.WaeMpSdl)
                    .HasMaxLength(255)
                    .HasColumnName("wae_mp_sdl");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.LegacyApprenticeshipCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKe1a8jhxd8fn3a8inn8ynvgbn7");

                entity.HasOne(d => d.Employer)
                    .WithMany(p => p.LegacyApprenticeshipEmployers)
                    .HasForeignKey(d => d.EmployerId)
                    .HasConstraintName("FK1tpqnffxbjjfmieqi1vd7584f");

                entity.HasOne(d => d.LegacyOrganisationSitesNavigation)
                    .WithMany(p => p.LegacyApprenticeships)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FKbvtflx75ih2njnt7queoftyvy");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.LegacyApprenticeships)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKotljp74ih0qnhlmwyhrxsgwrw");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyApprenticeships)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK5ikhru2ubv61v3gfq17r6c4te");
            });

            modelBuilder.Entity<LegacyApprenticeshipTradeTest>(entity =>
            {
                entity.ToTable("legacy_apprenticeship_trade_test");

                entity.HasIndex(e => e.OfoCodesId, "FK8dcouo2t5574nt99s6fptsm3m");

                entity.HasIndex(e => e.QualificationId, "FKn1xuicyglw71qiawf7nmfryil");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FKopjbc0j6fi1v9toegh0omos2p");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(255)
                    .HasColumnName("contract_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateApplicationReceived)
                    .HasMaxLength(255)
                    .HasColumnName("date_application_received");

                entity.Property(e => e.DateApplicationSent)
                    .HasMaxLength(255)
                    .HasColumnName("date_application_sent");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("Date_Created");

                entity.Property(e => e.DateLastChanged)
                    .HasMaxLength(255)
                    .HasColumnName("date_last_changed");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.LegacyOrganisationSites)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_sites");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.MinTraining)
                    .HasMaxLength(255)
                    .HasColumnName("min_training");

                entity.Property(e => e.N2Exempt)
                    .HasMaxLength(255)
                    .HasColumnName("n2_exempt");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NumberOfTestAttempts)
                    .HasMaxLength(255)
                    .HasColumnName("number_of_test_attempts");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OfoDescription)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_description");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualId)
                    .HasMaxLength(255)
                    .HasColumnName("qual_id");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RsaIdNumberAppearsOnApprenticeship)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_id_number_appears_on_apprenticeship");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(255)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("status");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.TestDateFrom)
                    .HasMaxLength(255)
                    .HasColumnName("test_date_from");

                entity.Property(e => e.TestDateTo)
                    .HasMaxLength(255)
                    .HasColumnName("test_date_to");

                entity.Property(e => e.TradeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("trade_description");

                entity.Property(e => e.TradeTestId)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_id");

                entity.Property(e => e.TradeTestLevel)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_level");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.Property(e => e.WorkshopNo)
                    .HasMaxLength(255)
                    .HasColumnName("workshop_no");

                entity.HasOne(d => d.LegacyOrganisationSitesNavigation)
                    .WithMany(p => p.LegacyApprenticeshipTradeTests)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FKopjbc0j6fi1v9toegh0omos2p");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.LegacyApprenticeshipTradeTests)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FK8dcouo2t5574nt99s6fptsm3m");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyApprenticeshipTradeTests)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKn1xuicyglw71qiawf7nmfryil");
            });

            modelBuilder.Entity<LegacyAssessorAccreditation>(entity =>
            {
                entity.ToTable("legacy_assessor_accreditation");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AliveOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("alive_on_home_affairs_data");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.AssessorRegEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_end_date");

                entity.Property(e => e.AssessorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_no");

                entity.Property(e => e.AssessorRegStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_start_date");

                entity.Property(e => e.AssessorStatusBeforeAlteration)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_status_before_alteration");

                entity.Property(e => e.AssessorStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_status_desc");

                entity.Property(e => e.AssessorStatusEffectiveDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_status_effective_date");

                entity.Property(e => e.AssessorType)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_type");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.Comments)
                    .HasMaxLength(255)
                    .HasColumnName("comments");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DecisionNumber)
                    .HasMaxLength(255)
                    .HasColumnName("decision_number");

                entity.Property(e => e.EtqaSetaDesc)
                    .HasMaxLength(255)
                    .HasColumnName("etqa_seta_desc");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.LastDateChanged)
                    .HasMaxLength(255)
                    .HasColumnName("last_date_changed");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OnPersonsFile)
                    .HasColumnType("bit(1)")
                    .HasColumnName("on_persons_file");

                entity.Property(e => e.OnPersonsFileAlternativeId)
                    .HasColumnType("bit(1)")
                    .HasColumnName("on_persons_file_alternative_id");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.ReviewCommitteeDate)
                    .HasMaxLength(255)
                    .HasColumnName("review_committee_date");

                entity.Property(e => e.SRefNo)
                    .HasMaxLength(255)
                    .HasColumnName("s_ref_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.TitleDesc)
                    .HasMaxLength(255)
                    .HasColumnName("title_desc");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.Property(e => e.ValidStatus)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_status");
            });

            modelBuilder.Entity<LegacyAssessorLearnership>(entity =>
            {
                entity.ToTable("legacy_assessor_learnership");

                entity.HasIndex(e => e.LearnershipId, "FKepfjc00wip0atmu11nsiyb48h");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternateIdNo)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id_no");

                entity.Property(e => e.ApplicationSubmited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_submited")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AssessorFirstRegDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_first_reg_date");

                entity.Property(e => e.AssessorId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_id");

                entity.Property(e => e.AssessorRegEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_end_date");

                entity.Property(e => e.AssessorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_no");

                entity.Property(e => e.AssessorRegStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_start_date");

                entity.Property(e => e.AssessorStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_status_desc");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.LearnershipId).HasColumnName("Learnership_id");

                entity.Property(e => e.LshipCode)
                    .HasMaxLength(255)
                    .HasColumnName("lship_code");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SaqaUnitStandardId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_unit_standard_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.LegacyAssessorLearnerships)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FKepfjc00wip0atmu11nsiyb48h");
            });

            modelBuilder.Entity<LegacyAssessorQualification>(entity =>
            {
                entity.ToTable("legacy_assessor_qualification");

                entity.HasIndex(e => e.QualificationId, "FKou8s5yh4eic88a2flxevrgkfx");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternateIdNo)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id_no");

                entity.Property(e => e.AppearsAccreditationData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_accreditation_data");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.ApplicationSubmited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_submited")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AssessorFirstRegDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_first_reg_date");

                entity.Property(e => e.AssessorId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_id");

                entity.Property(e => e.AssessorRegEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_end_date");

                entity.Property(e => e.AssessorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_no");

                entity.Property(e => e.AssessorRegStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_start_date");

                entity.Property(e => e.AssessorStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_status_desc");

                entity.Property(e => e.AssessorStatusTwo)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_status_two");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.Comments)
                    .HasMaxLength(255)
                    .HasColumnName("comments");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualCode)
                    .HasMaxLength(255)
                    .HasColumnName("qual_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyAssessorQualifications)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKou8s5yh4eic88a2flxevrgkfx");
            });

            modelBuilder.Entity<LegacyAssessorSkillsProgramme>(entity =>
            {
                entity.ToTable("legacy_assessor_skills_programme");

                entity.HasIndex(e => e.SkillsProgramId, "FKb06mb15e7t64by2y8qwtcysp3");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternateIdNo)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id_no");

                entity.Property(e => e.AppearsAccreditationData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_accreditation_data");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.ApplicationSubmited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_submited")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AssessorFirstRegDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_first_reg_date");

                entity.Property(e => e.AssessorId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_id");

                entity.Property(e => e.AssessorRegEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_end_date");

                entity.Property(e => e.AssessorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_no");

                entity.Property(e => e.AssessorRegStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_start_date");

                entity.Property(e => e.AssessorStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_status_desc");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.Comments)
                    .HasMaxLength(255)
                    .HasColumnName("comments");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SProgrammeCode)
                    .HasMaxLength(255)
                    .HasColumnName("s_programme_code");

                entity.Property(e => e.SaqaUnitStandardId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_unit_standard_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.LegacyAssessorSkillsProgrammes)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKb06mb15e7t64by2y8qwtcysp3");
            });

            modelBuilder.Entity<LegacyAssessorUnitStandard>(entity =>
            {
                entity.ToTable("legacy_assessor_unit_standard");

                entity.HasIndex(e => e.UnitStandardId, "FKji6y3oeku4r6h1k33echd7x1n");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternateIdNo)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id_no");

                entity.Property(e => e.AppearsAccreditationData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_accreditation_data");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.ApplicationSubmited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_submited")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AssessorFirstRegDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_first_reg_date");

                entity.Property(e => e.AssessorId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_id");

                entity.Property(e => e.AssessorRegEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_end_date");

                entity.Property(e => e.AssessorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_no");

                entity.Property(e => e.AssessorRegStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_start_date");

                entity.Property(e => e.AssessorStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_status_desc");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.Comments)
                    .HasMaxLength(255)
                    .HasColumnName("comments");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualCode)
                    .HasMaxLength(255)
                    .HasColumnName("qual_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UnitStdCode)
                    .HasMaxLength(255)
                    .HasColumnName("unit_std_code");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.LegacyAssessorUnitStandards)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKji6y3oeku4r6h1k33echd7x1n");
            });

            modelBuilder.Entity<LegacyBursary>(entity =>
            {
                entity.ToTable("legacy_bursary");

                entity.HasIndex(e => e.OfoCodesId, "FK4walb5n8ympouew4p7tbyddam");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FKcpmf5smx2sx30rlsvd4n6j93s");

                entity.HasIndex(e => e.CompanyId, "FKloe022t2oduqq63in9dgwyvvi");

                entity.HasIndex(e => e.QualificationId, "FKo08tyrsm67d2832ju49hys8fo");

                entity.HasIndex(e => e.EmployerId, "FKt7bthr967st7ukvrs1lxccrmr");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Amount)
                    .HasMaxLength(255)
                    .HasColumnName("amount");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.ApplicationDate)
                    .HasMaxLength(255)
                    .HasColumnName("application_date");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompletionDate)
                    .HasMaxLength(255)
                    .HasColumnName("completion_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreatedCompanyLearner)
                    .HasColumnType("bit(1)")
                    .HasColumnName("created_company_learner");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_created");

                entity.Property(e => e.DateUpdated)
                    .HasMaxLength(255)
                    .HasColumnName("date_updated");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("description");

                entity.Property(e => e.DgATg)
                    .HasMaxLength(255)
                    .HasColumnName("dg_a_tg");

                entity.Property(e => e.EmployerId).HasColumnName("employer_id");

                entity.Property(e => e.EmployerSdl)
                    .HasMaxLength(255)
                    .HasColumnName("employer_sdl");

                entity.Property(e => e.EndDate)
                    .HasMaxLength(255)
                    .HasColumnName("end_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.FundingStatus)
                    .HasMaxLength(255)
                    .HasColumnName("funding_status");

                entity.Property(e => e.Id2)
                    .HasMaxLength(255)
                    .HasColumnName("id2");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.LearningArea)
                    .HasMaxLength(255)
                    .HasColumnName("learning_area");

                entity.Property(e => e.LegacyOrganisationSites)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_sites");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodeId)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code_id");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OprganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("oprganisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.OtherProvider)
                    .HasMaxLength(255)
                    .HasColumnName("other_provider");

                entity.Property(e => e.PartnerLegalName)
                    .HasMaxLength(255)
                    .HasColumnName("partner_legal_name");

                entity.Property(e => e.PartnerTradeName)
                    .HasMaxLength(255)
                    .HasColumnName("partner_trade_name");

                entity.Property(e => e.PartnershipSdl)
                    .HasMaxLength(255)
                    .HasColumnName("partnership_sdl");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.Provider)
                    .HasMaxLength(255)
                    .HasColumnName("provider");

                entity.Property(e => e.ProviderType)
                    .HasMaxLength(255)
                    .HasColumnName("provider_type");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RegistrationDate)
                    .HasMaxLength(255)
                    .HasColumnName("registration_date");

                entity.Property(e => e.SaqaId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SkillPriority)
                    .HasMaxLength(255)
                    .HasColumnName("skill_priority");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SocioEcoStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("socio_eco_status_desc");

                entity.Property(e => e.StartDate)
                    .HasMaxLength(255)
                    .HasColumnName("start_date");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.ValidIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_id_number");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.LegacyBursaryCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKloe022t2oduqq63in9dgwyvvi");

                entity.HasOne(d => d.Employer)
                    .WithMany(p => p.LegacyBursaryEmployers)
                    .HasForeignKey(d => d.EmployerId)
                    .HasConstraintName("FKt7bthr967st7ukvrs1lxccrmr");

                entity.HasOne(d => d.LegacyOrganisationSitesNavigation)
                    .WithMany(p => p.LegacyBursaries)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FKcpmf5smx2sx30rlsvd4n6j93s");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.LegacyBursaries)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FK4walb5n8ympouew4p7tbyddam");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyBursaries)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKo08tyrsm67d2832ju49hys8fo");
            });

            modelBuilder.Entity<LegacyDttcApproval>(entity =>
            {
                entity.ToTable("legacy_dttc_approval");

                entity.HasIndex(e => e.CompanyId, "FKodocf8sciwchi7haatkqelnf3");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FKpva4y8315nrfia4opi2jcn9di");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.ApplicationRecDate)
                    .HasMaxLength(255)
                    .HasColumnName("application_recDate");

                entity.Property(e => e.ApprovalNumber)
                    .HasMaxLength(255)
                    .HasColumnName("approval_number");

                entity.Property(e => e.CheckCountByRefNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("checkCount_by_ref_number");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_created");

                entity.Property(e => e.DttcId)
                    .HasMaxLength(255)
                    .HasColumnName("dttc_id");

                entity.Property(e => e.DttcStatus)
                    .HasMaxLength(255)
                    .HasColumnName("dttc_status");

                entity.Property(e => e.LastDateChanged)
                    .HasMaxLength(255)
                    .HasColumnName("last_date_changed");

                entity.Property(e => e.LegacyOrganisationNonLevyPaying)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_non_levy_paying");

                entity.Property(e => e.LegacyOrganisationSites)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_sites");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_sdl");

                entity.Property(e => e.MainSdlNumberOnSarsEmployerFile)
                    .HasColumnType("bit(1)")
                    .HasColumnName("main_sdl_number_on_sars_employer_file");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NoOfEmployees)
                    .HasMaxLength(255)
                    .HasColumnName("no_of_employees");

                entity.Property(e => e.OprganisationNameTrade)
                    .HasMaxLength(500)
                    .HasColumnName("oprganisation_name_trade");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(500)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SRefNo)
                    .HasMaxLength(255)
                    .HasColumnName("s_ref_no");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.LegacyDttcApprovals)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKodocf8sciwchi7haatkqelnf3");

                entity.HasOne(d => d.LegacyOrganisationSitesNavigation)
                    .WithMany(p => p.LegacyDttcApprovals)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FKpva4y8315nrfia4opi2jcn9di");
            });

            modelBuilder.Entity<LegacyDttcQualification>(entity =>
            {
                entity.ToTable("legacy_dttc_qualification");

                entity.HasIndex(e => e.QualificationId, "FK2itq4go5mx1g9g67n6tvs6dps");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationStartSate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_sate");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DttcStatus)
                    .HasMaxLength(255)
                    .HasColumnName("dttc_status");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_sdl");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualCode)
                    .HasMaxLength(255)
                    .HasColumnName("qual_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyDttcQualifications)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK2itq4go5mx1g9g67n6tvs6dps");
            });

            modelBuilder.Entity<LegacyDttcSkillsProgramme>(entity =>
            {
                entity.ToTable("legacy_dttc_skills_programme");

                entity.HasIndex(e => e.SkillsProgramId, "FKvwn6ovyueu51h56qlr7j31s");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DttcStatus)
                    .HasMaxLength(255)
                    .HasColumnName("dttc_status");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("Linked_SDL");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SProgrammeDesc)
                    .HasMaxLength(255)
                    .HasColumnName("s_programme_desc");

                entity.Property(e => e.SRefNo)
                    .HasMaxLength(255)
                    .HasColumnName("s_ref_no");

                entity.Property(e => e.SaqaUsId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_us_id");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsProgrammeRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("skills_programme_registration_number");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.LegacyDttcSkillsProgrammes)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKvwn6ovyueu51h56qlr7j31s");
            });

            modelBuilder.Entity<LegacyDttcTrade>(entity =>
            {
                entity.ToTable("legacy_dttc_trade");

                entity.HasIndex(e => e.QualificationId, "FK986oytw0lfxkocaj2it9ebvwq");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CompanyRegistrationNo)
                    .HasMaxLength(255)
                    .HasColumnName("company_registration_no");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DttcStatus)
                    .HasMaxLength(255)
                    .HasColumnName("dttc_status");

                entity.Property(e => e.LinkedAccreditationNumberOnProviderAccreditation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("linked_accreditation_number_on_provider_accreditation");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_sdl");

                entity.Property(e => e.MersetaSkillsProgrammeRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("merseta_skills_programme_registration_number");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationCode)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SaqaId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_id");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SicCode)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code");

                entity.Property(e => e.SicCodeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code_description");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.TradeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("trade_description");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyDttcTrades)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK986oytw0lfxkocaj2it9ebvwq");
            });

            modelBuilder.Entity<LegacyDttcUnitStandard>(entity =>
            {
                entity.ToTable("legacy_dttc_unit_standard");

                entity.HasIndex(e => e.UnitStandardId, "FKp4lju8s9xmrw3is7e4cqdqv7r");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DttcStatus)
                    .HasMaxLength(255)
                    .HasColumnName("dttc_status");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("Linked_SDL");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SRefNo)
                    .HasMaxLength(255)
                    .HasColumnName("s_ref_no");

                entity.Property(e => e.SaqaUsId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_us_id");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UnitStdDesc)
                    .HasMaxLength(255)
                    .HasColumnName("unit_std_desc");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.LegacyDttcUnitStandards)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKp4lju8s9xmrw3is7e4cqdqv7r");
            });

            modelBuilder.Entity<LegacyEmployerWa2Learnership>(entity =>
            {
                entity.ToTable("legacy_employer_wa2_learnership");

                entity.HasIndex(e => e.LearnershipId, "FKtqjqrv1715ttho0l8vx30b4ih");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.ApplicationRecDate)
                    .HasMaxLength(255)
                    .HasColumnName("application_rec_date");

                entity.Property(e => e.ChamberDescription)
                    .HasMaxLength(255)
                    .HasColumnName("chamber_description");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CompanyRegistrationNo)
                    .HasMaxLength(255)
                    .HasColumnName("company_registration_no");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_created");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("email_address");

                entity.Property(e => e.Fax)
                    .HasMaxLength(255)
                    .HasColumnName("fax");

                entity.Property(e => e.LShipCode)
                    .HasMaxLength(255)
                    .HasColumnName("l_ship_code");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.LearnershipTitle)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_title");

                entity.Property(e => e.LinkedAccreditationNumberOnProviderAccreditation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("linked_accreditation_number_on_provider_accreditation");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_sdl");

                entity.Property(e => e.LinkedSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("linked_sdl_number");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OrgCatSize)
                    .HasMaxLength(255)
                    .HasColumnName("org_cat_size");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Phone)
                    .HasMaxLength(255)
                    .HasColumnName("phone");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SicCode)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code");

                entity.Property(e => e.SicCodeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code_description");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Submitted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("submitted");

                entity.Property(e => e.WaEmployerStatus)
                    .HasMaxLength(255)
                    .HasColumnName("wa_employer_status");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.LegacyEmployerWa2Learnerships)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FKtqjqrv1715ttho0l8vx30b4ih");
            });

            modelBuilder.Entity<LegacyEmployerWa2Qualification>(entity =>
            {
                entity.ToTable("legacy_employer_wa2_qualification");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FKcpsu22odggshp5dbudhami3si");

                entity.HasIndex(e => e.QualificationId, "FKnjjjssqpthvam9ckm9oswvmmp");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.ApplicationRecDate)
                    .HasMaxLength(255)
                    .HasColumnName("application_rec_date");

                entity.Property(e => e.ApplicationecDate)
                    .HasMaxLength(255)
                    .HasColumnName("applicationec_date");

                entity.Property(e => e.ChamberDescription)
                    .HasMaxLength(255)
                    .HasColumnName("chamber_description");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CompanyRegistrationNo)
                    .HasMaxLength(255)
                    .HasColumnName("company_registration_no");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_Created");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("email_address");

                entity.Property(e => e.Fax)
                    .HasMaxLength(255)
                    .HasColumnName("fax");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.LinkedAccreditationNumberOnProviderAccreditation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("linked_accreditation_number_on_provider_accreditation");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_sdl");

                entity.Property(e => e.LinkedSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("linked_sdl_number");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrgCatSize)
                    .HasMaxLength(255)
                    .HasColumnName("org_cat_size");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Phone)
                    .HasMaxLength(255)
                    .HasColumnName("phone");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualCode)
                    .HasMaxLength(255)
                    .HasColumnName("qual_code");

                entity.Property(e => e.QualDesc)
                    .HasMaxLength(255)
                    .HasColumnName("qual_desc");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SicCode)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code");

                entity.Property(e => e.SicCodeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code_description");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Submitted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("submitted");

                entity.Property(e => e.WaEmployerStatus)
                    .HasMaxLength(255)
                    .HasColumnName("wa_employer_status");

                entity.HasOne(d => d.LegacyOrganisationSites)
                    .WithMany(p => p.LegacyEmployerWa2Qualifications)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FKcpsu22odggshp5dbudhami3si");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyEmployerWa2Qualifications)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKnjjjssqpthvam9ckm9oswvmmp");
            });

            modelBuilder.Entity<LegacyEmployerWa2SkillsProgramme>(entity =>
            {
                entity.ToTable("legacy_employer_wa2_skills_programme");

                entity.HasIndex(e => e.SkillsProgramId, "FK1wdrxglq5jrx7336y3qck00du");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FKi3ih8n42wdq6y6t33n0aqeqxi");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.ApplicationRecDate)
                    .HasMaxLength(255)
                    .HasColumnName("application_rec_date");

                entity.Property(e => e.ChamberDescription)
                    .HasMaxLength(255)
                    .HasColumnName("chamber_description");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CompanyRegistrationNo)
                    .HasMaxLength(255)
                    .HasColumnName("company_registration_no");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_Created");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("email_address");

                entity.Property(e => e.Fax)
                    .HasMaxLength(255)
                    .HasColumnName("fax");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.LinkedAccreditationNumberOnProviderAccreditation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("linked_accreditation_number_on_provider_accreditation");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_sdl");

                entity.Property(e => e.LinkedSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("linked_sdl_number");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OrgCatSize)
                    .HasMaxLength(255)
                    .HasColumnName("org_cat_size");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Phone)
                    .HasMaxLength(255)
                    .HasColumnName("phone");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_id");

                entity.Property(e => e.SProgrammeCode)
                    .HasMaxLength(255)
                    .HasColumnName("s_programme_code");

                entity.Property(e => e.SProgrammeDesc)
                    .HasMaxLength(255)
                    .HasColumnName("s_programme_desc");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SicCode)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code");

                entity.Property(e => e.SicCodeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code_description");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Submitted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("submitted");

                entity.Property(e => e.WaEmployerStatus)
                    .HasMaxLength(255)
                    .HasColumnName("wa_employer_status");

                entity.HasOne(d => d.LegacyOrganisationSites)
                    .WithMany(p => p.LegacyEmployerWa2SkillsProgrammes)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FKi3ih8n42wdq6y6t33n0aqeqxi");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.LegacyEmployerWa2SkillsProgrammes)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FK1wdrxglq5jrx7336y3qck00du");
            });

            modelBuilder.Entity<LegacyEmployerWa2Trade>(entity =>
            {
                entity.ToTable("legacy_employer_wa2_trade");

                entity.HasIndex(e => e.QualificationId, "FKhx0199oamaugvt20wqmbhuqnk");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.ApplicationRecDate)
                    .HasMaxLength(255)
                    .HasColumnName("application_rec_date");

                entity.Property(e => e.ChamberDescription)
                    .HasMaxLength(255)
                    .HasColumnName("chamber_description");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CompanyRegistrationNo)
                    .HasMaxLength(255)
                    .HasColumnName("company_registration_no");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_Created");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("email_address");

                entity.Property(e => e.Fax)
                    .HasMaxLength(255)
                    .HasColumnName("fax");

                entity.Property(e => e.LinkedAccreditationNumberOnProviderAccreditation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("linked_accreditation_number_on_provider_accreditation");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_sdl");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoDescription)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_description");

                entity.Property(e => e.OrgCatSize)
                    .HasMaxLength(255)
                    .HasColumnName("org_cat_size");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Phone)
                    .HasMaxLength(255)
                    .HasColumnName("phone");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationCode)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SicCode)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code");

                entity.Property(e => e.SicCodeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code_description");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Submitted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("submitted");

                entity.Property(e => e.TradeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("trade_description");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.Property(e => e.WaEmployerStatus)
                    .HasMaxLength(255)
                    .HasColumnName("wa_employer_status");

                entity.Property(e => e.WaEmplyerTradeStatus)
                    .HasMaxLength(255)
                    .HasColumnName("wa_emplyer_trade_status");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyEmployerWa2Trades)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKhx0199oamaugvt20wqmbhuqnk");
            });

            modelBuilder.Entity<LegacyEmployerWa2UnitStandard>(entity =>
            {
                entity.ToTable("Legacy_employer_wa2_unit_standard");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FK5i6is05ixqxupdq9rmqd6hy7h");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.ApplicationRecDate)
                    .HasMaxLength(255)
                    .HasColumnName("application_rec_date");

                entity.Property(e => e.ChamberDescription)
                    .HasMaxLength(255)
                    .HasColumnName("chamber_description");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CompanyRegistrationNo)
                    .HasMaxLength(255)
                    .HasColumnName("company_registration_no");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_Created");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("email_address");

                entity.Property(e => e.Fax)
                    .HasMaxLength(255)
                    .HasColumnName("fax");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_sdl");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrgCatSize)
                    .HasMaxLength(255)
                    .HasColumnName("org_cat_size");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Phone)
                    .HasMaxLength(255)
                    .HasColumnName("phone");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SicCode)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code");

                entity.Property(e => e.SicCodeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code_description");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Submitted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("submitted");

                entity.Property(e => e.UnitStdCode)
                    .HasMaxLength(255)
                    .HasColumnName("unit_std_code");

                entity.Property(e => e.UnitStdDesc)
                    .HasMaxLength(255)
                    .HasColumnName("unit_std_desc");

                entity.Property(e => e.WaEmployerStatus)
                    .HasMaxLength(255)
                    .HasColumnName("wa_employer_status");

                entity.HasOne(d => d.LegacyOrganisationSites)
                    .WithMany(p => p.LegacyEmployerWa2UnitStandards)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FK5i6is05ixqxupdq9rmqd6hy7h");
            });

            modelBuilder.Entity<LegacyEmployerWa2Workplace>(entity =>
            {
                entity.ToTable("legacy_employer_wa2_workplace");

                entity.HasIndex(e => e.QualificationId, "FKer2hptelarqmuot7k9nydmvqt");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FKrvti2g0muhfsukbd3ribqyd6m");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.ApplicationRecDate)
                    .HasMaxLength(255)
                    .HasColumnName("application_rec_date");

                entity.Property(e => e.CheckCountByRefNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("checkCount_by_ref_number");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_created");

                entity.Property(e => e.LastDateChanged)
                    .HasMaxLength(255)
                    .HasColumnName("last_date_changed");

                entity.Property(e => e.LegacyOrganisationNonLevyPaying)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_non_levy_paying");

                entity.Property(e => e.LegacyOrganisationSites)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_sites");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_sdl");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Submitted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("submitted");

                entity.Property(e => e.WaEmployerId)
                    .HasMaxLength(255)
                    .HasColumnName("wa_employer_id");

                entity.Property(e => e.WaEmployerStatus)
                    .HasMaxLength(255)
                    .HasColumnName("wa_employer_status");

                entity.HasOne(d => d.LegacyOrganisationSitesNavigation)
                    .WithMany(p => p.LegacyEmployerWa2Workplaces)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FKrvti2g0muhfsukbd3ribqyd6m");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyEmployerWa2Workplaces)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKer2hptelarqmuot7k9nydmvqt");
            });

            modelBuilder.Entity<LegacyExperiential>(entity =>
            {
                entity.ToTable("legacy_experiential");

                entity.HasIndex(e => e.EmployerId, "FK6jtewardiaey7nm2wswibn2fc");

                entity.HasIndex(e => e.OfoCodesId, "FK8prmdagtse5h0bluot4xlkyqy");

                entity.HasIndex(e => e.QualificationId, "FKhnxsv245n5scumlhu2w4rer29");

                entity.HasIndex(e => e.CompanyId, "FKhss1wl5r23g68ugkfu1ew4e9n");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FKpc8yssplqjv49rhwwh9npsblj");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Amount)
                    .HasMaxLength(255)
                    .HasColumnName("amount");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.ApplicationDate)
                    .HasMaxLength(255)
                    .HasColumnName("application_date");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompletionDate)
                    .HasMaxLength(255)
                    .HasColumnName("completion_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreatedCompanyLearner)
                    .HasColumnType("bit(1)")
                    .HasColumnName("created_company_learner");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_created");

                entity.Property(e => e.DateUpdated)
                    .HasMaxLength(255)
                    .HasColumnName("date_updated");

                entity.Property(e => e.DgTag)
                    .HasMaxLength(255)
                    .HasColumnName("dg_tag");

                entity.Property(e => e.EmployerId).HasColumnName("employer_id");

                entity.Property(e => e.EmployerSdl)
                    .HasMaxLength(255)
                    .HasColumnName("employer_sdl");

                entity.Property(e => e.EndDate)
                    .HasMaxLength(255)
                    .HasColumnName("end_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.FundingStatus)
                    .HasMaxLength(255)
                    .HasColumnName("funding_status");

                entity.Property(e => e.Id2)
                    .HasMaxLength(255)
                    .HasColumnName("id_2");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.LearnershipTitle)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_title");

                entity.Property(e => e.LearningArea)
                    .HasMaxLength(255)
                    .HasColumnName("Learning_area");

                entity.Property(e => e.LearningAreaOther)
                    .HasMaxLength(255)
                    .HasColumnName("learning_area_other");

                entity.Property(e => e.LegacyOrganisationSites)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_sites");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.OtherProvider)
                    .HasMaxLength(255)
                    .HasColumnName("other_provider");

                entity.Property(e => e.PartnerLegalName)
                    .HasMaxLength(255)
                    .HasColumnName("partner_legal_name");

                entity.Property(e => e.PartnerTradeName)
                    .HasMaxLength(255)
                    .HasColumnName("partner_trade_name");

                entity.Property(e => e.PartnershipSdl)
                    .HasMaxLength(255)
                    .HasColumnName("partnership_sdl");

                entity.Property(e => e.PracticalTraining)
                    .HasMaxLength(255)
                    .HasColumnName("practical_training");

                entity.Property(e => e.PracticalTrainingOther)
                    .HasMaxLength(255)
                    .HasColumnName("practical_training_other");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.Provider)
                    .HasMaxLength(255)
                    .HasColumnName("provider");

                entity.Property(e => e.ProviderType)
                    .HasMaxLength(255)
                    .HasColumnName("provider_type");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RegistrationDate)
                    .HasMaxLength(255)
                    .HasColumnName("registration_date");

                entity.Property(e => e.SaqaId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SkillPriority)
                    .HasMaxLength(255)
                    .HasColumnName("skill_priority");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SspNeedsId)
                    .HasMaxLength(255)
                    .HasColumnName("ssp_needs_id");

                entity.Property(e => e.StartDate)
                    .HasMaxLength(255)
                    .HasColumnName("start_date");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("status");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.LegacyExperientialCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKhss1wl5r23g68ugkfu1ew4e9n");

                entity.HasOne(d => d.Employer)
                    .WithMany(p => p.LegacyExperientialEmployers)
                    .HasForeignKey(d => d.EmployerId)
                    .HasConstraintName("FK6jtewardiaey7nm2wswibn2fc");

                entity.HasOne(d => d.LegacyOrganisationSitesNavigation)
                    .WithMany(p => p.LegacyExperientials)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FKpc8yssplqjv49rhwwh9npsblj");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.LegacyExperientials)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FK8prmdagtse5h0bluot4xlkyqy");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyExperientials)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKhnxsv245n5scumlhu2w4rer29");
            });

            modelBuilder.Entity<LegacyInternship>(entity =>
            {
                entity.ToTable("legacy_internship");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FK8wi7qt9usw35x8djd3sjb7dm6");

                entity.HasIndex(e => e.EmployerId, "FKeby7w317uo91f172ibxex718l");

                entity.HasIndex(e => e.QualificationId, "FKes1cnusr3ycgbk6dj05h2pa5l");

                entity.HasIndex(e => e.OfoCodesId, "FKnfig5js2o5ug102lt1xn2pnls");

                entity.HasIndex(e => e.CompanyId, "FKsaa0wjxgn2umqaao0sabvv1jo");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Amount)
                    .HasMaxLength(255)
                    .HasColumnName("amount");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.ApplicationDate)
                    .HasMaxLength(255)
                    .HasColumnName("application_date");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompletionDate)
                    .HasMaxLength(255)
                    .HasColumnName("completion_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreatedCompanyLearner)
                    .HasColumnType("bit(1)")
                    .HasColumnName("created_company_learner");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_created");

                entity.Property(e => e.DateUpdated)
                    .HasMaxLength(255)
                    .HasColumnName("date_updated");

                entity.Property(e => e.DgTag)
                    .HasMaxLength(255)
                    .HasColumnName("dg_tag");

                entity.Property(e => e.EmployerId).HasColumnName("employer_id");

                entity.Property(e => e.EmployerSdl)
                    .HasMaxLength(255)
                    .HasColumnName("employer_sdl");

                entity.Property(e => e.EndDate)
                    .HasMaxLength(255)
                    .HasColumnName("end_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.FundingStatus)
                    .HasMaxLength(255)
                    .HasColumnName("funding_status");

                entity.Property(e => e.Id2)
                    .HasMaxLength(255)
                    .HasColumnName("id_2");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.LearnershipTitle)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_title");

                entity.Property(e => e.LearningArea)
                    .HasMaxLength(255)
                    .HasColumnName("learning_area");

                entity.Property(e => e.LearningAreaOther)
                    .HasMaxLength(255)
                    .HasColumnName("learning_area_other");

                entity.Property(e => e.LegacyOrganisationSites)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_sites");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.OtherProvider)
                    .HasMaxLength(255)
                    .HasColumnName("other_provider");

                entity.Property(e => e.PartnerLegalName)
                    .HasMaxLength(255)
                    .HasColumnName("partner_legal_name");

                entity.Property(e => e.PartnershipSdl)
                    .HasMaxLength(255)
                    .HasColumnName("partnership_sdl");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.ProgrammeType)
                    .HasMaxLength(255)
                    .HasColumnName("programme_type");

                entity.Property(e => e.Provider)
                    .HasMaxLength(255)
                    .HasColumnName("provider");

                entity.Property(e => e.ProviderType)
                    .HasMaxLength(255)
                    .HasColumnName("provider_type");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RegistrationDate)
                    .HasMaxLength(255)
                    .HasColumnName("registration_date");

                entity.Property(e => e.SaqaId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SkillPriority)
                    .HasMaxLength(255)
                    .HasColumnName("skill_priority");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SspNeedsId)
                    .HasMaxLength(255)
                    .HasColumnName("ssp_needs_id");

                entity.Property(e => e.StartDate)
                    .HasMaxLength(255)
                    .HasColumnName("start_date");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("status");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.LegacyInternshipCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKsaa0wjxgn2umqaao0sabvv1jo");

                entity.HasOne(d => d.Employer)
                    .WithMany(p => p.LegacyInternshipEmployers)
                    .HasForeignKey(d => d.EmployerId)
                    .HasConstraintName("FKeby7w317uo91f172ibxex718l");

                entity.HasOne(d => d.LegacyOrganisationSitesNavigation)
                    .WithMany(p => p.LegacyInternships)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FK8wi7qt9usw35x8djd3sjb7dm6");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.LegacyInternships)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKnfig5js2o5ug102lt1xn2pnls");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyInternships)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKes1cnusr3ycgbk6dj05h2pa5l");
            });

            modelBuilder.Entity<LegacyLearnership>(entity =>
            {
                entity.ToTable("legacy_learnership");

                entity.HasIndex(e => e.EmployerId, "FK16qkduy773j2r8cpo9bo4lri0");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FK7l387nbq7ruh1wqvi7cji6pir");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKawupjot8lb5t4t1d3a7l4ocgm");

                entity.HasIndex(e => e.LearnershipId, "FKdbhkri5mcqtkr5s74045fgtmy");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationNumber)
                    .HasMaxLength(100)
                    .HasColumnName("accreditation_number");

                entity.Property(e => e.AgreementEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_end_date");

                entity.Property(e => e.AgreementId)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_id");

                entity.Property(e => e.AgreementRefNo)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_ref_no");

                entity.Property(e => e.AgreementStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_start_date");

                entity.Property(e => e.AgreementStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_status_desc");

                entity.Property(e => e.AgreementStatusEffectiveDate)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_status_effective_date");

                entity.Property(e => e.AlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.CaptureDate)
                    .HasMaxLength(255)
                    .HasColumnName("capture_date");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Created)
                    .HasMaxLength(255)
                    .HasColumnName("created");

                entity.Property(e => e.CreatedCompanyLearner)
                    .HasColumnType("bit(1)")
                    .HasColumnName("created_company_learner");

                entity.Property(e => e.DolOrganisationNameLegal)
                    .HasMaxLength(500)
                    .HasColumnName("dol_organisation_name_legal");

                entity.Property(e => e.DurationLearnerEmployed)
                    .HasMaxLength(255)
                    .HasColumnName("duration_learner_employed");

                entity.Property(e => e.EmployerId).HasColumnName("employer_id");

                entity.Property(e => e.EmployerSdl)
                    .HasMaxLength(255)
                    .HasColumnName("employer_sdl");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.Funded)
                    .HasMaxLength(255)
                    .HasColumnName("funded");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.LShipCode)
                    .HasMaxLength(255)
                    .HasColumnName("l_ship_code");

                entity.Property(e => e.LastDateChanged)
                    .HasMaxLength(255)
                    .HasColumnName("last_date_changed");

                entity.Property(e => e.LearnerEmployed)
                    .HasMaxLength(255)
                    .HasColumnName("learner_employed");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.LearnershipTitle)
                    .HasMaxLength(500)
                    .HasColumnName("learnership_title");

                entity.Property(e => e.LegacyOrganisationSites)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_sites");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.LegacyProviderExists)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_provider_exists");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(500)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(500)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.PrevLearnerhipCode)
                    .HasMaxLength(500)
                    .HasColumnName("prev_learnerhip_code");

                entity.Property(e => e.PrevLearnershipTitle)
                    .HasMaxLength(500)
                    .HasColumnName("prev_learnership_title");

                entity.Property(e => e.PreviousEmployed)
                    .HasMaxLength(255)
                    .HasColumnName("previous_employed");

                entity.Property(e => e.PreviousLearnership)
                    .HasMaxLength(500)
                    .HasColumnName("previous_learnership");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.ProjectType)
                    .HasMaxLength(255)
                    .HasColumnName("project_type");

                entity.Property(e => e.ProviderSdl)
                    .HasMaxLength(255)
                    .HasColumnName("provider_sdl");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.RegistrationDate)
                    .HasMaxLength(255)
                    .HasColumnName("registration_date");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SocioEcoStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("socio_eco_status_desc");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Employer)
                    .WithMany(p => p.LegacyLearnerships)
                    .HasForeignKey(d => d.EmployerId)
                    .HasConstraintName("FK16qkduy773j2r8cpo9bo4lri0");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.LegacyLearnerships)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FKdbhkri5mcqtkr5s74045fgtmy");

                entity.HasOne(d => d.LegacyOrganisationSitesNavigation)
                    .WithMany(p => p.LegacyLearnerships)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FK7l387nbq7ruh1wqvi7cji6pir");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.LegacyLearnerships)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKawupjot8lb5t4t1d3a7l4ocgm");
            });

            modelBuilder.Entity<LegacyLearnershipAssessment1>(entity =>
            {
                entity.ToTable("legacy_learnership_assessment1");

                entity.HasIndex(e => e.LearnershipId, "FKs4m1l3xb38nnpxblx2y5eewq7");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AgreementRefNo)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_ref_no");

                entity.Property(e => e.AgreementStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_status_desc");

                entity.Property(e => e.AgreementUnitStdStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_unit_std_status_desc");

                entity.Property(e => e.AppearsAccreditationData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_accreditation_data");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.AssessorFirstName)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_first_name");

                entity.Property(e => e.AssessorId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_id");

                entity.Property(e => e.AssessorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_no");

                entity.Property(e => e.AssessorSurname)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_surname");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DtAssessment)
                    .HasMaxLength(255)
                    .HasColumnName("dt_assessment");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.HologramNumber)
                    .HasMaxLength(255)
                    .HasColumnName("hologram_number");

                entity.Property(e => e.LShipCode)
                    .HasMaxLength(255)
                    .HasColumnName("l_ship_code");

                entity.Property(e => e.LearnerId)
                    .HasMaxLength(255)
                    .HasColumnName("learner_id");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.LearnershipTitle)
                    .HasMaxLength(500)
                    .HasColumnName("learnership_title");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.PkiLearnerAssessmentId)
                    .HasMaxLength(255)
                    .HasColumnName("pki_learner_assessment_id");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.UnitStdCode)
                    .HasMaxLength(255)
                    .HasColumnName("unit_std_code");

                entity.Property(e => e.UnitStdDesc)
                    .HasMaxLength(500)
                    .HasColumnName("unit_std_desc");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.LegacyLearnershipAssessment1s)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FKs4m1l3xb38nnpxblx2y5eewq7");
            });

            modelBuilder.Entity<LegacyLearnershipAssessment2>(entity =>
            {
                entity.ToTable("legacy_learnership_assessment2");

                entity.HasIndex(e => e.QualificationId, "FKcbp0lx22yuk95v04mwnjd2iv7");

                entity.HasIndex(e => e.UnitStandardId, "FKf1fymodm75iw91ltn2hr1g5aj");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AgreementRefNo)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_ref_no");

                entity.Property(e => e.AgreementStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_status_desc");

                entity.Property(e => e.AgreementUnitStdStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_unit_std_status_desc");

                entity.Property(e => e.AssessorFirstName)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_first_name");

                entity.Property(e => e.AssessorId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_id");

                entity.Property(e => e.AssessorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_no");

                entity.Property(e => e.AssessorSurname)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_surname");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DtAssessment)
                    .HasMaxLength(255)
                    .HasColumnName("dt_assessment");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.HologramNumber)
                    .HasMaxLength(255)
                    .HasColumnName("hologram_number");

                entity.Property(e => e.LShipCode)
                    .HasMaxLength(255)
                    .HasColumnName("l_ship_code");

                entity.Property(e => e.LearnerId)
                    .HasMaxLength(255)
                    .HasColumnName("learner_id");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.LearnershipTitle)
                    .HasMaxLength(500)
                    .HasColumnName("learnership_title");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.PkiLearnerAssessmentId)
                    .HasMaxLength(255)
                    .HasColumnName("pki_learner_assessment_id");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UnitStdCode)
                    .HasMaxLength(255)
                    .HasColumnName("unit_std_code");

                entity.Property(e => e.UnitStdDesc)
                    .HasMaxLength(500)
                    .HasColumnName("unit_std_desc");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyLearnershipAssessment2s)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKcbp0lx22yuk95v04mwnjd2iv7");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.LegacyLearnershipAssessment2s)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKf1fymodm75iw91ltn2hr1g5aj");
            });

            modelBuilder.Entity<LegacyLearnershipAssessment3>(entity =>
            {
                entity.ToTable("legacy_learnership_assessment3");

                entity.HasIndex(e => e.UnitStandardId, "FK7n5cvds0nuar6gtcpbsknur74");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AgreementRefNo)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_ref_no");

                entity.Property(e => e.AgreementStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_status_desc");

                entity.Property(e => e.AgreementUnitStdStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_unit_std_status_desc");

                entity.Property(e => e.AssessorFirstName)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_first_name");

                entity.Property(e => e.AssessorId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_id");

                entity.Property(e => e.AssessorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_no");

                entity.Property(e => e.AssessorSurname)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_surname");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DtAssessment)
                    .HasMaxLength(255)
                    .HasColumnName("dt_assessment");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.HologramNumber)
                    .HasMaxLength(255)
                    .HasColumnName("hologram_number");

                entity.Property(e => e.LShipCode)
                    .HasMaxLength(255)
                    .HasColumnName("l_ship_code");

                entity.Property(e => e.LearnerId)
                    .HasMaxLength(255)
                    .HasColumnName("learner_id");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.LearnershipTitle)
                    .HasMaxLength(500)
                    .HasColumnName("learnership_title");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.PkiLearnerAssessmentId)
                    .HasMaxLength(255)
                    .HasColumnName("pki_learner_assessment_id");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UnitStdCode)
                    .HasMaxLength(255)
                    .HasColumnName("unit_std_code");

                entity.Property(e => e.UnitStdDesc)
                    .HasMaxLength(500)
                    .HasColumnName("unit_std_desc");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.LegacyLearnershipAssessment3s)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FK7n5cvds0nuar6gtcpbsknur74");
            });

            modelBuilder.Entity<LegacyModeratorAccreditation>(entity =>
            {
                entity.ToTable("legacy_moderator_accreditation");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AliveOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("alive_on_home_affairs_data");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.AssessorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_no");

                entity.Property(e => e.AssessorType)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_type");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DecisionNumber)
                    .HasMaxLength(255)
                    .HasColumnName("decision_number");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.LastDateChanged)
                    .HasMaxLength(255)
                    .HasColumnName("last_date_changed");

                entity.Property(e => e.ModeratorRegEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_end_date");

                entity.Property(e => e.ModeratorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_no");

                entity.Property(e => e.ModeratorRegStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_start_date");

                entity.Property(e => e.ModeratorStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_status_desc");

                entity.Property(e => e.ModeratorStatusEffectiveDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_status_effective_date");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OnPersonsFile)
                    .HasColumnType("bit(1)")
                    .HasColumnName("on_persons_file");

                entity.Property(e => e.OnPersonsFileAlternativeId)
                    .HasColumnType("bit(1)")
                    .HasColumnName("on_persons_file_alternative_id");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.ReviewCommitteeDate)
                    .HasMaxLength(255)
                    .HasColumnName("review_committee_date");

                entity.Property(e => e.SRefNo)
                    .HasMaxLength(255)
                    .HasColumnName("s_ref_no");

                entity.Property(e => e.ScopeYn)
                    .HasMaxLength(255)
                    .HasColumnName("scope_yn");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.TitleDesc)
                    .HasMaxLength(255)
                    .HasColumnName("title_desc");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.Property(e => e.ValidStatus)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_status");
            });

            modelBuilder.Entity<LegacyModeratorLearnership>(entity =>
            {
                entity.ToTable("legacy_moderator_learnership");

                entity.HasIndex(e => e.QualificationId, "FK1oewslsnw3n0jv749dq9odsev");

                entity.HasIndex(e => e.LearnershipId, "FKor6qws0jt3jsxve4rhf61nlss");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id");

                entity.Property(e => e.ApplicationSubmited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_submited")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AssessorId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.LShipCode)
                    .HasMaxLength(255)
                    .HasColumnName("l_ship_code");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.LearnershipId).HasColumnName("Learnership_id");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.ModeratorFirstRegDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_first_reg_date");

                entity.Property(e => e.ModeratorRegEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_end_date");

                entity.Property(e => e.ModeratorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_no");

                entity.Property(e => e.ModeratorRegStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_start_date");

                entity.Property(e => e.ModeratorStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_status_desc");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SaqaUnitStandardId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_unit_standard_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.LegacyModeratorLearnerships)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FKor6qws0jt3jsxve4rhf61nlss");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyModeratorLearnerships)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK1oewslsnw3n0jv749dq9odsev");
            });

            modelBuilder.Entity<LegacyModeratorQualification>(entity =>
            {
                entity.ToTable("legacy_moderator_qualification");

                entity.HasIndex(e => e.QualificationId, "FKblljbebmevqsmqjtf4cix3fds");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternateIdNo)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id_no");

                entity.Property(e => e.AppearsAccreditationData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_accreditation_data");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.ApplicationSubmited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_submited")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.Comments)
                    .HasMaxLength(255)
                    .HasColumnName("comments");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.ModeratorFirstRegDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_first_reg_date");

                entity.Property(e => e.ModeratorId)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_id");

                entity.Property(e => e.ModeratorRegEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_end_date");

                entity.Property(e => e.ModeratorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_no");

                entity.Property(e => e.ModeratorRegStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_start_date");

                entity.Property(e => e.ModeratorStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_status_desc");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualCode)
                    .HasMaxLength(255)
                    .HasColumnName("qual_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SaqaUnitStandardId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_unit_standard_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyModeratorQualifications)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKblljbebmevqsmqjtf4cix3fds");
            });

            modelBuilder.Entity<LegacyModeratorSkillsProgramme>(entity =>
            {
                entity.ToTable("legacy_moderator_skills_programme");

                entity.HasIndex(e => e.SkillsProgramId, "FK8pegitogulr58xmsjybcw05j5");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternateIdNo)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id_no");

                entity.Property(e => e.AppearsAccreditationData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_accreditation_data");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.ApplicationSubmited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_submited")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.Comments)
                    .HasMaxLength(255)
                    .HasColumnName("comments");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.ModeratorFirstRegDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_first_reg_date");

                entity.Property(e => e.ModeratorId)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_id");

                entity.Property(e => e.ModeratorRegEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_end_date");

                entity.Property(e => e.ModeratorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_no");

                entity.Property(e => e.ModeratorRegStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_start_date");

                entity.Property(e => e.ModeratorStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_status_desc");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SProgrammeCode)
                    .HasMaxLength(255)
                    .HasColumnName("s_programme_code");

                entity.Property(e => e.SaqaUnitStandardId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_unit_standard_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.LegacyModeratorSkillsProgrammes)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FK8pegitogulr58xmsjybcw05j5");
            });

            modelBuilder.Entity<LegacyModeratorUnitStandard>(entity =>
            {
                entity.ToTable("legacy_moderator_unit_standard");

                entity.HasIndex(e => e.UnitStandardId, "FK8drjes0jqmw7prhngmxgogb53");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternateIdNo)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id_no");

                entity.Property(e => e.AppearsAccreditationData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_accreditation_data");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.ApplicationSubmited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_submited")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.Comments)
                    .HasMaxLength(255)
                    .HasColumnName("comments");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.ModeratorFirstRegDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_first_reg_date");

                entity.Property(e => e.ModeratorId)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_id");

                entity.Property(e => e.ModeratorRegEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_end_date");

                entity.Property(e => e.ModeratorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_no");

                entity.Property(e => e.ModeratorRegStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_reg_start_date");

                entity.Property(e => e.ModeratorStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_status_desc");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualCode)
                    .HasMaxLength(255)
                    .HasColumnName("qual_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UnitStdCode)
                    .HasMaxLength(255)
                    .HasColumnName("unit_std_code");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.LegacyModeratorUnitStandards)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FK8drjes0jqmw7prhngmxgogb53");
            });

            modelBuilder.Entity<LegacyOrganisationLevyPaying>(entity =>
            {
                entity.ToTable("legacy_organisation_levy_paying");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AnnualTurnover).HasColumnName("annual_turnover");

                entity.Property(e => e.BbbeeFour).HasColumnName("BBBEE_four");

                entity.Property(e => e.BbbeeOne).HasColumnName("BBBEE_one");

                entity.Property(e => e.BbbeeThree).HasColumnName("BBBEE_three");

                entity.Property(e => e.BbbeeTwo).HasColumnName("BBBEE_two");

                entity.Property(e => e.ChamberDescription).HasColumnName("chamber_description");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CollegeId).HasColumnName("college_Id");

                entity.Property(e => e.CommunicationStatus).HasColumnName("communication_status");

                entity.Property(e => e.CompRegYear).HasColumnName("comp_reg_year");

                entity.Property(e => e.CompanyRegistrationNo).HasColumnName("company_registration_no");

                entity.Property(e => e.CompanyRegistrationNoTwo).HasColumnName("company_registration_no_two");

                entity.Property(e => e.CompanyYearsTrading).HasColumnName("company_years_trading");

                entity.Property(e => e.ConfirmSicCode).HasColumnName("confirm_SIC_code");

                entity.Property(e => e.CoreBusiness).HasColumnName("core_business");

                entity.Property(e => e.CoreBusinessDesc).HasColumnName("core_business_desc");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateCreated).HasColumnName("date_created");

                entity.Property(e => e.DeleteStatus).HasColumnName("delete_status");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.EmailAddress).HasColumnName("email_address");

                entity.Property(e => e.EntityType).HasColumnName("entity_type");

                entity.Property(e => e.Fax).HasColumnName("fax");

                entity.Property(e => e.FinancialYearEnd).HasColumnName("financial_yearEnd");

                entity.Property(e => e.FinancialYearStart).HasColumnName("financial_year_start");

                entity.Property(e => e.GeographicAreaDesc).HasColumnName("geographic_area_desc");

                entity.Property(e => e.Institution).HasColumnName("institution");

                entity.Property(e => e.InterSetaTransfer).HasColumnName("inter_seta_transfer");

                entity.Property(e => e.IsBee).HasColumnName("is_BEE");

                entity.Property(e => e.IsCbo).HasColumnName("is_cbo");

                entity.Property(e => e.IsNew).HasColumnName("is_new");

                entity.Property(e => e.IsNgo).HasColumnName("is_ngo");

                entity.Property(e => e.IsSTwentyOne).HasColumnName("is_S_twenty_one");

                entity.Property(e => e.LastDateChanged).HasColumnName("last_date_changed");

                entity.Property(e => e.LegalStatus).HasColumnName("legal_status");

                entity.Property(e => e.LinkedOrganisationId).HasColumnName("linked_organisation_id");

                entity.Property(e => e.LinkedSdl).HasColumnName("linked_SDL");

                entity.Property(e => e.LinkedSdlNumber).HasColumnName("linked_sdl_number");

                entity.Property(e => e.MagisterialDistrict).HasColumnName("magisterial_district");

                entity.Property(e => e.MainBusinessActivity).HasColumnName("main_business_activity");

                entity.Property(e => e.MainBusinessActivityTwo).HasColumnName("main_business_activity_two");

                entity.Property(e => e.MainSdl).HasColumnName("main_SDL");

                entity.Property(e => e.MainSdlNumberOnSarsEmployerFile)
                    .HasColumnType("bit(1)")
                    .HasColumnName("main_sdl_number_on_sars_employer_file");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NonLevyNumber).HasColumnName("non_levy_number");

                entity.Property(e => e.NqfLevel).HasColumnName("nqf_Level");

                entity.Property(e => e.OrgCatSize).HasColumnName("org_cat_size");

                entity.Property(e => e.OrgCategoryDesc).HasColumnName("org_category_desc");

                entity.Property(e => e.OrganisationId).HasColumnName("organisation_id");

                entity.Property(e => e.OrganisationNameLegal).HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade).HasColumnName("organisation_name_trade");

                entity.Property(e => e.OrganisationStatusEffectiveDate).HasColumnName("organisation_status_effective_date");

                entity.Property(e => e.PartnershipDesc).HasColumnName("partnership_desc");

                entity.Property(e => e.PayeNo).HasColumnName("paye_no");

                entity.Property(e => e.Payroll).HasColumnName("payroll");

                entity.Property(e => e.Phone).HasColumnName("phone");

                entity.Property(e => e.PossibleSdlNo).HasColumnName("possible_sdl_no");

                entity.Property(e => e.Province).HasColumnName("province");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.RegCiproNo).HasColumnName("reg_cipro_no");

                entity.Property(e => e.RegDate).HasColumnName("reg_date");

                entity.Property(e => e.Region).HasColumnName("region");

                entity.Property(e => e.RegistrationYear).HasColumnName("registration_year");

                entity.Property(e => e.SarsRegistrationNo).HasColumnName("sars_registration_no");

                entity.Property(e => e.SdlNumber).HasColumnName("sdl_number");

                entity.Property(e => e.SdlNumberOnSarsEmployerFile)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sdl_number_on_sars_employer_file");

                entity.Property(e => e.Sector).HasColumnName("sector");

                entity.Property(e => e.SetaStatus).HasColumnName("seta__status");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SicCode).HasColumnName("sic_code");

                entity.Property(e => e.SicCodeChamber).HasColumnName("sic_code_chamber");

                entity.Property(e => e.SicCodeDescription).HasColumnName("sic_code_description");

                entity.Property(e => e.SmsChamber).HasColumnName("sms_chamber");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SubSector).HasColumnName("sub_sector");

                entity.Property(e => e.TotalEmployment).HasColumnName("total_employment");

                entity.Property(e => e.UifNumber).HasColumnName("uif_number");

                entity.Property(e => e.UnionAgreement).HasColumnName("union_agreement");

                entity.Property(e => e.WebsiteUrl).HasColumnName("website_URL");

                entity.Property(e => e.YearsTrading).HasColumnName("years_trading");
            });

            modelBuilder.Entity<LegacyOrganisationNonLevyPaying>(entity =>
            {
                entity.ToTable("legacy_organisation_non_levy_paying");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AnnualTurnover)
                    .HasMaxLength(255)
                    .HasColumnName("annual_turnover");

                entity.Property(e => e.BbbeeFour)
                    .HasMaxLength(255)
                    .HasColumnName("BBBEE_four");

                entity.Property(e => e.BbbeeOne)
                    .HasMaxLength(255)
                    .HasColumnName("BBBEE_one");

                entity.Property(e => e.BbbeeThree)
                    .HasMaxLength(255)
                    .HasColumnName("BBBEE_three");

                entity.Property(e => e.BbbeeTwo)
                    .HasMaxLength(255)
                    .HasColumnName("BBBEE_two");

                entity.Property(e => e.ChamberDescription)
                    .HasMaxLength(255)
                    .HasColumnName("chamber_description");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CollegeId)
                    .HasMaxLength(255)
                    .HasColumnName("college_Id");

                entity.Property(e => e.CommunicationStatus)
                    .HasMaxLength(255)
                    .HasColumnName("communication_status");

                entity.Property(e => e.CompRegYear)
                    .HasMaxLength(255)
                    .HasColumnName("comp_reg_year");

                entity.Property(e => e.CompanyRegistrationNo)
                    .HasMaxLength(255)
                    .HasColumnName("company_registration_no");

                entity.Property(e => e.CompanyRegistrationNo2)
                    .HasMaxLength(255)
                    .HasColumnName("company_registration_no2");

                entity.Property(e => e.CompanyYearsTrading)
                    .HasMaxLength(255)
                    .HasColumnName("company_years_trading");

                entity.Property(e => e.ConfirmSicCode)
                    .HasMaxLength(255)
                    .HasColumnName("confirm_SIC_code");

                entity.Property(e => e.CoreBusiness)
                    .HasMaxLength(255)
                    .HasColumnName("core_business");

                entity.Property(e => e.CoreBusinessDesc)
                    .HasMaxLength(255)
                    .HasColumnName("core_business_desc");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_created");

                entity.Property(e => e.DeleteStatus)
                    .HasMaxLength(255)
                    .HasColumnName("delete_status");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("description");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("email_address");

                entity.Property(e => e.EntityType)
                    .HasMaxLength(255)
                    .HasColumnName("entity_type");

                entity.Property(e => e.Fax)
                    .HasMaxLength(255)
                    .HasColumnName("fax");

                entity.Property(e => e.FinancialYearEnd)
                    .HasMaxLength(255)
                    .HasColumnName("financial_yearEnd");

                entity.Property(e => e.FinancialYearStart)
                    .HasMaxLength(255)
                    .HasColumnName("financial_year_start");

                entity.Property(e => e.GeographicAreaDesc)
                    .HasMaxLength(255)
                    .HasColumnName("geographic_area_desc");

                entity.Property(e => e.Institution)
                    .HasMaxLength(255)
                    .HasColumnName("institution");

                entity.Property(e => e.InterSetaTransfer)
                    .HasMaxLength(255)
                    .HasColumnName("inter_seta_transfer");

                entity.Property(e => e.IsBee)
                    .HasMaxLength(255)
                    .HasColumnName("is_BEE");

                entity.Property(e => e.IsCbo)
                    .HasMaxLength(255)
                    .HasColumnName("is_cbo");

                entity.Property(e => e.IsNew)
                    .HasMaxLength(255)
                    .HasColumnName("is_new");

                entity.Property(e => e.IsNgo)
                    .HasMaxLength(255)
                    .HasColumnName("is_ngo");

                entity.Property(e => e.IsSTwentyOne)
                    .HasMaxLength(255)
                    .HasColumnName("is_S_twenty_one");

                entity.Property(e => e.LastDateChanged)
                    .HasMaxLength(255)
                    .HasColumnName("last_date_changed");

                entity.Property(e => e.LegalStatus)
                    .HasMaxLength(255)
                    .HasColumnName("legal_status");

                entity.Property(e => e.LinkedOrganisationId)
                    .HasMaxLength(255)
                    .HasColumnName("linked_organisation_id");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_SDL");

                entity.Property(e => e.LinkedSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("linked_sdl_number");

                entity.Property(e => e.MagisterialDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("magisterial_district");

                entity.Property(e => e.MainBusinessActivity)
                    .HasMaxLength(255)
                    .HasColumnName("main_business_activity");

                entity.Property(e => e.MainBusinessActivityTwo)
                    .HasMaxLength(255)
                    .HasColumnName("main_business_activity_two");

                entity.Property(e => e.MainSdl)
                    .HasMaxLength(255)
                    .HasColumnName("main_SDL");

                entity.Property(e => e.MainSdlNumberOnSarsEmployerFile)
                    .HasColumnType("bit(1)")
                    .HasColumnName("main_sdl_number_on_sars_employer_file");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NonLevyNumber)
                    .HasMaxLength(255)
                    .HasColumnName("non_levy_number");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_Level");

                entity.Property(e => e.OrgCatSize)
                    .HasMaxLength(255)
                    .HasColumnName("org_cat_size");

                entity.Property(e => e.OrgCategoryDesc)
                    .HasMaxLength(255)
                    .HasColumnName("org_category_desc");

                entity.Property(e => e.OrganisationId)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_id");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.OrganisationStatusEffectiveDate)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_status_effective_date");

                entity.Property(e => e.PartnershipDesc)
                    .HasMaxLength(255)
                    .HasColumnName("partnership_desc");

                entity.Property(e => e.PayeNo)
                    .HasMaxLength(255)
                    .HasColumnName("paye_no");

                entity.Property(e => e.Payroll)
                    .HasMaxLength(255)
                    .HasColumnName("payroll");

                entity.Property(e => e.Phone)
                    .HasMaxLength(255)
                    .HasColumnName("phone");

                entity.Property(e => e.PossibleSdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("possible_sdl_no");

                entity.Property(e => e.Province)
                    .HasMaxLength(255)
                    .HasColumnName("province");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.RegCiproNo)
                    .HasMaxLength(255)
                    .HasColumnName("reg_cipro_no");

                entity.Property(e => e.RegDate)
                    .HasMaxLength(255)
                    .HasColumnName("reg_date");

                entity.Property(e => e.Region)
                    .HasMaxLength(255)
                    .HasColumnName("region");

                entity.Property(e => e.RegistrationYear)
                    .HasMaxLength(255)
                    .HasColumnName("registration_year");

                entity.Property(e => e.SarsRegistrationNo)
                    .HasMaxLength(255)
                    .HasColumnName("sars_registration_no");

                entity.Property(e => e.SdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_number");

                entity.Property(e => e.SdlNumberOnSarsEmployerFile)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sdl_number_on_sars_employer_file");

                entity.Property(e => e.Sector)
                    .HasMaxLength(255)
                    .HasColumnName("sector");

                entity.Property(e => e.SetaStatus)
                    .HasMaxLength(255)
                    .HasColumnName("seta__status");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SicCode)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code");

                entity.Property(e => e.SicCodeChamber)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code_chamber");

                entity.Property(e => e.SicCodeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code_description");

                entity.Property(e => e.SmsChamber)
                    .HasMaxLength(255)
                    .HasColumnName("sms_chamber");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SubSector)
                    .HasMaxLength(255)
                    .HasColumnName("sub_sector");

                entity.Property(e => e.TotalEmployment)
                    .HasMaxLength(255)
                    .HasColumnName("total_employment");

                entity.Property(e => e.UifNumber)
                    .HasMaxLength(255)
                    .HasColumnName("uif_number");

                entity.Property(e => e.UnionAgreement)
                    .HasMaxLength(255)
                    .HasColumnName("union_agreement");

                entity.Property(e => e.WebsiteUrl)
                    .HasMaxLength(255)
                    .HasColumnName("website_URL");

                entity.Property(e => e.YearsTrading)
                    .HasMaxLength(255)
                    .HasColumnName("years_trading");
            });

            modelBuilder.Entity<LegacyOrganisationSite>(entity =>
            {
                entity.ToTable("legacy_organisation_sites");

                entity.HasIndex(e => e.CompanyId, "FKjhnpo2hvtwg1msnks8s8r7c3c");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AnnualTurnover).HasColumnName("annual_turnover");

                entity.Property(e => e.BbbeeFour).HasColumnName("BBBEE_four");

                entity.Property(e => e.BbbeeOne).HasColumnName("BBBEE_one");

                entity.Property(e => e.BbbeeThree).HasColumnName("BBBEE_three");

                entity.Property(e => e.BbbeeTwo).HasColumnName("BBBEE_two");

                entity.Property(e => e.ChamberDescription).HasColumnName("chamber_description");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CollegeId).HasColumnName("college_Id");

                entity.Property(e => e.CommunicationStatus).HasColumnName("communication_status");

                entity.Property(e => e.CompRegYear).HasColumnName("comp_reg_year");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyRegistrationNo).HasColumnName("company_registration_no");

                entity.Property(e => e.CompanyRegistrationNoTwo).HasColumnName("company_registration_no_two");

                entity.Property(e => e.CompanyYearsTrading).HasColumnName("company_years_trading");

                entity.Property(e => e.ConfirmSicCode).HasColumnName("confirm_SIC_code");

                entity.Property(e => e.CoreBusiness).HasColumnName("core_business");

                entity.Property(e => e.CoreBusinessDesc).HasColumnName("core_business_desc");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateCreated).HasColumnName("date_created");

                entity.Property(e => e.DeleteStatus).HasColumnName("delete_status");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.DuplicateSiteNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("duplicate_site_number");

                entity.Property(e => e.EmailAddress).HasColumnName("email_address");

                entity.Property(e => e.EntityType).HasColumnName("entity_type");

                entity.Property(e => e.Fax).HasColumnName("fax");

                entity.Property(e => e.FinancialYearEnd).HasColumnName("financial_yearEnd");

                entity.Property(e => e.FinancialYearStart).HasColumnName("financial_year_start");

                entity.Property(e => e.GeographicAreaDesc).HasColumnName("geographic_area_desc");

                entity.Property(e => e.Institution).HasColumnName("institution");

                entity.Property(e => e.InterSetaTransfer).HasColumnName("inter_seta_transfer");

                entity.Property(e => e.IsBee).HasColumnName("is_BEE");

                entity.Property(e => e.IsCbo).HasColumnName("is_cbo");

                entity.Property(e => e.IsNew).HasColumnName("is_new");

                entity.Property(e => e.IsNgo).HasColumnName("is_ngo");

                entity.Property(e => e.IsSTwentyOne).HasColumnName("is_S_twenty_one");

                entity.Property(e => e.LastDateChanged).HasColumnName("last_date_changed");

                entity.Property(e => e.LegalStatus).HasColumnName("legal_status");

                entity.Property(e => e.LinkedOrganisationId).HasColumnName("linked_organisation_id");

                entity.Property(e => e.LinkedSdl).HasColumnName("linked_SDL");

                entity.Property(e => e.LinkedSdlNumber).HasColumnName("linked_sdl_number");

                entity.Property(e => e.LinkedSdlNumberOnSarsEmployerFile)
                    .HasColumnType("bit(1)")
                    .HasColumnName("linked_sdl_number_on_sars_employer_file");

                entity.Property(e => e.MagisterialDistrict).HasColumnName("magisterial_district");

                entity.Property(e => e.MainBusinessActivity).HasColumnName("main_business_activity");

                entity.Property(e => e.MainBusinessActivityTwo).HasColumnName("main_business_activity_two");

                entity.Property(e => e.MainSdl).HasColumnName("main_SDL");

                entity.Property(e => e.MainSdlNumberOnSarsEmployerFile)
                    .HasColumnType("bit(1)")
                    .HasColumnName("main_sdl_number_on_sars_employer_file");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NonLevyNumber).HasColumnName("non_levy_number");

                entity.Property(e => e.NqfLevel).HasColumnName("nqf_Level");

                entity.Property(e => e.OrgCatSize).HasColumnName("org_cat_size");

                entity.Property(e => e.OrgCategoryDesc).HasColumnName("org_category_desc");

                entity.Property(e => e.OrganisationId).HasColumnName("organisation_id");

                entity.Property(e => e.OrganisationNameLegal).HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade).HasColumnName("organisation_name_trade");

                entity.Property(e => e.OrganisationStatusEffectiveDate).HasColumnName("organisation_status_effective_date");

                entity.Property(e => e.PartnershipDesc).HasColumnName("partnership_desc");

                entity.Property(e => e.PayeNo).HasColumnName("paye_no");

                entity.Property(e => e.Payroll).HasColumnName("payroll");

                entity.Property(e => e.Phone).HasColumnName("phone");

                entity.Property(e => e.PossibleSdlNo).HasColumnName("possible_sdl_no");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.Province).HasColumnName("province");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.RegCiproNo).HasColumnName("reg_cipro_no");

                entity.Property(e => e.RegDate).HasColumnName("reg_date");

                entity.Property(e => e.Region).HasColumnName("region");

                entity.Property(e => e.RegistrationYear).HasColumnName("registration_year");

                entity.Property(e => e.SarsRegistrationNo).HasColumnName("sars_registration_no");

                entity.Property(e => e.SdlNumber).HasColumnName("sdl_number");

                entity.Property(e => e.SdlNumberOnSarsEmployerFile)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sdl_number_on_sars_employer_file");

                entity.Property(e => e.Sector).HasColumnName("sector");

                entity.Property(e => e.SetaStatus).HasColumnName("seta__status");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SicCode).HasColumnName("sic_code");

                entity.Property(e => e.SicCodeChamber).HasColumnName("sic_code_chamber");

                entity.Property(e => e.SicCodeDescription).HasColumnName("sic_code_description");

                entity.Property(e => e.SmsChamber).HasColumnName("sms_chamber");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SubSector).HasColumnName("sub_sector");

                entity.Property(e => e.Submitted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("submitted");

                entity.Property(e => e.TotalEmployment).HasColumnName("total_employment");

                entity.Property(e => e.UifNumber).HasColumnName("uif_number");

                entity.Property(e => e.UnionAgreement).HasColumnName("union_agreement");

                entity.Property(e => e.WebsiteUrl).HasColumnName("website_URL");

                entity.Property(e => e.YearsTrading).HasColumnName("years_trading");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.LegacyOrganisationSites)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKjhnpo2hvtwg1msnks8s8r7c3c");
            });

            modelBuilder.Entity<LegacyPerson>(entity =>
            {
                entity.ToTable("legacy_person");

                entity.HasIndex(e => e.AlternateIdNo, "personAlternativeId");

                entity.HasIndex(e => e.IdNo, "personId");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternateIdNo).HasColumnName("alternate_id_no");

                entity.Property(e => e.AlternateIdType)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id_type");

                entity.Property(e => e.AlternatePhoneNo)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_phone_no");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.CellNo)
                    .HasMaxLength(255)
                    .HasColumnName("cell_no");

                entity.Property(e => e.CitizenStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("citizen_status_desc");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CommunicatingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("communicating_rating_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_created");

                entity.Property(e => e.DateModified)
                    .HasMaxLength(255)
                    .HasColumnName("date_modified");

                entity.Property(e => e.DateOfBirth)
                    .HasMaxLength(255)
                    .HasColumnName("date_of_birth");

                entity.Property(e => e.DisabilityDesc)
                    .HasMaxLength(255)
                    .HasColumnName("disability_desc");

                entity.Property(e => e.DisabilityStatusOtherDescription)
                    .HasMaxLength(255)
                    .HasColumnName("disability_status_other_description");

                entity.Property(e => e.Email)
                    .HasMaxLength(255)
                    .HasColumnName("email");

                entity.Property(e => e.EquityDesc)
                    .HasMaxLength(255)
                    .HasColumnName("equity_desc");

                entity.Property(e => e.EthnicGroup)
                    .HasMaxLength(255)
                    .HasColumnName("ethnic_group");

                entity.Property(e => e.FaxNo)
                    .HasMaxLength(255)
                    .HasColumnName("fax_no");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.FullNamesMatchesOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("full_names_matches_on_home_affairs_data");

                entity.Property(e => e.GenderDesc)
                    .HasMaxLength(255)
                    .HasColumnName("gender_desc");

                entity.Property(e => e.GeographicAreaDesc)
                    .HasMaxLength(255)
                    .HasColumnName("geographic_area_desc");

                entity.Property(e => e.HearingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("hearing_rating_id");

                entity.Property(e => e.IdNo).HasColumnName("id_no");

                entity.Property(e => e.Initials)
                    .HasMaxLength(255)
                    .HasColumnName("initials");

                entity.Property(e => e.IsDisability)
                    .HasMaxLength(255)
                    .HasColumnName("is_disability");

                entity.Property(e => e.LangDesc)
                    .HasMaxLength(255)
                    .HasColumnName("lang_desc");

                entity.Property(e => e.LkpHighestEducationDesc)
                    .HasMaxLength(255)
                    .HasColumnName("lkp_highest_education_desc");

                entity.Property(e => e.MagisterialDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("magisterial_district");

                entity.Property(e => e.MaidenName)
                    .HasMaxLength(255)
                    .HasColumnName("maiden_name");

                entity.Property(e => e.MaritalStatus)
                    .HasMaxLength(255)
                    .HasColumnName("marital_status");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NationalityDesc)
                    .HasMaxLength(255)
                    .HasColumnName("nationality_desc");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.PersonId)
                    .HasMaxLength(255)
                    .HasColumnName("person_id");

                entity.Property(e => e.PersonStatusEffectiveDate)
                    .HasMaxLength(255)
                    .HasColumnName("person_status_effective_date");

                entity.Property(e => e.PhoneNoBusiness)
                    .HasMaxLength(255)
                    .HasColumnName("phone_no_business");

                entity.Property(e => e.PhoneNoHome)
                    .HasMaxLength(255)
                    .HasColumnName("phone_no_home");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.RememberingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("remembering_rating_id");

                entity.Property(e => e.SeeingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("seeing_rating_id");

                entity.Property(e => e.SelfcareRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("selfcare_rating_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SocioEcoStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("socio_ecoStatus_desc");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.TitleDesc)
                    .HasMaxLength(255)
                    .HasColumnName("title_desc");

                entity.Property(e => e.ValidAlternateIdNo)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_alternate_id_no");

                entity.Property(e => e.ValidIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_id_number");

                entity.Property(e => e.WalkingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("walking_rating_id");
            });

            modelBuilder.Entity<LegacyProviderAccreditation>(entity =>
            {
                entity.ToTable("legacy_provider_accreditation");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationNo)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_no");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.ApplicationRecDate)
                    .HasMaxLength(255)
                    .HasColumnName("application_rec_date");

                entity.Property(e => e.CheckCountByRefNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("checkCount_by_ref_number");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DuplicateAccNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("duplicate_acc_number");

                entity.Property(e => e.EtqaDecisionNo)
                    .HasMaxLength(255)
                    .HasColumnName("etqa_decision_no");

                entity.Property(e => e.IThisEtqa)
                    .HasMaxLength(255)
                    .HasColumnName("iThis_ETQA");

                entity.Property(e => e.LastDateChanged)
                    .HasMaxLength(255)
                    .HasColumnName("last_date_changed");

                entity.Property(e => e.LegacyOrganisationNonLevyPaying)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_non_levy_paying");

                entity.Property(e => e.LegacyOrganisationSites)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_sites");

                entity.Property(e => e.LegacyOrganisationSitesLinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("legacy_organisation_sites_linked_sdl");

                entity.Property(e => e.LegacyOrganisationSitesMainSdl)
                    .HasMaxLength(255)
                    .HasColumnName("legacy_organisation_sites_main_sdl");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_SDL");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.ProviderClass)
                    .HasMaxLength(255)
                    .HasColumnName("provider_class");

                entity.Property(e => e.ProviderId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_id");

                entity.Property(e => e.ProviderIntExt)
                    .HasMaxLength(255)
                    .HasColumnName("provider_int_ext");

                entity.Property(e => e.ProviderStatus)
                    .HasMaxLength(255)
                    .HasColumnName("provider_status");

                entity.Property(e => e.ProviderStatusEffectiveDate)
                    .HasMaxLength(255)
                    .HasColumnName("provider_status_effective_date");

                entity.Property(e => e.ProviderType)
                    .HasMaxLength(255)
                    .HasColumnName("provider_type");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SEtqa)
                    .HasMaxLength(255)
                    .HasColumnName("sETQA");

                entity.Property(e => e.SSaqaRefNo)
                    .HasMaxLength(255)
                    .HasColumnName("sSaqaRefNo");

                entity.Property(e => e.SdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_number");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.ValidStatus)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_status");
            });

            modelBuilder.Entity<LegacyProviderApplicationAlterationAudit>(entity =>
            {
                entity.ToTable("legacy_provider_application_alteration_audit");

                entity.HasIndex(e => e.LearnershipId, "FK1hisxu7dhrvhbp8vraw95dlpf");

                entity.HasIndex(e => e.SkillsProgramId, "FK4fxmlip0b4wikr0s7q500dvp3");

                entity.HasIndex(e => e.UserId, "FK6md6vl9q14r0jglgg70a3dm5l");

                entity.HasIndex(e => e.QualificationId, "FKc7l6b5dem8ybbxmek830mt9xa");

                entity.HasIndex(e => e.LegacyProviderAccreditationId, "FKdnk3tq8gc2gspo3qqdw65abxf");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKefgjtlyckyhpuat6038xsoj9m");

                entity.HasIndex(e => e.SkillsSetId, "FKlwlfwpkamt2hv955c3b56u084");

                entity.HasIndex(e => e.LegacyProviderApplicationAlterationAuditId, "FKqgbl494k9ybo1lvu9c5uoid45");

                entity.HasIndex(e => e.UnitStandardId, "FKsj9n40k37ttipscgwcilftvpm");

                entity.HasIndex(e => e.CompanyId, "FKt8omhcng9yucp78p81xy9v4ph");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.LegacyProviderAccreditationId).HasColumnName("legacy_provider_accreditation_id");

                entity.Property(e => e.LegacyProviderApplicationAlterationAuditId).HasColumnName("legacy_provider_application_alteration_audit_id");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.QualificationTypeSelection).HasColumnName("qualification_type_selection");

                entity.Property(e => e.ReasonForAlteration)
                    .HasMaxLength(255)
                    .HasColumnName("reason_for_alteration");

                entity.Property(e => e.RefNumber).HasColumnName("ref_number");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.LegacyProviderApplicationAlterationAudits)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKt8omhcng9yucp78p81xy9v4ph");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.LegacyProviderApplicationAlterationAudits)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FK1hisxu7dhrvhbp8vraw95dlpf");

                entity.HasOne(d => d.LegacyProviderAccreditation)
                    .WithMany(p => p.LegacyProviderApplicationAlterationAudits)
                    .HasForeignKey(d => d.LegacyProviderAccreditationId)
                    .HasConstraintName("FKdnk3tq8gc2gspo3qqdw65abxf");

                entity.HasOne(d => d.LegacyProviderApplicationAlterationAuditNavigation)
                    .WithMany(p => p.InverseLegacyProviderApplicationAlterationAuditNavigation)
                    .HasForeignKey(d => d.LegacyProviderApplicationAlterationAuditId)
                    .HasConstraintName("FKqgbl494k9ybo1lvu9c5uoid45");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyProviderApplicationAlterationAudits)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKc7l6b5dem8ybbxmek830mt9xa");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.LegacyProviderApplicationAlterationAudits)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FK4fxmlip0b4wikr0s7q500dvp3");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.LegacyProviderApplicationAlterationAudits)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FKlwlfwpkamt2hv955c3b56u084");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.LegacyProviderApplicationAlterationAudits)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKefgjtlyckyhpuat6038xsoj9m");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.LegacyProviderApplicationAlterationAudits)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKsj9n40k37ttipscgwcilftvpm");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.LegacyProviderApplicationAlterationAudits)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK6md6vl9q14r0jglgg70a3dm5l");
            });

            modelBuilder.Entity<LegacyProviderApplicationSiteAllocation>(entity =>
            {
                entity.ToTable("legacy_provider_application_site_allocation");

                entity.HasIndex(e => e.CompanyId, "FKbtehguus3j4l8iflro4ttol7f");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKd37vjo98tk1e002jvoqd9vblx");

                entity.HasIndex(e => e.CreateUserId, "FKg8bl26xjg1bj2nbj91upb0466");

                entity.HasIndex(e => e.TrainingSiteId, "FKph0jwxc7wienp8o8ntuddy5or");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationNumberAtTime)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_number_at_time");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.Reason).HasColumnName("reason");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.TrainingSiteId).HasColumnName("training_site_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.LegacyProviderApplicationSiteAllocations)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKbtehguus3j4l8iflro4ttol7f");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.LegacyProviderApplicationSiteAllocations)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKg8bl26xjg1bj2nbj91upb0466");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.LegacyProviderApplicationSiteAllocations)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKd37vjo98tk1e002jvoqd9vblx");

                entity.HasOne(d => d.TrainingSite)
                    .WithMany(p => p.LegacyProviderApplicationSiteAllocations)
                    .HasForeignKey(d => d.TrainingSiteId)
                    .HasConstraintName("FKph0jwxc7wienp8o8ntuddy5or");
            });

            modelBuilder.Entity<LegacyProviderLearnership>(entity =>
            {
                entity.ToTable("legacy_provider_learnership");

                entity.HasIndex(e => e.LearnershipId, "FK6iqtrc154hira5yn36yir2ayv");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationNo)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_no");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.ApplicationSubmited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_submited")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.EtqaSetaDesc)
                    .HasMaxLength(255)
                    .HasColumnName("etqa_seta_desc");

                entity.Property(e => e.LShipCode)
                    .HasMaxLength(255)
                    .HasColumnName("l_ship_code");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.LinkedAccreditationNumberOnProviderAccreditation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("linked_accreditation_number_on_provider_accreditation");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_SDL");

                entity.Property(e => e.MersetaSkillsProgrammeRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("merseta_skills_programme_reg_no");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ProviderClass)
                    .HasMaxLength(255)
                    .HasColumnName("provider_class");

                entity.Property(e => e.ProviderIntExt)
                    .HasMaxLength(255)
                    .HasColumnName("provider_int_ext");

                entity.Property(e => e.ProviderStatus)
                    .HasMaxLength(255)
                    .HasColumnName("provider_status");

                entity.Property(e => e.ProviderType)
                    .HasMaxLength(255)
                    .HasColumnName("provider_type");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SaqaUsId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_us_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SldNo)
                    .HasMaxLength(255)
                    .HasColumnName("sld_No");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.LegacyProviderLearnerships)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FK6iqtrc154hira5yn36yir2ayv");
            });

            modelBuilder.Entity<LegacyProviderQualification>(entity =>
            {
                entity.ToTable("legacy_provider_qualification");

                entity.HasIndex(e => e.QualificationId, "FK6m31snsaej9cnbhocvbbuvviu");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FKl9js6rgvo6ya3vq2x6hvtnrun");

                entity.HasIndex(e => e.CompanyId, "FKr742v4n8pyss3gprno23osc3a");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationNo)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_no");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.ApplicationSubmited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_submited")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyRegistrationNo)
                    .HasMaxLength(255)
                    .HasColumnName("company_registration_no");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.EtqaSetaDesc)
                    .HasMaxLength(255)
                    .HasColumnName("etqa_seta_desc");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.LinkedAccreditationNumberOnProviderAccreditation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("linked_accreditation_number_on_provider_accreditation");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_SDL");

                entity.Property(e => e.LinkedSdlNumberOnSarsEmployerFile)
                    .HasColumnType("bit(1)")
                    .HasColumnName("linked_sdl_number_on_sars_employer_file");

                entity.Property(e => e.MersetaSkillsProgrammeRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("merseta_skills_programme_reg_no");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.ProviderClass)
                    .HasMaxLength(255)
                    .HasColumnName("provider_class");

                entity.Property(e => e.ProviderIntExt)
                    .HasMaxLength(255)
                    .HasColumnName("provider_int_ext");

                entity.Property(e => e.ProviderStatus)
                    .HasMaxLength(255)
                    .HasColumnName("provider_status");

                entity.Property(e => e.ProviderType)
                    .HasMaxLength(255)
                    .HasColumnName("provider_type");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualCode)
                    .HasMaxLength(255)
                    .HasColumnName("qual_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SaqaUsId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_us_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SicCode)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code");

                entity.Property(e => e.SicCodeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code_description");

                entity.Property(e => e.SldNo)
                    .HasMaxLength(255)
                    .HasColumnName("sld_No");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.LegacyProviderQualifications)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKr742v4n8pyss3gprno23osc3a");

                entity.HasOne(d => d.LegacyOrganisationSites)
                    .WithMany(p => p.LegacyProviderQualifications)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FKl9js6rgvo6ya3vq2x6hvtnrun");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyProviderQualifications)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK6m31snsaej9cnbhocvbbuvviu");
            });

            modelBuilder.Entity<LegacyProviderSkillsProgramme>(entity =>
            {
                entity.ToTable("Legacy_provider_skills_programme");

                entity.HasIndex(e => e.SkillsSetId, "FK5kidk8op5c5i90ewk0b75t50c");

                entity.HasIndex(e => e.SkillsProgramId, "FKcengcaveejc5tmkptd9dtxy");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationNo)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_no");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.ApplicationSubmited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_submited")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.EtqaSetaDesc)
                    .HasMaxLength(255)
                    .HasColumnName("etqa_seta_desc");

                entity.Property(e => e.LinkedAccreditationNumberOnProviderAccreditation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("linked_accreditation_number_on_provider_accreditation");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_SDL");

                entity.Property(e => e.MersetaSkillsProgrammeRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("merseta_skills_programme_reg_no");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.ProviderClass)
                    .HasMaxLength(255)
                    .HasColumnName("provider_class");

                entity.Property(e => e.ProviderIntExt)
                    .HasMaxLength(255)
                    .HasColumnName("provider_int_ext");

                entity.Property(e => e.ProviderStatus)
                    .HasMaxLength(255)
                    .HasColumnName("provider_status");

                entity.Property(e => e.ProviderType)
                    .HasMaxLength(255)
                    .HasColumnName("provider_type");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SProgrammeDesc)
                    .HasMaxLength(255)
                    .HasColumnName("s_programme_desc");

                entity.Property(e => e.SaqaUsId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_us_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skillsProgram_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.SkillsTypeEnum).HasColumnName("skills_type_enum");

                entity.Property(e => e.SldNo)
                    .HasMaxLength(255)
                    .HasColumnName("sld_No");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.LegacyProviderSkillsProgrammes)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKcengcaveejc5tmkptd9dtxy");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.LegacyProviderSkillsProgrammes)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FK5kidk8op5c5i90ewk0b75t50c");
            });

            modelBuilder.Entity<LegacyProviderTrade>(entity =>
            {
                entity.ToTable("legacy_provider_trade");

                entity.HasIndex(e => e.QualificationId, "FKrocw37mv8ud9shxrgrgd2to9g");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationNo)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_no");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.EtqaSetaDesc)
                    .HasMaxLength(255)
                    .HasColumnName("etqa_seta_desc");

                entity.Property(e => e.LinkedAccreditationNumberOnProviderAccreditation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("linked_accreditation_number_on_provider_accreditation");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_SDL");

                entity.Property(e => e.MersetaSkillsProgrammeRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("merseta_skills_programme_reg_no");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.ProviderClass)
                    .HasMaxLength(255)
                    .HasColumnName("provider_class");

                entity.Property(e => e.ProviderIntExt)
                    .HasMaxLength(255)
                    .HasColumnName("provider_int_ext");

                entity.Property(e => e.ProviderStatus)
                    .HasMaxLength(255)
                    .HasColumnName("provider_status");

                entity.Property(e => e.ProviderType)
                    .HasMaxLength(255)
                    .HasColumnName("provider_type");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationCode)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SaqaUsId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_us_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SldNo)
                    .HasMaxLength(255)
                    .HasColumnName("sld_No");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.TradeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("trade_description");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyProviderTrades)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKrocw37mv8ud9shxrgrgd2to9g");
            });

            modelBuilder.Entity<LegacyProviderUnitStandard>(entity =>
            {
                entity.ToTable("legacy_provider_unit_standard");

                entity.HasIndex(e => e.UnitStandardId, "FKs1o6qc4evvpe28hi36k3bge8e");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_end_date");

                entity.Property(e => e.AccreditationNo)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_no");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.ApplicationSubmited)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_submited")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.EtqaSetaDesc)
                    .HasMaxLength(255)
                    .HasColumnName("etqa_seta_desc");

                entity.Property(e => e.LinkedAccreditationNumberOnProviderAccreditation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("linked_accreditation_number_on_provider_accreditation");

                entity.Property(e => e.LinkedSdl)
                    .HasMaxLength(255)
                    .HasColumnName("linked_SDL");

                entity.Property(e => e.MersetaSkillsProgrammeRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("merseta_skills_programme_reg_no");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.ProviderClass)
                    .HasMaxLength(255)
                    .HasColumnName("provider_class");

                entity.Property(e => e.ProviderIntExt)
                    .HasMaxLength(255)
                    .HasColumnName("provider_int_ext");

                entity.Property(e => e.ProviderStatus)
                    .HasMaxLength(255)
                    .HasColumnName("provider_status");

                entity.Property(e => e.ProviderType)
                    .HasMaxLength(255)
                    .HasColumnName("provider_type");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SaqaUsId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_us_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SldNo)
                    .HasMaxLength(255)
                    .HasColumnName("sld_No");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.UnitStandardExpired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("unitStandardExpired");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UnitStdDesc)
                    .HasMaxLength(255)
                    .HasColumnName("unit_std_desc");

                entity.Property(e => e.ValidiationsProcessed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("validiations_processed")
                    .HasDefaultValueSql("b'0'");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.LegacyProviderUnitStandards)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKs1o6qc4evvpe28hi36k3bge8e");
            });

            modelBuilder.Entity<LegacyReporting>(entity =>
            {
                entity.ToTable("legacy_reporting");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ForClass)
                    .HasMaxLength(255)
                    .HasColumnName("for_class");

                entity.Property(e => e.MapKey)
                    .HasMaxLength(255)
                    .HasColumnName("map_key");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("name");

                entity.Property(e => e.Query)
                    .HasMaxLength(255)
                    .HasColumnName("query");

                entity.Property(e => e.ReturnType)
                    .HasMaxLength(255)
                    .HasColumnName("return_type");

                entity.Property(e => e.RunAsNative)
                    .HasColumnType("bit(1)")
                    .HasColumnName("run_as_native");

                entity.Property(e => e.SingleResult)
                    .HasColumnType("bit(1)")
                    .HasColumnName("single_result");
            });

            modelBuilder.Entity<LegacyReportingParam>(entity =>
            {
                entity.ToTable("legacy_reporting_params");

                entity.HasIndex(e => e.LegacyReportingId, "FK3y0ul9sjns3erwl47moaqx23");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.FieldName)
                    .HasMaxLength(255)
                    .HasColumnName("field_name");

                entity.Property(e => e.LegacyReportingId).HasColumnName("legacy_reporting_id");

                entity.Property(e => e.ParamName)
                    .HasMaxLength(255)
                    .HasColumnName("param_name");

                entity.HasOne(d => d.LegacyReporting)
                    .WithMany(p => p.LegacyReportingParams)
                    .HasForeignKey(d => d.LegacyReportingId)
                    .HasConstraintName("FK3y0ul9sjns3erwl47moaqx23");
            });

            modelBuilder.Entity<LegacySectTwentyEight>(entity =>
            {
                entity.ToTable("legacy_sect_twenty_eight");

                entity.HasIndex(e => e.EmployerId, "FK3yemy9cltow78sjoew0kp0cth");

                entity.HasIndex(e => e.CompanyId, "FKgjqxrjfrno6xafmrpjm8khge8");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FKhqyofrm05mrx05uuso9535fh5");

                entity.HasIndex(e => e.OfoCodesId, "FKmjmjvmgf8weciuvcxvp3m7e03");

                entity.HasIndex(e => e.QualificationId, "FKqj0vcdbtgr4yic1dj8dqdygx2");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternateIdNo)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id_no");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.ApprenticeshipEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("apprenticeship_end_date");

                entity.Property(e => e.ApprenticeshipId)
                    .HasMaxLength(255)
                    .HasColumnName("apprenticeship_id");

                entity.Property(e => e.ApprenticeshipStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("apprenticeship_start_date");

                entity.Property(e => e.ApprenticeshipStatusEffectiveDate)
                    .HasMaxLength(255)
                    .HasColumnName("apprenticeship_status_effective_date");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(255)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.ChamberCode)
                    .HasMaxLength(255)
                    .HasColumnName("chamber_code");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreatedCompanyLearner)
                    .HasColumnType("bit(1)")
                    .HasColumnName("created_company_learner");

                entity.Property(e => e.CurrentPreviousEmp)
                    .HasMaxLength(255)
                    .HasColumnName("current_previous_emp");

                entity.Property(e => e.DateApplicationSent).HasMaxLength(255);

                entity.Property(e => e.DateCertificateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_certificate_created");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_created");

                entity.Property(e => e.DateLastChanged)
                    .HasMaxLength(255)
                    .HasColumnName("date_last_changed");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("description");

                entity.Property(e => e.DgTag)
                    .HasMaxLength(255)
                    .HasColumnName("dg_tag");

                entity.Property(e => e.EmployerId).HasColumnName("employer_id");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.FundingStatus)
                    .HasMaxLength(255)
                    .HasColumnName("funding_status");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.LearnerStatusEffectiveDate)
                    .HasMaxLength(255)
                    .HasColumnName("learner_status_effective_date");

                entity.Property(e => e.LegacyOrganisationSites)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_sites");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.MagisterialDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("magisterial_district");

                entity.Property(e => e.MinTraining)
                    .HasMaxLength(255)
                    .HasColumnName("min_training");

                entity.Property(e => e.MunicipalityName)
                    .HasMaxLength(255)
                    .HasColumnName("municipality_name");

                entity.Property(e => e.NTwo)
                    .HasMaxLength(255)
                    .HasColumnName("n_two");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OfoDescription)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_description");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Region)
                    .HasMaxLength(255)
                    .HasColumnName("region");

                entity.Property(e => e.SaqaCode)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_code");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(255)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SetaRegion)
                    .HasMaxLength(255)
                    .HasColumnName("seta_region");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SocioEcoStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("socio_eco_status_desc");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.TestDateFrom)
                    .HasMaxLength(255)
                    .HasColumnName("test_date_from");

                entity.Property(e => e.TestDateTo)
                    .HasMaxLength(255)
                    .HasColumnName("test_date_to");

                entity.Property(e => e.TradeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("trade_description");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.Property(e => e.WaLegalName)
                    .HasMaxLength(255)
                    .HasColumnName("wa_legal_name");

                entity.Property(e => e.Wasdl)
                    .HasMaxLength(255)
                    .HasColumnName("wasdl");

                entity.Property(e => e.WorkShopNo)
                    .HasMaxLength(255)
                    .HasColumnName("work_shop_no");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.LegacySectTwentyEightCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKgjqxrjfrno6xafmrpjm8khge8");

                entity.HasOne(d => d.Employer)
                    .WithMany(p => p.LegacySectTwentyEightEmployers)
                    .HasForeignKey(d => d.EmployerId)
                    .HasConstraintName("FK3yemy9cltow78sjoew0kp0cth");

                entity.HasOne(d => d.LegacyOrganisationSitesNavigation)
                    .WithMany(p => p.LegacySectTwentyEights)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FKhqyofrm05mrx05uuso9535fh5");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.LegacySectTwentyEights)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKmjmjvmgf8weciuvcxvp3m7e03");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacySectTwentyEights)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKqj0vcdbtgr4yic1dj8dqdygx2");
            });

            modelBuilder.Entity<LegacySectionTwentyEightTradeTest>(entity =>
            {
                entity.ToTable("legacy_section_twenty_eight_trade_test");

                entity.HasIndex(e => e.OfoCodesId, "FKhsuy0qg2ytyplrcfjs8q94ex5");

                entity.HasIndex(e => e.QualificationId, "FKqvwbtre54b0xt4ghhe8ffjbh4");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(255)
                    .HasColumnName("contract_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateApplicationReceived)
                    .HasMaxLength(255)
                    .HasColumnName("date_application_received");

                entity.Property(e => e.DateApplicationSent).HasMaxLength(255);

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_created");

                entity.Property(e => e.DateLastChanged)
                    .HasMaxLength(255)
                    .HasColumnName("date_last_changed");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.LegacyOrganisationSites)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_sites");

                entity.Property(e => e.MinTraining)
                    .HasMaxLength(255)
                    .HasColumnName("min_training");

                entity.Property(e => e.N2Exempt)
                    .HasMaxLength(255)
                    .HasColumnName("n2_exempt");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NumberOfTestAttempts)
                    .HasMaxLength(255)
                    .HasColumnName("number_of_test_attempts");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OfoDescription)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_description");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SaqaCode)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_code");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(255)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("status");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.TestDateFrom)
                    .HasMaxLength(255)
                    .HasColumnName("test_date_from");

                entity.Property(e => e.TestDateTo)
                    .HasMaxLength(255)
                    .HasColumnName("test_date_to");

                entity.Property(e => e.TradeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("trade_description");

                entity.Property(e => e.TradeTestId)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_id");

                entity.Property(e => e.TradeTestLevel).HasMaxLength(255);

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.Property(e => e.WorkShopNo)
                    .HasMaxLength(255)
                    .HasColumnName("work_shop_no");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.LegacySectionTwentyEightTradeTests)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKhsuy0qg2ytyplrcfjs8q94ex5");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacySectionTwentyEightTradeTests)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKqvwbtre54b0xt4ghhe8ffjbh4");
            });

            modelBuilder.Entity<LegacySkillsProgramme>(entity =>
            {
                entity.ToTable("legacy_skills_programme");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FK2bigiu05ana2qy6cnbygcb0rl");

                entity.HasIndex(e => e.QualificationId, "FK82u9aah7qjd36lf191answvtj");

                entity.HasIndex(e => e.SkillsSetId, "FK94ofm5fsi02xb609hfvtj139w");

                entity.HasIndex(e => e.SkillsProgramId, "FKmes9th1nwmpdfdxhn902kyd94");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKmupsr5tclxj8hh2y8thpt6ybx");

                entity.HasIndex(e => e.EmployerId, "FKosk4iebijell7uqo1vbxyfdr8");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationNumber)
                    .HasMaxLength(100)
                    .HasColumnName("accreditation_number");

                entity.Property(e => e.AlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreatedCompanyLearner)
                    .HasColumnType("bit(1)")
                    .HasColumnName("created_company_learner");

                entity.Property(e => e.DtEffectiveDate)
                    .HasMaxLength(255)
                    .HasColumnName("dt_effective_date");

                entity.Property(e => e.DtEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("dt_end_date");

                entity.Property(e => e.DtLastDateChanged)
                    .HasMaxLength(255)
                    .HasColumnName("dt_last_date_changed");

                entity.Property(e => e.DtStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("dt_start_date");

                entity.Property(e => e.EmployerId).HasColumnName("employer_id");

                entity.Property(e => e.EmployerSdl)
                    .HasMaxLength(255)
                    .HasColumnName("employer_sdl");

                entity.Property(e => e.EmployerSdlNumberOnSarsEmployerFile)
                    .HasColumnType("bit(1)")
                    .HasColumnName("employer_sdl_number_on_sars_employer_file");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.LearnerLpStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("learner_lp_status_desc");

                entity.Property(e => e.LegacyOrganisationSites)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_sites");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.LegacyProviderExists)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_provider_exists");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.PkiLearnerLpId)
                    .HasMaxLength(255)
                    .HasColumnName("pki_learner_lp_id");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.ProjectType)
                    .HasMaxLength(255)
                    .HasColumnName("project_type");

                entity.Property(e => e.ProviderLegalName)
                    .HasMaxLength(255)
                    .HasColumnName("provider_legal_name");

                entity.Property(e => e.ProviderSdl)
                    .HasMaxLength(255)
                    .HasColumnName("provider_sdl");

                entity.Property(e => e.ProviderTradeName)
                    .HasMaxLength(255)
                    .HasColumnName("provider_trade_name");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SProgrammeCode)
                    .HasMaxLength(255)
                    .HasColumnName("s_programme_code");

                entity.Property(e => e.SProgrammeDesc)
                    .HasMaxLength(255)
                    .HasColumnName("s_programme_desc");

                entity.Property(e => e.SRefNo)
                    .HasMaxLength(255)
                    .HasColumnName("s_ref_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SocioEcoStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("socio_eco_status_desc");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.ValidIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_id_number");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Employer)
                    .WithMany(p => p.LegacySkillsProgrammes)
                    .HasForeignKey(d => d.EmployerId)
                    .HasConstraintName("FKosk4iebijell7uqo1vbxyfdr8");

                entity.HasOne(d => d.LegacyOrganisationSitesNavigation)
                    .WithMany(p => p.LegacySkillsProgrammes)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FK2bigiu05ana2qy6cnbygcb0rl");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacySkillsProgrammes)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK82u9aah7qjd36lf191answvtj");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.LegacySkillsProgrammes)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKmes9th1nwmpdfdxhn902kyd94");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.LegacySkillsProgrammes)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FK94ofm5fsi02xb609hfvtj139w");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.LegacySkillsProgrammes)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKmupsr5tclxj8hh2y8thpt6ybx");
            });

            modelBuilder.Entity<LegacySkillsProgrammeAssessment>(entity =>
            {
                entity.ToTable("legacy_skills_programme_assessments");

                entity.HasIndex(e => e.LegacyOrganisationSitesId, "FKcde8c1gxjms0wd34auhce5g15");

                entity.HasIndex(e => e.QualificationId, "FKfaomf9kqxx32k6p6u5ndjrwhu");

                entity.HasIndex(e => e.SkillsProgramId, "FKq42cgoq5agyju098131bet85a");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AgreementUnitStdStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_unit_std_status_desc");

                entity.Property(e => e.AlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id");

                entity.Property(e => e.AppearsAccreditationData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_accreditation_data");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.AssessorFirstName)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_first_name");

                entity.Property(e => e.AssessorId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_id");

                entity.Property(e => e.AssessorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_no");

                entity.Property(e => e.AssessorSurname)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_surname");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DtAssessment)
                    .HasMaxLength(255)
                    .HasColumnName("dt_assessment");

                entity.Property(e => e.DtEffectiveDate)
                    .HasMaxLength(255)
                    .HasColumnName("dt_effective_date");

                entity.Property(e => e.DtEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("dt_end_date");

                entity.Property(e => e.DtLastDateChanged)
                    .HasMaxLength(255)
                    .HasColumnName("dt_last_date_changed");

                entity.Property(e => e.DtStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("dt_start_date");

                entity.Property(e => e.EmployerSdl)
                    .HasMaxLength(255)
                    .HasColumnName("employer_sdl");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.HologramNumber)
                    .HasMaxLength(255)
                    .HasColumnName("hologram_number");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.LearnerLpStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("learner_lp_status_desc");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.PkiLearnerAssessmentId)
                    .HasMaxLength(255)
                    .HasColumnName("pki_learner_assessment_id");

                entity.Property(e => e.PkiLearnerLpId)
                    .HasMaxLength(255)
                    .HasColumnName("pki_learner_lp_id");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.ProjectType)
                    .HasMaxLength(255)
                    .HasColumnName("project_type");

                entity.Property(e => e.ProviderLegalName)
                    .HasMaxLength(255)
                    .HasColumnName("provider_legal_name");

                entity.Property(e => e.ProviderSdl)
                    .HasMaxLength(255)
                    .HasColumnName("provider_sdl");

                entity.Property(e => e.ProviderTradeName)
                    .HasMaxLength(255)
                    .HasColumnName("provider_trade_name");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SProgrammeCode)
                    .HasMaxLength(255)
                    .HasColumnName("s_programme_code");

                entity.Property(e => e.SProgrammeDesc)
                    .HasMaxLength(255)
                    .HasColumnName("s_programme_desc");

                entity.Property(e => e.SRefNo)
                    .HasMaxLength(255)
                    .HasColumnName("s_ref_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SocioEcoStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("socio_eco_status_desc");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.UnitStdCode)
                    .HasMaxLength(255)
                    .HasColumnName("unit_std_code");

                entity.Property(e => e.UnitStdDesc)
                    .HasMaxLength(255)
                    .HasColumnName("unit_std_desc");

                entity.Property(e => e.ValidIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_id_number");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.LegacyOrganisationSites)
                    .WithMany(p => p.LegacySkillsProgrammeAssessments)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FKcde8c1gxjms0wd34auhce5g15");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacySkillsProgrammeAssessments)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKfaomf9kqxx32k6p6u5ndjrwhu");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.LegacySkillsProgrammeAssessments)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKq42cgoq5agyju098131bet85a");
            });

            modelBuilder.Entity<LegacyTvet>(entity =>
            {
                entity.ToTable("legacy_tvet");

                entity.HasIndex(e => e.CompanyId, "FKd0dy01uxm38oxhoxt5g2yw979");

                entity.HasIndex(e => e.OfoCodesId, "FKe0hn4l6lw4f3hc9rt3edbq0si");

                entity.HasIndex(e => e.QualificationId, "FKf02e5meto59p4mj5vn44d7s1p");

                entity.HasIndex(e => e.EmployerId, "FKg0ay685nt2lmmusq1ujm01ja7");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Amount)
                    .HasMaxLength(255)
                    .HasColumnName("amount");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.ApplicationDate)
                    .HasMaxLength(255)
                    .HasColumnName("application_date");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompletionDate)
                    .HasMaxLength(255)
                    .HasColumnName("completion_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreatedCompanyLearner)
                    .HasColumnType("bit(1)")
                    .HasColumnName("created_company_learner");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(255)
                    .HasColumnName("date_created");

                entity.Property(e => e.DateUpdated)
                    .HasMaxLength(255)
                    .HasColumnName("date_updated");

                entity.Property(e => e.DgTag)
                    .HasMaxLength(255)
                    .HasColumnName("dg_tag");

                entity.Property(e => e.EmployerId).HasColumnName("employer_id");

                entity.Property(e => e.EmployerSdl)
                    .HasMaxLength(255)
                    .HasColumnName("employer_sdl");

                entity.Property(e => e.EndDate)
                    .HasMaxLength(255)
                    .HasColumnName("end_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.FundingStatus)
                    .HasMaxLength(255)
                    .HasColumnName("funding_status");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.IdTwo)
                    .HasMaxLength(255)
                    .HasColumnName("id_two");

                entity.Property(e => e.LearningArea)
                    .HasMaxLength(255)
                    .HasColumnName("learning_area");

                entity.Property(e => e.LearningAreaOther)
                    .HasMaxLength(255)
                    .HasColumnName("learning_area_other");

                entity.Property(e => e.LegacyOrganisationSites)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_sites");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.OtherProvider)
                    .HasMaxLength(255)
                    .HasColumnName("other_provider");

                entity.Property(e => e.PartnershipSdl)
                    .HasMaxLength(255)
                    .HasColumnName("partnership_sdl");

                entity.Property(e => e.PartnetLegalName)
                    .HasMaxLength(255)
                    .HasColumnName("partnet_legal_name");

                entity.Property(e => e.ProgrammeType)
                    .HasMaxLength(255)
                    .HasColumnName("programme_type");

                entity.Property(e => e.Provider)
                    .HasMaxLength(255)
                    .HasColumnName("provider");

                entity.Property(e => e.ProviderType)
                    .HasMaxLength(255)
                    .HasColumnName("provider_type");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RegistrationDate)
                    .HasMaxLength(255)
                    .HasColumnName("registration_date");

                entity.Property(e => e.SaqaId)
                    .HasMaxLength(255)
                    .HasColumnName("saqa_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SkillPriority)
                    .HasMaxLength(255)
                    .HasColumnName("skill_priority");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SspNeedsId)
                    .HasMaxLength(255)
                    .HasColumnName("ssp_needs_id");

                entity.Property(e => e.StartDate)
                    .HasMaxLength(255)
                    .HasColumnName("start_date");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("status");

                entity.Property(e => e.SurName)
                    .HasMaxLength(255)
                    .HasColumnName("sur_name");

                entity.Property(e => e.TvetQualification)
                    .HasMaxLength(255)
                    .HasColumnName("tvet_qualification");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.LegacyTvetCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKd0dy01uxm38oxhoxt5g2yw979");

                entity.HasOne(d => d.Employer)
                    .WithMany(p => p.LegacyTvetEmployers)
                    .HasForeignKey(d => d.EmployerId)
                    .HasConstraintName("FKg0ay685nt2lmmusq1ujm01ja7");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.LegacyTvets)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKe0hn4l6lw4f3hc9rt3edbq0si");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyTvets)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKf02e5meto59p4mj5vn44d7s1p");
            });

            modelBuilder.Entity<LegacyUnitStandard>(entity =>
            {
                entity.ToTable("legacy_unit_standard");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FK5oxi6e3y49p3m9ccyo8y2xg6s");

                entity.HasIndex(e => e.EmployerId, "FK99i1k77ks0ltqovtpch66bo8j");

                entity.HasIndex(e => e.QualificationId, "FKjk692vb8ra38uksogqpwuc8tr");

                entity.HasIndex(e => e.UnitStandardId, "FKn7ifon84nnhbtcgvlpl55ob4t");

                entity.HasIndex(e => e.ProviderSdl, "providerSdl");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationNumber)
                    .HasMaxLength(100)
                    .HasColumnName("accreditation_number");

                entity.Property(e => e.AlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("alternate_id");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreatedCompanyLearner)
                    .HasColumnType("bit(1)")
                    .HasColumnName("created_company_learner");

                entity.Property(e => e.DtEffectiveDate)
                    .HasMaxLength(255)
                    .HasColumnName("dt_effective_date");

                entity.Property(e => e.DtEndDate)
                    .HasMaxLength(255)
                    .HasColumnName("dt_end_date");

                entity.Property(e => e.DtLastDateChanged)
                    .HasMaxLength(255)
                    .HasColumnName("dt_last_date_changed");

                entity.Property(e => e.DtStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("dt_start_date");

                entity.Property(e => e.EmployerId).HasColumnName("employer_id");

                entity.Property(e => e.EmployerSdl)
                    .HasMaxLength(255)
                    .HasColumnName("employer_sdl");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.ILearnerUnitStdId)
                    .HasMaxLength(255)
                    .HasColumnName("i_learner_unit_std_id");

                entity.Property(e => e.ISponsorshipId)
                    .HasMaxLength(255)
                    .HasColumnName("i_sponsorship_id");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.LearnerUsStatusDesc).HasColumnName("learner_us_status_desc");

                entity.Property(e => e.LegacyOrganisationSites)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_organisation_sites");

                entity.Property(e => e.LegacyProviderAccreditationFlatId).HasColumnName("legacy_provider_accreditation_flat_id");

                entity.Property(e => e.LegacyProviderExists)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_provider_exists");

                entity.Property(e => e.LegacyProviderUnitStandardFlatId).HasColumnName("legacy_provider_unit_standard_flat_id");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganisationNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_trade");

                entity.Property(e => e.ProjectType)
                    .HasMaxLength(255)
                    .HasColumnName("project_type");

                entity.Property(e => e.ProviderLegalName)
                    .HasMaxLength(255)
                    .HasColumnName("provider_legal_name");

                entity.Property(e => e.ProviderSdl).HasColumnName("provider_sdl");

                entity.Property(e => e.ProviderTradeName)
                    .HasMaxLength(255)
                    .HasColumnName("provider_trade_name");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SocioEcoStatusDesc).HasColumnName("socio_eco_status_desc");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UnitStdCode)
                    .HasMaxLength(255)
                    .HasColumnName("unit_std_code");

                entity.Property(e => e.UnitStdDesc).HasColumnName("unit_std_desc");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.Employer)
                    .WithMany(p => p.LegacyUnitStandards)
                    .HasForeignKey(d => d.EmployerId)
                    .HasConstraintName("FK99i1k77ks0ltqovtpch66bo8j");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.LegacyUnitStandards)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKjk692vb8ra38uksogqpwuc8tr");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.LegacyUnitStandards)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FK5oxi6e3y49p3m9ccyo8y2xg6s");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.LegacyUnitStandards)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKn7ifon84nnhbtcgvlpl55ob4t");
            });

            modelBuilder.Entity<LegacyUnitStandardAssessment>(entity =>
            {
                entity.ToTable("legacy_unit_standard_assessment");

                entity.HasIndex(e => e.UnitStandardId, "FKfqqawfutnwa875j27792w0y1o");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AgreementUnitStdStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("agreement_unit_std_status_desc");

                entity.Property(e => e.AppearsAccreditationData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_accreditation_data");

                entity.Property(e => e.AppearsOnHomeAffairsData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appears_on_home_affairs_data");

                entity.Property(e => e.AssessorFirstName)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_first_name");

                entity.Property(e => e.AssessorId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_id");

                entity.Property(e => e.AssessorRegNo)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_reg_no");

                entity.Property(e => e.AssessorSurname)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_surname");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DtAssessment)
                    .HasMaxLength(255)
                    .HasColumnName("dt_assessment");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.HologramNumber)
                    .HasMaxLength(255)
                    .HasColumnName("hologram_number");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(255)
                    .HasColumnName("id_no");

                entity.Property(e => e.LearnerUsStatusDesc)
                    .HasMaxLength(255)
                    .HasColumnName("learner_us_statusDesc");

                entity.Property(e => e.LegacyUnitStandardFlatId).HasColumnName("legacy_unit_standard_flat_id");

                entity.Property(e => e.MiddleNames)
                    .HasMaxLength(255)
                    .HasColumnName("middle_names");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.PkiLearnerAssessmentId)
                    .HasMaxLength(255)
                    .HasColumnName("pki_learner_assessment_id");

                entity.Property(e => e.Processed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("processed");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SRefNo)
                    .HasMaxLength(255)
                    .HasColumnName("s_ref_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Surname)
                    .HasMaxLength(255)
                    .HasColumnName("surname");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UnitStdCode)
                    .HasMaxLength(255)
                    .HasColumnName("unit_std_code");

                entity.Property(e => e.UnitStdDesc)
                    .HasMaxLength(255)
                    .HasColumnName("unit_std_desc");

                entity.Property(e => e.ValidRsaIdNumber)
                    .HasColumnType("bit(1)")
                    .HasColumnName("valid_rsa_id_number");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.LegacyUnitStandardAssessments)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKfqqawfutnwa875j27792w0y1o");
            });

            modelBuilder.Entity<LevyDetailMgPaymentsAlterAudit>(entity =>
            {
                entity.ToTable("levy_detail_mg_payments_alter_audit");

                entity.HasIndex(e => e.SarsFileId, "FK7ow7n8uw3eli9vae4wjc4eut0");

                entity.HasIndex(e => e.UserId, "FKq6v3g4e027w8y4ggpbjof1quf");

                entity.HasIndex(e => e.SarsLevyDetailsId, "FKt7rwb45h3htg7gladhmlomqik");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.MgCanProcess)
                    .HasColumnType("bit(1)")
                    .HasColumnName("mg_can_process");

                entity.Property(e => e.SarsFileId).HasColumnName("sars_file_id");

                entity.Property(e => e.SarsLevyDetailsId).HasColumnName("sars_levy_details_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.SarsFile)
                    .WithMany(p => p.LevyDetailMgPaymentsAlterAudits)
                    .HasForeignKey(d => d.SarsFileId)
                    .HasConstraintName("FK7ow7n8uw3eli9vae4wjc4eut0");

                entity.HasOne(d => d.SarsLevyDetails)
                    .WithMany(p => p.LevyDetailMgPaymentsAlterAudits)
                    .HasForeignKey(d => d.SarsLevyDetailsId)
                    .HasConstraintName("FKt7rwb45h3htg7gladhmlomqik");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.LevyDetailMgPaymentsAlterAudits)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKq6v3g4e027w8y4ggpbjof1quf");
            });

            modelBuilder.Entity<LevyIncomeSummary>(entity =>
            {
                entity.ToTable("levy_income_summary");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Auto).HasColumnName("auto");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.Metal).HasColumnName("metal");

                entity.Property(e => e.Motor).HasColumnName("motor");

                entity.Property(e => e.NewTyre).HasColumnName("newTyre");

                entity.Property(e => e.Plastic).HasColumnName("plastic");

                entity.Property(e => e.ReportProperty).HasColumnName("report_property");

                entity.Property(e => e.Total).HasColumnName("total");

                entity.Property(e => e.Unknown).HasColumnName("unknown");
            });

            modelBuilder.Entity<MailLog>(entity =>
            {
                entity.ToTable("mail_log");

                entity.HasIndex(e => e.UserId, "FKec5tof2vew9s64r4bb38x7d5d");

                entity.HasIndex(e => e.BugReportId, "FKnvrm23pl91t1xcghlshjipoiw");

                entity.HasIndex(e => e.Email, "email");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Body).HasColumnName("body");

                entity.Property(e => e.BugReportId).HasColumnName("bug_report_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Email)
                    .HasMaxLength(300)
                    .HasColumnName("email");

                entity.Property(e => e.ErrorMsg).HasColumnName("error_msg");

                entity.Property(e => e.Failed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("failed");

                entity.Property(e => e.SendDate)
                    .HasColumnType("datetime")
                    .HasColumnName("send_date");

                entity.Property(e => e.Subject)
                    .HasMaxLength(500)
                    .HasColumnName("subject");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.BugReport)
                    .WithMany(p => p.MailLogs)
                    .HasForeignKey(d => d.BugReportId)
                    .HasConstraintName("FKnvrm23pl91t1xcghlshjipoiw");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.MailLogs)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKec5tof2vew9s64r4bb38x7d5d");
            });

            modelBuilder.Entity<MailTemplate>(entity =>
            {
                entity.ToTable("mail_templates");

                entity.HasIndex(e => e.MailCode, "UK_22r89aogx7l8gcsw834m5c4f8")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.MailCode).HasColumnName("mail_code");

                entity.Property(e => e.SubjectText)
                    .HasMaxLength(500)
                    .HasColumnName("subject_text");

                entity.Property(e => e.TemplateText).HasColumnName("template_text");
            });

            modelBuilder.Entity<MailingList>(entity =>
            {
                entity.ToTable("mailing_list");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(100)
                    .HasColumnName("email_address");

                entity.Property(e => e.MailingListTypeEnum).HasColumnName("mailing_list_type_enum");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<MandatoryGrant>(entity =>
            {
                entity.ToTable("mandatory_grant");

                entity.HasIndex(e => e.SkillsSetId, "FK1y05139nh3j4352s3j7wkgmm8");

                entity.HasIndex(e => e.TrainingId, "FK38o6agwo38q219y5mqcc7640h");

                entity.HasIndex(e => e.DisabilityStatusId, "FK3o1p0n289m4yqjgnhhcg0ml9h");

                entity.HasIndex(e => e.NonCreditBearingIntervationTitleId, "FK63t6yu8f9mehepkfhmkawxn3d");

                entity.HasIndex(e => e.TrainingDeliveryMethodId, "FK65icsdndattmaygv30s85x7w1");

                entity.HasIndex(e => e.OfoCodeId, "FK9wt8honxi08t2pb01jk4h6y56");

                entity.HasIndex(e => e.SkillsProgramId, "FKawkjeysrh6dqtmavd8n6tbqrp");

                entity.HasIndex(e => e.MunicipalityId, "FKbltt6mh8r8l5a3awk36yesutm");

                entity.HasIndex(e => e.WspId, "FKbmqk9wh59ghjb3bq1gwga3b1e");

                entity.HasIndex(e => e.EquityId, "FKddyfglp7fanwgnu8fyj8m6i2o");

                entity.HasIndex(e => e.UnitStandardId, "FKdlv07lngeuw8ud9f9syrx1msl");

                entity.HasIndex(e => e.GenderId, "FKdy250ypbedv82dhcvt9rl4bkk");

                entity.HasIndex(e => e.NqfLevelsId, "FKk8qywgcdw59uiovqn5wf92vsy");

                entity.HasIndex(e => e.NqfAlignedId, "FKlmexmhtpu0qvdi3gy2qraee2b");

                entity.HasIndex(e => e.EtqaId, "FKlopks9enlk18xxbdt80tllj4s");

                entity.HasIndex(e => e.QualificationId, "FKlussfgx3o7xn6ati3h9ma9hp6");

                entity.HasIndex(e => e.InterventionTypeId, "FKqexyjoubal6fc7eiwk2dfgw3m");

                entity.HasIndex(e => e.InterventionLevelId, "FKrfbemmqk9qbj8c5wy2r9vc3s4");

                entity.HasIndex(e => e.FundingId, "FKrtbt38yak3cmq9axhm1407dj5");

                entity.HasIndex(e => e.ProviderTypeId, "FKt15hl5jvsqfwim7pqu930kjub");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AfricanFemale).HasColumnName("african_female");

                entity.Property(e => e.AfricanFemaleDisability).HasColumnName("african_female_disability");

                entity.Property(e => e.AfricanMale).HasColumnName("african_male");

                entity.Property(e => e.AfricanMaleDisability).HasColumnName("african_male_disability");

                entity.Property(e => e.AgeGroup).HasColumnName("age_group");

                entity.Property(e => e.ColouredFemale).HasColumnName("coloured_female");

                entity.Property(e => e.ColouredFemaleDisability).HasColumnName("coloured_female_disability");

                entity.Property(e => e.ColouredMale).HasColumnName("coloured_male");

                entity.Property(e => e.ColouredMaleDisability).HasColumnName("coloured_male_disability");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DisabilityStatusId).HasColumnName("disability_status_id");

                entity.Property(e => e.DisabledAmount).HasColumnName("disabled_amount");

                entity.Property(e => e.EmployeeAge18).HasColumnName("employee_age_18");

                entity.Property(e => e.EmployeeAge25).HasColumnName("employee_age_25");

                entity.Property(e => e.EmployeeAge35).HasColumnName("employee_age_35");

                entity.Property(e => e.EmployeeAge45).HasColumnName("employee_age_45");

                entity.Property(e => e.EmployeeAge55).HasColumnName("employee_age_55");

                entity.Property(e => e.EmployeeAge65).HasColumnName("employee_age_65");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EmploymentStatusCode).HasColumnName("employment_status_code");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("end_date");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.EstimatedCost).HasColumnName("estimated_cost");

                entity.Property(e => e.EtqaId).HasColumnName("etqa_id");

                entity.Property(e => e.FundingCode)
                    .HasMaxLength(10)
                    .HasColumnName("funding_code");

                entity.Property(e => e.FundingId).HasColumnName("funding_id");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.ImportError)
                    .HasColumnType("bit(1)")
                    .HasColumnName("import_error")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ImportErrors).HasColumnName("import_errors");

                entity.Property(e => e.Imported)
                    .HasColumnType("bit(1)")
                    .HasColumnName("imported")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.IndianFemale).HasColumnName("indian_female");

                entity.Property(e => e.IndianFemaleDisability).HasColumnName("indian_female_disability");

                entity.Property(e => e.IndianMale).HasColumnName("indian_male");

                entity.Property(e => e.IndianMaleDisability).HasColumnName("indian_male_disability");

                entity.Property(e => e.InterventionLevelId).HasColumnName("intervention_level_id");

                entity.Property(e => e.InterventionTitle).HasColumnName("intervention_title");

                entity.Property(e => e.InterventionTypeCode)
                    .HasMaxLength(10)
                    .HasColumnName("intervention_type_code");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.NonCreditBearingIntervationTitleId).HasColumnName("non_credit_bearing_intervation_title_id");

                entity.Property(e => e.NqfAlignedId).HasColumnName("nqf_aligned_id");

                entity.Property(e => e.NqfLevelsId).HasColumnName("nqf_levels_id");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(11)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodeId).HasColumnName("ofo_code_id");

                entity.Property(e => e.PivotNonPivot).HasColumnName("pivot_non_pivot");

                entity.Property(e => e.ProviderTypeCode)
                    .HasMaxLength(10)
                    .HasColumnName("provider_type_code");

                entity.Property(e => e.ProviderTypeId).HasColumnName("provider_type_id");

                entity.Property(e => e.QualificationCode).HasColumnName("qualification_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Quantity).HasColumnName("quantity");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.TrainingDeliveryMethodCode)
                    .HasMaxLength(10)
                    .HasColumnName("training_delivery_method_code");

                entity.Property(e => e.TrainingDeliveryMethodId).HasColumnName("training_delivery_method_id");

                entity.Property(e => e.TrainingId).HasColumnName("training_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.WhiteFemale).HasColumnName("white_female");

                entity.Property(e => e.WhiteFemaleDisability).HasColumnName("white_female_disability");

                entity.Property(e => e.WhiteMale).HasColumnName("white_male");

                entity.Property(e => e.WhiteMaleDisability).HasColumnName("white_male_disability");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.Property(e => e.WspReport).HasColumnName("wsp_report");

                entity.HasOne(d => d.DisabilityStatus)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.DisabilityStatusId)
                    .HasConstraintName("FK3o1p0n289m4yqjgnhhcg0ml9h");

                entity.HasOne(d => d.Equity)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.EquityId)
                    .HasConstraintName("FKddyfglp7fanwgnu8fyj8m6i2o");

                entity.HasOne(d => d.Etqa)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.EtqaId)
                    .HasConstraintName("FKlopks9enlk18xxbdt80tllj4s");

                entity.HasOne(d => d.Funding)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.FundingId)
                    .HasConstraintName("FKrtbt38yak3cmq9axhm1407dj5");

                entity.HasOne(d => d.Gender)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.GenderId)
                    .HasConstraintName("FKdy250ypbedv82dhcvt9rl4bkk");

                entity.HasOne(d => d.InterventionLevel)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.InterventionLevelId)
                    .HasConstraintName("FKrfbemmqk9qbj8c5wy2r9vc3s4");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FKqexyjoubal6fc7eiwk2dfgw3m");

                entity.HasOne(d => d.Municipality)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.MunicipalityId)
                    .HasConstraintName("FKbltt6mh8r8l5a3awk36yesutm");

                entity.HasOne(d => d.NonCreditBearingIntervationTitle)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.NonCreditBearingIntervationTitleId)
                    .HasConstraintName("FK63t6yu8f9mehepkfhmkawxn3d");

                entity.HasOne(d => d.NqfAligned)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.NqfAlignedId)
                    .HasConstraintName("FKlmexmhtpu0qvdi3gy2qraee2b");

                entity.HasOne(d => d.NqfLevels)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.NqfLevelsId)
                    .HasConstraintName("FKk8qywgcdw59uiovqn5wf92vsy");

                entity.HasOne(d => d.OfoCodeNavigation)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.OfoCodeId)
                    .HasConstraintName("FK9wt8honxi08t2pb01jk4h6y56");

                entity.HasOne(d => d.ProviderType)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.ProviderTypeId)
                    .HasConstraintName("FKt15hl5jvsqfwim7pqu930kjub");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKlussfgx3o7xn6ati3h9ma9hp6");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKawkjeysrh6dqtmavd8n6tbqrp");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FK1y05139nh3j4352s3j7wkgmm8");

                entity.HasOne(d => d.TrainingDeliveryMethod)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.TrainingDeliveryMethodId)
                    .HasConstraintName("FK65icsdndattmaygv30s85x7w1");

                entity.HasOne(d => d.Training)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.TrainingId)
                    .HasConstraintName("FK38o6agwo38q219y5mqcc7640h");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKdlv07lngeuw8ud9f9syrx1msl");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.MandatoryGrants)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKbmqk9wh59ghjb3bq1gwga3b1e");
            });

            modelBuilder.Entity<MandatoryGrantDetail>(entity =>
            {
                entity.ToTable("mandatory_grant_detail");

                entity.HasIndex(e => e.EquityId, "FK3l5alldexejx84jnno4or75a9");

                entity.HasIndex(e => e.NqfLevelsId, "FK5xjmcrbafew76m432np33n6iy");

                entity.HasIndex(e => e.EmploymentTypeId, "FK9nlfejg5pa3uq9tq0ieo2831");

                entity.HasIndex(e => e.ProviderTypeId, "FKaowy3dyw6i85397bv860n99n1");

                entity.HasIndex(e => e.EtqaId, "FKc4pi1okv6ga0b2am9a86v3k80");

                entity.HasIndex(e => e.UnitStandardId, "FKc7injda0syj67shbrqb398q4y");

                entity.HasIndex(e => e.EnrolmentStatus, "FKckq9qcjq3foq43x95r4qddvxk");

                entity.HasIndex(e => e.SkillsSetId, "FKdlump5lsbuh3hu7yv499pji8u");

                entity.HasIndex(e => e.NqfAlignedId, "FKdpbss523g47x2va838umlc094");

                entity.HasIndex(e => e.DisabilityId, "FKfr1ckkixiii8rps5w2edc0h0f");

                entity.HasIndex(e => e.OfoCodeId, "FKfv2078ynxpcms3axokhejgpvv");

                entity.HasIndex(e => e.NationalityId, "FKgi4bpi83kjs4fiybwuaaxkklc");

                entity.HasIndex(e => e.QualificationId, "FKjs7grqiy71mhlpovmdwyg9hll");

                entity.HasIndex(e => e.TrainingId, "FKk3xugux6w8tvfuw9krpdnsgfh");

                entity.HasIndex(e => e.FundingId, "FKlfw5761l5lwyhketrxns4ojxr");

                entity.HasIndex(e => e.TrainingDeliveryMethodId, "FKnsoj1yeuwfxecy8w9qtjdsapr");

                entity.HasIndex(e => e.SkillsProgramId, "FKpv6ljtlulpkjogbvm9am31ht3");

                entity.HasIndex(e => e.InterventionLevelId, "FKq7023btum2bwuyg2n57dldtvj");

                entity.HasIndex(e => e.GenderId, "FKqtli7ovwyt79ol4a33mv3g016");

                entity.HasIndex(e => e.NonCreditBearingIntervationTitleId, "FKsis7nv212s2fs07ml1b9vei6c");

                entity.HasIndex(e => e.MunicipalityId, "FKswyxl22yxuggk0dbg43g8q3lw");

                entity.HasIndex(e => e.InterventionTypeId, "FKtbp42gyhjvgsgci6pv96kgaih");

                entity.HasIndex(e => new { e.IdNumber, e.OfoCodeId, e.InterventionTypeId, e.WspReport, e.SkillsSetId, e.SkillsProgramId, e.QualificationId, e.UnitStandardId }, "UKcmj0egka0htsmulso2otmke8t")
                    .IsUnique();

                entity.HasIndex(e => new { e.WspId, e.FundingId }, "wsp_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateOfBirth)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_birth");

                entity.Property(e => e.Disability)
                    .HasMaxLength(100)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityId).HasColumnName("disability_id");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EmploymentStatusCode).HasColumnName("employment_status_code");

                entity.Property(e => e.EmploymentTypeCode)
                    .HasMaxLength(255)
                    .HasColumnName("employment_type_code");

                entity.Property(e => e.EmploymentTypeId).HasColumnName("employment_type_id");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("end_date");

                entity.Property(e => e.EnrolmentStatus).HasColumnName("enrolment_status");

                entity.Property(e => e.EnrolmentStatusCode)
                    .HasMaxLength(11)
                    .HasColumnName("enrolment_status_code");

                entity.Property(e => e.EquityCode)
                    .HasMaxLength(11)
                    .HasColumnName("equity_code");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.EstimatedCost).HasColumnName("estimated_cost");

                entity.Property(e => e.EtqaId).HasColumnName("etqa_id");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.FundingCode)
                    .HasMaxLength(10)
                    .HasColumnName("funding_code");

                entity.Property(e => e.FundingId).HasColumnName("funding_id");

                entity.Property(e => e.GenderCode)
                    .HasMaxLength(11)
                    .HasColumnName("gender_code");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.IdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("id_number");

                entity.Property(e => e.IdType).HasColumnName("id_type");

                entity.Property(e => e.IdTypeCode).HasColumnName("id_type_code");

                entity.Property(e => e.ImportError)
                    .HasColumnType("bit(1)")
                    .HasColumnName("import_error")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ImportErrors).HasColumnName("import_errors");

                entity.Property(e => e.Imported)
                    .HasColumnType("bit(1)")
                    .HasColumnName("imported")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.InterventionLevelId).HasColumnName("intervention_level_id");

                entity.Property(e => e.InterventionTitle).HasColumnName("intervention_title");

                entity.Property(e => e.InterventionTypeCode)
                    .HasMaxLength(10)
                    .HasColumnName("intervention_type_code");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.MunicipalityCode)
                    .HasMaxLength(255)
                    .HasColumnName("municipality_code");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.NationalityCode)
                    .HasMaxLength(11)
                    .HasColumnName("nationality_code");

                entity.Property(e => e.NationalityId).HasColumnName("nationality_id");

                entity.Property(e => e.NonCreditBearingIntervationTitleCode)
                    .HasMaxLength(255)
                    .HasColumnName("non_credit_bearing_intervation_title_code");

                entity.Property(e => e.NonCreditBearingIntervationTitleId).HasColumnName("non_credit_bearing_intervation_title_id");

                entity.Property(e => e.NqfAlignedId).HasColumnName("nqf_aligned_id");

                entity.Property(e => e.NqfLevelsId).HasColumnName("nqf_levels_id");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(30)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodeId).HasColumnName("ofo_code_id");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(30)
                    .HasColumnName("passport_number");

                entity.Property(e => e.PivotNonPivot).HasColumnName("pivot_non_pivot");

                entity.Property(e => e.ProviderTypeCode)
                    .HasMaxLength(10)
                    .HasColumnName("provider_type_code");

                entity.Property(e => e.ProviderTypeId).HasColumnName("provider_type_id");

                entity.Property(e => e.QualificationCode).HasColumnName("qualification_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RsaCitizenType).HasColumnName("rsa_citizen_type");

                entity.Property(e => e.RsaIdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("rsa_id_number");

                entity.Property(e => e.SkillsProgramCode)
                    .HasMaxLength(255)
                    .HasColumnName("skills_program_code");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetCode)
                    .HasMaxLength(255)
                    .HasColumnName("skills_set_code");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.SpecialisationCode)
                    .HasMaxLength(16)
                    .HasColumnName("specialisation_code");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.TrainingDeliveryMethodCode)
                    .HasMaxLength(10)
                    .HasColumnName("training_delivery_method_code");

                entity.Property(e => e.TrainingDeliveryMethodId).HasColumnName("training_delivery_method_id");

                entity.Property(e => e.TrainingId).HasColumnName("training_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.Property(e => e.WspReport).HasColumnName("wsp_report");

                entity.HasOne(d => d.DisabilityNavigation)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.DisabilityId)
                    .HasConstraintName("FKfr1ckkixiii8rps5w2edc0h0f");

                entity.HasOne(d => d.EmploymentType)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.EmploymentTypeId)
                    .HasConstraintName("FK9nlfejg5pa3uq9tq0ieo2831");

                entity.HasOne(d => d.EnrolmentStatusNavigation)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.EnrolmentStatus)
                    .HasConstraintName("FKckq9qcjq3foq43x95r4qddvxk");

                entity.HasOne(d => d.Equity)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.EquityId)
                    .HasConstraintName("FK3l5alldexejx84jnno4or75a9");

                entity.HasOne(d => d.Etqa)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.EtqaId)
                    .HasConstraintName("FKc4pi1okv6ga0b2am9a86v3k80");

                entity.HasOne(d => d.Funding)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.FundingId)
                    .HasConstraintName("FKlfw5761l5lwyhketrxns4ojxr");

                entity.HasOne(d => d.Gender)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.GenderId)
                    .HasConstraintName("FKqtli7ovwyt79ol4a33mv3g016");

                entity.HasOne(d => d.InterventionLevel)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.InterventionLevelId)
                    .HasConstraintName("FKq7023btum2bwuyg2n57dldtvj");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FKtbp42gyhjvgsgci6pv96kgaih");

                entity.HasOne(d => d.Municipality)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.MunicipalityId)
                    .HasConstraintName("FKswyxl22yxuggk0dbg43g8q3lw");

                entity.HasOne(d => d.Nationality)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.NationalityId)
                    .HasConstraintName("FKgi4bpi83kjs4fiybwuaaxkklc");

                entity.HasOne(d => d.NonCreditBearingIntervationTitle)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.NonCreditBearingIntervationTitleId)
                    .HasConstraintName("FKsis7nv212s2fs07ml1b9vei6c");

                entity.HasOne(d => d.NqfAligned)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.NqfAlignedId)
                    .HasConstraintName("FKdpbss523g47x2va838umlc094");

                entity.HasOne(d => d.NqfLevels)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.NqfLevelsId)
                    .HasConstraintName("FK5xjmcrbafew76m432np33n6iy");

                entity.HasOne(d => d.OfoCodeNavigation)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.OfoCodeId)
                    .HasConstraintName("FKfv2078ynxpcms3axokhejgpvv");

                entity.HasOne(d => d.ProviderType)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.ProviderTypeId)
                    .HasConstraintName("FKaowy3dyw6i85397bv860n99n1");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKjs7grqiy71mhlpovmdwyg9hll");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKpv6ljtlulpkjogbvm9am31ht3");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FKdlump5lsbuh3hu7yv499pji8u");

                entity.HasOne(d => d.TrainingDeliveryMethod)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.TrainingDeliveryMethodId)
                    .HasConstraintName("FKnsoj1yeuwfxecy8w9qtjdsapr");

                entity.HasOne(d => d.Training)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.TrainingId)
                    .HasConstraintName("FKk3xugux6w8tvfuw9krpdnsgfh");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKc7injda0syj67shbrqb398q4y");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.MandatoryGrantDetails)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKpeg501vx8n3h9n06f1lye5i2o");
            });

            modelBuilder.Entity<MandatoryGrantDetailArchive>(entity =>
            {
                entity.ToTable("mandatory_grant_detail_archive");

                entity.HasIndex(e => e.EtqaId, "FK12vjpl44stocl3lo8dgiwcewk");

                entity.HasIndex(e => e.EnrolmentStatus, "FK1icj8ur7v5bvmm7r2seyub0jr");

                entity.HasIndex(e => e.SkillsSetId, "FK2ucji40egjjsl9d6esqi0y3ht");

                entity.HasIndex(e => e.ProviderTypeId, "FK51in9uhh1ul065ijk9kt31awl");

                entity.HasIndex(e => e.WspId, "FK5ain2gfoiob49a23i9j4au1om");

                entity.HasIndex(e => e.OfoCodeId, "FK6cnv4ghqnwtox0rk01je8oapk");

                entity.HasIndex(e => e.EquityId, "FK6knb2itwk2dqqgrmh2kj1p2wa");

                entity.HasIndex(e => e.SkillsProgramId, "FK6ti4rwtlmkrxh0m3vcufnd6wv");

                entity.HasIndex(e => e.FundingId, "FK8arql4okswf4veoafd51iwqmi");

                entity.HasIndex(e => e.NqfLevelsId, "FK8kdkjo2vmj5a1d984puutlwxq");

                entity.HasIndex(e => e.NqfAlignedId, "FK8v4707aecx1hr1wotcmyfyi08");

                entity.HasIndex(e => e.MunicipalityId, "FK8wrcqxl51x2t9awwu7510xhth");

                entity.HasIndex(e => e.NonCreditBearingIntervationTitleId, "FKamy1hfkphantfl189y5k5fvux");

                entity.HasIndex(e => e.DisabilityId, "FKgmdie559p8vjscn8ktwcim8uv");

                entity.HasIndex(e => e.InterventionTypeId, "FKi9jmbj0bjtfntp7q96ykg0vsx");

                entity.HasIndex(e => e.EmploymentTypeId, "FKjk4f4e0xy3jdnwn8jh6r6net");

                entity.HasIndex(e => e.UnitStandardId, "FKkwwt4eo7g6pe4vgd4wbc5qlbj");

                entity.HasIndex(e => e.NationalityId, "FKnqia6s44uugn01rv0j2jkckf9");

                entity.HasIndex(e => e.TrainingId, "FKo6ntkn6jpfghmwawcu6vbg92c");

                entity.HasIndex(e => e.QualificationId, "FKojqb64jcih7exxlc3yw56moe8");

                entity.HasIndex(e => e.TrainingDeliveryMethodId, "FKpt3cjs0063w0qk444en1cksdi");

                entity.HasIndex(e => e.GenderId, "FKsnbojwbh7qhy9mpinaw3k430m");

                entity.HasIndex(e => e.InterventionLevelId, "FKt96of68ap41ifbxvfls92r3oi");

                entity.HasIndex(e => new { e.IdNumber, e.OfoCodeId, e.InterventionTypeId, e.WspReport, e.SkillsSetId, e.SkillsProgramId, e.QualificationId, e.UnitStandardId }, "UK5h912xcjccn1dm6vmfw72l62r")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateOfBirth)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_birth");

                entity.Property(e => e.Disability)
                    .HasMaxLength(100)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityId).HasColumnName("disability_id");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EmploymentTypeCode)
                    .HasMaxLength(255)
                    .HasColumnName("employment_type_code");

                entity.Property(e => e.EmploymentTypeId).HasColumnName("employment_type_id");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("end_date");

                entity.Property(e => e.EnrolmentStatus).HasColumnName("enrolment_status");

                entity.Property(e => e.EnrolmentStatusCode)
                    .HasMaxLength(11)
                    .HasColumnName("enrolment_status_code");

                entity.Property(e => e.EquityCode)
                    .HasMaxLength(11)
                    .HasColumnName("equity_code");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.EstimatedCost).HasColumnName("estimated_cost");

                entity.Property(e => e.EtqaId).HasColumnName("etqa_id");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.FundingCode)
                    .HasMaxLength(10)
                    .HasColumnName("funding_code");

                entity.Property(e => e.FundingId).HasColumnName("funding_id");

                entity.Property(e => e.GenderCode)
                    .HasMaxLength(11)
                    .HasColumnName("gender_code");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.IdMandatoryGrantDetail).HasColumnName("id_mandatory_grant_detail");

                entity.Property(e => e.IdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("id_number");

                entity.Property(e => e.IdType).HasColumnName("id_type");

                entity.Property(e => e.IdTypeCode).HasColumnName("id_type_code");

                entity.Property(e => e.ImportError)
                    .HasColumnType("bit(1)")
                    .HasColumnName("import_error")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ImportErrors).HasColumnName("import_errors");

                entity.Property(e => e.Imported)
                    .HasColumnType("bit(1)")
                    .HasColumnName("imported")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.InterventionLevelId).HasColumnName("intervention_level_id");

                entity.Property(e => e.InterventionTitle).HasColumnName("intervention_title");

                entity.Property(e => e.InterventionTypeCode)
                    .HasMaxLength(10)
                    .HasColumnName("intervention_type_code");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.MandatoryGrantDetailCreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("mandatory_grant_detail_create_date");

                entity.Property(e => e.MunicipalityCode)
                    .HasMaxLength(255)
                    .HasColumnName("municipality_code");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.NationalityCode)
                    .HasMaxLength(11)
                    .HasColumnName("nationality_code");

                entity.Property(e => e.NationalityId).HasColumnName("nationality_id");

                entity.Property(e => e.NonCreditBearingIntervationTitleCode)
                    .HasMaxLength(255)
                    .HasColumnName("non_credit_bearing_intervation_title_code");

                entity.Property(e => e.NonCreditBearingIntervationTitleId).HasColumnName("non_credit_bearing_intervation_title_id");

                entity.Property(e => e.NqfAlignedId).HasColumnName("nqf_aligned_id");

                entity.Property(e => e.NqfLevelsId).HasColumnName("nqf_levels_id");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(11)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodeId).HasColumnName("ofo_code_id");

                entity.Property(e => e.PivotNonPivot).HasColumnName("pivot_non_pivot");

                entity.Property(e => e.ProviderTypeCode)
                    .HasMaxLength(10)
                    .HasColumnName("provider_type_code");

                entity.Property(e => e.ProviderTypeId).HasColumnName("provider_type_id");

                entity.Property(e => e.QualificationCode).HasColumnName("qualification_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RsaCitizenType).HasColumnName("rsa_citizen_type");

                entity.Property(e => e.SkillsProgramCode)
                    .HasMaxLength(255)
                    .HasColumnName("skills_program_code");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetCode)
                    .HasMaxLength(255)
                    .HasColumnName("skills_set_code");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.SpecialisationCode)
                    .HasMaxLength(16)
                    .HasColumnName("specialisation_code");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.TrainingDeliveryMethodCode)
                    .HasMaxLength(10)
                    .HasColumnName("training_delivery_method_code");

                entity.Property(e => e.TrainingDeliveryMethodId).HasColumnName("training_delivery_method_id");

                entity.Property(e => e.TrainingId).HasColumnName("training_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.Property(e => e.WspReport).HasColumnName("wsp_report");

                entity.HasOne(d => d.DisabilityNavigation)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.DisabilityId)
                    .HasConstraintName("FKgmdie559p8vjscn8ktwcim8uv");

                entity.HasOne(d => d.EmploymentType)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.EmploymentTypeId)
                    .HasConstraintName("FKjk4f4e0xy3jdnwn8jh6r6net");

                entity.HasOne(d => d.EnrolmentStatusNavigation)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.EnrolmentStatus)
                    .HasConstraintName("FK1icj8ur7v5bvmm7r2seyub0jr");

                entity.HasOne(d => d.Equity)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.EquityId)
                    .HasConstraintName("FK6knb2itwk2dqqgrmh2kj1p2wa");

                entity.HasOne(d => d.Etqa)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.EtqaId)
                    .HasConstraintName("FK12vjpl44stocl3lo8dgiwcewk");

                entity.HasOne(d => d.Funding)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.FundingId)
                    .HasConstraintName("FK8arql4okswf4veoafd51iwqmi");

                entity.HasOne(d => d.Gender)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.GenderId)
                    .HasConstraintName("FKsnbojwbh7qhy9mpinaw3k430m");

                entity.HasOne(d => d.InterventionLevel)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.InterventionLevelId)
                    .HasConstraintName("FKt96of68ap41ifbxvfls92r3oi");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FKi9jmbj0bjtfntp7q96ykg0vsx");

                entity.HasOne(d => d.Municipality)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.MunicipalityId)
                    .HasConstraintName("FK8wrcqxl51x2t9awwu7510xhth");

                entity.HasOne(d => d.Nationality)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.NationalityId)
                    .HasConstraintName("FKnqia6s44uugn01rv0j2jkckf9");

                entity.HasOne(d => d.NonCreditBearingIntervationTitle)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.NonCreditBearingIntervationTitleId)
                    .HasConstraintName("FKamy1hfkphantfl189y5k5fvux");

                entity.HasOne(d => d.NqfAligned)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.NqfAlignedId)
                    .HasConstraintName("FK8v4707aecx1hr1wotcmyfyi08");

                entity.HasOne(d => d.NqfLevels)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.NqfLevelsId)
                    .HasConstraintName("FK8kdkjo2vmj5a1d984puutlwxq");

                entity.HasOne(d => d.OfoCodeNavigation)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.OfoCodeId)
                    .HasConstraintName("FK6cnv4ghqnwtox0rk01je8oapk");

                entity.HasOne(d => d.ProviderType)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.ProviderTypeId)
                    .HasConstraintName("FK51in9uhh1ul065ijk9kt31awl");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKojqb64jcih7exxlc3yw56moe8");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FK6ti4rwtlmkrxh0m3vcufnd6wv");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FK2ucji40egjjsl9d6esqi0y3ht");

                entity.HasOne(d => d.TrainingDeliveryMethod)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.TrainingDeliveryMethodId)
                    .HasConstraintName("FKpt3cjs0063w0qk444en1cksdi");

                entity.HasOne(d => d.Training)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.TrainingId)
                    .HasConstraintName("FKo6ntkn6jpfghmwawcu6vbg92c");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKkwwt4eo7g6pe4vgd4wbc5qlbj");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.MandatoryGrantDetailArchives)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FK5ain2gfoiob49a23i9j4au1om");
            });

            modelBuilder.Entity<MandatoryGrantEvaluation>(entity =>
            {
                entity.ToTable("mandatory_grant_evaluation");

                entity.HasIndex(e => e.SizeOfCompanyId, "FKfbgeby6vivl52c1wtmvr806mi");

                entity.HasIndex(e => e.WspId, "FKmb59bmdlobqfu0bmjo3v7i580");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NoScore).HasColumnName("no_score");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SizeOfCompanyId).HasColumnName("size_of_company_id");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.TotalScore).HasColumnName("total_score");

                entity.Property(e => e.ValidationForm)
                    .HasColumnType("bit(1)")
                    .HasColumnName("validation_form");

                entity.Property(e => e.WeightedScore).HasColumnName("weighted_score");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.Property(e => e.WspTypeEnum).HasColumnName("wsp_type_enum");

                entity.Property(e => e.YesNoEnum).HasColumnName("yes_no_enum");

                entity.Property(e => e.YesScore).HasColumnName("yes_score");

                entity.HasOne(d => d.SizeOfCompany)
                    .WithMany(p => p.MandatoryGrantEvaluations)
                    .HasForeignKey(d => d.SizeOfCompanyId)
                    .HasConstraintName("FKfbgeby6vivl52c1wtmvr806mi");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.MandatoryGrantEvaluations)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKmb59bmdlobqfu0bmjo3v7i580");
            });

            modelBuilder.Entity<MandatoryGrantHistory>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("mandatory_grant_history");

                entity.HasIndex(e => e.Rev, "FKa1ttxgmij30poa8qa09888257");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AfricanFemale).HasColumnName("african_female");

                entity.Property(e => e.AfricanFemaleDisability).HasColumnName("african_female_disability");

                entity.Property(e => e.AfricanMale).HasColumnName("african_male");

                entity.Property(e => e.AfricanMaleDisability).HasColumnName("african_male_disability");

                entity.Property(e => e.ColouredFemale).HasColumnName("coloured_female");

                entity.Property(e => e.ColouredFemaleDisability).HasColumnName("coloured_female_disability");

                entity.Property(e => e.ColouredMale).HasColumnName("coloured_male");

                entity.Property(e => e.ColouredMaleDisability).HasColumnName("coloured_male_disability");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DisabledAmount).HasColumnName("disabled_amount");

                entity.Property(e => e.EmployeeAge18).HasColumnName("employee_age_18");

                entity.Property(e => e.EmployeeAge25).HasColumnName("employee_age_25");

                entity.Property(e => e.EmployeeAge35).HasColumnName("employee_age_35");

                entity.Property(e => e.EmployeeAge45).HasColumnName("employee_age_45");

                entity.Property(e => e.EmployeeAge55).HasColumnName("employee_age_55");

                entity.Property(e => e.EmployeeAge65).HasColumnName("employee_age_65");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EmploymentStatusCode).HasColumnName("employment_status_code");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("end_date");

                entity.Property(e => e.EstimatedCost).HasColumnName("estimated_cost");

                entity.Property(e => e.EtqaId).HasColumnName("etqa_id");

                entity.Property(e => e.FundingCode)
                    .HasMaxLength(10)
                    .HasColumnName("funding_code");

                entity.Property(e => e.FundingId).HasColumnName("funding_id");

                entity.Property(e => e.ImportError)
                    .HasColumnType("bit(1)")
                    .HasColumnName("import_error")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ImportErrors).HasColumnName("import_errors");

                entity.Property(e => e.Imported)
                    .HasColumnType("bit(1)")
                    .HasColumnName("imported")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.IndianFemale).HasColumnName("indian_female");

                entity.Property(e => e.IndianFemaleDisability).HasColumnName("indian_female_disability");

                entity.Property(e => e.IndianMale).HasColumnName("indian_male");

                entity.Property(e => e.IndianMaleDisability).HasColumnName("indian_male_disability");

                entity.Property(e => e.InterventionLevelId).HasColumnName("intervention_level_id");

                entity.Property(e => e.InterventionTitle).HasColumnName("intervention_title");

                entity.Property(e => e.InterventionTypeCode)
                    .HasMaxLength(10)
                    .HasColumnName("intervention_type_code");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.NonCreditBearingIntervationTitleId).HasColumnName("non_credit_bearing_intervation_title_id");

                entity.Property(e => e.NqfAlignedId).HasColumnName("nqf_aligned_id");

                entity.Property(e => e.NqfLevelsId).HasColumnName("nqf_levels_id");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(11)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodeId).HasColumnName("ofo_code_id");

                entity.Property(e => e.PivotNonPivot).HasColumnName("pivot_non_pivot");

                entity.Property(e => e.ProviderTypeCode)
                    .HasMaxLength(10)
                    .HasColumnName("provider_type_code");

                entity.Property(e => e.ProviderTypeId).HasColumnName("provider_type_id");

                entity.Property(e => e.QualificationCode).HasColumnName("qualification_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Quantity).HasColumnName("quantity");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.TrainingDeliveryMethodCode)
                    .HasMaxLength(10)
                    .HasColumnName("training_delivery_method_code");

                entity.Property(e => e.TrainingDeliveryMethodId).HasColumnName("training_delivery_method_id");

                entity.Property(e => e.TrainingId).HasColumnName("training_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.WhiteFemale).HasColumnName("white_female");

                entity.Property(e => e.WhiteFemaleDisability).HasColumnName("white_female_disability");

                entity.Property(e => e.WhiteMale).HasColumnName("white_male");

                entity.Property(e => e.WhiteMaleDisability).HasColumnName("white_male_disability");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.Property(e => e.WspReport).HasColumnName("wsp_report");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.MandatoryGrantHistories)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKa1ttxgmij30poa8qa09888257");
            });

            modelBuilder.Entity<MandatoryGrantRecommendation>(entity =>
            {
                entity.ToTable("mandatory_grant_recommendation");

                entity.HasIndex(e => e.RecommendingUserId, "FK1grm4rqgownsk7ipvms581eve");

                entity.HasIndex(e => e.QualificationId, "FK40u54jloxi04j1ugmcn0bwxgp");

                entity.HasIndex(e => e.SkillsProgramId, "FK9710l0kh78xwyiqcalo75jwj4");

                entity.HasIndex(e => e.UnitStandardsId, "FKdn1y83oc96x0of94ibb5hitho");

                entity.HasIndex(e => e.NonCreditBearingIntervationTitleId, "FKgo1qv15ixmxv9vmhnfqab8s27");

                entity.HasIndex(e => e.MandatoryGrantDetailId, "FKjaxlee9i5awgbf1h93ntk9n1x");

                entity.HasIndex(e => e.InterventionTypeId, "FKpaxujy7lvv6a05oaeqqmw1ffu");

                entity.HasIndex(e => e.MandatoryGrantId, "FKqqxkc6qcxue5y2bcie44qt9it");

                entity.HasIndex(e => e.SkillsSetId, "FKr73wekmdbe3hh8nmy3b23xh6k");

                entity.HasIndex(e => e.RejectReasonsId, "FKr9iuek7ftge4dfmnxr368k28d");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.MandatoryGrantDetailId).HasColumnName("mandatory_grant_detail_id");

                entity.Property(e => e.MandatoryGrantId).HasColumnName("mandatory_grant_id");

                entity.Property(e => e.NonCreditBearingIntervationTitleId).HasColumnName("non_credit_bearing_intervation_title_id");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Quantity).HasColumnName("quantity");

                entity.Property(e => e.RecommendingUserId).HasColumnName("recommending_user_id");

                entity.Property(e => e.RejectReasonsId).HasColumnName("reject_reasons_id");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.UnitStandardsId).HasColumnName("unit_standards_id");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.MandatoryGrantRecommendations)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FKpaxujy7lvv6a05oaeqqmw1ffu");

                entity.HasOne(d => d.MandatoryGrantDetail)
                    .WithMany(p => p.MandatoryGrantRecommendations)
                    .HasForeignKey(d => d.MandatoryGrantDetailId)
                    .HasConstraintName("FKjaxlee9i5awgbf1h93ntk9n1x");

                entity.HasOne(d => d.MandatoryGrant)
                    .WithMany(p => p.MandatoryGrantRecommendations)
                    .HasForeignKey(d => d.MandatoryGrantId)
                    .HasConstraintName("FKqqxkc6qcxue5y2bcie44qt9it");

                entity.HasOne(d => d.NonCreditBearingIntervationTitle)
                    .WithMany(p => p.MandatoryGrantRecommendations)
                    .HasForeignKey(d => d.NonCreditBearingIntervationTitleId)
                    .HasConstraintName("FKgo1qv15ixmxv9vmhnfqab8s27");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.MandatoryGrantRecommendations)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK40u54jloxi04j1ugmcn0bwxgp");

                entity.HasOne(d => d.RecommendingUser)
                    .WithMany(p => p.MandatoryGrantRecommendations)
                    .HasForeignKey(d => d.RecommendingUserId)
                    .HasConstraintName("FK1grm4rqgownsk7ipvms581eve");

                entity.HasOne(d => d.RejectReasons)
                    .WithMany(p => p.MandatoryGrantRecommendations)
                    .HasForeignKey(d => d.RejectReasonsId)
                    .HasConstraintName("FKr9iuek7ftge4dfmnxr368k28d");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.MandatoryGrantRecommendations)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FK9710l0kh78xwyiqcalo75jwj4");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.MandatoryGrantRecommendations)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FKr73wekmdbe3hh8nmy3b23xh6k");

                entity.HasOne(d => d.UnitStandards)
                    .WithMany(p => p.MandatoryGrantRecommendations)
                    .HasForeignKey(d => d.UnitStandardsId)
                    .HasConstraintName("FKdn1y83oc96x0of94ibb5hitho");
            });

            modelBuilder.Entity<MandatoryGrantRecommendationHistory>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("mandatory_grant_recommendation_history");

                entity.HasIndex(e => e.Rev, "FKhg43w3q3kl1mekxm4xnuq8hfy");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.MandatoryGrantId).HasColumnName("mandatory_grant_id");

                entity.Property(e => e.NonCreditBearingIntervationTitleId).HasColumnName("non_credit_bearing_intervation_title_id");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Quantity).HasColumnName("quantity");

                entity.Property(e => e.RecommendingUserId).HasColumnName("recommending_user_id");

                entity.Property(e => e.RejectReasonsId).HasColumnName("reject_reasons_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.UnitStandardsId).HasColumnName("unit_standards_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.MandatoryGrantRecommendationHistories)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKhg43w3q3kl1mekxm4xnuq8hfy");
            });

            modelBuilder.Entity<MandatoryGrantWorkplace>(entity =>
            {
                entity.ToTable("mandatory_grant_workplace");

                entity.HasIndex(e => e.SitesId, "FKdi6bcwv1yfllcuctee2ieiavk");

                entity.HasIndex(e => e.MandatoryGrantId, "FKh5kipfkvysyakvfogv4galgo");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Amount).HasColumnName("amount");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.MandatoryGrantId).HasColumnName("mandatory_grant_id");

                entity.Property(e => e.SitesId).HasColumnName("sites_id");

                entity.HasOne(d => d.MandatoryGrant)
                    .WithMany(p => p.MandatoryGrantWorkplaces)
                    .HasForeignKey(d => d.MandatoryGrantId)
                    .HasConstraintName("FKh5kipfkvysyakvfogv4galgo");

               /* entity.HasOne(d => d.Sites)
                    .WithMany(p => p.MandatoryGrantWorkplaces)
                    .HasForeignKey(d => d.SitesId)
                    .HasConstraintName("FKdi6bcwv1yfllcuctee2ieiavk");*/
            });

            modelBuilder.Entity<MaritalStatus>(entity =>
            {
                entity.ToTable("marital_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<MeetingAgendum>(entity =>
            {
                entity.ToTable("meeting_agenda");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DecisionNumberSyntax)
                    .HasMaxLength(500)
                    .HasColumnName("decision_number_syntax");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<MgVerification>(entity =>
            {
                entity.ToTable("mg_verification");

                entity.HasIndex(e => e.CompleteInYear, "FKab4t6dthx3dduj8qv41j1aevv");

                entity.HasIndex(e => e.OrganisedLabourUnion, "FKb23cqj101olbhiecyx1jeluub");

                entity.HasIndex(e => e.PrimaryUserSignOffId, "FKb9t6q6ughqa8sv6n76vu3aenb");

                entity.HasIndex(e => e.CrmUserAssignedId, "FKcuwqfqnpsh92rjlpnoytm2rap");

                entity.HasIndex(e => e.ProofTrainingVerified, "FKe7eaq6kr2x4cra4llrsom2le9");

                entity.HasIndex(e => e.TrainingCommenced, "FKh1bxiodia1w2402ny3lugm3l8");

                entity.HasIndex(e => e.EmployerAttendMeetings, "FKhc4prmoieey15d53e3oh090ur");

                entity.HasIndex(e => e.TrainingComitteeMinutes, "FKi0at0l0bhyie1oxxq5p6e376w");

                entity.HasIndex(e => e.AtrSubmitted, "FKi1h0c1cgpd2e14ewmvcbsivqh");

                entity.HasIndex(e => e.WspSubmitted, "FKi6el8pw6wcvh3akgb8wrm2n4d");

                entity.HasIndex(e => e.MgSignedOff, "FKk75cewkr5fi12iy0k5dnntai0");

                entity.HasIndex(e => e.WspId, "FKkxwf5490dlheo24dcx3xo1sxj");

                entity.HasIndex(e => e.CloGeneratedForId, "FKo5p8217r4gi2voxgj2nmcpxaf");

                entity.HasIndex(e => e.LabourAttendMeetings, "FKp1whn082kpxuokig9spfjui5t");

                entity.HasIndex(e => e.TrainingCompletedAsPrevious, "FKsa7dbv1gjbq4gg8j3nlje84s6");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.AtrSubmitted).HasColumnName("atr_submitted");

                entity.Property(e => e.BatchNumber).HasColumnName("batch_number");

                entity.Property(e => e.CloComment).HasColumnName("clo_comment");

                entity.Property(e => e.CloGeneratedForId).HasColumnName("clo_generated_for_id");

                entity.Property(e => e.CompanyRepSignOff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("company_rep_sign_off")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CompleteIdentifiedTraining)
                    .HasColumnType("bit(1)")
                    .HasColumnName("complete_identified_training")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CompleteInYear).HasColumnName("complete_in_year");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CrmSignOff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("crm_sign_off")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CrmUserAssignedId).HasColumnName("crm_user_assigned_id");

                entity.Property(e => e.DateCaptured)
                    .HasColumnType("datetime")
                    .HasColumnName("date_captured");

                entity.Property(e => e.DateForVisitProvided)
                    .HasColumnType("bit(1)")
                    .HasColumnName("date_for_visit_provided");

                entity.Property(e => e.EmployerAttendMeetings).HasColumnName("employer_attend_meetings");

                entity.Property(e => e.FinalFin).HasColumnName("final_fin");

                entity.Property(e => e.HasTrainingCommenced)
                    .HasColumnType("bit(1)")
                    .HasColumnName("has_training_commenced")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.LabourAttendMeetings).HasColumnName("labour_attend_meetings");

                entity.Property(e => e.MersetaRepSignOff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("merseta_rep_sign_off")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MgSignedOff).HasColumnName("mg_signed_off");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.OrganisedLabourUnion).HasColumnName("organised_labour_union");

                entity.Property(e => e.PrimaryUserSignOffId).HasColumnName("primary_user_sign_off_id");

                entity.Property(e => e.ProofOfTrainingVerified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("proof_of_training_verified")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ProofTrainingVerified).HasColumnName("proof_training_verified");

                entity.Property(e => e.ResetDate)
                    .HasColumnType("datetime")
                    .HasColumnName("reset_date");

                entity.Property(e => e.ReviewDate)
                    .HasColumnType("datetime")
                    .HasColumnName("review_date");

                entity.Property(e => e.SdfSignOff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sdf_sign_off")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SubmitedForVerification)
                    .HasColumnType("bit(1)")
                    .HasColumnName("submited_for_verification");

                entity.Property(e => e.TrainingComitteeMinutes).HasColumnName("training_comittee_minutes");

                entity.Property(e => e.TrainingCommenced).HasColumnName("training_commenced");

                entity.Property(e => e.TrainingCompletedAsPrevious).HasColumnName("training_completed_as_previous");

                entity.Property(e => e.TrainingNeedsIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("training_needs_identified")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.Property(e => e.WspSubmitted).HasColumnName("wsp_submitted");

                entity.HasOne(d => d.AtrSubmittedNavigation)
                    .WithMany(p => p.MgVerificationAtrSubmittedNavigations)
                    .HasForeignKey(d => d.AtrSubmitted)
                    .HasConstraintName("FKi1h0c1cgpd2e14ewmvcbsivqh");

                entity.HasOne(d => d.CloGeneratedFor)
                    .WithMany(p => p.MgVerificationCloGeneratedFors)
                    .HasForeignKey(d => d.CloGeneratedForId)
                    .HasConstraintName("FKo5p8217r4gi2voxgj2nmcpxaf");

                entity.HasOne(d => d.CompleteInYearNavigation)
                    .WithMany(p => p.MgVerificationCompleteInYearNavigations)
                    .HasForeignKey(d => d.CompleteInYear)
                    .HasConstraintName("FKab4t6dthx3dduj8qv41j1aevv");

                entity.HasOne(d => d.CrmUserAssigned)
                    .WithMany(p => p.MgVerificationCrmUserAssigneds)
                    .HasForeignKey(d => d.CrmUserAssignedId)
                    .HasConstraintName("FKcuwqfqnpsh92rjlpnoytm2rap");

                entity.HasOne(d => d.EmployerAttendMeetingsNavigation)
                    .WithMany(p => p.MgVerificationEmployerAttendMeetingsNavigations)
                    .HasForeignKey(d => d.EmployerAttendMeetings)
                    .HasConstraintName("FKhc4prmoieey15d53e3oh090ur");

                entity.HasOne(d => d.LabourAttendMeetingsNavigation)
                    .WithMany(p => p.MgVerificationLabourAttendMeetingsNavigations)
                    .HasForeignKey(d => d.LabourAttendMeetings)
                    .HasConstraintName("FKp1whn082kpxuokig9spfjui5t");

                entity.HasOne(d => d.MgSignedOffNavigation)
                    .WithMany(p => p.MgVerificationMgSignedOffNavigations)
                    .HasForeignKey(d => d.MgSignedOff)
                    .HasConstraintName("FKk75cewkr5fi12iy0k5dnntai0");

                entity.HasOne(d => d.OrganisedLabourUnionNavigation)
                    .WithMany(p => p.MgVerificationOrganisedLabourUnionNavigations)
                    .HasForeignKey(d => d.OrganisedLabourUnion)
                    .HasConstraintName("FKb23cqj101olbhiecyx1jeluub");

                entity.HasOne(d => d.PrimaryUserSignOff)
                    .WithMany(p => p.MgVerificationPrimaryUserSignOffs)
                    .HasForeignKey(d => d.PrimaryUserSignOffId)
                    .HasConstraintName("FKb9t6q6ughqa8sv6n76vu3aenb");

                entity.HasOne(d => d.ProofTrainingVerifiedNavigation)
                    .WithMany(p => p.MgVerificationProofTrainingVerifiedNavigations)
                    .HasForeignKey(d => d.ProofTrainingVerified)
                    .HasConstraintName("FKe7eaq6kr2x4cra4llrsom2le9");

                entity.HasOne(d => d.TrainingComitteeMinutesNavigation)
                    .WithMany(p => p.MgVerificationTrainingComitteeMinutesNavigations)
                    .HasForeignKey(d => d.TrainingComitteeMinutes)
                    .HasConstraintName("FKi0at0l0bhyie1oxxq5p6e376w");

                entity.HasOne(d => d.TrainingCommencedNavigation)
                    .WithMany(p => p.MgVerificationTrainingCommencedNavigations)
                    .HasForeignKey(d => d.TrainingCommenced)
                    .HasConstraintName("FKh1bxiodia1w2402ny3lugm3l8");

                entity.HasOne(d => d.TrainingCompletedAsPreviousNavigation)
                    .WithMany(p => p.MgVerificationTrainingCompletedAsPreviousNavigations)
                    .HasForeignKey(d => d.TrainingCompletedAsPrevious)
                    .HasConstraintName("FKsa7dbv1gjbq4gg8j3nlje84s6");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.MgVerifications)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKkxwf5490dlheo24dcx3xo1sxj");

                entity.HasOne(d => d.WspSubmittedNavigation)
                    .WithMany(p => p.MgVerificationWspSubmittedNavigations)
                    .HasForeignKey(d => d.WspSubmitted)
                    .HasConstraintName("FKi6el8pw6wcvh3akgb8wrm2n4d");
            });

            modelBuilder.Entity<MgVerificationCompleted>(entity =>
            {
                entity.ToTable("mg_verification_completed");

                entity.HasIndex(e => e.CompanyId, "FKg1bc04gqk8e1pgphyb0smqf4e");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FinalFin).HasColumnName("final_fin");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.ResetDate)
                    .HasColumnType("datetime")
                    .HasColumnName("reset_date");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.MgVerificationCompleteds)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKg1bc04gqk8e1pgphyb0smqf4e");
            });

            modelBuilder.Entity<MgVerificationDetail>(entity =>
            {
                entity.ToTable("mg_verification_details");

                entity.HasIndex(e => e.ProviderTypeId, "FK3pk29r3wehl988vcq2u6qy0je");

                entity.HasIndex(e => e.CompanyId, "FK4hwsjnrrfp7x4k8w77s9r29bj");

                entity.HasIndex(e => e.EnrolmentStatus, "FK6hu5cp3mdf7uegw7k703siqml");

                entity.HasIndex(e => e.InterventionTypeId, "FK6tiuem3445ufrlrspgtbp162e");

                entity.HasIndex(e => e.QualificationId, "FK7octtocl4t9glrc8791v4097f");

                entity.HasIndex(e => e.SkillsSetId, "FK81m1wjmnrumcsuse3sxbx79u1");

                entity.HasIndex(e => e.SkillsProgramId, "FKdt5o3f9ngqjf9wfnsg94ydg65");

                entity.HasIndex(e => e.MandatoryGrantDetailId, "FKe9tnyntolymxqnoess6g454ih");

                entity.HasIndex(e => e.NqfLevelsId, "FKejtelutm71kpuohxswgwn7hsg");

                entity.HasIndex(e => e.InterventionLevelId, "FKhbgw5epvq8h0fafmwrklpvrmv");

                entity.HasIndex(e => e.DeviationReasonId, "FKhpjmq9c8fc32h55cuypad7qk4");

                entity.HasIndex(e => e.UnitStandardId, "FKici70wmbhp7g3r6uwjxkx1392");

                entity.HasIndex(e => e.OfoCodeId, "FKiy5sadmc1ye0s9wp2q81eqnt");

                entity.HasIndex(e => e.NqfAlignedId, "FKn4tuajd02mrj6kxpo2xrjil5r");

                entity.HasIndex(e => e.WspId, "FKoqqa1oqf2w3744lie5bk1q2ig");

                entity.HasIndex(e => e.NonCreditBearingIntervationTitleId, "FKt6lvhns63lo5ou0fkq9p7mt9h");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActionPlan).HasColumnName("action_plan");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DeviationReasonId).HasColumnName("deviation_reason_id");

                entity.Property(e => e.DisabledAmount).HasColumnName("disabled_amount");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("end_date");

                entity.Property(e => e.EnrolmentStatus).HasColumnName("enrolment_status");

                entity.Property(e => e.EvidanceRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("evidance_required")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.FinalFin).HasColumnName("final_fin");

                entity.Property(e => e.InterventionLevelId).HasColumnName("intervention_level_id");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.MandatoryGrantDetailId).HasColumnName("mandatory_grant_detail_id");

                entity.Property(e => e.NoLearnersCompleted).HasColumnName("no_learners_completed");

                entity.Property(e => e.NoLearnersStarted).HasColumnName("no_learners_started");

                entity.Property(e => e.NoLearnersWithdrawn).HasColumnName("no_learners_withdrawn");

                entity.Property(e => e.NoPlannedLearners).HasColumnName("no_planned_learners");

                entity.Property(e => e.NonCreditBearingIntervationTitleId).HasColumnName("non_credit_bearing_intervation_title_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.NqfAlignedId).HasColumnName("nqf_aligned_id");

                entity.Property(e => e.NqfLevelsId).HasColumnName("nqf_levels_id");

                entity.Property(e => e.OfoCodeId).HasColumnName("ofo_code_id");

                entity.Property(e => e.ProviderTypeId).HasColumnName("provider_type_id");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Quantity).HasColumnName("quantity");

                entity.Property(e => e.ResetDate)
                    .HasColumnType("datetime")
                    .HasColumnName("reset_date");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK4hwsjnrrfp7x4k8w77s9r29bj");

                entity.HasOne(d => d.DeviationReason)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.DeviationReasonId)
                    .HasConstraintName("FKhpjmq9c8fc32h55cuypad7qk4");

                entity.HasOne(d => d.EnrolmentStatusNavigation)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.EnrolmentStatus)
                    .HasConstraintName("FK6hu5cp3mdf7uegw7k703siqml");

                entity.HasOne(d => d.InterventionLevel)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.InterventionLevelId)
                    .HasConstraintName("FKhbgw5epvq8h0fafmwrklpvrmv");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FK6tiuem3445ufrlrspgtbp162e");

                entity.HasOne(d => d.MandatoryGrantDetail)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.MandatoryGrantDetailId)
                    .HasConstraintName("FKe9tnyntolymxqnoess6g454ih");

                entity.HasOne(d => d.NonCreditBearingIntervationTitle)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.NonCreditBearingIntervationTitleId)
                    .HasConstraintName("FKt6lvhns63lo5ou0fkq9p7mt9h");

                entity.HasOne(d => d.NqfAligned)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.NqfAlignedId)
                    .HasConstraintName("FKn4tuajd02mrj6kxpo2xrjil5r");

                entity.HasOne(d => d.NqfLevels)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.NqfLevelsId)
                    .HasConstraintName("FKejtelutm71kpuohxswgwn7hsg");

                entity.HasOne(d => d.OfoCode)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.OfoCodeId)
                    .HasConstraintName("FKiy5sadmc1ye0s9wp2q81eqnt");

                entity.HasOne(d => d.ProviderType)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.ProviderTypeId)
                    .HasConstraintName("FK3pk29r3wehl988vcq2u6qy0je");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK7octtocl4t9glrc8791v4097f");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKdt5o3f9ngqjf9wfnsg94ydg65");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FK81m1wjmnrumcsuse3sxbx79u1");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKici70wmbhp7g3r6uwjxkx1392");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.MgVerificationDetails)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKoqqa1oqf2w3744lie5bk1q2ig");
            });

            modelBuilder.Entity<MgVerificationDetailsAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("mg_verification_details_AUD");

                entity.HasIndex(e => e.Rev, "FKj972drljeif7kd5f6fl7v43jc");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.MandatoryGrantDetailId).HasColumnName("mandatory_grant_detail_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.MgVerificationDetailsAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKj972drljeif7kd5f6fl7v43jc");
            });

            modelBuilder.Entity<Module>(entity =>
            {
                entity.ToTable("modules");

                entity.HasIndex(e => e.ModulesCategoryId, "FK28q3bbaooohpf9pmal2wfufj1");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.ModuleRef)
                    .HasMaxLength(100)
                    .HasColumnName("module_ref");

                entity.Property(e => e.ModuleTitle)
                    .HasMaxLength(500)
                    .HasColumnName("module_title");

                entity.Property(e => e.ModuleTopic)
                    .HasMaxLength(500)
                    .HasColumnName("module_topic");

                entity.Property(e => e.ModulesCategoryId).HasColumnName("modules_category_id");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.ModulesCategory)
                    .WithMany(p => p.Modules)
                    .HasForeignKey(d => d.ModulesCategoryId)
                    .HasConstraintName("FK28q3bbaooohpf9pmal2wfufj1");
            });

            modelBuilder.Entity<ModulesCategory>(entity =>
            {
                entity.ToTable("modules_category");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.FourthDescription)
                    .HasMaxLength(500)
                    .HasColumnName("fourth_description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SecondDescription)
                    .HasMaxLength(500)
                    .HasColumnName("second_description");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.ThirdDescription)
                    .HasMaxLength(500)
                    .HasColumnName("third_description");
            });

            modelBuilder.Entity<ModulesTitle>(entity =>
            {
                entity.ToTable("modules_title");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<ModulesUnitStandard>(entity =>
            {
                entity.ToTable("modules_unit_standards");

                entity.HasIndex(e => e.ModulesId, "FK1vowxs1eq3cn86krtg9bxqku1");

                entity.HasIndex(e => e.UnitStandardsId, "FK7qs92fqic67q1t595i5igqva2");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ModulesId).HasColumnName("modules_id");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.UnitStandardsId).HasColumnName("unit_standards_id");

                entity.HasOne(d => d.Modules)
                    .WithMany(p => p.ModulesUnitStandards)
                    .HasForeignKey(d => d.ModulesId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK1vowxs1eq3cn86krtg9bxqku1");

                entity.HasOne(d => d.UnitStandards)
                    .WithMany(p => p.ModulesUnitStandards)
                    .HasForeignKey(d => d.UnitStandardsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK7qs92fqic67q1t595i5igqva2");
            });

            modelBuilder.Entity<Municipality>(entity =>
            {
                entity.ToTable("municipality");

                entity.HasIndex(e => e.Iddistrict, "FKbofyupnxebsoc3jo6i7u33qig");

                entity.HasIndex(e => e.ProvincesIdprovinces, "FKewkqj12lk508eyhswu7hv01b2");

                entity.HasIndex(e => e.Idmunicipalitytype, "FKqpixl8ublcu1k8e9rxy3eceha");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Iddistrict).HasColumnName("iddistrict");

                entity.Property(e => e.Idmunicipalitytype).HasColumnName("idmunicipalitytype");

                entity.Property(e => e.Map)
                    .HasMaxLength(50)
                    .HasColumnName("map");

                entity.Property(e => e.MunicipalityDesc)
                    .HasMaxLength(100)
                    .HasColumnName("municipality_desc");

                entity.Property(e => e.NotSumitted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("not_sumitted");

                entity.Property(e => e.ProvincesIdprovinces).HasColumnName("provinces_idprovinces");

                entity.HasOne(d => d.IddistrictNavigation)
                    .WithMany(p => p.InverseIddistrictNavigation)
                    .HasForeignKey(d => d.Iddistrict)
                    .HasConstraintName("FKbofyupnxebsoc3jo6i7u33qig");

                entity.HasOne(d => d.IdmunicipalitytypeNavigation)
                    .WithMany(p => p.Municipalities)
                    .HasForeignKey(d => d.Idmunicipalitytype)
                    .HasConstraintName("FKqpixl8ublcu1k8e9rxy3eceha");

                entity.HasOne(d => d.ProvincesIdprovincesNavigation)
                    .WithMany(p => p.Municipalities)
                    .HasForeignKey(d => d.ProvincesIdprovinces)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKewkqj12lk508eyhswu7hv01b2");
            });

            modelBuilder.Entity<MunicipalityType>(entity =>
            {
                entity.ToTable("municipality_type");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.MunicipalityTypeDesc)
                    .HasMaxLength(50)
                    .HasColumnName("municipality_type_desc");

                entity.Property(e => e.SicCode)
                    .HasMaxLength(20)
                    .HasColumnName("sic_code");
            });

            modelBuilder.Entity<NambDecisionHistory>(entity =>
            {
                entity.ToTable("namb_decision_history");

                entity.HasIndex(e => e.CreateUserId, "FKve1ekr6bwg9wwfbpqwitwn1s");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdditionalInformation).HasColumnName("additional_information");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.NambDecisionHistories)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKve1ekr6bwg9wwfbpqwitwn1s");
            });

            modelBuilder.Entity<Nationality>(entity =>
            {
                entity.ToTable("nationality");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CanSelect)
                    .HasColumnType("bit(1)")
                    .HasColumnName("can_select")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.Code)
                    .HasMaxLength(3)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NationalityName)
                    .HasMaxLength(15)
                    .HasColumnName("nationality_name");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<NextRefreshYear>(entity =>
            {
                entity.ToTable("next_refresh_year");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ResetDate)
                    .HasColumnType("datetime")
                    .HasColumnName("reset_date");
            });

            modelBuilder.Entity<NlrdFile21>(entity =>
            {
                entity.ToTable("nlrd_file_21");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("country_code");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.EtqaDecisionNumber)
                    .HasMaxLength(255)
                    .HasColumnName("etqa_decision_number");

                entity.Property(e => e.EtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("etqa_id");

                entity.Property(e => e.LatitudeDegree)
                    .HasMaxLength(255)
                    .HasColumnName("latitude_degree");

                entity.Property(e => e.LatitudeMinutes)
                    .HasMaxLength(255)
                    .HasColumnName("latitude_minutes");

                entity.Property(e => e.LatitudeSeconds)
                    .HasMaxLength(255)
                    .HasColumnName("latitude_seconds");

                entity.Property(e => e.LongitudeDegree)
                    .HasMaxLength(255)
                    .HasColumnName("longitude_degree");

                entity.Property(e => e.LongitudeMinutes)
                    .HasMaxLength(255)
                    .HasColumnName("longitude_minutes");

                entity.Property(e => e.LongitudeSeconds)
                    .HasMaxLength(255)
                    .HasColumnName("longitude_seconds");

                entity.Property(e => e.ProviderAccreditEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("provider_accredit_end_date");

                entity.Property(e => e.ProviderAccreditStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("provider_accredit_start_date");

                entity.Property(e => e.ProviderAccreditationNum)
                    .HasMaxLength(255)
                    .HasColumnName("provider_accreditation_num");

                entity.Property(e => e.ProviderAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("provider_address_1");

                entity.Property(e => e.ProviderAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("provider_address_2");

                entity.Property(e => e.ProviderAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("provider_address_3");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderContactCellNumber)
                    .HasMaxLength(255)
                    .HasColumnName("provider_contact_cell_number");

                entity.Property(e => e.ProviderContactEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("provider_contact_email_address");

                entity.Property(e => e.ProviderContactName)
                    .HasMaxLength(255)
                    .HasColumnName("provider_contact_name");

                entity.Property(e => e.ProviderContactPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("provider_contact_phone_number");

                entity.Property(e => e.ProviderEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqa_id");

                entity.Property(e => e.ProviderFaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("provider_fax_number");

                entity.Property(e => e.ProviderName)
                    .HasMaxLength(255)
                    .HasColumnName("provider_name");

                entity.Property(e => e.ProviderPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("provider_phone_number");

                entity.Property(e => e.ProviderPhysAddressPostCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_phys_address_post_code");

                entity.Property(e => e.ProviderPhysicalAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("provider_physical_address_1");

                entity.Property(e => e.ProviderPhysicalAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("provider_physical_address_2");

                entity.Property(e => e.ProviderPhysicalAddressTown)
                    .HasMaxLength(255)
                    .HasColumnName("provider_physical_address_town");

                entity.Property(e => e.ProviderPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_postal_code");

                entity.Property(e => e.ProviderSarsNumber)
                    .HasMaxLength(255)
                    .HasColumnName("provider_sars_number");

                entity.Property(e => e.ProviderTypeId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_type_id");

                entity.Property(e => e.ProviderWebAddress)
                    .HasMaxLength(255)
                    .HasColumnName("provider_web_address");

                entity.Property(e => e.ProvinceCode)
                    .HasMaxLength(255)
                    .HasColumnName("province_code");

                entity.Property(e => e.StdIndustryClassCode)
                    .HasMaxLength(255)
                    .HasColumnName("std_industry_class_code");

                entity.Property(e => e.StructureStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("structure_status_id");
            });

            modelBuilder.Entity<NlrdFile22>(entity =>
            {
                entity.ToTable("nlrd_file_22");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AbetBandId)
                    .HasMaxLength(255)
                    .HasColumnName("abet_band_id");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.NqfLevelId)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqa_id");

                entity.Property(e => e.QualRegistrationEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("qual_registration_end_date");

                entity.Property(e => e.QualRegistrationStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("qual_registration_start_date");

                entity.Property(e => e.QualificationCode)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_code");

                entity.Property(e => e.QualificationName)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_name");

                entity.Property(e => e.QualificationTypeId)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_type_id");

                entity.Property(e => e.SubdomainId)
                    .HasMaxLength(255)
                    .HasColumnName("subdomain_id");
            });

            modelBuilder.Entity<NlrdFile23>(entity =>
            {
                entity.ToTable("nlrd_file_23");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AbetBandId)
                    .HasMaxLength(255)
                    .HasColumnName("abet_band_id");

                entity.Property(e => e.CourseCode)
                    .HasMaxLength(255)
                    .HasColumnName("course_code");

                entity.Property(e => e.CourseName)
                    .HasMaxLength(255)
                    .HasColumnName("course_name");

                entity.Property(e => e.CourseRegistrationEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("course_registration_end_date");

                entity.Property(e => e.CourseRegistrationStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("course_registration_start_date");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.NqfLevelId)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqa_id");

                entity.Property(e => e.SubdomainId)
                    .HasMaxLength(255)
                    .HasColumnName("subdomain_id");
            });

            modelBuilder.Entity<NlrdFile24>(entity =>
            {
                entity.ToTable("nlrd_file_24");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.EtqaDecisionNumber)
                    .HasMaxLength(255)
                    .HasColumnName("etqa_decision_number");

                entity.Property(e => e.LearnershipId)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_id");

                entity.Property(e => e.ProviderAccredEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("provider_accred_end_date");

                entity.Property(e => e.ProviderAccredStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("provider_accred_start_date");

                entity.Property(e => e.ProviderAccredStatusCode)
                    .HasPrecision(19, 2)
                    .HasColumnName("provider_accred_status_code");

                entity.Property(e => e.ProviderAccreditAssessorInd)
                    .HasMaxLength(255)
                    .HasColumnName("provider_accredit_assessor_ind");

                entity.Property(e => e.ProviderAccreditationNum)
                    .HasMaxLength(255)
                    .HasColumnName("provider_accreditation_num");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqa_id");

                entity.Property(e => e.QualificationId)
                    .HasPrecision(19, 2)
                    .HasColumnName("qualification_id");

                entity.Property(e => e.UnitStandardId)
                    .HasPrecision(19, 2)
                    .HasColumnName("unit_standard_id");
            });

            modelBuilder.Entity<NlrdFile25>(entity =>
            {
                entity.ToTable("nlrd_file_25");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternativeIdType)
                    .HasPrecision(19, 2)
                    .HasColumnName("alternative_id_type");

                entity.Property(e => e.CitizenResidentStatusCode)
                    .HasMaxLength(255)
                    .HasColumnName("citizen_resident_status_code");

                entity.Property(e => e.CommunicatingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("communicating_rating_id");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.DisabilityStatusCode)
                    .HasMaxLength(255)
                    .HasColumnName("disability_status_code");

                entity.Property(e => e.EquityCode)
                    .HasMaxLength(255)
                    .HasColumnName("equity_code");

                entity.Property(e => e.GenderCode)
                    .HasMaxLength(255)
                    .HasColumnName("gender_code");

                entity.Property(e => e.HearingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("hearing_rating_id");

                entity.Property(e => e.HomeLanguageCode)
                    .HasMaxLength(255)
                    .HasColumnName("home_language_code");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.NationalityCode)
                    .HasMaxLength(255)
                    .HasColumnName("nationality_code");

                entity.Property(e => e.PersonAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("person_alternate_id");

                entity.Property(e => e.PersonBirthDate)
                    .HasColumnType("datetime")
                    .HasColumnName("person_birth_date");

                entity.Property(e => e.PersonCellPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("person_cell_phone_number");

                entity.Property(e => e.PersonEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("person_email_address");

                entity.Property(e => e.PersonFaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("person_fax_number");

                entity.Property(e => e.PersonFirstName)
                    .HasMaxLength(255)
                    .HasColumnName("person_first_name");

                entity.Property(e => e.PersonHomeAddrPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("person_home_addr_postal_code");

                entity.Property(e => e.PersonHomeAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("person_home_address_1");

                entity.Property(e => e.PersonHomeAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("person_home_address_2");

                entity.Property(e => e.PersonHomeAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("person_home_address_3");

                entity.Property(e => e.PersonLastName)
                    .HasMaxLength(255)
                    .HasColumnName("person_last_name");

                entity.Property(e => e.PersonMiddleName)
                    .HasMaxLength(255)
                    .HasColumnName("person_middle_name");

                entity.Property(e => e.PersonPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("person_phone_number");

                entity.Property(e => e.PersonPostalAddrPostCode)
                    .HasMaxLength(255)
                    .HasColumnName("person_postal_addr_post_code");

                entity.Property(e => e.PersonPostalAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("person_postal_address_1");

                entity.Property(e => e.PersonPostalAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("person_postal_address_2");

                entity.Property(e => e.PersonPostalAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("person_postal_address_3");

                entity.Property(e => e.PersonPreviousAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("person_previous_alternate_id");

                entity.Property(e => e.PersonPreviousAlternativeIdType)
                    .HasMaxLength(255)
                    .HasColumnName("person_previous_alternative_id_type");

                entity.Property(e => e.PersonPreviousLastName)
                    .HasMaxLength(255)
                    .HasColumnName("person_previous_last_name");

                entity.Property(e => e.PersonPreviousProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("person_previous_provider_code");

                entity.Property(e => e.PersonPreviousProviderEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("person_previous_provider_etqa_id");

                entity.Property(e => e.PersonTitle)
                    .HasMaxLength(255)
                    .HasColumnName("person_title");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqa_id");

                entity.Property(e => e.ProvinceCode)
                    .HasMaxLength(255)
                    .HasColumnName("province_code");

                entity.Property(e => e.RememberingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("remembering_rating_id");

                entity.Property(e => e.SeeingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("seeing_rating_id");

                entity.Property(e => e.SelfcareRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("selfcare_rating_id");

                entity.Property(e => e.SocioeconomicStatusCode)
                    .HasMaxLength(255)
                    .HasColumnName("socioeconomic_status_code");

                entity.Property(e => e.WalkingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("walking_rating_id");
            });

            modelBuilder.Entity<NlrdFile26>(entity =>
            {
                entity.ToTable("nlrd_file_26");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternativeIdType)
                    .HasPrecision(19, 2)
                    .HasColumnName("alternative_id_type");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.DesignationEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("designation_end_date");

                entity.Property(e => e.DesignationEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("designation_etqa_id");

                entity.Property(e => e.DesignationId)
                    .HasMaxLength(255)
                    .HasColumnName("designation_id");

                entity.Property(e => e.DesignationRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("designation_registration_number");

                entity.Property(e => e.DesignationStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("designation_start_date");

                entity.Property(e => e.EtqaDecisionNumber)
                    .HasMaxLength(255)
                    .HasColumnName("etqa_decision_number");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.PersonAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("person_alternate_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqa_id");

                entity.Property(e => e.StructureStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("structure_status_id");
            });

            modelBuilder.Entity<NlrdFile27>(entity =>
            {
                entity.ToTable("nlrd_file_27");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.DesignationEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("designation_etqa_id");

                entity.Property(e => e.DesignationId)
                    .HasMaxLength(255)
                    .HasColumnName("designation_id");

                entity.Property(e => e.DesignationRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("designation_registration_number");

                entity.Property(e => e.EtqaDecisionNumber)
                    .HasMaxLength(255)
                    .HasColumnName("etqa_decision_number");

                entity.Property(e => e.LearnershipId)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_id");

                entity.Property(e => e.NqfDesigStatusCode)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_desig_status_code");

                entity.Property(e => e.NqfDesignationEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("nqf_designation_end_date");

                entity.Property(e => e.NqfDesignationStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("nqf_designation_start_date");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");
            });

            modelBuilder.Entity<NlrdFile28>(entity =>
            {
                entity.ToTable("nlrd_file_28");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternativeIdType)
                    .HasPrecision(19, 2)
                    .HasColumnName("alternative_id_type");

                entity.Property(e => e.AssessorEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_etqa_id");

                entity.Property(e => e.AssessorRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_registration_number");

                entity.Property(e => e.CertificationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("certification_date");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.LearnerAchievementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_achievement_date");

                entity.Property(e => e.LearnerAchievementStatusId)
                    .HasPrecision(19, 2)
                    .HasColumnName("learner_achievement_status_id");

                entity.Property(e => e.LearnerEnrolledDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_enrolled_date");

                entity.Property(e => e.LearnershipId)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_id");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.PersonAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("person_alternate_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqa_id");
            });

            modelBuilder.Entity<NlrdFile29>(entity =>
            {
                entity.ToTable("nlrd_file_29");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternativeIdType)
                    .HasPrecision(19, 2)
                    .HasColumnName("alternative_id_type");

                entity.Property(e => e.AssessorEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_etqa_id");

                entity.Property(e => e.AssessorRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_registration_number");

                entity.Property(e => e.CertificationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("certification_date");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.HonoursClassification)
                    .HasMaxLength(255)
                    .HasColumnName("honours_classification");

                entity.Property(e => e.LearnerAchievementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_achievement_date");

                entity.Property(e => e.LearnerAchievementStatusId)
                    .HasPrecision(19, 2)
                    .HasColumnName("learner_achievement_status_id");

                entity.Property(e => e.LearnerAchievementTypeId)
                    .HasMaxLength(255)
                    .HasColumnName("learner_achievement_type_id");

                entity.Property(e => e.LearnerEnrolledDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_enrolled_date");

                entity.Property(e => e.LearnershipId)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_id");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.PartOf)
                    .HasMaxLength(255)
                    .HasColumnName("part_of");

                entity.Property(e => e.PersonAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("person_alternate_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqa_id");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");
            });

            modelBuilder.Entity<NlrdFile30>(entity =>
            {
                entity.ToTable("nlrd_file_30");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternativeIdType)
                    .HasPrecision(19, 2)
                    .HasColumnName("alternative_id_type");

                entity.Property(e => e.AssessorEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_etqa_id");

                entity.Property(e => e.AssessorRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_registration_number");

                entity.Property(e => e.CertificationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("certification_date");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.HonoursClassification)
                    .HasMaxLength(255)
                    .HasColumnName("honours_classification");

                entity.Property(e => e.LearnerAchievementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_achievement_date");

                entity.Property(e => e.LearnerAchievementStatusId)
                    .HasPrecision(19, 2)
                    .HasColumnName("learner_achievement_status_id");

                entity.Property(e => e.LearnerAchievementTypeId)
                    .HasMaxLength(255)
                    .HasColumnName("learner_achievement_type_id");

                entity.Property(e => e.LearnerEnrolledDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_enrolled_date");

                entity.Property(e => e.LearnershipId)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_id");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.PartOf)
                    .HasMaxLength(255)
                    .HasColumnName("part_of");

                entity.Property(e => e.PersonAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("person_alternate_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqa_id");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");
            });

            modelBuilder.Entity<NoHardToFillVacancy>(entity =>
            {
                entity.ToTable("no_hard_to_fill_vacancies");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<NonCreditBearingIntervationTitle>(entity =>
            {
                entity.ToTable("non_credit_bearing_intervation_title");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<NonCreditBearingIntervationTitleHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("non_credit_bearing_intervation_title_hist");

                entity.HasIndex(e => e.Rev, "FK69nqh0fshxm12q1kdd2xwxc2d");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.NonCreditBearingIntervationTitleHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK69nqh0fshxm12q1kdd2xwxc2d");
            });

            modelBuilder.Entity<NonNqfIntervStatus>(entity =>
            {
                entity.ToTable("non_nqf_interv_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<NonSetaCompany>(entity =>
            {
                entity.ToTable("non_seta_company");

                entity.HasIndex(e => e.PostalAddressId, "FK6hvb4ltp2as8ydc8124sm8gd5");

                entity.HasIndex(e => e.RegisteredAddressId, "FKfww66k198ity23h4sw5200ywk");

                entity.HasIndex(e => e.SetaId, "FKgrspwdkn2dhtvn06o34kmdlmi");

                entity.HasIndex(e => e.SicCodeId, "FKkaqosk1k60i1yduk8fdqlxb2c");

                entity.HasIndex(e => e.ResidentialAddressId, "FKral6knp6nuhmytojhj4esh9rk");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_number");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.CompanyGuid)
                    .HasMaxLength(100)
                    .HasColumnName("company_guid");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(70)
                    .HasColumnName("company_name");

                entity.Property(e => e.CompanyNumber)
                    .HasMaxLength(255)
                    .HasColumnName("company_number");

                entity.Property(e => e.CompanyRegistrationNumber)
                    .HasMaxLength(40)
                    .HasColumnName("company_registration_number");

                entity.Property(e => e.CompanyStatus).HasColumnName("company_status");

                entity.Property(e => e.CompanyType).HasColumnName("company_type");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .HasColumnName("email");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(10)
                    .HasColumnName("levy_number");

                entity.Property(e => e.PostalAddressId).HasColumnName("postal_address_id");

                entity.Property(e => e.RegisteredAddressId).HasColumnName("registered_address_id");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.SetaId).HasColumnName("seta_id");

                entity.Property(e => e.SicCodeId).HasColumnName("sic_code_id");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.HasOne(d => d.PostalAddress)
                    .WithMany(p => p.NonSetaCompanyPostalAddresses)
                    .HasForeignKey(d => d.PostalAddressId)
                    .HasConstraintName("FK6hvb4ltp2as8ydc8124sm8gd5");

                entity.HasOne(d => d.RegisteredAddress)
                    .WithMany(p => p.NonSetaCompanyRegisteredAddresses)
                    .HasForeignKey(d => d.RegisteredAddressId)
                    .HasConstraintName("FKfww66k198ity23h4sw5200ywk");

                entity.HasOne(d => d.ResidentialAddress)
                    .WithMany(p => p.NonSetaCompanyResidentialAddresses)
                    .HasForeignKey(d => d.ResidentialAddressId)
                    .HasConstraintName("FKral6knp6nuhmytojhj4esh9rk");

                entity.HasOne(d => d.Seta)
                    .WithMany(p => p.NonSetaCompanies)
                    .HasForeignKey(d => d.SetaId)
                    .HasConstraintName("FKgrspwdkn2dhtvn06o34kmdlmi");

                entity.HasOne(d => d.SicCode)
                    .WithMany(p => p.NonSetaCompanies)
                    .HasForeignKey(d => d.SicCodeId)
                    .HasConstraintName("FKkaqosk1k60i1yduk8fdqlxb2c");
            });

            modelBuilder.Entity<NonSetaCompanyHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("non_seta_company_hist");

                entity.HasIndex(e => e.Rev, "FK8bntp5cqm5dgxhktresonfq07");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AccreditationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_number");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.CompanyGuid)
                    .HasMaxLength(100)
                    .HasColumnName("company_guid");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(70)
                    .HasColumnName("company_name");

                entity.Property(e => e.CompanyNumber)
                    .HasMaxLength(255)
                    .HasColumnName("company_number");

                entity.Property(e => e.CompanyRegistrationNumber)
                    .HasMaxLength(40)
                    .HasColumnName("company_registration_number");

                entity.Property(e => e.CompanyStatus).HasColumnName("company_status");

                entity.Property(e => e.CompanyType).HasColumnName("company_type");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .HasColumnName("email");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(10)
                    .HasColumnName("levy_number");

                entity.Property(e => e.PostalAddressId).HasColumnName("postal_address_id");

                entity.Property(e => e.RegisteredAddressId).HasColumnName("registered_address_id");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SetaId).HasColumnName("seta_id");

                entity.Property(e => e.SicCodeId).HasColumnName("sic_code_id");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.NonSetaCompanyHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK8bntp5cqm5dgxhktresonfq07");
            });

            modelBuilder.Entity<NonSetaCompanyUser>(entity =>
            {
                entity.ToTable("non_seta_company_users");

                entity.HasIndex(e => e.DesignationId, "FK45rbb2o4m2qcp8vt0xx219333");

                entity.HasIndex(e => e.NonSetaCompanyId, "FK91n0nhi5wgpxf7veseghuyv52");

                entity.HasIndex(e => e.PositionId, "FKjgqdi7acv92gol6kwpuy8ddfj");

                entity.HasIndex(e => e.UserId, "FKlsar609q2p8fwo7pgkbvdnq2n");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.AssessorModType).HasColumnName("assessor_mod_type");

                entity.Property(e => e.CompanyUserType).HasColumnName("company_user_type");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DesignationId).HasColumnName("designation_id");

                entity.Property(e => e.ExistingUser)
                    .HasColumnType("bit(1)")
                    .HasColumnName("existing_user")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NoResponsibility)
                    .HasColumnType("bit(1)")
                    .HasColumnName("no_responsibility");

                entity.Property(e => e.NonSetaCompanyId).HasColumnName("non_seta_company_id");

                entity.Property(e => e.PositionId).HasColumnName("position_id");

                entity.Property(e => e.SmeType).HasColumnName("sme_type");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Designation)
                    .WithMany(p => p.NonSetaCompanyUsers)
                    .HasForeignKey(d => d.DesignationId)
                    .HasConstraintName("FK45rbb2o4m2qcp8vt0xx219333");

                entity.HasOne(d => d.NonSetaCompany)
                    .WithMany(p => p.NonSetaCompanyUsers)
                    .HasForeignKey(d => d.NonSetaCompanyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK91n0nhi5wgpxf7veseghuyv52");

                entity.HasOne(d => d.Position)
                    .WithMany(p => p.NonSetaCompanyUsers)
                    .HasForeignKey(d => d.PositionId)
                    .HasConstraintName("FKjgqdi7acv92gol6kwpuy8ddfj");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.NonSetaCompanyUsers)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKlsar609q2p8fwo7pgkbvdnq2n");
            });

            modelBuilder.Entity<NonSetaQualificationsCompletion>(entity =>
            {
                entity.ToTable("non_seta_qualifications_completion");

                entity.HasIndex(e => e.CompanyLearnersId, "FK1drcipcbo7p5sc5j08kwe351q");

                entity.HasIndex(e => e.SummativeAssessmentReportId, "FK2qt3dkkcsfvg4avr98xr6dvn6");

                entity.HasIndex(e => e.TrainingProviderId, "FKa4lxux1nnwsrgaslek5dsctac");

                entity.HasIndex(e => e.CompanyId, "FKi2f0e3fpix52kox8vbyhjto3u");

                entity.HasIndex(e => e.CreateUserId, "FKthxjiiv0srb43mykdfdnhd8x8");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AchievementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("achievement_date");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.AssessmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("assessment_date");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CompetenceEnum).HasColumnName("competence_enum");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.ModerationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("moderation_date");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SummativeAssessmentReportId).HasColumnName("summative_assessment_report_id");

                entity.Property(e => e.TrainingProviderId).HasColumnName("training_provider_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.NonSetaQualificationsCompletionCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKi2f0e3fpix52kox8vbyhjto3u");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.NonSetaQualificationsCompletions)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FK1drcipcbo7p5sc5j08kwe351q");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.NonSetaQualificationsCompletions)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKthxjiiv0srb43mykdfdnhd8x8");

             /*   entity.HasOne(d => d.SummativeAssessmentReport)
                    .WithMany(p => p.NonSetaQualificationsCompletions)
                    .HasForeignKey(d => d.SummativeAssessmentReportId)
                    .HasConstraintName("FK2qt3dkkcsfvg4avr98xr6dvn6");*/

                entity.HasOne(d => d.TrainingProvider)
                    .WithMany(p => p.NonSetaQualificationsCompletionTrainingProviders)
                    .HasForeignKey(d => d.TrainingProviderId)
                    .HasConstraintName("FKa4lxux1nnwsrgaslek5dsctac");
            });

            modelBuilder.Entity<NqfAlignment>(entity =>
            {
                entity.ToTable("nqf_alignment");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<NqfDesigStatus>(entity =>
            {
                entity.ToTable("nqf_desig_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<NqfLevel>(entity =>
            {
                entity.ToTable("nqf_levels");

                entity.HasIndex(e => e.HighestQualificationRequiredId, "FK4s698feytkumohcsp97jn2r3c");

                entity.HasIndex(e => e.InterventionLevelId, "FK9o3jqnou2fdj2ql4gr39sc3em");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(255)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("createDate");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.HighestQualificationRequiredId).HasColumnName("highest_qualification_required_id");

                entity.Property(e => e.InterventionLevelId).HasColumnName("intervention_level_id");

                entity.Property(e => e.Level).HasColumnName("level");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(255)
                    .HasColumnName("nlrdCode");

                entity.Property(e => e.Pre2009Description)
                    .HasMaxLength(100)
                    .HasColumnName("pre_2009_description");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(255)
                    .HasColumnName("qctoCode");

                entity.Property(e => e.SaqaQualificationDescription)
                    .HasMaxLength(100)
                    .HasColumnName("saqa_qualification_description");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(255)
                    .HasColumnName("setmisCode");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(255)
                    .HasColumnName("smsCode");

                entity.Property(e => e.UnitStandardCode)
                    .HasMaxLength(255)
                    .HasColumnName("unit_standard_code");

                entity.HasOne(d => d.HighestQualificationRequired)
                    .WithMany(p => p.NqfLevels)
                    .HasForeignKey(d => d.HighestQualificationRequiredId)
                    .HasConstraintName("FK4s698feytkumohcsp97jn2r3c");

                entity.HasOne(d => d.InterventionLevel)
                    .WithMany(p => p.NqfLevels)
                    .HasForeignKey(d => d.InterventionLevelId)
                    .HasConstraintName("FK9o3jqnou2fdj2ql4gr39sc3em");
            });

            modelBuilder.Entity<NqfLevelsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("nqf_levels_hist");

                entity.HasIndex(e => e.Rev, "FKg823ri4257oi3ma3xaolu2fnd");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Code)
                    .HasMaxLength(255)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("createDate");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.HighestQualificationRequiredId).HasColumnName("highest_qualification_required_id");

                entity.Property(e => e.InterventionLevelId).HasColumnName("intervention_level_id");

                entity.Property(e => e.Level).HasColumnName("level");

                entity.Property(e => e.Pre2009Description)
                    .HasMaxLength(100)
                    .HasColumnName("pre_2009_description");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SaqaQualificationDescription)
                    .HasMaxLength(100)
                    .HasColumnName("saqa_qualification_description");

                entity.Property(e => e.UnitStandardCode)
                    .HasMaxLength(255)
                    .HasColumnName("unit_standard_code");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.NqfLevelsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKg823ri4257oi3ma3xaolu2fnd");
            });

            modelBuilder.Entity<NsdpQuarterReporting>(entity =>
            {
                entity.ToTable("nsdp_quarter_reporting");

                entity.HasIndex(e => e.NsdpReportConfigId, "FK7obwoauvb8y33bqtnifdi30rf");

                entity.HasIndex(e => e.LastActionUserId, "FKkk339mhaokh66cggygfno96gu");

                entity.HasIndex(e => e.FinancialYearsId, "FKrwycy8si5kncl0bldb5qmyruf");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DataAutoPopulationRan)
                    .HasColumnType("datetime")
                    .HasColumnName("data_auto_population_ran");

                entity.Property(e => e.DataGenerated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("data_generated");

                entity.Property(e => e.FinYearQuarters).HasColumnName("fin_year_quarters");

                entity.Property(e => e.FinYearQuartersLookUpFlatKey).HasColumnName("fin_year_quarters_look_up_flat_key");

                entity.Property(e => e.FinancialYearsId).HasColumnName("financial_years_id");

                entity.Property(e => e.FromDate)
                    .HasColumnType("datetime")
                    .HasColumnName("from_date");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUserId).HasColumnName("last_action_user_id");

                entity.Property(e => e.NsdpReportConfigId).HasColumnName("nsdp_report_config_id");

                entity.Property(e => e.QuarterAchivedAmount).HasColumnName("quarter_achived_amount");

                entity.Property(e => e.QuarterTargetAmount).HasColumnName("quarter_target_amount");

                entity.Property(e => e.SystemUpdate)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_update");

                entity.Property(e => e.ToDate)
                    .HasColumnType("datetime")
                    .HasColumnName("to_date");

                entity.HasOne(d => d.FinancialYears)
                    .WithMany(p => p.NsdpQuarterReportings)
                    .HasForeignKey(d => d.FinancialYearsId)
                    .HasConstraintName("FKrwycy8si5kncl0bldb5qmyruf");

                entity.HasOne(d => d.LastActionUser)
                    .WithMany(p => p.NsdpQuarterReportings)
                    .HasForeignKey(d => d.LastActionUserId)
                    .HasConstraintName("FKkk339mhaokh66cggygfno96gu");

                entity.HasOne(d => d.NsdpReportConfig)
                    .WithMany(p => p.NsdpQuarterReportings)
                    .HasForeignKey(d => d.NsdpReportConfigId)
                    .HasConstraintName("FK7obwoauvb8y33bqtnifdi30rf");
            });

            modelBuilder.Entity<NsdpQuarterReportingsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("nsdp_quarter_reportings_hist");

                entity.HasIndex(e => e.Rev, "FKqtltj8qffaudrki93ci282d8m");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DataAutoPopulationRan)
                    .HasColumnType("datetime")
                    .HasColumnName("data_auto_population_ran");

                entity.Property(e => e.DataGenerated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("data_generated");

                entity.Property(e => e.FinYearQuarters).HasColumnName("fin_year_quarters");

                entity.Property(e => e.FinYearQuartersLookUpFlatKey).HasColumnName("fin_year_quarters_look_up_flat_key");

                entity.Property(e => e.FinancialYearsId).HasColumnName("financial_years_id");

                entity.Property(e => e.FromDate)
                    .HasColumnType("datetime")
                    .HasColumnName("from_date");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUserId).HasColumnName("last_action_user_id");

                entity.Property(e => e.NsdpReportConfigId).HasColumnName("nsdp_report_config_id");

                entity.Property(e => e.QuarterAchivedAmount).HasColumnName("quarter_achived_amount");

                entity.Property(e => e.QuarterTargetAmount).HasColumnName("quarter_target_amount");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SystemUpdate)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_update");

                entity.Property(e => e.ToDate)
                    .HasColumnType("datetime")
                    .HasColumnName("to_date");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.NsdpQuarterReportingsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKqtltj8qffaudrki93ci282d8m");
            });

            modelBuilder.Entity<NsdpReportConfig>(entity =>
            {
                entity.ToTable("nsdp_report_config");

                entity.HasIndex(e => e.LastActionUserId, "FK97hk8dfsskm01l97ig5xm8kp0");

                entity.HasIndex(e => e.FinancialYearsId, "FKk4yidf8bqmc3gouc3q53sp1et");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.FinancialYearsId).HasColumnName("financial_years_id");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUserId).HasColumnName("last_action_user_id");

                entity.Property(e => e.ManualCapture)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manual_capture");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NsdpOutcomes)
                    .HasMaxLength(500)
                    .HasColumnName("nsdp_outcomes");

                entity.Property(e => e.NsdpReportRunType).HasColumnName("nsdp_report_run_type");

                entity.Property(e => e.NsdpSubOutcomes)
                    .HasMaxLength(500)
                    .HasColumnName("nsdp_sub_outcomes");

                entity.Property(e => e.OrderNumber).HasColumnName("order_number");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.TargetAmount).HasColumnName("target_amount");

                entity.HasOne(d => d.FinancialYears)
                    .WithMany(p => p.NsdpReportConfigs)
                    .HasForeignKey(d => d.FinancialYearsId)
                    .HasConstraintName("FKk4yidf8bqmc3gouc3q53sp1et");

                entity.HasOne(d => d.LastActionUser)
                    .WithMany(p => p.NsdpReportConfigs)
                    .HasForeignKey(d => d.LastActionUserId)
                    .HasConstraintName("FK97hk8dfsskm01l97ig5xm8kp0");
            });

            modelBuilder.Entity<NsdpReportConfigHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("nsdp_report_config_hist");

                entity.HasIndex(e => e.Rev, "FK1wb8moi2qn8x8glbksokpkqyc");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.FinancialYearsId).HasColumnName("financial_years_id");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUserId).HasColumnName("last_action_user_id");

                entity.Property(e => e.ManualCapture)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manual_capture");

                entity.Property(e => e.NsdpOutcomes)
                    .HasMaxLength(500)
                    .HasColumnName("nsdp_outcomes");

                entity.Property(e => e.NsdpReportRunType).HasColumnName("nsdp_report_run_type");

                entity.Property(e => e.NsdpSubOutcomes)
                    .HasMaxLength(500)
                    .HasColumnName("nsdp_sub_outcomes");

                entity.Property(e => e.OrderNumber).HasColumnName("order_number");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TargetAmount).HasColumnName("target_amount");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.NsdpReportConfigHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK1wb8moi2qn8x8glbksokpkqyc");
            });

            modelBuilder.Entity<OccupationCategory>(entity =>
            {
                entity.ToTable("occupation_category");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<OccupationCategoryHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("occupation_category_hist");

                entity.HasIndex(e => e.Rev, "FK7b69lkjvuqg3mxbu90kq6xkl6");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.OccupationCategoryHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK7b69lkjvuqg3mxbu90kq6xkl6");
            });

            modelBuilder.Entity<Office>(entity =>
            {
                entity.ToTable("office");

                entity.HasIndex(e => e.PhysicalAddressId, "FKt0guvy1nvuprui5cyt2q3nq1r");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.ContactNumber)
                    .HasMaxLength(20)
                    .HasColumnName("contact_number");

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(500)
                    .HasColumnName("contact_person");

                entity.Property(e => e.ContactPersonEmail)
                    .HasMaxLength(500)
                    .HasColumnName("contact_person_email");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.Email)
                    .HasMaxLength(255)
                    .HasColumnName("email");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.PhysicalAddressId).HasColumnName("physical_address_id");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.PhysicalAddress)
                    .WithMany(p => p.Offices)
                    .HasForeignKey(d => d.PhysicalAddressId)
                    .HasConstraintName("FKt0guvy1nvuprui5cyt2q3nq1r");
            });

            modelBuilder.Entity<Ofo>(entity =>
            {
                entity.ToTable("ofo");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(15)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<OfoCode>(entity =>
            {
                entity.ToTable("ofo_codes");

                entity.HasIndex(e => e.OccupationCategoryId, "FKe7maskea5vqgwwfq79pp398sr");

                entity.HasIndex(e => e.OfoCodesId, "FKsv5hy8l8u494hen2s07sfqooe");

                entity.HasIndex(e => e.OfoCode1, "code")
                    .IsUnique();

                entity.HasIndex(e => e.SpecialisationCode, "spes_code");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Active)
                    .HasColumnType("bit(1)")
                    .HasColumnName("active");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("description");

                entity.Property(e => e.Fm)
                    .HasMaxLength(1000)
                    .HasColumnName("fm");

                entity.Property(e => e.GreenOccupation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("green_occupation");

                entity.Property(e => e.GreenSkill)
                    .HasColumnType("bit(1)")
                    .HasColumnName("green_skill");

                entity.Property(e => e.MajorGroup)
                    .HasMaxLength(6)
                    .HasColumnName("major_group");

                entity.Property(e => e.MinorGroup)
                    .HasMaxLength(6)
                    .HasColumnName("minor_group");

                entity.Property(e => e.OccupationCategoryId).HasColumnName("occupation_category_id");

                entity.Property(e => e.OfoCode1)
                    .HasMaxLength(11)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(255)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SpecialisationCode).HasColumnName("specialisation_code");

                entity.Property(e => e.SubMajorGroup)
                    .HasMaxLength(6)
                    .HasColumnName("sub_major_group");

                entity.Property(e => e.Trade)
                    .HasColumnType("bit(1)")
                    .HasColumnName("trade")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TradeType)
                    .HasMaxLength(255)
                    .HasColumnName("trade_type");

                entity.Property(e => e.UnitGroup)
                    .HasMaxLength(6)
                    .HasColumnName("unit_group");

                entity.Property(e => e.Year).HasColumnName("year");

                entity.HasOne(d => d.OccupationCategory)
                    .WithMany(p => p.OfoCodes)
                    .HasForeignKey(d => d.OccupationCategoryId)
                    .HasConstraintName("FKe7maskea5vqgwwfq79pp398sr");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.InverseOfoCodes)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKsv5hy8l8u494hen2s07sfqooe");
            });

            modelBuilder.Entity<OfoCodesHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("ofo_codes_hist");

                entity.HasIndex(e => e.Rev, "FK5m7m5ny42b5ub1eqq7g8jac2c");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Active)
                    .HasColumnType("bit(1)")
                    .HasColumnName("active");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("description");

                entity.Property(e => e.Fm)
                    .HasMaxLength(1000)
                    .HasColumnName("fm");

                entity.Property(e => e.GreenOccupation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("green_occupation");

                entity.Property(e => e.GreenSkill)
                    .HasColumnType("bit(1)")
                    .HasColumnName("green_skill");

                entity.Property(e => e.MajorGroup)
                    .HasMaxLength(6)
                    .HasColumnName("major_group");

                entity.Property(e => e.MinorGroup)
                    .HasMaxLength(6)
                    .HasColumnName("minor_group");

                entity.Property(e => e.OccupationCategoryId).HasColumnName("occupation_category_id");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(11)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(255)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SpecialisationCode)
                    .HasMaxLength(255)
                    .HasColumnName("specialisation_code");

                entity.Property(e => e.SubMajorGroup)
                    .HasMaxLength(6)
                    .HasColumnName("sub_major_group");

                entity.Property(e => e.Trade)
                    .HasColumnType("bit(1)")
                    .HasColumnName("trade")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TradeType)
                    .HasMaxLength(255)
                    .HasColumnName("trade_type");

                entity.Property(e => e.UnitGroup)
                    .HasMaxLength(6)
                    .HasColumnName("unit_group");

                entity.Property(e => e.Year).HasColumnName("year");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.OfoCodesHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK5m7m5ny42b5ub1eqq7g8jac2c");
            });

            modelBuilder.Entity<OfoQualificationLink>(entity =>
            {
                entity.ToTable("ofo_qualification_link");

                entity.HasIndex(e => e.QualificationId, "FK3lv4mix2uo21xyqomubbhhqq8");

                entity.HasIndex(e => e.OfoCodesId, "FKbv6pltom8p6tpemqiq5nlktjw");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.OfoQualificationLinks)
                    .HasForeignKey(d => d.OfoCodesId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKbv6pltom8p6tpemqiq5nlktjw");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.OfoQualificationLinks)
                    .HasForeignKey(d => d.QualificationId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK3lv4mix2uo21xyqomubbhhqq8");
            });

            modelBuilder.Entity<OnScreenHelp>(entity =>
            {
                entity.ToTable("on_screen_help");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Active)
                    .HasColumnType("bit(1)")
                    .HasColumnName("active")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HelpText).HasColumnName("help_text");

                entity.Property(e => e.Screen)
                    .HasMaxLength(200)
                    .HasColumnName("screen");
            });

            modelBuilder.Entity<OrganisationType>(entity =>
            {
                entity.ToTable("organisation_type");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.ProvideRegistrationCertificateOnReg)
                    .HasColumnType("bit(1)")
                    .HasColumnName("provide_registration_certificate_on_reg")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.PublicPrivate).HasColumnName("public_private");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.WorkPlaceApprovalRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("work_place_approval_required")
                    .HasDefaultValueSql("b'0'");
            });

            modelBuilder.Entity<OrganisedLabourUnion>(entity =>
            {
                entity.ToTable("organised_labour_union");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<PartOf>(entity =>
            {
                entity.ToTable("part_of");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<PaymentRequest>(entity =>
            {
                entity.ToTable("payment_request");

                entity.HasIndex(e => e.ActiveContractDetailId, "FK67x0io3qw04hixptungfbo1go");

                entity.HasIndex(e => e.ApprovalUserId, "FK74872s635p3w93cxkxfphfl0h");

                entity.HasIndex(e => e.RegionalManagerUserId, "FKauqll216iahmns6rag7oc5vn5");

                entity.HasIndex(e => e.ProjectImplementationPlanId, "FKc9rk9otdf6110ec4667fnowyr");

                entity.HasIndex(e => e.CreateUserId, "FKll067qcynk6vej0cqy0xpa92w");

                entity.HasIndex(e => e.CompanyId, "FKo4saajmgcp4pc86yxdcuyqhps");

                entity.HasIndex(e => e.SloUserId, "FKodq1cxjk5s226gdkw4civwl7i");

                entity.HasIndex(e => e.ActiveContractsId, "FKpj6evxwmeep3ifuyoji8pwa80");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActiveContractDetailId).HasColumnName("active_contract_detail_id");

                entity.Property(e => e.ActiveContractsId).HasColumnName("active_contracts_id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalUserId).HasColumnName("approval_user_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.FinalPaymentForContract)
                    .HasColumnType("bit(1)")
                    .HasColumnName("final_payment_for_contract");

                entity.Property(e => e.ProjectImplementationPlanId).HasColumnName("project_implementation_plan_id");

                entity.Property(e => e.RegionalManagerUserId).HasColumnName("regional_manager_user_id");

                entity.Property(e => e.RejectionReason)
                    .HasMaxLength(200)
                    .HasColumnName("rejection_reason");

                entity.Property(e => e.SloUserId).HasColumnName("slo_user_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TotalPayment)
                    .HasPrecision(19, 2)
                    .HasColumnName("total_payment");

                entity.Property(e => e.TranchNumber)
                    .HasMaxLength(255)
                    .HasColumnName("tranch_number");

                entity.HasOne(d => d.ActiveContractDetail)
                    .WithMany(p => p.PaymentRequests)
                    .HasForeignKey(d => d.ActiveContractDetailId)
                    .HasConstraintName("FK67x0io3qw04hixptungfbo1go");

                entity.HasOne(d => d.ActiveContracts)
                    .WithMany(p => p.PaymentRequests)
                    .HasForeignKey(d => d.ActiveContractsId)
                    .HasConstraintName("FKpj6evxwmeep3ifuyoji8pwa80");

                entity.HasOne(d => d.ApprovalUser)
                    .WithMany(p => p.PaymentRequestApprovalUsers)
                    .HasForeignKey(d => d.ApprovalUserId)
                    .HasConstraintName("FK74872s635p3w93cxkxfphfl0h");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.PaymentRequests)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKo4saajmgcp4pc86yxdcuyqhps");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.PaymentRequestCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKll067qcynk6vej0cqy0xpa92w");

                entity.HasOne(d => d.ProjectImplementationPlan)
                    .WithMany(p => p.PaymentRequests)
                    .HasForeignKey(d => d.ProjectImplementationPlanId)
                    .HasConstraintName("FKc9rk9otdf6110ec4667fnowyr");

                entity.HasOne(d => d.RegionalManagerUser)
                    .WithMany(p => p.PaymentRequestRegionalManagerUsers)
                    .HasForeignKey(d => d.RegionalManagerUserId)
                    .HasConstraintName("FKauqll216iahmns6rag7oc5vn5");

                entity.HasOne(d => d.SloUser)
                    .WithMany(p => p.PaymentRequestSloUsers)
                    .HasForeignKey(d => d.SloUserId)
                    .HasConstraintName("FKodq1cxjk5s226gdkw4civwl7i");
            });

            modelBuilder.Entity<PopiActStatus>(entity =>
            {
                entity.ToTable("popi_act_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<PostCodeLink>(entity =>
            {
                entity.ToTable("post_code_link");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Area)
                    .HasMaxLength(255)
                    .HasColumnName("area");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.PostCode)
                    .HasMaxLength(255)
                    .HasColumnName("post_code");

                entity.Property(e => e.PostCodeUsedForSars)
                    .HasMaxLength(255)
                    .HasColumnName("post_code_used_for_sars");

                entity.Property(e => e.PostCodeUsedForSarsNumberValue).HasColumnName("post_code_used_for_sars_number_value");

                entity.Property(e => e.ProvinceCode)
                    .HasMaxLength(255)
                    .HasColumnName("province_code");

                entity.Property(e => e.ProvinceId).HasColumnName("province_id");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<PostCodeLinkHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("post_code_link_hist");

                entity.HasIndex(e => e.Rev, "FKdivl4gtq2cnre8siyxfa0i2jl");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Area)
                    .HasMaxLength(255)
                    .HasColumnName("area");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.PostCode)
                    .HasMaxLength(255)
                    .HasColumnName("post_code");

                entity.Property(e => e.PostCodeUsedForSars)
                    .HasMaxLength(255)
                    .HasColumnName("post_code_used_for_sars");

                entity.Property(e => e.PostCodeUsedForSarsNumberValue).HasColumnName("post_code_used_for_sars_number_value");

                entity.Property(e => e.ProvinceCode)
                    .HasMaxLength(255)
                    .HasColumnName("province_code");

                entity.Property(e => e.ProvinceId).HasColumnName("province_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.PostCodeLinkHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKdivl4gtq2cnre8siyxfa0i2jl");
            });

            modelBuilder.Entity<PreviousSchool>(entity =>
            {
                entity.ToTable("previous_schools");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AddrInit)
                    .HasMaxLength(255)
                    .HasColumnName("addr_init");

                entity.Property(e => e.Addressee)
                    .HasMaxLength(255)
                    .HasColumnName("addressee");

                entity.Property(e => e.Allocation)
                    .HasMaxLength(255)
                    .HasColumnName("allocation");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.ComponentNo)
                    .HasMaxLength(255)
                    .HasColumnName("component_no");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DataYear)
                    .HasMaxLength(255)
                    .HasColumnName("data_year");

                entity.Property(e => e.DemarcationFrom)
                    .HasMaxLength(255)
                    .HasColumnName("demarcation_from");

                entity.Property(e => e.DemarcationTo)
                    .HasMaxLength(255)
                    .HasColumnName("demarcation_to");

                entity.Property(e => e.DmUnName)
                    .HasMaxLength(255)
                    .HasColumnName("dm_un_name");

                entity.Property(e => e.EducatorTwentyEighteen)
                    .HasMaxLength(255)
                    .HasColumnName("educator_twenty_eighteen");

                entity.Property(e => e.EiCircuit)
                    .HasMaxLength(255)
                    .HasColumnName("ei_circuit");

                entity.Property(e => e.EiDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("ei_district");

                entity.Property(e => e.EiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("ei_region");

                entity.Property(e => e.ExDept)
                    .HasMaxLength(255)
                    .HasColumnName("ex_dept");

                entity.Property(e => e.ExamCentre)
                    .HasMaxLength(255)
                    .HasColumnName("exam_centre");

                entity.Property(e => e.ExamNo)
                    .HasMaxLength(255)
                    .HasColumnName("exam_no");

                entity.Property(e => e.Facsimile)
                    .HasMaxLength(255)
                    .HasColumnName("facsimile");

                entity.Property(e => e.GisLatitude)
                    .HasMaxLength(255)
                    .HasColumnName("gis_latitude");

                entity.Property(e => e.GisLongitude)
                    .HasMaxLength(255)
                    .HasColumnName("gis_longitude");

                entity.Property(e => e.GisSource)
                    .HasMaxLength(255)
                    .HasColumnName("gis_source");

                entity.Property(e => e.LearnersTwentyEighteen)
                    .HasMaxLength(255)
                    .HasColumnName("learners_twenty_eighteen");

                entity.Property(e => e.LmUnName)
                    .HasMaxLength(255)
                    .HasColumnName("lm_un_name");

                entity.Property(e => e.Nas)
                    .HasMaxLength(255)
                    .HasColumnName("nas");

                entity.Property(e => e.NatEmis)
                    .HasMaxLength(255)
                    .HasColumnName("nat_emis");

                entity.Property(e => e.NewNatemis)
                    .HasMaxLength(255)
                    .HasColumnName("new_natemis");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NoFeeSchool)
                    .HasMaxLength(255)
                    .HasColumnName("no_fee_school");

                entity.Property(e => e.NodalArea)
                    .HasMaxLength(255)
                    .HasColumnName("nodal_area");

                entity.Property(e => e.OfficialInstitutionName)
                    .HasMaxLength(255)
                    .HasColumnName("official_institution_name");

                entity.Property(e => e.OldNatemis)
                    .HasMaxLength(255)
                    .HasColumnName("old_natemis");

                entity.Property(e => e.OwnerBuildings)
                    .HasMaxLength(255)
                    .HasColumnName("owner_buildings");

                entity.Property(e => e.OwnerLand)
                    .HasMaxLength(255)
                    .HasColumnName("ownerLand");

                entity.Property(e => e.PayPointNo)
                    .HasMaxLength(255)
                    .HasColumnName("pay_point_no");

                entity.Property(e => e.PhasePed)
                    .HasMaxLength(255)
                    .HasColumnName("phase_ped");

                entity.Property(e => e.PostalAddress)
                    .HasMaxLength(255)
                    .HasColumnName("postal_address");

                entity.Property(e => e.Province)
                    .HasMaxLength(255)
                    .HasColumnName("province");

                entity.Property(e => e.ProvinceCd)
                    .HasMaxLength(255)
                    .HasColumnName("province_cd");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.Quintile)
                    .HasMaxLength(255)
                    .HasColumnName("quintile");

                entity.Property(e => e.RegistrationDate)
                    .HasMaxLength(255)
                    .HasColumnName("registration_date");

                entity.Property(e => e.SectionTwentyOne)
                    .HasMaxLength(255)
                    .HasColumnName("section_twenty_one");

                entity.Property(e => e.SectionTwentyOneFunct)
                    .HasMaxLength(255)
                    .HasColumnName("section_twenty_one_funct");

                entity.Property(e => e.Sector)
                    .HasMaxLength(255)
                    .HasColumnName("sector");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SpCode)
                    .HasMaxLength(255)
                    .HasColumnName("sp_code");

                entity.Property(e => e.SpName)
                    .HasMaxLength(255)
                    .HasColumnName("sp_name");

                entity.Property(e => e.Specialization)
                    .HasMaxLength(255)
                    .HasColumnName("specialization");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("status");

                entity.Property(e => e.StreetAddress)
                    .HasMaxLength(255)
                    .HasColumnName("street_address");

                entity.Property(e => e.Suburb)
                    .HasMaxLength(255)
                    .HasColumnName("suburb");

                entity.Property(e => e.Telephone)
                    .HasMaxLength(255)
                    .HasColumnName("telephone");

                entity.Property(e => e.TownCity)
                    .HasMaxLength(255)
                    .HasColumnName("town_city");

                entity.Property(e => e.TownshipVillage)
                    .HasMaxLength(255)
                    .HasColumnName("township_village");

                entity.Property(e => e.TypeDoe)
                    .HasMaxLength(255)
                    .HasColumnName("type_doe");

                entity.Property(e => e.UrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("urban_rural");

                entity.Property(e => e.WardId)
                    .HasMaxLength(255)
                    .HasColumnName("ward_id");
            });

            modelBuilder.Entity<PreviousSchoolsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("previous_schools_hist");

                entity.HasIndex(e => e.Rev, "FK8rkx3ghgcj2c2yo92ak81a79p");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AddrInit)
                    .HasMaxLength(255)
                    .HasColumnName("addr_init");

                entity.Property(e => e.Addressee)
                    .HasMaxLength(255)
                    .HasColumnName("addressee");

                entity.Property(e => e.Allocation)
                    .HasMaxLength(255)
                    .HasColumnName("allocation");

                entity.Property(e => e.ComponentNo)
                    .HasMaxLength(255)
                    .HasColumnName("component_no");

                entity.Property(e => e.DataYear)
                    .HasMaxLength(255)
                    .HasColumnName("data_year");

                entity.Property(e => e.DemarcationFrom)
                    .HasMaxLength(255)
                    .HasColumnName("demarcation_from");

                entity.Property(e => e.DemarcationTo)
                    .HasMaxLength(255)
                    .HasColumnName("demarcation_to");

                entity.Property(e => e.DmUnName)
                    .HasMaxLength(255)
                    .HasColumnName("dm_un_name");

                entity.Property(e => e.EducatorTwentyEighteen)
                    .HasMaxLength(255)
                    .HasColumnName("educator_twenty_eighteen");

                entity.Property(e => e.EiCircuit)
                    .HasMaxLength(255)
                    .HasColumnName("ei_circuit");

                entity.Property(e => e.EiDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("ei_district");

                entity.Property(e => e.EiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("ei_region");

                entity.Property(e => e.ExDept)
                    .HasMaxLength(255)
                    .HasColumnName("ex_dept");

                entity.Property(e => e.ExamCentre)
                    .HasMaxLength(255)
                    .HasColumnName("exam_centre");

                entity.Property(e => e.ExamNo)
                    .HasMaxLength(255)
                    .HasColumnName("exam_no");

                entity.Property(e => e.Facsimile)
                    .HasMaxLength(255)
                    .HasColumnName("facsimile");

                entity.Property(e => e.GisLatitude)
                    .HasMaxLength(255)
                    .HasColumnName("gis_latitude");

                entity.Property(e => e.GisLongitude)
                    .HasMaxLength(255)
                    .HasColumnName("gis_longitude");

                entity.Property(e => e.GisSource)
                    .HasMaxLength(255)
                    .HasColumnName("gis_source");

                entity.Property(e => e.LearnersTwentyEighteen)
                    .HasMaxLength(255)
                    .HasColumnName("learners_twenty_eighteen");

                entity.Property(e => e.LmUnName)
                    .HasMaxLength(255)
                    .HasColumnName("lm_un_name");

                entity.Property(e => e.Nas)
                    .HasMaxLength(255)
                    .HasColumnName("nas");

                entity.Property(e => e.NatEmis)
                    .HasMaxLength(255)
                    .HasColumnName("nat_emis");

                entity.Property(e => e.NewNatemis)
                    .HasMaxLength(255)
                    .HasColumnName("new_natemis");

                entity.Property(e => e.NoFeeSchool)
                    .HasMaxLength(255)
                    .HasColumnName("no_fee_school");

                entity.Property(e => e.NodalArea)
                    .HasMaxLength(255)
                    .HasColumnName("nodal_area");

                entity.Property(e => e.OfficialInstitutionName)
                    .HasMaxLength(255)
                    .HasColumnName("official_institution_name");

                entity.Property(e => e.OldNatemis)
                    .HasMaxLength(255)
                    .HasColumnName("old_natemis");

                entity.Property(e => e.OwnerBuildings)
                    .HasMaxLength(255)
                    .HasColumnName("owner_buildings");

                entity.Property(e => e.OwnerLand)
                    .HasMaxLength(255)
                    .HasColumnName("ownerLand");

                entity.Property(e => e.PayPointNo)
                    .HasMaxLength(255)
                    .HasColumnName("pay_point_no");

                entity.Property(e => e.PhasePed)
                    .HasMaxLength(255)
                    .HasColumnName("phase_ped");

                entity.Property(e => e.PostalAddress)
                    .HasMaxLength(255)
                    .HasColumnName("postal_address");

                entity.Property(e => e.Province)
                    .HasMaxLength(255)
                    .HasColumnName("province");

                entity.Property(e => e.ProvinceCd)
                    .HasMaxLength(255)
                    .HasColumnName("province_cd");

                entity.Property(e => e.Quintile)
                    .HasMaxLength(255)
                    .HasColumnName("quintile");

                entity.Property(e => e.RegistrationDate)
                    .HasMaxLength(255)
                    .HasColumnName("registration_date");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SectionTwentyOne)
                    .HasMaxLength(255)
                    .HasColumnName("section_twenty_one");

                entity.Property(e => e.SectionTwentyOneFunct)
                    .HasMaxLength(255)
                    .HasColumnName("section_twenty_one_funct");

                entity.Property(e => e.Sector)
                    .HasMaxLength(255)
                    .HasColumnName("sector");

                entity.Property(e => e.SpCode)
                    .HasMaxLength(255)
                    .HasColumnName("sp_code");

                entity.Property(e => e.SpName)
                    .HasMaxLength(255)
                    .HasColumnName("sp_name");

                entity.Property(e => e.Specialization)
                    .HasMaxLength(255)
                    .HasColumnName("specialization");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("status");

                entity.Property(e => e.StreetAddress)
                    .HasMaxLength(255)
                    .HasColumnName("street_address");

                entity.Property(e => e.Suburb)
                    .HasMaxLength(255)
                    .HasColumnName("suburb");

                entity.Property(e => e.Telephone)
                    .HasMaxLength(255)
                    .HasColumnName("telephone");

                entity.Property(e => e.TownCity)
                    .HasMaxLength(255)
                    .HasColumnName("town_city");

                entity.Property(e => e.TownshipVillage)
                    .HasMaxLength(255)
                    .HasColumnName("township_village");

                entity.Property(e => e.TypeDoe)
                    .HasMaxLength(255)
                    .HasColumnName("type_doe");

                entity.Property(e => e.UrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("urban_rural");

                entity.Property(e => e.WardId)
                    .HasMaxLength(255)
                    .HasColumnName("ward_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.PreviousSchoolsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK8rkx3ghgcj2c2yo92ak81a79p");
            });

            modelBuilder.Entity<PrioritisationScale>(entity =>
            {
                entity.ToTable("prioritisation_scale");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<ProcessRole>(entity =>
            {
                entity.ToTable("process_roles");

                entity.HasIndex(e => e.RolesId, "FK7byj6d47aj5n3do9qlv8esq7l");

                entity.HasIndex(e => e.HostingCompanyProcessId, "FK91lt4mb2vhkvo10hm31qfwpxq");

                entity.HasIndex(e => e.NextTaskRole, "FK92sosagv7iu9fbqnea1g9mwma");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyUserType).HasColumnName("company_user_type");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyProcessId).HasColumnName("hosting_company_process_id");

                entity.Property(e => e.NextTaskRole).HasColumnName("next_task_role");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

                entity.Property(e => e.RejectMessage).HasColumnName("reject_message");

                entity.Property(e => e.RoleOrder).HasColumnName("role_order");

                entity.Property(e => e.RolePermission).HasColumnName("role_permission");

                entity.Property(e => e.RolesId).HasColumnName("roles_id");

                entity.Property(e => e.TargetClass).HasColumnName("target_class");

                entity.Property(e => e.TargetMethod).HasColumnName("target_method");

                entity.HasOne(d => d.HostingCompanyProcess)
                    .WithMany(p => p.ProcessRoles)
                    .HasForeignKey(d => d.HostingCompanyProcessId)
                    .HasConstraintName("FK91lt4mb2vhkvo10hm31qfwpxq");

                entity.HasOne(d => d.NextTaskRoleNavigation)
                    .WithMany(p => p.ProcessRoleNextTaskRoleNavigations)
                    .HasForeignKey(d => d.NextTaskRole)
                    .HasConstraintName("FK92sosagv7iu9fbqnea1g9mwma");

                entity.HasOne(d => d.Roles)
                    .WithMany(p => p.ProcessRoleRoles)
                    .HasForeignKey(d => d.RolesId)
                    .HasConstraintName("FK7byj6d47aj5n3do9qlv8esq7l");
            });

            modelBuilder.Entity<ProjectImplementationPlan>(entity =>
            {
                entity.ToTable("project_implementation_plan");

                entity.HasIndex(e => e.DgAllocationId, "FK1x5merk1qng2faibrtbdrm7lh");

                entity.HasIndex(e => e.ActiveContractsId, "FK4q3a96usvyg10ttks6t1b081n");

                entity.HasIndex(e => e.CompanyId, "FK519bo8h43yq2rcqr7qpml3ljr");

                entity.HasIndex(e => e.InterventionTypeId, "FKbstu7mqe7t9pmyh6dtk45n5v0");

                entity.HasIndex(e => e.WspId, "FKcbit2sx9ov0tlijukvyxk74v0");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditedProviderIdentified).HasColumnName("accredited_provider_identified");

                entity.Property(e => e.ActiveContractsId).HasColumnName("active_contracts_id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.CoFundingLearnersAwarded).HasColumnName("co_funding_learners_awarded");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DgAllocationId).HasColumnName("dg_allocation_id");

                entity.Property(e => e.EstimatedCompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("estimated_completion_date");

                entity.Property(e => e.EstimatedProgressDate)
                    .HasColumnType("datetime")
                    .HasColumnName("estimated_progress_date");

                entity.Property(e => e.FullyFundedLearnerAwarded).HasColumnName("fully_funded_learner_awarded");

                entity.Property(e => e.InterventionTypeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("intervention_type_description");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.LearnersWithDisability)
                    .HasPrecision(19, 2)
                    .HasColumnName("learners_with_disability");

                entity.Property(e => e.LearnersWithDisabilityAllowanceValue).HasColumnName("learners_with_disability_allowance_value");

                entity.Property(e => e.LearnersWithoutDisability)
                    .HasPrecision(19, 2)
                    .HasColumnName("learners_without_disability");

                entity.Property(e => e.LearnersWithoutDisabilityAllowanceValue).HasColumnName("learners_without_disability_allowance_value");

                entity.Property(e => e.LogisticalAspectsAddressed).HasColumnName("logistical_aspects_addressed");

                entity.Property(e => e.NumberOfLearningInterventions)
                    .HasPrecision(19, 2)
                    .HasColumnName("number_of_learning_interventions");

                entity.Property(e => e.ProjectedInductionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("projected_induction_date");

                entity.Property(e => e.ProjectedRecruitmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("projected_recruitment_date");

                entity.Property(e => e.ProjectedRegistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("projected_registration_date");

                entity.Property(e => e.RecoverableAmount).HasColumnName("recoverable_amount");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TotalAwardAmount)
                    .HasPrecision(19, 2)
                    .HasColumnName("total_award_amount");

                entity.Property(e => e.TotalFundingValue).HasColumnName("total_funding_value");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.ActiveContracts)
                    .WithMany(p => p.ProjectImplementationPlans)
                    .HasForeignKey(d => d.ActiveContractsId)
                    .HasConstraintName("FK4q3a96usvyg10ttks6t1b081n");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.ProjectImplementationPlans)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK519bo8h43yq2rcqr7qpml3ljr");

                entity.HasOne(d => d.DgAllocation)
                    .WithMany(p => p.ProjectImplementationPlans)
                    .HasForeignKey(d => d.DgAllocationId)
                    .HasConstraintName("FK1x5merk1qng2faibrtbdrm7lh");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.ProjectImplementationPlans)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FKbstu7mqe7t9pmyh6dtk45n5v0");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.ProjectImplementationPlans)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKcbit2sx9ov0tlijukvyxk74v0");
            });

            modelBuilder.Entity<ProjectImplementationPlanLearner>(entity =>
            {
                entity.ToTable("project_implementation_plan_learners");

                entity.HasIndex(e => e.InterventionTypeLink, "FK1wbtc0g1n6jeh14pgqrx0jroo");

                entity.HasIndex(e => e.ActiveContractsId, "FK3cr76p2oxpdx91n2tttj2k4l");

                entity.HasIndex(e => e.DgAllocationId, "FK7x3br7l7ir7v60f7d3rcayr0x");

                entity.HasIndex(e => e.ProjectImplementationPlanId, "FKe47wdf8fsft23xo1nohc40juy");

                entity.HasIndex(e => e.WspId, "FKfhb0wyki9nb00yoq0l8e1ge02");

                entity.HasIndex(e => e.CompanyId, "FKgea94y3pej22whtovlotrbgoh");

                entity.HasIndex(e => e.CompanyLearnersId, "FKt9tumqtuxbodqm3ws3xqr2hgx");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActiveContractsId).HasColumnName("active_contracts_id");

                entity.Property(e => e.AllPaymentsCompleted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("all_payments_completed")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DgAllocationId).HasColumnName("dg_allocation_id");

                entity.Property(e => e.InterventionTypeLink).HasColumnName("intervention_type_link");

                entity.Property(e => e.LearnerNumber).HasColumnName("learner_number");

                entity.Property(e => e.NextTranchPayment).HasColumnName("next_tranch_payment");

                entity.Property(e => e.ProjectImplementationPlanId).HasColumnName("project_implementation_plan_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.ActiveContracts)
                    .WithMany(p => p.ProjectImplementationPlanLearners)
                    .HasForeignKey(d => d.ActiveContractsId)
                    .HasConstraintName("FK3cr76p2oxpdx91n2tttj2k4l");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.ProjectImplementationPlanLearners)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKgea94y3pej22whtovlotrbgoh");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.ProjectImplementationPlanLearners)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FKt9tumqtuxbodqm3ws3xqr2hgx");

                entity.HasOne(d => d.DgAllocation)
                    .WithMany(p => p.ProjectImplementationPlanLearners)
                    .HasForeignKey(d => d.DgAllocationId)
                    .HasConstraintName("FK7x3br7l7ir7v60f7d3rcayr0x");

                entity.HasOne(d => d.InterventionTypeLinkNavigation)
                    .WithMany(p => p.ProjectImplementationPlanLearners)
                    .HasForeignKey(d => d.InterventionTypeLink)
                    .HasConstraintName("FK1wbtc0g1n6jeh14pgqrx0jroo");

                entity.HasOne(d => d.ProjectImplementationPlan)
                    .WithMany(p => p.ProjectImplementationPlanLearners)
                    .HasForeignKey(d => d.ProjectImplementationPlanId)
                    .HasConstraintName("FKe47wdf8fsft23xo1nohc40juy");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.ProjectImplementationPlanLearners)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKfhb0wyki9nb00yoq0l8e1ge02");
            });

            modelBuilder.Entity<ProjectImplementationPlanLearnersHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("project_implementation_plan_learners_hist");

                entity.HasIndex(e => e.Rev, "FKketiq79n0fl2auuqakven76i9");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActiveContractsId).HasColumnName("active_contracts_id");

                entity.Property(e => e.AllPaymentsCompleted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("all_payments_completed")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DgAllocationId).HasColumnName("dg_allocation_id");

                entity.Property(e => e.InterventionTypeLink).HasColumnName("intervention_type_link");

                entity.Property(e => e.LearnerNumber).HasColumnName("learner_number");

                entity.Property(e => e.NextTranchPayment).HasColumnName("next_tranch_payment");

                entity.Property(e => e.ProjectImplementationPlanId).HasColumnName("project_implementation_plan_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.ProjectImplementationPlanLearnersHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKketiq79n0fl2auuqakven76i9");
            });

            modelBuilder.Entity<ProjectType>(entity =>
            {
                entity.ToTable("project_type");

                entity.HasIndex(e => e.DgtagId, "FK5jc5rk62qcrwkeg1t559hlijl");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.DgtagId).HasColumnName("dgtag_id");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.ProvinceId).HasColumnName("province_id");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Title)
                    .HasMaxLength(500)
                    .HasColumnName("title");

                entity.HasOne(d => d.Dgtag)
                    .WithMany(p => p.ProjectTypes)
                    .HasForeignKey(d => d.DgtagId)
                    .HasConstraintName("FK5jc5rk62qcrwkeg1t559hlijl");
            });

            modelBuilder.Entity<ProviderAccredStatus>(entity =>
            {
                entity.ToTable("provider_accred_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<ProviderAccreditAssessor>(entity =>
            {
                entity.ToTable("provider_accredit_assessor");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.Ind).HasMaxLength(1);

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<ProviderApplicationSuspensionDeActivated>(entity =>
            {
                entity.ToTable("provider_application_suspension_de_activated");

                entity.HasIndex(e => e.CreateUserId, "FK2ck1bw3439rosbdbp1axin7ys");

                entity.HasIndex(e => e.CompanyId, "FK2jrn2i7agbcgb460pf1s1kymt");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKkfsnm7i3uvma5b2hs5b96055b");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationNumberAtTime)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_number_at_time");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.PreviousProviderStatus).HasColumnName("previous_provider_status");

                entity.Property(e => e.ProviderSusActions).HasColumnName("provider_sus_actions");

                entity.Property(e => e.Reason).HasColumnName("reason");

                entity.Property(e => e.RemovedSuspension)
                    .HasColumnType("bit(1)")
                    .HasColumnName("removed_suspension")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.StatusAssigned).HasColumnName("status_assigned");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.ProviderApplicationSuspensionDeActivateds)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK2jrn2i7agbcgb460pf1s1kymt");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.ProviderApplicationSuspensionDeActivateds)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FK2ck1bw3439rosbdbp1axin7ys");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.ProviderApplicationSuspensionDeActivateds)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKkfsnm7i3uvma5b2hs5b96055b");
            });

            modelBuilder.Entity<ProviderApplicationTradeTestAssessorsLink>(entity =>
            {
                entity.ToTable("provider_application_trade_test_assessors_link");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKf5dme7h6ole22fwmly5jk30r9");

                entity.HasIndex(e => e.UpdateUserId, "FKn8278nddn3s7fjupyue1wv8q8");

                entity.HasIndex(e => e.AssessorModeratorApplicationId, "FKqt3h0rrpa4t7hnijwqkxx4u68");

                entity.HasIndex(e => e.CreateUserId, "FKt0do7pa8f8slisfs8e2mm7tt3");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AssessorModeratorApplicationId).HasColumnName("assessor_moderator_application_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");

                entity.Property(e => e.UpdateUserId).HasColumnName("update_user_id");

                entity.HasOne(d => d.AssessorModeratorApplication)
                    .WithMany(p => p.ProviderApplicationTradeTestAssessorsLinks)
                    .HasForeignKey(d => d.AssessorModeratorApplicationId)
                    .HasConstraintName("FKqt3h0rrpa4t7hnijwqkxx4u68");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.ProviderApplicationTradeTestAssessorsLinkCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKt0do7pa8f8slisfs8e2mm7tt3");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.ProviderApplicationTradeTestAssessorsLinks)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKf5dme7h6ole22fwmly5jk30r9");

                entity.HasOne(d => d.UpdateUser)
                    .WithMany(p => p.ProviderApplicationTradeTestAssessorsLinkUpdateUsers)
                    .HasForeignKey(d => d.UpdateUserId)
                    .HasConstraintName("FKn8278nddn3s7fjupyue1wv8q8");
            });

            modelBuilder.Entity<ProviderApplicationTradeTestAssessorsLinkHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("provider_application_trade_test_assessors_link_hist");

                entity.HasIndex(e => e.Rev, "FKa87obsha25cyd79plmmia1olw");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AssessorModeratorApplicationId).HasColumnName("assessor_moderator_application_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");

                entity.Property(e => e.UpdateUserId).HasColumnName("update_user_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.ProviderApplicationTradeTestAssessorsLinkHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKa87obsha25cyd79plmmia1olw");
            });

            modelBuilder.Entity<ProviderClass>(entity =>
            {
                entity.ToTable("provider_class");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<ProviderStatus>(entity =>
            {
                entity.ToTable("provider_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<ProviderType>(entity =>
            {
                entity.ToTable("provider_type");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AppearOnProviderReg)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appear_on_provider_reg")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AppearOnWsp)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appear_on_wsp")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Province>(entity =>
            {
                entity.ToTable("province");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(5)
                    .HasColumnName("code");

                entity.Property(e => e.Color)
                    .HasMaxLength(7)
                    .HasColumnName("color");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.LandArea)
                    .HasMaxLength(255)
                    .HasColumnName("land_area");

                entity.Property(e => e.Map)
                    .HasMaxLength(50)
                    .HasColumnName("map");

                entity.Property(e => e.ProvinceDesc)
                    .HasMaxLength(50)
                    .HasColumnName("province_desc");

                entity.Property(e => e.StatsProvId)
                    .HasMaxLength(255)
                    .HasColumnName("stats_prov_id");
            });

            modelBuilder.Entity<PurposeOfSiteVisit>(entity =>
            {
                entity.ToTable("purpose_of_site_visit");

                entity.HasIndex(e => e.PurposeOfSiteVisitParentId, "FKbcm16qp3lpin4dwewgg0jy6tx");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.PurposeOfSiteVisitParentId).HasColumnName("purpose_of_site_visit_parent_id");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.PurposeOfSiteVisitParent)
                    .WithMany(p => p.InversePurposeOfSiteVisitParent)
                    .HasForeignKey(d => d.PurposeOfSiteVisitParentId)
                    .HasConstraintName("FKbcm16qp3lpin4dwewgg0jy6tx");
            });

            modelBuilder.Entity<PurposeOfSiteVisitAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("purpose_of_site_visit_AUD");

                entity.HasIndex(e => e.Rev, "FKgampvxn4dg7xfxny9715oqsag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.PurposeOfSiteVisitParentId).HasColumnName("purpose_of_site_visit_parent_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.PurposeOfSiteVisitAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKgampvxn4dg7xfxny9715oqsag");
            });

            modelBuilder.Entity<PurposeOfSiteVisitChild>(entity =>
            {
                entity.ToTable("purpose_of_site_visit_child");

                entity.HasIndex(e => e.PurposeOfSiteVisitParent, "FK7vqgn4t4x0381pxp15u0ycnvx");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.PurposeOfSiteVisitParent).HasColumnName("purpose_of_site_visit_parent");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.PurposeOfSiteVisitParentNavigation)
                    .WithMany(p => p.PurposeOfSiteVisitChildren)
                    .HasForeignKey(d => d.PurposeOfSiteVisitParent)
                    .HasConstraintName("FK7vqgn4t4x0381pxp15u0ycnvx");
            });

            modelBuilder.Entity<QctoFile01>(entity =>
            {
                entity.ToTable("qcto_file_01");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternativeIdType)
                    .HasMaxLength(255)
                    .HasColumnName("alternative_id_type");

                entity.Property(e => e.CitizenResidentStatusCode)
                    .HasMaxLength(255)
                    .HasColumnName("citizen_resident_status_code");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.DisabilityRating)
                    .HasMaxLength(255)
                    .HasColumnName("disability_rating");

                entity.Property(e => e.DisabilityStatusCode)
                    .HasMaxLength(255)
                    .HasColumnName("disability_status_code");

                entity.Property(e => e.EquityCode)
                    .HasMaxLength(255)
                    .HasColumnName("equity_code");

                entity.Property(e => e.GenderCode)
                    .HasMaxLength(255)
                    .HasColumnName("gender_code");

                entity.Property(e => e.HomeLanguageCode)
                    .HasMaxLength(255)
                    .HasColumnName("home_language_code");

                entity.Property(e => e.ImmigrantStatus)
                    .HasMaxLength(255)
                    .HasColumnName("immigrant_status");

                entity.Property(e => e.LearnerAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("learner_alternate_id");

                entity.Property(e => e.LearnerBirthDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_birth_date");

                entity.Property(e => e.LearnerCellPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("learner_cell_phone_number");

                entity.Property(e => e.LearnerEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("learner_email_address");

                entity.Property(e => e.LearnerFaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("learner_fax_number");

                entity.Property(e => e.LearnerFirstName)
                    .HasMaxLength(255)
                    .HasColumnName("learner_first_name");

                entity.Property(e => e.LearnerHomeAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("learner_home_address_1");

                entity.Property(e => e.LearnerHomeAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("learner_home_address_2");

                entity.Property(e => e.LearnerHomeAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("learner_home_address_3");

                entity.Property(e => e.LearnerHomeAddressPostCode)
                    .HasMaxLength(255)
                    .HasColumnName("learner_home_address_post_code");

                entity.Property(e => e.LearnerLastName)
                    .HasMaxLength(255)
                    .HasColumnName("learner_last_name");

                entity.Property(e => e.LearnerMiddleName)
                    .HasMaxLength(255)
                    .HasColumnName("learner_middle_name");

                entity.Property(e => e.LearnerPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("learner_phone_number");

                entity.Property(e => e.LearnerPostalAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("learner_postal_address_1");

                entity.Property(e => e.LearnerPostalAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("learner_postal_address_2");

                entity.Property(e => e.LearnerPostalAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("learner_postal_address_3");

                entity.Property(e => e.LearnerPostalAddressPostCode)
                    .HasMaxLength(255)
                    .HasColumnName("learner_postal_address_post_code");

                entity.Property(e => e.LearnerTitle)
                    .HasMaxLength(255)
                    .HasColumnName("learner_title");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.NationalityCode)
                    .HasMaxLength(255)
                    .HasColumnName("nationality_code");

                entity.Property(e => e.PopiActAgree)
                    .HasMaxLength(255)
                    .HasColumnName("popi_act_agree");

                entity.Property(e => e.PopiActDate)
                    .HasColumnType("datetime")
                    .HasColumnName("popi_act_date");

                entity.Property(e => e.ProvinceCode)
                    .HasMaxLength(255)
                    .HasColumnName("province_code");

                entity.Property(e => e.SdpCode)
                    .HasMaxLength(255)
                    .HasColumnName("sdp_code");

                entity.Property(e => e.SocioeconomicStatusCode)
                    .HasMaxLength(255)
                    .HasColumnName("socioeconomic_status_code");

                entity.Property(e => e.StatssaAreaCode)
                    .HasMaxLength(255)
                    .HasColumnName("statssa_area_code");
            });

            modelBuilder.Entity<QctoFile02>(entity =>
            {
                entity.ToTable("qcto_file_02");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AssessmentCentreCode)
                    .HasMaxLength(255)
                    .HasColumnName("assessment_centre_code");

                entity.Property(e => e.AssessmentPartnerCode)
                    .HasMaxLength(255)
                    .HasColumnName("assessment_partner_code");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.EmploymentStatus)
                    .HasMaxLength(255)
                    .HasColumnName("employment_status");

                entity.Property(e => e.EnrolledSdpCode)
                    .HasMaxLength(255)
                    .HasColumnName("enrolled_sdp_code");

                entity.Property(e => e.ExpectedTrainingCompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("expected_training_completion_date");

                entity.Property(e => e.Flc)
                    .HasMaxLength(255)
                    .HasColumnName("flc");

                entity.Property(e => e.FlcStatementOfResultNumber)
                    .HasMaxLength(255)
                    .HasColumnName("flc_statement_of_result_number");

                entity.Property(e => e.LearnerAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("learner_alternate_id");

                entity.Property(e => e.LearnerEnrolledDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_enrolled_date");

                entity.Property(e => e.LearnerModularAchievementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_modular_achievement_date");

                entity.Property(e => e.LearnerModularAchievementTypeId)
                    .HasMaxLength(255)
                    .HasColumnName("learner_modular_achievement_type_id");

                entity.Property(e => e.LearnerReadinessForEisaTypeId)
                    .HasMaxLength(255)
                    .HasColumnName("learner_readiness_for_eisa_type_id");

                entity.Property(e => e.LinkedToWorkplacePointOfEntryQualification)
                    .HasMaxLength(255)
                    .HasColumnName("linked_to_workplace_point_of_entry_qualification");

                entity.Property(e => e.ModuleAchievementStatus)
                    .HasMaxLength(255)
                    .HasColumnName("module_achievement_status");

                entity.Property(e => e.ModuleCode)
                    .HasMaxLength(255)
                    .HasColumnName("module_code");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.QualificationEntryRequirementStatus)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_entry_requirement_status");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_id");

                entity.Property(e => e.StatementOfResultIssueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("statement_of_result_issue_date");

                entity.Property(e => e.StatementOfResultStatus)
                    .HasMaxLength(255)
                    .HasColumnName("statement_of_result_status");
            });

            modelBuilder.Entity<QctoFile03>(entity =>
            {
                entity.ToTable("qcto_file_03");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AssessmentCentreCode)
                    .HasMaxLength(255)
                    .HasColumnName("assessment_centre_code");

                entity.Property(e => e.AssessmentPartnerCode)
                    .HasMaxLength(255)
                    .HasColumnName("assessment_partner_code");

                entity.Property(e => e.DateAssessed)
                    .HasColumnType("datetime")
                    .HasColumnName("date_assessed");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.EisaComponentAchievementValue)
                    .HasMaxLength(255)
                    .HasColumnName("eisa_component_achievement_value");

                entity.Property(e => e.EisaComponentNumber)
                    .HasMaxLength(255)
                    .HasColumnName("eisa_component_number");

                entity.Property(e => e.EisaPercentageObtained)
                    .HasMaxLength(255)
                    .HasColumnName("eisa_percentage_obtained");

                entity.Property(e => e.LearnerAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("learner_alternate_id");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_id");
            });

            modelBuilder.Entity<QdfCompany>(entity =>
            {
                entity.ToTable("qdf_company");

                entity.HasIndex(e => e.ReviewUserId, "FK1cvnn19adn056ndcrogm0f4ty");

                entity.HasIndex(e => e.CompanyId, "FK2o0s58s0cjval3ecilqqx2vbg");

                entity.HasIndex(e => e.UserId, "FKb914tveo3mjgvh3axrr4sb4k");

                entity.HasIndex(e => e.QualificationsCurriculumDevelopmentId, "FKqhpd104wxlx9x981sseqticoa");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.QualificationsCurriculumDevelopmentId).HasColumnName("qualifications_curriculum_development_id");

                entity.Property(e => e.ReviewDate)
                    .HasColumnType("datetime")
                    .HasColumnName("review_date");

                entity.Property(e => e.ReviewUserId).HasColumnName("review_user_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.QdfCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK2o0s58s0cjval3ecilqqx2vbg");

                entity.HasOne(d => d.QualificationsCurriculumDevelopment)
                    .WithMany(p => p.QdfCompanies)
                    .HasForeignKey(d => d.QualificationsCurriculumDevelopmentId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKqhpd104wxlx9x981sseqticoa");

                entity.HasOne(d => d.ReviewUser)
                    .WithMany(p => p.QdfCompanyReviewUsers)
                    .HasForeignKey(d => d.ReviewUserId)
                    .HasConstraintName("FK1cvnn19adn056ndcrogm0f4ty");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.QdfCompanyUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKb914tveo3mjgvh3axrr4sb4k");
            });

            modelBuilder.Entity<QdfCompanyUser>(entity =>
            {
                entity.ToTable("qdf_company_user");

                entity.HasIndex(e => e.QdfCompanyId, "FK3do8u0m6swjlrbf3ccgt5bw7d");

                entity.HasIndex(e => e.UserId, "FKjc51ifdr10lff4docmj2vtj1a");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.QdfCompanyId).HasColumnName("qdf_company_id");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.QdfCompany)
                    .WithMany(p => p.QdfCompanyUsers)
                    .HasForeignKey(d => d.QdfCompanyId)
                    .HasConstraintName("FK3do8u0m6swjlrbf3ccgt5bw7d");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.QdfCompanyUsersNavigation)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKjc51ifdr10lff4docmj2vtj1a");
            });

            modelBuilder.Entity<QmrAetProgrammeDataHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("qmr_aet_programme_data_hist");

                entity.HasIndex(e => e.Rev, "FKo25ieih7f2rr80mdk5dnxwklx");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AetProgrammeLevel)
                    .HasMaxLength(255)
                    .HasColumnName("aet_programme_level");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CourseDiscription)
                    .HasMaxLength(255)
                    .HasColumnName("course_discription");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateEnteredTheProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_entered_the_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerIssuedWithCertificate)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_issued_with_certificate");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.QmrAetProgrammeDataHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKo25ieih7f2rr80mdk5dnxwklx");
            });

            modelBuilder.Entity<QmrAetProgrammeDatum>(entity =>
            {
                entity.ToTable("qmr_aet_programme_data");

                entity.HasIndex(e => e.QmrFinYearsId, "qmr_aet_programme_data_qmr_fin_years_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AetProgrammeLevel)
                    .HasMaxLength(255)
                    .HasColumnName("aet_programme_level");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CourseDiscription)
                    .HasMaxLength(255)
                    .HasColumnName("course_discription");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateEnteredTheProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_entered_the_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerIssuedWithCertificate)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_issued_with_certificate");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.QmrFinYears)
                    .WithMany(p => p.QmrAetProgrammeData)
                    .HasForeignKey(d => d.QmrFinYearsId)
                    .HasConstraintName("FK5mc1vxjx3dosxqix450fk3e4t");
            });

            modelBuilder.Entity<QmrArtisanDataHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("qmr_artisan_data_hist");

                entity.HasIndex(e => e.Rev, "FKrmltolshc1hqq9u0tr2qhm8rm");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AccreditationNumberKnowladgeComponent)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_number_knowladge_component");

                entity.Property(e => e.AccreditationNumberPracticalComponent)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_number_practical_component");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.ArtisanTradeDiscription)
                    .HasMaxLength(255)
                    .HasColumnName("artisan_trade_discription");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateLearnerAgreementCancelation)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_agreement_cancelation");

                entity.Property(e => e.DateLearnerAgreementCompletion)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_agreement_completion");

                entity.Property(e => e.DateLearnerAgreementRegistration)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_agreement_registration");

                entity.Property(e => e.DateLearnerCertification)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_certification");

                entity.Property(e => e.DateLearnerDeclaredCompetent)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_declared_competent");

                entity.Property(e => e.DateOfBirthNonSaCitizens)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_birth_non_sa_citizens");

                entity.Property(e => e.DateTradeTest12And3)
                    .HasColumnType("datetime")
                    .HasColumnName("date_trade_test_1_2_and_3");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.DoesTheProgrammeAddressSspNeedsSipSkills)
                    .HasMaxLength(255)
                    .HasColumnName("does_the_programme_address_ssp_needs_sip_skills");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.LeadEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("lead_employer");

                entity.Property(e => e.LeadEmployerApprovalNumber)
                    .HasMaxLength(255)
                    .HasColumnName("lead_employer_approval_number");

                entity.Property(e => e.LeadSkillsDevelopmentProviderKnowladgeComponents)
                    .HasMaxLength(255)
                    .HasColumnName("lead_skills_development_provider_knowladge_components");

                entity.Property(e => e.LeadSkillsDevelopmentProviderPracticalComponents)
                    .HasMaxLength(255)
                    .HasColumnName("lead_skills_development_provider_practical_components");

                entity.Property(e => e.LearnerAlternateIdPassportNumber)
                    .HasMaxLength(255)
                    .HasColumnName("learner_alternate_id_passport_number");

                entity.Property(e => e.LearnerCertificationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("learner_certification_number");

                entity.Property(e => e.LearnerIdNumber)
                    .HasMaxLength(255)
                    .HasColumnName("learner_id_number");

                entity.Property(e => e.LearnerMunicipality)
                    .HasMaxLength(255)
                    .HasColumnName("learner_municipality");

                entity.Property(e => e.LearnerName)
                    .HasMaxLength(255)
                    .HasColumnName("learner_name");

                entity.Property(e => e.LearnerOtherNames)
                    .HasMaxLength(255)
                    .HasColumnName("learner_other_names");

                entity.Property(e => e.LearnerPermanentlyEmployed)
                    .HasMaxLength(255)
                    .HasColumnName("learner_permanently_employed");

                entity.Property(e => e.LearnerSurname)
                    .HasMaxLength(255)
                    .HasColumnName("learner_surname");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.Pwd)
                    .HasMaxLength(255)
                    .HasColumnName("pwd");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReasonForCancelation)
                    .HasMaxLength(255)
                    .HasColumnName("reason_for_cancelation");

                entity.Property(e => e.ReasonForNotYetCompetent)
                    .HasMaxLength(255)
                    .HasColumnName("reason_for_not_yet_competent");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SaNonSaCitizens)
                    .HasMaxLength(255)
                    .HasColumnName("sa_non_sa_citizens");

                entity.Property(e => e.SetaIdlelaOrPublicFetAcronym)
                    .HasMaxLength(255)
                    .HasColumnName("seta_idlela_or_public_fet_acronym");

                entity.Property(e => e.TradeTest12And3).HasColumnName("trade_test_1_2_and_3");

                entity.Property(e => e.TradeTestAssessorIdNumber)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_assessor_id_number");

                entity.Property(e => e.TradeTestAssessorName)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_assessor_name");

                entity.Property(e => e.TradeTestAssessorSurname)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_assessor_surname");

                entity.Property(e => e.TradeTestCenter)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_center");

                entity.Property(e => e.TradeTestCenterAccreditationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_center_accreditation_number");

                entity.Property(e => e.TradeTestModeratorIdNumber)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_moderator_id_number");

                entity.Property(e => e.TradeTestModeratorName)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_moderator_name");

                entity.Property(e => e.TradeTestModeratorSurname)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_moderator_surname");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.QmrArtisanDataHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKrmltolshc1hqq9u0tr2qhm8rm");
            });

            modelBuilder.Entity<QmrArtisanDatum>(entity =>
            {
                entity.ToTable("qmr_artisan_data");

                entity.HasIndex(e => e.QmrFinYearsId, "qmr_artisan_data_fin_years_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationNumberKnowladgeComponent)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_number_knowladge_component");

                entity.Property(e => e.AccreditationNumberPracticalComponent)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_number_practical_component");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.ArtisanTradeDiscription)
                    .HasMaxLength(255)
                    .HasColumnName("artisan_trade_discription");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateLearnerAgreementCancelation)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_agreement_cancelation");

                entity.Property(e => e.DateLearnerAgreementCompletion)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_agreement_completion");

                entity.Property(e => e.DateLearnerAgreementRegistration)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_agreement_registration");

                entity.Property(e => e.DateLearnerCertification)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_certification");

                entity.Property(e => e.DateLearnerDeclaredCompetent)
                    .HasColumnType("datetime")
                    .HasColumnName("date_learner_declared_competent");

                entity.Property(e => e.DateOfBirthNonSaCitizens)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_birth_non_sa_citizens");

                entity.Property(e => e.DateTradeTest12And3)
                    .HasColumnType("datetime")
                    .HasColumnName("date_trade_test_1_2_and_3");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.DoesTheProgrammeAddressSspNeedsSipSkills)
                    .HasMaxLength(255)
                    .HasColumnName("does_the_programme_address_ssp_needs_sip_skills");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.LeadEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("lead_employer");

                entity.Property(e => e.LeadEmployerApprovalNumber)
                    .HasMaxLength(255)
                    .HasColumnName("lead_employer_approval_number");

                entity.Property(e => e.LeadSkillsDevelopmentProviderKnowladgeComponents)
                    .HasMaxLength(255)
                    .HasColumnName("lead_skills_development_provider_knowladge_components");

                entity.Property(e => e.LeadSkillsDevelopmentProviderPracticalComponents)
                    .HasMaxLength(255)
                    .HasColumnName("lead_skills_development_provider_practical_components");

                entity.Property(e => e.LearnerAlternateIdPassportNumber)
                    .HasMaxLength(255)
                    .HasColumnName("learner_alternate_id_passport_number");

                entity.Property(e => e.LearnerCertificationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("learner_certification_number");

                entity.Property(e => e.LearnerIdNumber)
                    .HasMaxLength(255)
                    .HasColumnName("learner_id_number");

                entity.Property(e => e.LearnerMunicipality)
                    .HasMaxLength(255)
                    .HasColumnName("learner_municipality");

                entity.Property(e => e.LearnerName)
                    .HasMaxLength(255)
                    .HasColumnName("learner_name");

                entity.Property(e => e.LearnerOtherNames)
                    .HasMaxLength(255)
                    .HasColumnName("learner_other_names");

                entity.Property(e => e.LearnerPermanentlyEmployed)
                    .HasMaxLength(255)
                    .HasColumnName("learner_permanently_employed");

                entity.Property(e => e.LearnerSurname)
                    .HasMaxLength(255)
                    .HasColumnName("learner_surname");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.Pwd)
                    .HasMaxLength(255)
                    .HasColumnName("pwd");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReasonForCancelation)
                    .HasMaxLength(255)
                    .HasColumnName("reason_for_cancelation");

                entity.Property(e => e.ReasonForNotYetCompetent)
                    .HasMaxLength(255)
                    .HasColumnName("reason_for_not_yet_competent");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SaNonSaCitizens)
                    .HasMaxLength(255)
                    .HasColumnName("sa_non_sa_citizens");

                entity.Property(e => e.SetaIdlelaOrPublicFetAcronym)
                    .HasMaxLength(255)
                    .HasColumnName("seta_idlela_or_public_fet_acronym");

                entity.Property(e => e.TradeTest12And3).HasColumnName("trade_test_1_2_and_3");

                entity.Property(e => e.TradeTestAssessorIdNumber)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_assessor_id_number");

                entity.Property(e => e.TradeTestAssessorName)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_assessor_name");

                entity.Property(e => e.TradeTestAssessorSurname)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_assessor_surname");

                entity.Property(e => e.TradeTestCenter)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_center");

                entity.Property(e => e.TradeTestCenterAccreditationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_center_accreditation_number");

                entity.Property(e => e.TradeTestModeratorIdNumber)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_moderator_id_number");

                entity.Property(e => e.TradeTestModeratorName)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_moderator_name");

                entity.Property(e => e.TradeTestModeratorSurname)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_moderator_surname");

                entity.HasOne(d => d.QmrFinYears)
                    .WithMany(p => p.QmrArtisanData)
                    .HasForeignKey(d => d.QmrFinYearsId)
                    .HasConstraintName("FKi4aqkb9ykdqlv7cr6oebk16vh");
            });

            modelBuilder.Entity<QmrBursaryDataHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("qmr_bursary_data_hist");

                entity.HasIndex(e => e.Rev, "FK75c5t2pungemnmut99qi61w2w");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.DescriptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("description_of_the_qualification");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NewBursaryIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("new_bursary_identified");

                entity.Property(e => e.NewContinuingBursary)
                    .HasMaxLength(255)
                    .HasColumnName("new_continuing_bursary");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.QmrBursaryDataHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK75c5t2pungemnmut99qi61w2w");
            });

            modelBuilder.Entity<QmrBursaryDatum>(entity =>
            {
                entity.ToTable("qmr_bursary_data");

                entity.HasIndex(e => e.QmrFinYearsId, "qmr_bursary_data_fin_years_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.DescriptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("description_of_the_qualification");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NewBursaryIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("new_bursary_identified");

                entity.Property(e => e.NewContinuingBursary)
                    .HasMaxLength(255)
                    .HasColumnName("new_continuing_bursary");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.QmrFinYears)
                    .WithMany(p => p.QmrBursaryData)
                    .HasForeignKey(d => d.QmrFinYearsId)
                    .HasConstraintName("FK9illjl0rqinh1t6qgkjtf7l1p");
            });

            modelBuilder.Entity<QmrCandidacyProgrammeDataHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("qmr_candidacy_programme_data_hist");

                entity.HasIndex(e => e.Rev, "FK7bpxrgpl69vb05f96o4r4ts8u");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.QmrCandidacyProgrammeDataHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK7bpxrgpl69vb05f96o4r4ts8u");
            });

            modelBuilder.Entity<QmrCandidacyProgrammeDatum>(entity =>
            {
                entity.ToTable("qmr_candidacy_programme_data");

                entity.HasIndex(e => e.QmrFinYearsId, "qmr_candidacy_programme_data_fin_years_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.QmrFinYears)
                    .WithMany(p => p.QmrCandidacyProgrammeData)
                    .HasForeignKey(d => d.QmrFinYearsId)
                    .HasConstraintName("FK3syc17tncpysxvl3n8i08d8h6");
            });

            modelBuilder.Entity<QmrFinYear>(entity =>
            {
                entity.ToTable("qmr_fin_years");

                entity.HasIndex(e => e.FinancialYearsId, "FK2vvheqc9nwjokukbln66fxrmi");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DataGenerated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("data_generated")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.DataGenerationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("data_generation_date");

                entity.Property(e => e.DateDataGenerated)
                    .HasColumnType("datetime")
                    .HasColumnName("date_data_generated");

                entity.Property(e => e.DateForGeneration)
                    .HasColumnType("datetime")
                    .HasColumnName("date_for_generation");

                entity.Property(e => e.FinYearEnd).HasColumnName("fin_year_end");

                entity.Property(e => e.FinYearQuarters).HasColumnName("fin_year_quarters");

                entity.Property(e => e.FinYearQuartersLookUpFlatKey).HasColumnName("fin_year_quarters_look_up_flat_key");

                entity.Property(e => e.FinYearStart).HasColumnName("fin_year_start");

                entity.Property(e => e.FinancialYearsId).HasColumnName("financial_years_id");

                entity.Property(e => e.FromDate)
                    .HasColumnType("datetime")
                    .HasColumnName("from_date");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(10)
                    .HasColumnName("ref_no");

                entity.Property(e => e.ToDate)
                    .HasColumnType("datetime")
                    .HasColumnName("to_date");

                entity.HasOne(d => d.FinancialYears)
                    .WithMany(p => p.QmrFinYears)
                    .HasForeignKey(d => d.FinancialYearsId)
                    .HasConstraintName("FK2vvheqc9nwjokukbln66fxrmi");
            });

            modelBuilder.Entity<QmrFinYearsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("qmr_fin_years_hist");

                entity.HasIndex(e => e.Rev, "FKpk3tsq9ihceupionbkox2ogfd");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DataGenerated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("data_generated")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.DataGenerationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("data_generation_date");

                entity.Property(e => e.DateDataGenerated)
                    .HasColumnType("datetime")
                    .HasColumnName("date_data_generated");

                entity.Property(e => e.DateForGeneration)
                    .HasColumnType("datetime")
                    .HasColumnName("date_for_generation");

                entity.Property(e => e.FinYearEnd).HasColumnName("fin_year_end");

                entity.Property(e => e.FinYearQuarters).HasColumnName("fin_year_quarters");

                entity.Property(e => e.FinYearQuartersLookUpFlatKey).HasColumnName("fin_year_quarters_look_up_flat_key");

                entity.Property(e => e.FinYearStart).HasColumnName("fin_year_start");

                entity.Property(e => e.FinancialYearsId).HasColumnName("financial_years_id");

                entity.Property(e => e.FromDate)
                    .HasColumnType("datetime")
                    .HasColumnName("from_date");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(10)
                    .HasColumnName("ref_no");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.ToDate)
                    .HasColumnType("datetime")
                    .HasColumnName("to_date");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.QmrFinYearsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKpk3tsq9ihceupionbkox2ogfd");
            });

            modelBuilder.Entity<QmrIndividualUnitStandardDataHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("qmr_individual_unit_standard_data_hist");

                entity.HasIndex(e => e.Rev, "FKlaswdxpt9hx77oys5a73n2tjs");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner).HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.QmrIndividualUnitStandardDataHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKlaswdxpt9hx77oys5a73n2tjs");
            });

            modelBuilder.Entity<QmrIndividualUnitStandardDatum>(entity =>
            {
                entity.ToTable("qmr_individual_unit_standard_data");

                entity.HasIndex(e => e.QmrFinYearsId, "FK53qiygxak01nr40nv1nmorard");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner).HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.QmrFinYears)
                    .WithMany(p => p.QmrIndividualUnitStandardData)
                    .HasForeignKey(d => d.QmrFinYearsId)
                    .HasConstraintName("FK53qiygxak01nr40nv1nmorard");
            });

            modelBuilder.Entity<QmrInternshipDataHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("qmr_internship_data_hist");

                entity.HasIndex(e => e.Rev, "FKd4o0pc8h94hqcak5qb595g8hi");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.QmrInternshipDataHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKd4o0pc8h94hqcak5qb595g8hi");
            });

            modelBuilder.Entity<QmrInternshipDatum>(entity =>
            {
                entity.ToTable("qmr_internship_data");

                entity.HasIndex(e => e.QmrFinYearsId, "qmr_internship_data_fin_years_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.QmrFinYears)
                    .WithMany(p => p.QmrInternshipData)
                    .HasForeignKey(d => d.QmrFinYearsId)
                    .HasConstraintName("FKka84788ks0blulc4gj1k2vsk4");
            });

            modelBuilder.Entity<QmrLearnershipDataHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("qmr_learnership_data_hist");

                entity.HasIndex(e => e.Rev, "FK3cn4trul13kcw472sodp4mg1b");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.QmrLearnershipDataHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK3cn4trul13kcw472sodp4mg1b");
            });

            modelBuilder.Entity<QmrLearnershipDatum>(entity =>
            {
                entity.ToTable("qmr_learnership_data");

                entity.HasIndex(e => e.QmrFinYearsId, "qmr_learnership_data_fin_years_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.QmrFinYears)
                    .WithMany(p => p.QmrLearnershipData)
                    .HasForeignKey(d => d.QmrFinYearsId)
                    .HasConstraintName("FKe95q8oii2fxc8g9v8ln44726y");
            });

            modelBuilder.Entity<QmrLecturerDevelopmentDataHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("qmr_lecturer_development_data_hist");

                entity.HasIndex(e => e.Rev, "FKas0d64ea2wrehr7ta566ys4f5");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner).HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.QmrLecturerDevelopmentDataHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKas0d64ea2wrehr7ta566ys4f5");
            });

            modelBuilder.Entity<QmrLecturerDevelopmentDatum>(entity =>
            {
                entity.ToTable("qmr_lecturer_development_data");

                entity.HasIndex(e => e.QmrFinYearsId, "FKp4j4v8l6584tudnlj832kia8x");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner).HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.QmrFinYears)
                    .WithMany(p => p.QmrLecturerDevelopmentData)
                    .HasForeignKey(d => d.QmrFinYearsId)
                    .HasConstraintName("FKp4j4v8l6584tudnlj832kia8x");
            });

            modelBuilder.Entity<QmrRplDataHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("qmr_rpl_data_hist");

                entity.HasIndex(e => e.Rev, "FKl0m71vc8vbybrlkn64cx9kwnj");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner).HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.QmrRplDataHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKl0m71vc8vbybrlkn64cx9kwnj");
            });

            modelBuilder.Entity<QmrRplDatum>(entity =>
            {
                entity.ToTable("qmr_rpl_data");

                entity.HasIndex(e => e.QmrFinYearsId, "FKpq1g2istn68n80axl1f1oiri8");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner).HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.QmrFinYears)
                    .WithMany(p => p.QmrRplData)
                    .HasForeignKey(d => d.QmrFinYearsId)
                    .HasConstraintName("FKpq1g2istn68n80axl1f1oiri8");
            });

            modelBuilder.Entity<QmrSkillsProgrammeDataHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("qmr_skills_programme_data_hist");

                entity.HasIndex(e => e.Rev, "FKf57j7rog9gbs2vgr31x0ikn2g");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.QmrSkillsProgrammeDataHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKf57j7rog9gbs2vgr31x0ikn2g");
            });

            modelBuilder.Entity<QmrSkillsProgrammeDatum>(entity =>
            {
                entity.ToTable("qmr_skills_programme_data");

                entity.HasIndex(e => e.QmrFinYearsId, "qmr_skills_programme_data_fin_years_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActualStartDateOfTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("actual_start_date_of_the_learning_programme");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateRecivedCertificateLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_recived_certificate_learning_programme");

                entity.Property(e => e.DateTheLearnerCompletedTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_completed_the_learning_programme");

                entity.Property(e => e.DateTheLearnerEnteredTheLearningProgramme)
                    .HasColumnType("datetime")
                    .HasColumnName("date_the_learner_entered_the_learning_programme");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.IsTrainingProviderPrivatePublic)
                    .HasMaxLength(255)
                    .HasColumnName("is_training_provider_private_public");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NameOfTheTraingProvider)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_traing_provider");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.TrainingProviderAccrediciationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_accrediciation_number");

                entity.Property(e => e.TrainingProviderContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("training_provider_contact_details");

                entity.Property(e => e.TypeOfLearningProgramme)
                    .HasMaxLength(255)
                    .HasColumnName("type_of_learning_programme");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.QmrFinYears)
                    .WithMany(p => p.QmrSkillsProgrammeData)
                    .HasForeignKey(d => d.QmrFinYearsId)
                    .HasConstraintName("FKhhf7umm9p3p07cyr2augj8cnr");
            });

            modelBuilder.Entity<QmrTvetDataHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("qmr_tvet_data_hist");

                entity.HasIndex(e => e.Rev, "FKd9w1eiuk2difwx45lu2o8e4oh");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("completion_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.DoesTheProgrammeAddressSspNeedsSipSkillsNeeds)
                    .HasMaxLength(255)
                    .HasColumnName("does_the_programme_address_ssp_needs_sip_skills_needs");

                entity.Property(e => e.DurationOfPlacementReflectsStartAndEndDates)
                    .HasMaxLength(255)
                    .HasColumnName("duration_of_placement_reflects_start_and_end_dates");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfInstetution)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_instetution");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.QmrTvetDataHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKd9w1eiuk2difwx45lu2o8e4oh");
            });

            modelBuilder.Entity<QmrTvetDatum>(entity =>
            {
                entity.ToTable("qmr_tvet_data");

                entity.HasIndex(e => e.QmrFinYearsId, "qmr_tvet_data_fin_years_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("completion_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.DoesTheProgrammeAddressSspNeedsSipSkillsNeeds)
                    .HasMaxLength(255)
                    .HasColumnName("does_the_programme_address_ssp_needs_sip_skills_needs");

                entity.Property(e => e.DurationOfPlacementReflectsStartAndEndDates)
                    .HasMaxLength(255)
                    .HasColumnName("duration_of_placement_reflects_start_and_end_dates");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfInstetution)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_instetution");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.QmrFinYears)
                    .WithMany(p => p.QmrTvetData)
                    .HasForeignKey(d => d.QmrFinYearsId)
                    .HasConstraintName("FKtloj0ya5ry5ghrab276uds40h");
            });

            modelBuilder.Entity<QmrUniversityStudentDataHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("qmr_university_student_data_hist");

                entity.HasIndex(e => e.Rev, "FKb9itx2ky9qsb4piammxbgxupi");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("completion_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.DurationOfPlacementReflectsStartAndEndDates)
                    .HasMaxLength(255)
                    .HasColumnName("duration_of_placement_reflects_start_and_end_dates");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfInstetution)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_Instetution");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.QmrUniversityStudentDataHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKb9itx2ky9qsb4piammxbgxupi");
            });

            modelBuilder.Entity<QmrUniversityStudentDatum>(entity =>
            {
                entity.ToTable("qmr_university_student_data");

                entity.HasIndex(e => e.QmrFinYearsId, "qmr_university_student_data_fin_years_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AgeIndicator).HasColumnName("age_indicator");

                entity.Property(e => e.AgeOfLearner).HasColumnName("age_of_learner");

                entity.Property(e => e.AmountSpentPerLearner)
                    .HasMaxLength(255)
                    .HasColumnName("amount_spent_per_learner");

                entity.Property(e => e.CompanyLearnerFlatLink).HasColumnName("company_learner_flat_link");

                entity.Property(e => e.CompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("completion_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Disability)
                    .HasMaxLength(255)
                    .HasColumnName("disability");

                entity.Property(e => e.DisabilityIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("disabilityIdentified");

                entity.Property(e => e.DurationOfPlacementReflectsStartAndEndDates)
                    .HasMaxLength(255)
                    .HasColumnName("duration_of_placement_reflects_start_and_end_dates");

                entity.Property(e => e.EmployedUnEmployed).HasColumnName("employed_un_employed");

                entity.Property(e => e.EmployerContactDetails)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_details");

                entity.Property(e => e.EmployerRegistartionSdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registartion_sdl_number");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.IdNumberOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("id_number_of_the_learner");

                entity.Property(e => e.IsTheLearnerResidentialAreaUrbanRural)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_learner_residential_area_urban_rural");

                entity.Property(e => e.IsTheProgrammeSetaIndustryFunded)
                    .HasMaxLength(255)
                    .HasColumnName("is_the_programme_seta_industry_funded");

                entity.Property(e => e.LearnerLocalDistrictMunciplaity)
                    .HasMaxLength(255)
                    .HasColumnName("learner_local_district_munciplaity");

                entity.Property(e => e.LearnerProvince)
                    .HasMaxLength(255)
                    .HasColumnName("learner_province");

                entity.Property(e => e.NameOfInstetution)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_Instetution");

                entity.Property(e => e.NameOfTheEmployer)
                    .HasMaxLength(255)
                    .HasColumnName("name_of_the_employer");

                entity.Property(e => e.NamesOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("names_of_the_learner");

                entity.Property(e => e.NonRsaCitizen)
                    .HasMaxLength(255)
                    .HasColumnName("non_rsa_citizen");

                entity.Property(e => e.NqfLevel)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.QmrEnteredCompleted).HasColumnName("qmr_entered_completed");

                entity.Property(e => e.QmrEquity).HasColumnName("qmr_equity");

                entity.Property(e => e.QmrFinYearsId).HasColumnName("qmr_fin_years_id");

                entity.Property(e => e.QmrGender).HasColumnName("qmr_gender");

                entity.Property(e => e.QualificationAsPerOfoCodeDesctiptionOfTheQualification)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_as_per_ofo_code_desctiption_of_the_qualification");

                entity.Property(e => e.Race)
                    .HasMaxLength(255)
                    .HasColumnName("race");

                entity.Property(e => e.ReportingPeriod)
                    .HasMaxLength(255)
                    .HasColumnName("reporting_period");

                entity.Property(e => e.RsaCitizen)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rsa_citizen");

                entity.Property(e => e.SpecifyLearnerResidentialArea)
                    .HasMaxLength(255)
                    .HasColumnName("specify_learner_residential_area");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.SurnameOfTheLearner)
                    .HasMaxLength(255)
                    .HasColumnName("surname_of_the_learner");

                entity.Property(e => e.Youth)
                    .HasMaxLength(255)
                    .HasColumnName("youth");

                entity.HasOne(d => d.QmrFinYears)
                    .WithMany(p => p.QmrUniversityStudentData)
                    .HasForeignKey(d => d.QmrFinYearsId)
                    .HasConstraintName("FKr5midr5eduw5e3evo5wjcxs8u");
            });

            modelBuilder.Entity<QualificationEntryRequirement>(entity =>
            {
                entity.ToTable("qualification_entry_requirement");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<QualificationMultipleSelection>(entity =>
            {
                entity.ToTable("qualification_multiple_selection");

                entity.HasIndex(e => e.CreateUserId, "FK16m4bowo68gx2hks83agxoenk");

                entity.HasIndex(e => e.QualificationId, "FKgp6dejqisgtv08ilga0gpgttu");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.ForProcess).HasColumnName("for_process");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.QualificationMultipleSelections)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FK16m4bowo68gx2hks83agxoenk");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.QualificationMultipleSelections)
                    .HasForeignKey(d => d.QualificationId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKgp6dejqisgtv08ilga0gpgttu");
            });

            modelBuilder.Entity<QualificationMultipleSelectionHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("qualification_multiple_selection_hist");

                entity.HasIndex(e => e.Rev, "FK5plejmfbvo3hcfh09g9al1try");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.ForProcess).HasColumnName("for_process");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.QualificationMultipleSelectionHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK5plejmfbvo3hcfh09g9al1try");
            });

            modelBuilder.Entity<QualificationTask>(entity =>
            {
                entity.ToTable("qualification_tasks");

                entity.HasIndex(e => e.QualificationId, "FKcp3u8ealmo3pabhmb64v7gn7o");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.TaskDescription)
                    .HasMaxLength(500)
                    .HasColumnName("task_description");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.QualificationTasks)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKcp3u8ealmo3pabhmb64v7gn7o");
            });

            modelBuilder.Entity<QualificationToolKit>(entity =>
            {
                entity.ToTable("qualification_tool_kit");

                entity.HasIndex(e => e.QualificationId, "FKku2uur8mqh01aulvje9k0iu1g");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.QualificationToolKits)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKku2uur8mqh01aulvje9k0iu1g");
            });

            modelBuilder.Entity<QualificationToolList>(entity =>
            {
                entity.ToTable("qualification_tool_list");

                entity.HasIndex(e => e.QualificationId, "FK9rpysjficdg1mdome7w2qma01");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.ToolList).HasColumnName("tool_list");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.QualificationToolLists)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK9rpysjficdg1mdome7w2qma01");
            });

            modelBuilder.Entity<QualificationType>(entity =>
            {
                entity.ToTable("qualification_type");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<QualificationUnitStandard>(entity =>
            {
                entity.ToTable("qualification_unit_standards");

                entity.HasIndex(e => e.QualificationId, "FKlntp0p0wm83rm06k1sw7343vy");

                entity.HasIndex(e => e.UnitStandardsId, "FKm4lktmh0k681ln9g30vswo94o");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreditsEntry)
                    .HasMaxLength(255)
                    .HasColumnName("credits_entry");

                entity.Property(e => e.ImportEntry)
                    .HasColumnType("bit(1)")
                    .HasColumnName("import_entry")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ImportSuccessful)
                    .HasColumnType("bit(1)")
                    .HasColumnName("import_successful")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.QualificationIdEntry)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_id_entry");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.TypeEntry)
                    .HasMaxLength(255)
                    .HasColumnName("type_entry");

                entity.Property(e => e.UnitStandardIdEntry)
                    .HasMaxLength(255)
                    .HasColumnName("unit_standard_id_entry");

                entity.Property(e => e.UnitStandardTypeEnum).HasColumnName("unit_standard_type_enum");

                entity.Property(e => e.UnitStandardsId).HasColumnName("unit_standards_id");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.QualificationUnitStandards)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKlntp0p0wm83rm06k1sw7343vy");

                entity.HasOne(d => d.UnitStandards)
                    .WithMany(p => p.QualificationUnitStandards)
                    .HasForeignKey(d => d.UnitStandardsId)
                    .HasConstraintName("FKm4lktmh0k681ln9g30vswo94o");
            });

            modelBuilder.Entity<QualificationsCurriculumDevelopment>(entity =>
            {
                entity.ToTable("qualifications_curriculum_development");

                entity.HasIndex(e => e.ApproveUser, "FK40pg80nxsy3btkmcq50rp9i8f");

                entity.HasIndex(e => e.CompanyId, "FK5r7cdy5i9f5w212k72maij0mg");

                entity.HasIndex(e => e.CreateUser, "FK7bkp6n35tbnbaqy50nhxojrjq");

                entity.HasIndex(e => e.OfoCodesId, "FKdo5bft02ecjbj0ysqa5a064vq");

                entity.HasIndex(e => e.UploadUser, "FKjfuph9330ygdr0wrforlj96w9");

                entity.HasIndex(e => e.SubmitUser, "FKs5asxxp5o9xbsrnw197jxmlu4");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApproveUser).HasColumnName("approve_user");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUser).HasColumnName("create_user");

                entity.Property(e => e.CurrentTraining).HasColumnName("current_training");

                entity.Property(e => e.Demand).HasColumnName("demand");

                entity.Property(e => e.EdisipChecked)
                    .HasColumnType("bit(1)")
                    .HasColumnName("edisip_checked");

                entity.Property(e => e.EdisipCheckedEvidence)
                    .HasMaxLength(255)
                    .HasColumnName("edisip_checked_evidence");

                entity.Property(e => e.IpapChecked)
                    .HasColumnType("bit(1)")
                    .HasColumnName("ipap_checked");

                entity.Property(e => e.IpapCheckedEvidence)
                    .HasMaxLength(255)
                    .HasColumnName("ipap_checked_evidence");

                entity.Property(e => e.KeyStakeholders).HasColumnName("key_stakeholders");

                entity.Property(e => e.NdpChecked)
                    .HasColumnType("bit(1)")
                    .HasColumnName("ndp_checked");

                entity.Property(e => e.NdpCheckedEvidence)
                    .HasMaxLength(255)
                    .HasColumnName("ndp_checked_evidence");

                entity.Property(e => e.NewDevelopment1).HasColumnName("new_development_1");

                entity.Property(e => e.NewDevelopment2).HasColumnName("new_development_2");

                entity.Property(e => e.NewDevelopment3).HasColumnName("new_development_3");

                entity.Property(e => e.NgpChecked)
                    .HasColumnType("bit(1)")
                    .HasColumnName("ngp_checked");

                entity.Property(e => e.NgpCheckedEvidence)
                    .HasMaxLength(255)
                    .HasColumnName("ngp_checked_evidence");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.PrimaryServiceOccupation).HasColumnName("primary_service_occupation");

                entity.Property(e => e.PurposeQualification).HasColumnName("purpose_qualification");

                entity.Property(e => e.ReAlignmentQualificationIdList).HasColumnName("re_alignment_qualification_id_list");

                entity.Property(e => e.ReviewQualificationIdList).HasColumnName("review_qualification_id_list");

                entity.Property(e => e.RoleQualification).HasColumnName("role_qualification");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SubmitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("submit_date");

                entity.Property(e => e.SubmitUser).HasColumnName("submit_user");

                entity.Property(e => e.TemplateType)
                    .HasMaxLength(100)
                    .HasColumnName("template_type");

                entity.Property(e => e.TemplateTypeEnum).HasColumnName("template_type_enum");

                entity.Property(e => e.UploadDate)
                    .HasColumnType("datetime")
                    .HasColumnName("upload_date");

                entity.Property(e => e.UploadUser).HasColumnName("upload_user");

                entity.Property(e => e.UsersService).HasColumnName("users_service");

                entity.HasOne(d => d.ApproveUserNavigation)
                    .WithMany(p => p.QualificationsCurriculumDevelopmentApproveUserNavigations)
                    .HasForeignKey(d => d.ApproveUser)
                    .HasConstraintName("FK40pg80nxsy3btkmcq50rp9i8f");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.QualificationsCurriculumDevelopments)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK5r7cdy5i9f5w212k72maij0mg");

                entity.HasOne(d => d.CreateUserNavigation)
                    .WithMany(p => p.QualificationsCurriculumDevelopmentCreateUserNavigations)
                    .HasForeignKey(d => d.CreateUser)
                    .HasConstraintName("FK7bkp6n35tbnbaqy50nhxojrjq");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.QualificationsCurriculumDevelopments)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKdo5bft02ecjbj0ysqa5a064vq");

                entity.HasOne(d => d.SubmitUserNavigation)
                    .WithMany(p => p.QualificationsCurriculumDevelopmentSubmitUserNavigations)
                    .HasForeignKey(d => d.SubmitUser)
                    .HasConstraintName("FKs5asxxp5o9xbsrnw197jxmlu4");

                entity.HasOne(d => d.UploadUserNavigation)
                    .WithMany(p => p.QualificationsCurriculumDevelopmentUploadUserNavigations)
                    .HasForeignKey(d => d.UploadUser)
                    .HasConstraintName("FKjfuph9330ygdr0wrforlj96w9");
            });

            modelBuilder.Entity<Ratio>(entity =>
            {
                entity.ToTable("ratio");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Region>(entity =>
            {
                entity.ToTable("region");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<RegionTown>(entity =>
            {
                entity.ToTable("region_town");

                entity.HasIndex(e => e.TownId, "FK4hvcmgi0xw7h78llw69v078ff");

                entity.HasIndex(e => e.OtherId, "FKenoydebovtj7paqunbtklnt2g");

                entity.HasIndex(e => e.RegionId, "FKkqiu6hgfvn9fkhd5nn3y6s4qa");

                entity.HasIndex(e => e.CloId, "FKpjfp5k41tgi6huobioqyq6om9");

                entity.HasIndex(e => e.CrmId, "FKqji97f1xh3euaqd2wgtsiay0c");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CloId).HasColumnName("clo_id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CrmId).HasColumnName("crm_id");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OtherId).HasColumnName("other_id");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.RegionId).HasColumnName("region_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.TownId).HasColumnName("town_id");

                entity.HasOne(d => d.Clo)
                    .WithMany(p => p.RegionTownClos)
                    .HasForeignKey(d => d.CloId)
                    .HasConstraintName("FKpjfp5k41tgi6huobioqyq6om9");

                entity.HasOne(d => d.Crm)
                    .WithMany(p => p.RegionTownCrms)
                    .HasForeignKey(d => d.CrmId)
                    .HasConstraintName("FKqji97f1xh3euaqd2wgtsiay0c");

                entity.HasOne(d => d.Other)
                    .WithMany(p => p.RegionTownOthers)
                    .HasForeignKey(d => d.OtherId)
                    .HasConstraintName("FKenoydebovtj7paqunbtklnt2g");

                entity.HasOne(d => d.Region)
                    .WithMany(p => p.RegionTowns)
                    .HasForeignKey(d => d.RegionId)
                    .HasConstraintName("FKkqiu6hgfvn9fkhd5nn3y6s4qa");

                entity.HasOne(d => d.Town)
                    .WithMany(p => p.RegionTowns)
                    .HasForeignKey(d => d.TownId)
                    .HasConstraintName("FK4hvcmgi0xw7h78llw69v078ff");
            });

            modelBuilder.Entity<RejectReason>(entity =>
            {
                entity.ToTable("reject_reasons");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                /*entity.Property(e => e.ForClo)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_clo");*/

                entity.Property(e => e.ForCrm)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_crm");

                entity.Property(e => e.ForExecutive)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_executive");

                entity.Property(e => e.ForManager)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_manager");

                entity.Property(e => e.ForProcess).HasColumnName("for_process");

                entity.Property(e => e.ForSeniorManager)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_senior_manager");

                entity.Property(e => e.HowTo)
                    .HasMaxLength(500)
                    .HasColumnName("how_to");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SoftDeleted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_deleted")
                    .HasDefaultValueSql("b'0'");
            });

            modelBuilder.Entity<RejectReasonMultipleSelection>(entity =>
            {
                entity.ToTable("reject_reason_multiple_selection");

                entity.HasIndex(e => e.RejectReasonId, "FK6wjtk25t9lwwpig44b25awdeb");

                entity.HasIndex(e => e.CreateUserId, "FKeckxgcehvjs95yppml5iyyec8");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdditionalInformation)
                    .HasMaxLength(1000)
                    .HasColumnName("additional_information");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.ForProcess).HasColumnName("for_process");

                entity.Property(e => e.RejectReasonId).HasColumnName("reject_reason_id");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TaskId).HasColumnName("task_id");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.RejectReasonMultipleSelections)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKeckxgcehvjs95yppml5iyyec8");

                entity.HasOne(d => d.RejectReason)
                    .WithMany(p => p.RejectReasonMultipleSelections)
                    .HasForeignKey(d => d.RejectReasonId)
                    .HasConstraintName("FK6wjtk25t9lwwpig44b25awdeb");
            });

            modelBuilder.Entity<RejectReasonMultipleSelectionHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("reject_reason_multiple_selection_hist");

                entity.HasIndex(e => e.CreateUserId, "FK96vw6b9p469hnno1rf6wn0eov");

                entity.HasIndex(e => e.Rev, "FKd72ptcanjurohuucqg4srrhh7");

                entity.HasIndex(e => e.RejectReasonId, "FKn4mdb3xka3t88tve3777e8upt");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AdditionalInformation)
                    .HasMaxLength(1000)
                    .HasColumnName("additional_information");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.ForProcess).HasColumnName("for_process");

                entity.Property(e => e.RejectReasonId).HasColumnName("reject_reason_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TaskId).HasColumnName("task_id");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.RejectReasonMultipleSelectionHists)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FK96vw6b9p469hnno1rf6wn0eov");

                entity.HasOne(d => d.RejectReason)
                    .WithMany(p => p.RejectReasonMultipleSelectionHists)
                    .HasForeignKey(d => d.RejectReasonId)
                    .HasConstraintName("FKn4mdb3xka3t88tve3777e8upt");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.RejectReasonMultipleSelectionHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKd72ptcanjurohuucqg4srrhh7");
            });

            modelBuilder.Entity<RejectReasonMultipleSelectionHistAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("reject_reason_multiple_selection_hist_AUD");

                entity.HasIndex(e => e.Rev, "FK7yx2y3sv96pihyq21flcuw9px");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.RejectReasonId).HasColumnName("reject_reason_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.RejectReasonMultipleSelectionHistAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK7yx2y3sv96pihyq21flcuw9px");
            });

            modelBuilder.Entity<RejectReasonsChild>(entity =>
            {
                entity.ToTable("reject_reasons_child");

                entity.HasIndex(e => e.TasksId, "FK1nqfb9jse3lpc70uvo9i9esud");

                entity.HasIndex(e => e.WspId, "FK2401j9fls4aic8fkbd64bsk17");

                entity.HasIndex(e => e.RejectReasonsId, "FK6y8ewhwd3tvdh8m5noeiof5ly");

                entity.HasIndex(e => e.AssessorModeratorApplicationId, "FK88vgrjk1gr8ajkmdnogdmu22d");

                entity.HasIndex(e => e.CompanyId, "FKas0s82et5v2rm4sb50jrlhfup");

                entity.HasIndex(e => e.BankingDetailsId, "FKbb76y9ev57oqj9p471v4fyge1");

                entity.HasIndex(e => e.UserId, "FKj8f5fb9a1o8ayy8sfvfgff5xs");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdditionalInformation).HasColumnName("additional_information");

                entity.Property(e => e.AssessorModeratorApplicationId).HasColumnName("assessor_moderator_application_id");

                entity.Property(e => e.BankingDetailsId).HasColumnName("banking_details_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.RejectReasonsId).HasColumnName("reject_reasons_id");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TasksId).HasColumnName("tasks_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.AssessorModeratorApplication)
                    .WithMany(p => p.RejectReasonsChildren)
                    .HasForeignKey(d => d.AssessorModeratorApplicationId)
                    .HasConstraintName("FK88vgrjk1gr8ajkmdnogdmu22d");

                entity.HasOne(d => d.BankingDetails)
                    .WithMany(p => p.RejectReasonsChildren)
                    .HasForeignKey(d => d.BankingDetailsId)
                    .HasConstraintName("FKbb76y9ev57oqj9p471v4fyge1");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.RejectReasonsChildren)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKas0s82et5v2rm4sb50jrlhfup");

                entity.HasOne(d => d.RejectReasons)
                    .WithMany(p => p.RejectReasonsChildren)
                    .HasForeignKey(d => d.RejectReasonsId)
                    .HasConstraintName("FK6y8ewhwd3tvdh8m5noeiof5ly");

                entity.HasOne(d => d.Tasks)
                    .WithMany(p => p.RejectReasonsChildren)
                    .HasForeignKey(d => d.TasksId)
                    .HasConstraintName("FK1nqfb9jse3lpc70uvo9i9esud");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.RejectReasonsChildren)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKj8f5fb9a1o8ayy8sfvfgff5xs");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.RejectReasonsChildren)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FK2401j9fls4aic8fkbd64bsk17");
            });

            modelBuilder.Entity<RelationshipToCompany>(entity =>
            {
                entity.ToTable("relationship_to_company");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<RememberingRating>(entity =>
            {
                entity.ToTable("remembering_rating");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<ReportGenerationPropertiesHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("report_generation_properties_hist");

                entity.HasIndex(e => e.Rev, "FKrun1fo0exsfjo5rx91sqbtw9w");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.DateGenerationStarted)
                    .HasColumnType("datetime")
                    .HasColumnName("date_generation_started");

                entity.Property(e => e.DateLastCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("date_last_completed");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.GenerationUnderway)
                    .HasColumnType("bit(1)")
                    .HasColumnName("generation_underway");

                entity.Property(e => e.ReportProperty).HasColumnName("reportProperty");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.UserStartedGenerationId).HasColumnName("user_started_generation_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.ReportGenerationPropertiesHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKrun1fo0exsfjo5rx91sqbtw9w");
            });

            modelBuilder.Entity<ReportGenerationProperty>(entity =>
            {
                entity.ToTable("report_generation_properties");

                entity.HasIndex(e => e.UserStartedGenerationId, "FK1j0w3erensnx0rm2w1uw04yfq");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateGenerationStarted)
                    .HasColumnType("datetime")
                    .HasColumnName("date_generation_started");

                entity.Property(e => e.DateLastCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("date_last_completed");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.GenerationUnderway)
                    .HasColumnType("bit(1)")
                    .HasColumnName("generation_underway");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.ReportProperty).HasColumnName("reportProperty");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.UserStartedGenerationId).HasColumnName("user_started_generation_id");

                entity.HasOne(d => d.UserStartedGeneration)
                    .WithMany(p => p.ReportGenerationProperties)
                    .HasForeignKey(d => d.UserStartedGenerationId)
                    .HasConstraintName("FK1j0w3erensnx0rm2w1uw04yfq");
            });

            modelBuilder.Entity<ReportGenerationSchedule>(entity =>
            {
                entity.ToTable("report_generation_schedule");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateOfGeneration)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_generation");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.FinYear).HasColumnName("fin_year");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.ReportGenerationEnum).HasColumnName("report_generation_enum");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<RestoreDocByte>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("_restore_doc_byte");

                entity.UseCollation("latin1_general_ci");

                entity.Property(e => e.Data)
                    .HasColumnType("blob")
                    .HasColumnName("data");

                entity.Property(e => e.DocId).HasColumnName("doc_id");
            });

            modelBuilder.Entity<ReviewCommitteeMeeting>(entity =>
            {
                entity.ToTable("review_committee_meeting");

                entity.HasIndex(e => e.UserId, "FK99d73ehxc9mie2aa37th2esj1");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdditionalInfo).HasColumnName("additional_info");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FromDateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("from_date_time");

                entity.Property(e => e.MeetingNumber).HasColumnName("meeting_number");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.Title).HasColumnName("title");

                entity.Property(e => e.ToDateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("to_date_time");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.Venue).HasColumnName("venue");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.ReviewCommitteeMeetings)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK99d73ehxc9mie2aa37th2esj1");
            });

            modelBuilder.Entity<ReviewCommitteeMeetingAgendum>(entity =>
            {
                entity.ToTable("Review_committee_meeting_agenda");

                entity.HasIndex(e => e.MeetingAgendaId, "FK1aagpg2wcpypqpfcauko69rqt");

                entity.HasIndex(e => e.ReviewCommitteeMeetingId, "FKdgwcbkggu9kjlprq62owgf0hk");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DecisionNumber)
                    .HasMaxLength(255)
                    .HasColumnName("decision_number");

                entity.Property(e => e.Deleted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("deleted")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MeetingAgendaId).HasColumnName("meeting_agenda_id");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.HasOne(d => d.MeetingAgenda)
                    .WithMany(p => p.ReviewCommitteeMeetingAgenda)
                    .HasForeignKey(d => d.MeetingAgendaId)
                    .HasConstraintName("FK1aagpg2wcpypqpfcauko69rqt");

                entity.HasOne(d => d.ReviewCommitteeMeeting)
                    .WithMany(p => p.ReviewCommitteeMeetingAgenda)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingId)
                    .HasConstraintName("FKdgwcbkggu9kjlprq62owgf0hk");
            });

            modelBuilder.Entity<ReviewCommitteeMeetingUser>(entity =>
            {
                entity.ToTable("review_committee_meeting_users");

                entity.HasIndex(e => e.ReviewCommitteeMeetingId, "FKeecfjiihkofi6yfwhylnwn2kf");

                entity.HasIndex(e => e.UsersId, "FKnvirahoutbsf8h0tqsku8w66b");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.ReviewCommitteeMeeting)
                    .WithMany(p => p.ReviewCommitteeMeetingUsers)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingId)
                    .HasConstraintName("FKeecfjiihkofi6yfwhylnwn2kf");

                entity.HasOne(d => d.Users)
                    .WithMany(p => p.ReviewCommitteeMeetingUsers)
                    .HasForeignKey(d => d.UsersId)
                    .HasConstraintName("FKnvirahoutbsf8h0tqsku8w66b");
            });

            modelBuilder.Entity<Revinfo>(entity =>
            {
                entity.HasKey(e => e.Rev)
                    .HasName("PRIMARY");

                entity.ToTable("REVINFO");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Revtstmp).HasColumnName("REVTSTMP");
            });

            modelBuilder.Entity<Role>(entity =>
            {
                entity.ToTable("roles");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CloCrmReporting)
                    .HasColumnType("bit(1)")
                    .HasColumnName("clo_crm_reporting")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.Companies)
                    .HasColumnType("bit(1)")
                    .HasColumnName("companies")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.CoursewareDistro)
                    .HasColumnType("bit(1)")
                    .HasColumnName("courseware_distro")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CoursewareDistroSub)
                    .HasColumnType("bit(1)")
                    .HasColumnName("courseware_distro_sub")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Dashboard)
                    .HasMaxLength(100)
                    .HasColumnName("dashboard");

                entity.Property(e => e.DashboardReporting)
                    .HasMaxLength(100)
                    .HasColumnName("dashboard_reporting");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.DgAllocation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("dg_allocation")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.DgVerification)
                    .HasColumnType("bit(1)")
                    .HasColumnName("dgVerification")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.InitiateWorkplaceMonitoring)
                    .HasColumnType("bit(1)")
                    .HasColumnName("initiate_workplace_monitoring")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.InterSetaTransfer)
                    .HasColumnType("bit(1)")
                    .HasColumnName("inter_seta_transfer")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.MgVerification)
                    .HasColumnType("bit(1)")
                    .HasColumnName("mg_verification")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrgChart)
                    .HasColumnType("bit(1)")
                    .HasColumnName("org_chart")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.ProviderMonitoring)
                    .HasColumnType("bit(1)")
                    .HasColumnName("provider_monitoring")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.Sdfs)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sdfs")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SiteVisit)
                    .HasColumnType("bit(1)")
                    .HasColumnName("site_visit")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SiteVisitReport)
                    .HasColumnType("bit(1)")
                    .HasColumnName("site_visit_report")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.WorkplaceMonitoringAccess)
                    .HasColumnType("bit(1)")
                    .HasColumnName("workplace_monitoring_access")
                    .HasDefaultValueSql("b'0'");
            });

            modelBuilder.Entity<SaqaQualification>(entity =>
            {
                entity.ToTable("saqa_qualification");

                entity.HasIndex(e => e.TrainingProviderDocParentId, "FK7h6olo1imxihm2xy1hk54ngj6");

                entity.HasIndex(e => e.LearnerMentorRatioId, "FK8nsooln12ogn3ka2qfbjrx70r");

                entity.HasIndex(e => e.NqfLevelId, "FKfj0xu2o28s49sgpld3c2ju0ni");

                entity.HasIndex(e => e.SubFieldId, "FKl3f0fvvwje5ula519sy419gy0");

                entity.HasIndex(e => e.DesignatedTradeId, "FKrx203cexddey8sc08818h0aaj");

                entity.HasIndex(e => e.Qualificationid, "qualificationid");

                entity.HasIndex(e => e.QualificationidString, "saqa_qualification_id_string");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Abetbanddescription).HasColumnName("abetbanddescription");

                entity.Property(e => e.DesignatedTradeId).HasColumnName("designated_trade_id");

                entity.Property(e => e.Eloacqualassessmentcriteria).HasColumnName("eloacqualassessmentcriteria");

                entity.Property(e => e.Eloacqualificationoutcome).HasColumnName("eloacqualificationoutcome");

                entity.Property(e => e.Etqaacronym).HasColumnName("etqaacronym");

                entity.Property(e => e.Etqaid)
                    .HasMaxLength(255)
                    .HasColumnName("etqaid");

                entity.Property(e => e.Etqaname).HasColumnName("etqaname");

                entity.Property(e => e.Field).HasColumnName("field");

                entity.Property(e => e.Fielddescription).HasColumnName("fielddescription");

                entity.Property(e => e.Islearningprogramme).HasColumnName("islearningprogramme");

                entity.Property(e => e.LastDateForEnrolment)
                    .HasColumnType("datetime")
                    .HasColumnName("last_date_for_enrolment");

                entity.Property(e => e.Lastdateforachievement)
                    .HasColumnType("datetime")
                    .HasColumnName("lastdateforachievement");

                entity.Property(e => e.Lastdateforenrolment1)
                    .HasColumnType("datetime")
                    .HasColumnName("lastdateforenrolment");

                entity.Property(e => e.LearnerMentorRatioId).HasColumnName("learner_mentor_ratio_id");

                entity.Property(e => e.Learningprogrammequal).HasColumnName("learningprogrammequal");

                entity.Property(e => e.LevelFour).HasColumnName("level_four");

                entity.Property(e => e.LevelOne).HasColumnName("level_one");

                entity.Property(e => e.LevelThree).HasColumnName("level_three");

                entity.Property(e => e.LevelTwo).HasColumnName("level_two");

                entity.Property(e => e.NqfLevelId).HasColumnName("nqf_level_id");

                entity.Property(e => e.NqflevelId1)
                    .HasMaxLength(255)
                    .HasColumnName("nqflevelId");

                entity.Property(e => e.Nqfleveldescription).HasColumnName("nqfleveldescription");

                entity.Property(e => e.Nqflevelg2Description).HasColumnName("nqflevelg2DESCRIPTION");

                entity.Property(e => e.Nqflevelg2Id)
                    .HasMaxLength(255)
                    .HasColumnName("nqflevelg2Id");

                entity.Property(e => e.Providercode).HasColumnName("providercode");

                entity.Property(e => e.Provideretqaid).HasColumnName("provideretqaid");

                entity.Property(e => e.Providername).HasColumnName("providername");

                entity.Property(e => e.Qualarticulationoptions).HasColumnName("qualarticulationoptions");

                entity.Property(e => e.Qualassessorcriteria).HasColumnName("qualassessorcriteria");

                entity.Property(e => e.Qualificationclassdesc).HasColumnName("qualificationclassdesc");

                entity.Property(e => e.Qualificationid).HasColumnName("qualificationid");

                entity.Property(e => e.QualificationidString).HasColumnName("qualificationid_string");

                entity.Property(e => e.Qualificationminimumcredits).HasColumnName("qualificationminimumcredits");

                entity.Property(e => e.Qualificationnotes).HasColumnName("qualificationnotes");

                entity.Property(e => e.Qualificationpurpose).HasColumnName("qualificationpurpose");

                entity.Property(e => e.Qualificationtitle).HasColumnName("qualificationtitle");

                entity.Property(e => e.Qualificationtypedesc).HasColumnName("qualificationtypedesc");

                entity.Property(e => e.Qualificationtypeid)
                    .HasMaxLength(255)
                    .HasColumnName("qualificationtypeid");

                entity.Property(e => e.Qualintlbenchmarkingmemo).HasColumnName("qualintlbenchmarkingmemo");

                entity.Property(e => e.Quallearningassumedinplace).HasColumnName("quallearningassumedinplace");

                entity.Property(e => e.Qualmoderationoptions).HasColumnName("qualmoderationoptions");

                entity.Property(e => e.Qualregistrationenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("qualregistrationenddate");

                entity.Property(e => e.Qualregistrationstartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("qualregistrationstartdate");

                entity.Property(e => e.Qualrulesofcombination).HasColumnName("qualrulesofcombination");

                entity.Property(e => e.Recognizeprevlearningflag).HasColumnName("recognizeprevlearningflag");

                entity.Property(e => e.Registrationstatuscode)
                    .HasMaxLength(255)
                    .HasColumnName("registrationstatuscode");

                entity.Property(e => e.Registrationstatusdesc).HasColumnName("registrationstatusdesc");

                entity.Property(e => e.Saqadecisionnumber).HasColumnName("saqadecisionnumber");

                entity.Property(e => e.Sgbname).HasColumnName("sgbname");

                entity.Property(e => e.SubFieldId).HasColumnName("sub_field_id");

                entity.Property(e => e.Subfielddescription).HasColumnName("subfielddescription");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.Property(e => e.Trainoutperiod).HasColumnName("trainoutperiod");

                entity.Property(e => e.Transitionperiod).HasColumnName("transitionperiod");

                entity.Property(e => e.WorkplaceApprovalRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("workplace_approval_required")
                    .HasDefaultValueSql("b'0'");

                entity.HasOne(d => d.DesignatedTrade)
                    .WithMany(p => p.SaqaQualifications)
                    .HasForeignKey(d => d.DesignatedTradeId)
                    .HasConstraintName("FKrx203cexddey8sc08818h0aaj");

                entity.HasOne(d => d.LearnerMentorRatio)
                    .WithMany(p => p.SaqaQualifications)
                    .HasForeignKey(d => d.LearnerMentorRatioId)
                    .HasConstraintName("FK8nsooln12ogn3ka2qfbjrx70r");

                entity.HasOne(d => d.NqfLevel)
                    .WithMany(p => p.SaqaQualifications)
                    .HasForeignKey(d => d.NqfLevelId)
                    .HasConstraintName("FKfj0xu2o28s49sgpld3c2ju0ni");

                entity.HasOne(d => d.SubField)
                    .WithMany(p => p.SaqaQualifications)
                    .HasForeignKey(d => d.SubFieldId)
                    .HasConstraintName("FKl3f0fvvwje5ula519sy419gy0");

                entity.HasOne(d => d.TrainingProviderDocParent)
                    .WithMany(p => p.SaqaQualifications)
                    .HasForeignKey(d => d.TrainingProviderDocParentId)
                    .HasConstraintName("FK7h6olo1imxihm2xy1hk54ngj6");
            });

            modelBuilder.Entity<SaqaQualificationAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("saqa_qualification_AUD");

                entity.HasIndex(e => e.Rev, "FKda8n3jgpwp5qlma30urgr3n5x");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.DesignatedTradeId).HasColumnName("designated_trade_id");

                entity.Property(e => e.LearnerMentorRatioId).HasColumnName("learner_mentor_ratio_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SaqaQualificationAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKda8n3jgpwp5qlma30urgr3n5x");
            });

            modelBuilder.Entity<SaqaQualificationHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("saqa_qualification_hist");

                entity.HasIndex(e => e.Rev, "FK1f4c5rcl53uxquvufyg5v9i2v");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.DesignatedTradeId).HasColumnName("designated_trade_id");

                entity.Property(e => e.Etqaacronym)
                    .HasMaxLength(255)
                    .HasColumnName("etqaacronym");

                entity.Property(e => e.Etqaid)
                    .HasMaxLength(255)
                    .HasColumnName("etqaid");

                entity.Property(e => e.Etqaname)
                    .HasMaxLength(255)
                    .HasColumnName("etqaname");

                entity.Property(e => e.Islearningprogramme)
                    .HasMaxLength(255)
                    .HasColumnName("islearningprogramme");

                entity.Property(e => e.LastDateForEnrolment)
                    .HasColumnType("datetime")
                    .HasColumnName("last_date_for_enrolment");

                entity.Property(e => e.Lastdateforachievement)
                    .HasColumnType("datetime")
                    .HasColumnName("lastdateforachievement");

                entity.Property(e => e.LearnerMentorRatioId).HasColumnName("learner_mentor_ratio_id");

                entity.Property(e => e.Learningprogrammequal)
                    .HasMaxLength(255)
                    .HasColumnName("learningprogrammequal");

                entity.Property(e => e.LevelFour).HasColumnName("level_four");

                entity.Property(e => e.LevelOne).HasColumnName("level_one");

                entity.Property(e => e.LevelThree).HasColumnName("level_three");

                entity.Property(e => e.LevelTwo).HasColumnName("level_two");

                entity.Property(e => e.NqfLevelId).HasColumnName("nqf_level_id");

                entity.Property(e => e.Nqfleveldescription)
                    .HasMaxLength(255)
                    .HasColumnName("nqfleveldescription");

                entity.Property(e => e.Nqflevelg2description)
                    .HasMaxLength(255)
                    .HasColumnName("nqflevelg2description");

                entity.Property(e => e.Qualificationid).HasColumnName("qualificationid");

                entity.Property(e => e.QualificationidString)
                    .HasMaxLength(255)
                    .HasColumnName("qualificationid_string");

                entity.Property(e => e.Qualificationminimumcredits).HasColumnName("qualificationminimumcredits");

                entity.Property(e => e.Qualificationtitle)
                    .HasMaxLength(255)
                    .HasColumnName("qualificationtitle");

                entity.Property(e => e.Qualificationtypedesc)
                    .HasMaxLength(255)
                    .HasColumnName("qualificationtypedesc");

                entity.Property(e => e.Qualificationtypeid)
                    .HasMaxLength(255)
                    .HasColumnName("qualificationtypeid");

                entity.Property(e => e.Qualregistrationenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("qualregistrationenddate");

                entity.Property(e => e.Qualregistrationstartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("qualregistrationstartdate");

                entity.Property(e => e.Registrationstatuscode)
                    .HasMaxLength(255)
                    .HasColumnName("registrationstatuscode");

                entity.Property(e => e.Registrationstatusdesc)
                    .HasMaxLength(255)
                    .HasColumnName("registrationstatusdesc");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SubFieldId).HasColumnName("sub_field_id");

                entity.Property(e => e.Subfielddescription)
                    .HasMaxLength(255)
                    .HasColumnName("subfielddescription");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.Property(e => e.WorkplaceApprovalRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("workplace_approval_required")
                    .HasDefaultValueSql("b'0'");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SaqaQualificationHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK1f4c5rcl53uxquvufyg5v9i2v");
            });

            modelBuilder.Entity<SaqaQualificationTemp>(entity =>
            {
                entity.ToTable("saqa_qualification_temp");

                entity.HasIndex(e => e.NqfLevelId1, "FKbxdy3e5ed70fw71o9myk09p0e");

                entity.HasIndex(e => e.TrainingProviderDocParentId, "FKm35o0dfbau1bcpbl4ngjyasfy");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Abetbanddescription)
                    .HasMaxLength(255)
                    .HasColumnName("abetbanddescription");

                entity.Property(e => e.Eloacqualassessmentcriteria).HasColumnName("eloacqualassessmentcriteria");

                entity.Property(e => e.Eloacqualificationoutcome).HasColumnName("eloacqualificationoutcome");

                entity.Property(e => e.Etqaacronym)
                    .HasMaxLength(255)
                    .HasColumnName("etqaacronym");

                entity.Property(e => e.Etqaid)
                    .HasMaxLength(255)
                    .HasColumnName("etqaid");

                entity.Property(e => e.Etqaname)
                    .HasMaxLength(255)
                    .HasColumnName("etqaname");

                entity.Property(e => e.Field).HasColumnName("field");

                entity.Property(e => e.Fielddescription).HasColumnName("fielddescription");

                entity.Property(e => e.Islearningprogramme).HasColumnName("islearningprogramme");

                entity.Property(e => e.LastDateForEnrolment)
                    .HasColumnType("datetime")
                    .HasColumnName("last_date_for_enrolment");

                entity.Property(e => e.LastDateForEnrolment1)
                    .HasColumnType("datetime")
                    .HasColumnName("lastDateForEnrolment");

                entity.Property(e => e.Lastdateforachievement)
                    .HasColumnType("datetime")
                    .HasColumnName("lastdateforachievement");

                entity.Property(e => e.Learningprogrammequal).HasColumnName("learningprogrammequal");

                entity.Property(e => e.NqfLevelId1).HasColumnName("nqf_level_id");

                entity.Property(e => e.NqflevelId)
                    .HasMaxLength(255)
                    .HasColumnName("nqflevelId");

                entity.Property(e => e.Nqfleveldescription)
                    .HasMaxLength(255)
                    .HasColumnName("nqfleveldescription");

                entity.Property(e => e.Nqflevelg2Id)
                    .HasMaxLength(255)
                    .HasColumnName("nqflevelg2Id");

                entity.Property(e => e.Nqflevelg2description)
                    .HasMaxLength(255)
                    .HasColumnName("nqflevelg2description");

                entity.Property(e => e.Providercode)
                    .HasMaxLength(255)
                    .HasColumnName("providercode");

                entity.Property(e => e.Provideretqaid).HasColumnName("provideretqaid");

                entity.Property(e => e.Providername).HasColumnName("providername");

                entity.Property(e => e.Qualarticulationoptions).HasColumnName("qualarticulationoptions");

                entity.Property(e => e.Qualassessorcriteria).HasColumnName("qualassessorcriteria");

                entity.Property(e => e.Qualificationclassdesc).HasColumnName("qualificationclassdesc");

                entity.Property(e => e.Qualificationid).HasColumnName("qualificationid");

                entity.Property(e => e.QualificationidString)
                    .HasMaxLength(255)
                    .HasColumnName("qualificationid_string");

                entity.Property(e => e.Qualificationminimumcredits).HasColumnName("qualificationminimumcredits");

                entity.Property(e => e.Qualificationnotes).HasColumnName("qualificationnotes");

                entity.Property(e => e.Qualificationpurpose).HasColumnName("qualificationpurpose");

                entity.Property(e => e.Qualificationtitle)
                    .HasMaxLength(255)
                    .HasColumnName("qualificationtitle");

                entity.Property(e => e.Qualificationtypedesc).HasColumnName("qualificationtypedesc");

                entity.Property(e => e.Qualificationtypeid)
                    .HasMaxLength(255)
                    .HasColumnName("qualificationtypeid");

                entity.Property(e => e.Qualintlbenchmarkingmemo).HasColumnName("qualintlbenchmarkingmemo");

                entity.Property(e => e.Quallearningassumedinplace).HasColumnName("quallearningassumedinplace");

                entity.Property(e => e.Qualmoderationoptions).HasColumnName("qualmoderationoptions");

                entity.Property(e => e.Qualregistrationenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("qualregistrationenddate");

                entity.Property(e => e.Qualregistrationstartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("qualregistrationstartdate");

                entity.Property(e => e.Qualrulesofcombination).HasColumnName("qualrulesofcombination");

                entity.Property(e => e.Recognizeprevlearningflag).HasColumnName("recognizeprevlearningflag");

                entity.Property(e => e.Registrationstatuscode)
                    .HasMaxLength(255)
                    .HasColumnName("registrationstatuscode");

                entity.Property(e => e.Registrationstatusdesc).HasColumnName("registrationstatusdesc");

                entity.Property(e => e.Saqadecisionnumber).HasColumnName("saqadecisionnumber");

                entity.Property(e => e.Sgbname).HasColumnName("sgbname");

                entity.Property(e => e.Subfielddescription).HasColumnName("subfielddescription");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.Property(e => e.Trainoutperiod).HasColumnName("trainoutperiod");

                entity.Property(e => e.Transitionperiod).HasColumnName("transitionperiod");

                entity.Property(e => e.WorkplaceApprovalRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("workplace_approval_required")
                    .HasDefaultValueSql("b'0'");

                entity.HasOne(d => d.NqfLevelId1Navigation)
                    .WithMany(p => p.SaqaQualificationTemps)
                    .HasForeignKey(d => d.NqfLevelId1)
                    .HasConstraintName("FKbxdy3e5ed70fw71o9myk09p0e");

                entity.HasOne(d => d.TrainingProviderDocParent)
                    .WithMany(p => p.SaqaQualificationTemps)
                    .HasForeignKey(d => d.TrainingProviderDocParentId)
                    .HasConstraintName("FKm35o0dfbau1bcpbl4ngjyasfy");
            });

            modelBuilder.Entity<SaqaQualificationTempAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("saqa_qualification_temp_AUD");

                entity.HasIndex(e => e.Rev, "FKm40l4so51c2tf5pu4rl6c0nly");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SaqaQualificationTempAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKm40l4so51c2tf5pu4rl6c0nly");
            });

            modelBuilder.Entity<SaqaSpecificOutcome>(entity =>
            {
                entity.ToTable("saqa_specific_outcome");

                entity.HasIndex(e => e.UnitstandardId1, "FKyod9f3pdy4o2l7seonemww80");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.OutcomeNotes).HasColumnName("outcome_notes");

                entity.Property(e => e.OutcomeTitle).HasColumnName("outcome_title");

                entity.Property(e => e.Outcomeid).HasColumnName("outcomeid");

                entity.Property(e => e.Outcomerange).HasColumnName("outcomerange");

                entity.Property(e => e.UnitstandardId1).HasColumnName("unitstandard_id");

                entity.Property(e => e.Unitstandardid).HasColumnName("unitstandardid");

                entity.HasOne(d => d.UnitstandardId1Navigation)
                    .WithMany(p => p.SaqaSpecificOutcomes)
                    .HasForeignKey(d => d.UnitstandardId1)
                    .HasConstraintName("FKyod9f3pdy4o2l7seonemww80");
            });

            modelBuilder.Entity<SaqaSpecificOutcomeTemp>(entity =>
            {
                entity.ToTable("saqa_specific_outcome_temp");

                entity.HasIndex(e => e.UnitstandardId1, "FKdlysnouxre1aua27ue9d53f7a");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.OutcomeNotes)
                    .HasMaxLength(255)
                    .HasColumnName("outcome_notes");

                entity.Property(e => e.OutcomeTitle)
                    .HasMaxLength(255)
                    .HasColumnName("outcome_title");

                entity.Property(e => e.Outcomeid).HasColumnName("outcomeid");

                entity.Property(e => e.Outcomerange)
                    .HasMaxLength(255)
                    .HasColumnName("outcomerange");

                entity.Property(e => e.UnitstandardId1).HasColumnName("unitstandard_id");

                entity.Property(e => e.Unitstandardid).HasColumnName("unitstandardid");

                entity.HasOne(d => d.UnitstandardId1Navigation)
                    .WithMany(p => p.SaqaSpecificOutcomeTemps)
                    .HasForeignKey(d => d.UnitstandardId1)
                    .HasConstraintName("FKdlysnouxre1aua27ue9d53f7a");
            });

            modelBuilder.Entity<SaqaUnitstandard>(entity =>
            {
                entity.ToTable("saqa_unitstandard");

                entity.HasIndex(e => e.Unitstandardid, "unitstandardid");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Abetbanddescription)
                    .HasMaxLength(255)
                    .HasColumnName("abetbanddescription");

                entity.Property(e => e.Etqaacronym)
                    .HasMaxLength(255)
                    .HasColumnName("etqaacronym");

                entity.Property(e => e.Etqaname)
                    .HasMaxLength(255)
                    .HasColumnName("etqaname");

                entity.Property(e => e.Field)
                    .HasMaxLength(255)
                    .HasColumnName("field");

                entity.Property(e => e.Fielddescription).HasColumnName("fielddescription");

                entity.Property(e => e.LastDateForEnrolment)
                    .HasColumnType("datetime")
                    .HasColumnName("lastDateForEnrolment");

                entity.Property(e => e.Nqfleveldescription)
                    .HasMaxLength(255)
                    .HasColumnName("nqfleveldescription");

                entity.Property(e => e.Nqflevelg2Description)
                    .HasMaxLength(255)
                    .HasColumnName("nqflevelg2DESCRIPTION");

                entity.Property(e => e.Providercode)
                    .HasMaxLength(255)
                    .HasColumnName("providercode");

                entity.Property(e => e.Provideretqaid).HasColumnName("provideretqaid");

                entity.Property(e => e.Providername)
                    .HasMaxLength(255)
                    .HasColumnName("providername");

                entity.Property(e => e.Registrationstatusdesc)
                    .HasMaxLength(255)
                    .HasColumnName("registrationstatusdesc");

                entity.Property(e => e.Saqadecisionnumber)
                    .HasMaxLength(255)
                    .HasColumnName("saqadecisionnumber");

                entity.Property(e => e.Sgbname)
                    .HasMaxLength(255)
                    .HasColumnName("sgbname");

                entity.Property(e => e.Subfielddescription)
                    .HasMaxLength(255)
                    .HasColumnName("subfielddescription");

                entity.Property(e => e.Trainoutperiod).HasColumnName("trainoutperiod");

                entity.Property(e => e.Transitionperiod).HasColumnName("transitionperiod");

                entity.Property(e => e.UnitStandardIdString)
                    .HasMaxLength(255)
                    .HasColumnName("unit_standard_id_string");

                entity.Property(e => e.Unitstandardid).HasColumnName("unitstandardid");

                entity.Property(e => e.Unitstdaccreditationoptions).HasColumnName("unitstdaccreditationoptions");

                entity.Property(e => e.Unitstdassessorcriteria).HasColumnName("unitstdassessorcriteria");

                entity.Property(e => e.Unitstdccfocollecting).HasColumnName("unitstdccfocollecting");

                entity.Property(e => e.Unitstdccfocommunicating).HasColumnName("unitstdccfocommunicating");

                entity.Property(e => e.Unitstdccfocontributing).HasColumnName("unitstdccfocontributing");

                entity.Property(e => e.Unitstdccfodemonstrating).HasColumnName("unitstdccfodemonstrating");

                entity.Property(e => e.Unitstdccfoidentifying).HasColumnName("unitstdccfoidentifying");

                entity.Property(e => e.Unitstdccfoorganizing).HasColumnName("unitstdccfoorganizing");

                entity.Property(e => e.Unitstdccfoscience).HasColumnName("unitstdccfoscience");

                entity.Property(e => e.Unitstdccfoworking).HasColumnName("unitstdccfoworking");

                entity.Property(e => e.Unitstddevelopmentaloutcome).HasColumnName("unitstddevelopmentaloutcome");

                entity.Property(e => e.Unitstdembeddedknowledge).HasColumnName("unitstdembeddedknowledge");

                entity.Property(e => e.Unitstdlearningassumptions).HasColumnName("unitstdlearningassumptions");

                entity.Property(e => e.Unitstdlinkages).HasColumnName("unitstdlinkages");

                entity.Property(e => e.Unitstdnotes).HasColumnName("unitstdnotes");

                entity.Property(e => e.Unitstdnumberofcredits).HasColumnName("unitstdnumberofcredits");

                entity.Property(e => e.Unitstdoutcomeheader).HasColumnName("unitstdoutcomeheader");

                entity.Property(e => e.Unitstdpurpose).HasColumnName("unitstdpurpose");

                entity.Property(e => e.Unitstdrange).HasColumnName("unitstdrange");

                entity.Property(e => e.Unitstdtitle)
                    .HasMaxLength(255)
                    .HasColumnName("unitstdtitle");

                entity.Property(e => e.Unitstdtypedesc)
                    .HasMaxLength(255)
                    .HasColumnName("unitstdtypedesc");

                entity.Property(e => e.UsregistrationendDate)
                    .HasColumnType("datetime")
                    .HasColumnName("usregistrationendDate");

                entity.Property(e => e.UsregistrationstartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("usregistrationstartDate");
            });

            modelBuilder.Entity<SaqaUnitstandardHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("saqa_unitstandard_hist");

                entity.HasIndex(e => e.Rev, "FKqvipp6c5nypyktwot3l3e0p89");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Field)
                    .HasMaxLength(255)
                    .HasColumnName("field");

                entity.Property(e => e.LastDateForEnrolment)
                    .HasColumnType("datetime")
                    .HasColumnName("lastDateForEnrolment");

                entity.Property(e => e.Nqflevelg2Description)
                    .HasMaxLength(255)
                    .HasColumnName("nqflevelg2DESCRIPTION");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.Saqadecisionnumber)
                    .HasMaxLength(255)
                    .HasColumnName("saqadecisionnumber");

                entity.Property(e => e.UnitStandardIdString)
                    .HasMaxLength(255)
                    .HasColumnName("unit_standard_id_string");

                entity.Property(e => e.Unitstandardid).HasColumnName("unitstandardid");

                entity.Property(e => e.Unitstdnumberofcredits)
                    .HasMaxLength(255)
                    .HasColumnName("unitstdnumberofcredits");

                entity.Property(e => e.Unitstdtitle)
                    .HasMaxLength(255)
                    .HasColumnName("unitstdtitle");

                entity.Property(e => e.Unitstdtypedesc)
                    .HasMaxLength(255)
                    .HasColumnName("unitstdtypedesc");

                entity.Property(e => e.Usregistrationenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("usregistrationenddate");

                entity.Property(e => e.Usregistrationstartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("usregistrationstartdate");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SaqaUnitstandardHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKqvipp6c5nypyktwot3l3e0p89");
            });

            modelBuilder.Entity<SaqaUnitstandardTemp>(entity =>
            {
                entity.ToTable("saqa_unitstandard_temp");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Abetbanddescription).HasColumnName("abetbanddescription");

                entity.Property(e => e.Etqaacronym)
                    .HasMaxLength(255)
                    .HasColumnName("etqaacronym");

                entity.Property(e => e.Etqaname)
                    .HasMaxLength(255)
                    .HasColumnName("etqaname");

                entity.Property(e => e.Field)
                    .HasMaxLength(255)
                    .HasColumnName("field");

                entity.Property(e => e.Fielddescription).HasColumnName("fielddescription");

                entity.Property(e => e.LastDateForEnrolment)
                    .HasColumnType("datetime")
                    .HasColumnName("lastDateForEnrolment");

                entity.Property(e => e.Nqfleveldescription)
                    .HasMaxLength(255)
                    .HasColumnName("nqfleveldescription");

                entity.Property(e => e.Nqflevelg2Description)
                    .HasMaxLength(255)
                    .HasColumnName("nqflevelg2DESCRIPTION");

                entity.Property(e => e.Providercode).HasColumnName("providercode");

                entity.Property(e => e.Provideretqaid).HasColumnName("provideretqaid");

                entity.Property(e => e.Providername).HasColumnName("providername");

                entity.Property(e => e.Registrationstatusdesc).HasColumnName("registrationstatusdesc");

                entity.Property(e => e.Saqadecisionnumber).HasColumnName("saqadecisionnumber");

                entity.Property(e => e.Sgbname).HasColumnName("sgbname");

                entity.Property(e => e.Subfielddescription).HasColumnName("subfielddescription");

                entity.Property(e => e.Trainoutperiod).HasColumnName("trainoutperiod");

                entity.Property(e => e.Transitionperiod).HasColumnName("transitionperiod");

                entity.Property(e => e.Unitstandardid).HasColumnName("unitstandardid");

                entity.Property(e => e.Unitstdaccreditationoptions).HasColumnName("unitstdaccreditationoptions");

                entity.Property(e => e.Unitstdassessorcriteria).HasColumnName("unitstdassessorcriteria");

                entity.Property(e => e.Unitstdccfocollecting).HasColumnName("unitstdccfocollecting");

                entity.Property(e => e.Unitstdccfocommunicating).HasColumnName("unitstdccfocommunicating");

                entity.Property(e => e.Unitstdccfocontributing).HasColumnName("unitstdccfocontributing");

                entity.Property(e => e.Unitstdccfodemonstrating).HasColumnName("unitstdccfodemonstrating");

                entity.Property(e => e.Unitstdccfoidentifying).HasColumnName("unitstdccfoidentifying");

                entity.Property(e => e.Unitstdccfoorganizing).HasColumnName("unitstdccfoorganizing");

                entity.Property(e => e.Unitstdccfoscience).HasColumnName("unitstdccfoscience");

                entity.Property(e => e.Unitstdccfoworking).HasColumnName("unitstdccfoworking");

                entity.Property(e => e.Unitstddevelopmentaloutcome).HasColumnName("unitstddevelopmentaloutcome");

                entity.Property(e => e.Unitstdembeddedknowledge).HasColumnName("unitstdembeddedknowledge");

                entity.Property(e => e.Unitstdlearningassumptions).HasColumnName("unitstdlearningassumptions");

                entity.Property(e => e.Unitstdlinkages).HasColumnName("unitstdlinkages");

                entity.Property(e => e.Unitstdnotes).HasColumnName("unitstdnotes");

                entity.Property(e => e.Unitstdnumberofcredits).HasColumnName("unitstdnumberofcredits");

                entity.Property(e => e.Unitstdoutcomeheader).HasColumnName("unitstdoutcomeheader");

                entity.Property(e => e.Unitstdpurpose).HasColumnName("unitstdpurpose");

                entity.Property(e => e.Unitstdrange).HasColumnName("unitstdrange");

                entity.Property(e => e.Unitstdtitle).HasColumnName("unitstdtitle");

                entity.Property(e => e.Unitstdtypedesc).HasColumnName("unitstdtypedesc");

                entity.Property(e => e.Usregistrationenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("usregistrationenddate");

                entity.Property(e => e.Usregistrationstartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("usregistrationstartdate");
            });

            modelBuilder.Entity<SaqaUsQualification>(entity =>
            {
                entity.ToTable("saqa_us_qualification");

                entity.HasIndex(e => e.QualificationId1, "FK7r1l6n11xmg4uf5ri7pkdta7x");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Nqfleveldescription)
                    .HasMaxLength(255)
                    .HasColumnName("nqfleveldescription");

                entity.Property(e => e.Nqflevelg2Description)
                    .HasMaxLength(255)
                    .HasColumnName("nqflevelg2DESCRIPTION");

                entity.Property(e => e.QualificationId1).HasColumnName("qualification_id");

                entity.Property(e => e.Qualificationid).HasColumnName("qualificationid");

                entity.Property(e => e.UnitStandardLinkType).HasColumnName("unit_standard_link_type");

                entity.Property(e => e.Unitstandardid).HasColumnName("unitstandardid");

                entity.Property(e => e.Unitstdnumberofcredits).HasColumnName("unitstdnumberofcredits");

                entity.Property(e => e.Unitstdtitle)
                    .HasMaxLength(500)
                    .HasColumnName("unitstdtitle");

                entity.Property(e => e.Usqualtypedescription)
                    .HasMaxLength(100)
                    .HasColumnName("usqualtypedescription");

                entity.HasOne(d => d.QualificationId1Navigation)
                    .WithMany(p => p.SaqaUsQualifications)
                    .HasForeignKey(d => d.QualificationId1)
                    .HasConstraintName("FK7r1l6n11xmg4uf5ri7pkdta7x");
            });

            modelBuilder.Entity<SaqaUsQualificationTemp>(entity =>
            {
                entity.ToTable("saqa_us_qualification_temp");

                entity.HasIndex(e => e.QualificationId1, "FK921gfqc92cmox3j60m6ndajcn");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Nqfleveldescription)
                    .HasMaxLength(255)
                    .HasColumnName("nqfleveldescription");

                entity.Property(e => e.Nqflevelg2Description)
                    .HasMaxLength(255)
                    .HasColumnName("nqflevelg2DESCRIPTION");

                entity.Property(e => e.QualificationId1).HasColumnName("qualification_id");

                entity.Property(e => e.Qualificationid).HasColumnName("qualificationid");

                entity.Property(e => e.Unitstandardid).HasColumnName("unitstandardid");

                entity.Property(e => e.Unitstdnumberofcredits).HasColumnName("unitstdnumberofcredits");

                entity.Property(e => e.Unitstdtitle)
                    .HasMaxLength(500)
                    .HasColumnName("unitstdtitle");

                entity.Property(e => e.Usqualtypedescription)
                    .HasMaxLength(100)
                    .HasColumnName("usqualtypedescription");

                entity.HasOne(d => d.QualificationId1Navigation)
                    .WithMany(p => p.SaqaUsQualificationTemps)
                    .HasForeignKey(d => d.QualificationId1)
                    .HasConstraintName("FK921gfqc92cmox3j60m6ndajcn");
            });

            modelBuilder.Entity<SarsEmployerDetail>(entity =>
            {
                entity.ToTable("sars_employer_detail");

                entity.HasIndex(e => new { e.SarsFilelId, e.SicCode2, e.EmployerPostCode }, "IDX_SED_POST_CODE");

                entity.HasIndex(e => new { e.RefNo, e.SarsFilelId }, "hs_index_name");

                entity.HasIndex(e => new { e.SarsFilelId, e.TradingStatus }, "hs_l_inx01");

                entity.HasIndex(e => new { e.SarsFilelId, e.CompanyRegistrationNumber, e.SicCode2 }, "sars_filel_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyRegistrationNumber)
                    .HasMaxLength(100)
                    .HasColumnName("company_registration_number");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.EmployerPostCode)
                    .HasMaxLength(225)
                    .HasColumnName("employer_post_code");

                entity.Property(e => e.NoEmployesAccordingToSars).HasColumnName("no_employes_according_to_sars");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(50)
                    .HasColumnName("ref_no");

                entity.Property(e => e.RegisteredNameOfEntity)
                    .HasMaxLength(500)
                    .HasColumnName("registered_name_of_entity");

                entity.Property(e => e.SarsFilelId).HasColumnName("sars_filel_id");

                entity.Property(e => e.SicCode2)
                    .HasMaxLength(50)
                    .HasColumnName("sic_code_2");

                entity.Property(e => e.TradingName)
                    .HasMaxLength(255)
                    .HasColumnName("trading_name");

                entity.Property(e => e.TradingStatus)
                    .HasMaxLength(10)
                    .HasColumnName("trading_status");

                entity.HasOne(d => d.SarsFilel)
                    .WithMany(p => p.SarsEmployerDetails)
                    .HasForeignKey(d => d.SarsFilelId)
                    .HasConstraintName("FK90kbr37mp7qs148a5lvo5syps");
            });

            modelBuilder.Entity<SarsEmployerDetailAllDataForTesting>(entity =>
            {
                entity.ToTable("sars_employer_detail_all_data_for_testing");

                entity.HasIndex(e => e.SarsEmployerDetailId, "FK93ptwshhki12vonmfhcmgw0m0");

                entity.HasIndex(e => e.SarsFilelId, "FKfjafdu1f4rqruklsicv64qk8x");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("company_registration_number");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.EmployerPostCode)
                    .HasMaxLength(255)
                    .HasColumnName("employer_post_code");

                entity.Property(e => e.NoEmployes).HasColumnName("noEmployes");

                entity.Property(e => e.NoEmployesAccordingToSars).HasColumnName("no_employes_according_to_sars");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(255)
                    .HasColumnName("ref_no");

                entity.Property(e => e.RegisteredNameOfEntity)
                    .HasMaxLength(500)
                    .HasColumnName("registered_name_of_entity");

                entity.Property(e => e.SarsCode1)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_1");

                entity.Property(e => e.SarsCode10)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_10");

                entity.Property(e => e.SarsCode11)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_11");

                entity.Property(e => e.SarsCode12)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_12");

                entity.Property(e => e.SarsCode13)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_13");

                entity.Property(e => e.SarsCode14)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_14");

                entity.Property(e => e.SarsCode15)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_15");

                entity.Property(e => e.SarsCode16)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_16");

                entity.Property(e => e.SarsCode2)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_2");

                entity.Property(e => e.SarsCode3)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_3");

                entity.Property(e => e.SarsCode4)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_4");

                entity.Property(e => e.SarsCode5)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_5");

                entity.Property(e => e.SarsCode6)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_6");

                entity.Property(e => e.SarsCode7)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_7");

                entity.Property(e => e.SarsCode8)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_8");

                entity.Property(e => e.SarsCode9)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_CODE_9");

                entity.Property(e => e.SarsData1)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_1");

                entity.Property(e => e.SarsData10)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_10");

                entity.Property(e => e.SarsData11)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_11");

                entity.Property(e => e.SarsData12)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_12");

                entity.Property(e => e.SarsData13)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_13");

                entity.Property(e => e.SarsData14)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_14");

                entity.Property(e => e.SarsData15)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_15");

                entity.Property(e => e.SarsData16)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_16");

                entity.Property(e => e.SarsData17)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_17");

                entity.Property(e => e.SarsData18)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_18");

                entity.Property(e => e.SarsData19)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_19");

                entity.Property(e => e.SarsData2)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_2");

                entity.Property(e => e.SarsData20)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_20");

                entity.Property(e => e.SarsData21)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_21");

                entity.Property(e => e.SarsData22)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_22");

                entity.Property(e => e.SarsData23)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_23");

                entity.Property(e => e.SarsData24)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_24");

                entity.Property(e => e.SarsData25)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_25");

                entity.Property(e => e.SarsData26)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_26");

                entity.Property(e => e.SarsData27)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_27");

                entity.Property(e => e.SarsData28)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_28");

                entity.Property(e => e.SarsData29)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_29");

                entity.Property(e => e.SarsData3)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_3");

                entity.Property(e => e.SarsData30)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_30");

                entity.Property(e => e.SarsData31)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_31");

                entity.Property(e => e.SarsData32)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_32");

                entity.Property(e => e.SarsData33)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_33");

                entity.Property(e => e.SarsData34)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_34");

                entity.Property(e => e.SarsData35)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_35");

                entity.Property(e => e.SarsData36)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_36");

                entity.Property(e => e.SarsData37)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_37");

                entity.Property(e => e.SarsData38)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_38");

                entity.Property(e => e.SarsData39)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_39");

                entity.Property(e => e.SarsData4)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_4");

                entity.Property(e => e.SarsData40)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_40");

                entity.Property(e => e.SarsData5)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_5");

                entity.Property(e => e.SarsData6)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_6");

                entity.Property(e => e.SarsData7)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_7");

                entity.Property(e => e.SarsData8)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_8");

                entity.Property(e => e.SarsData9)
                    .HasMaxLength(255)
                    .HasColumnName("SARS_DATA_9");

                entity.Property(e => e.SarsEmployerDetailId).HasColumnName("sars_employer_detail_id");

                entity.Property(e => e.SarsFilelId).HasColumnName("sars_filel_id");

                entity.Property(e => e.SicCode2)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code_2");

                entity.Property(e => e.TradingName)
                    .HasMaxLength(255)
                    .HasColumnName("trading_name");

                entity.Property(e => e.TradingStatus)
                    .HasMaxLength(255)
                    .HasColumnName("trading_status");

                entity.HasOne(d => d.SarsEmployerDetail)
                    .WithMany(p => p.SarsEmployerDetailAllDataForTestings)
                    .HasForeignKey(d => d.SarsEmployerDetailId)
                    .HasConstraintName("FK93ptwshhki12vonmfhcmgw0m0");

                entity.HasOne(d => d.SarsFilel)
                    .WithMany(p => p.SarsEmployerDetailAllDataForTestings)
                    .HasForeignKey(d => d.SarsFilelId)
                    .HasConstraintName("FKfjafdu1f4rqruklsicv64qk8x");
            });

            modelBuilder.Entity<SarsEmployerDetailUpdateHistory>(entity =>
            {
                entity.ToTable("sars_employer_detail_update_history");

                entity.HasIndex(e => e.SarsFilelId, "FK8xvh7vd2ym6999fpc78uxr6as");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("company_registration_number");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateUpdated)
                    .HasColumnType("datetime")
                    .HasColumnName("date_updated");

                entity.Property(e => e.EmployerDetailLink).HasColumnName("employer_detail_link");

                entity.Property(e => e.EmployerPostCode)
                    .HasMaxLength(255)
                    .HasColumnName("employer_post_code");

                entity.Property(e => e.NoEmployesAccordingToSars).HasColumnName("no_employes_according_to_sars");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(255)
                    .HasColumnName("ref_no");

                entity.Property(e => e.RegisteredNameOfEntity)
                    .HasMaxLength(500)
                    .HasColumnName("registered_name_of_entity");

                entity.Property(e => e.SarsFilelId).HasColumnName("sars_filel_id");

                entity.Property(e => e.SicCode2)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code_2");

                entity.Property(e => e.TradingName)
                    .HasMaxLength(255)
                    .HasColumnName("trading_name");

                entity.Property(e => e.TradingStatus)
                    .HasMaxLength(255)
                    .HasColumnName("trading_status");

                entity.Property(e => e.UserUpdateLink).HasColumnName("user_update_link");

                entity.HasOne(d => d.SarsFilel)
                    .WithMany(p => p.SarsEmployerDetailUpdateHistories)
                    .HasForeignKey(d => d.SarsFilelId)
                    .HasConstraintName("FK8xvh7vd2ym6999fpc78uxr6as");
            });

            modelBuilder.Entity<SarsFile>(entity =>
            {
                entity.ToTable("sars_files");

                entity.HasIndex(e => e.LoadedToGpByUserId, "FKlkhp2f3flps0bou5632k4un5k");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CanProcessMgPayments)
                    .HasColumnType("bit(1)")
                    .HasColumnName("can_process_mg_payments")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForMonth)
                    .HasColumnType("datetime")
                    .HasColumnName("for_month");

                entity.Property(e => e.LoadGpDate)
                    .HasColumnType("datetime")
                    .HasColumnName("load_gp_date");

                entity.Property(e => e.LoadedToBp)
                    .HasColumnType("bit(1)")
                    .HasColumnName("loaded_to_bp")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.LoadedToGpByUserId).HasColumnName("loaded_to_gp_by_user_id");

                entity.HasOne(d => d.LoadedToGpByUser)
                    .WithMany(p => p.SarsFiles)
                    .HasForeignKey(d => d.LoadedToGpByUserId)
                    .HasConstraintName("FKlkhp2f3flps0bou5632k4un5k");
            });

            modelBuilder.Entity<SarsInterSetaTransferLevy>(entity =>
            {
                entity.ToTable("sars_inter_seta_transfer_levies");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Admin).HasColumnName("admin");

                entity.Property(e => e.Discretionary).HasColumnName("discretionary");

                entity.Property(e => e.Interest).HasColumnName("interest");

                entity.Property(e => e.Mandatory).HasColumnName("mandatory");

                entity.Property(e => e.OrganisationName)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name");

                entity.Property(e => e.Penalties).HasColumnName("penalties");

                entity.Property(e => e.RelevantMonth).HasColumnName("relevant_month");

                entity.Property(e => e.RelevantYear).HasColumnName("relevant_year");

                entity.Property(e => e.SchemeYear)
                    .HasMaxLength(255)
                    .HasColumnName("scheme_year");

                entity.Property(e => e.Sdlnumber)
                    .HasMaxLength(255)
                    .HasColumnName("sdlnumber");

                entity.Property(e => e.SetaCode)
                    .HasMaxLength(255)
                    .HasColumnName("seta_code");

                entity.Property(e => e.SetaName)
                    .HasMaxLength(255)
                    .HasColumnName("seta_name");

                entity.Property(e => e.T80Percent).HasColumnName("t_80_percent");

                entity.Property(e => e.Total).HasColumnName("total");

                entity.Property(e => e.TotalA).HasColumnName("total_a");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(255)
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(255)
                    .HasColumnName("transaction_type");

                entity.Property(e => e.TransferType)
                    .HasMaxLength(255)
                    .HasColumnName("transfer_type");
            });

            modelBuilder.Entity<SarsLeviesPaid>(entity =>
            {
                entity.ToTable("sars_levies_paid");

                entity.HasIndex(e => e.SarsFileId, "FKid9qeubjtreyxaa8aug0twbkf");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CheckbookAmount).HasColumnName("checkbook_amount");

                entity.Property(e => e.GlPostingDate)
                    .HasColumnType("datetime")
                    .HasColumnName("gl_posting_date");

                entity.Property(e => e.LevyFile)
                    .HasMaxLength(20)
                    .HasColumnName("levy_file");

                entity.Property(e => e.SarsFileId).HasColumnName("sars_file_id");

                entity.HasOne(d => d.SarsFile)
                    .WithMany(p => p.SarsLeviesPaids)
                    .HasForeignKey(d => d.SarsFileId)
                    .HasConstraintName("FKid9qeubjtreyxaa8aug0twbkf");
            });

            modelBuilder.Entity<SarsLevyDetail>(entity =>
            {
                entity.ToTable("sars_levy_detail");

                entity.HasIndex(e => e.SarsEmployerDetailId, "FK739p8awpfxc152nvk579n9b9b");

                entity.HasIndex(e => e.ArrivalDate1, "arrival_date_1");

                entity.HasIndex(e => new { e.RefNo, e.ArrivalDate1 }, "hs_index_01");

                entity.HasIndex(e => e.SarsFilelId, "index_hs_2");

                entity.HasIndex(e => new { e.RefNo, e.SchemeYear }, "ref_no");

                entity.HasIndex(e => e.SchemeYear, "scheme_year");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdminLevy).HasColumnName("admin_levy");

                entity.Property(e => e.ArrivalDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("arrival_date_1");

                entity.Property(e => e.ArrivalDate2)
                    .HasColumnType("datetime")
                    .HasColumnName("arrival_date_2");

                entity.Property(e => e.CanAppearOnMgPayments)
                    .HasColumnType("bit(1)")
                    .HasColumnName("can_appear_on_mg_payments")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DiscretionaryLevy).HasColumnName("discretionary_levy");

                entity.Property(e => e.Interest).HasColumnName("interest");

                entity.Property(e => e.MandatoryLevy).HasColumnName("mandatory_levy");

                entity.Property(e => e.Penalty).HasColumnName("penalty");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(50)
                    .HasColumnName("ref_no");

                entity.Property(e => e.SarsEmployerDetailId).HasColumnName("sars_employer_detail_id");

                entity.Property(e => e.SarsFilelId).HasColumnName("sars_filel_id");

                entity.Property(e => e.SchemeYear).HasColumnName("scheme_year");

                entity.Property(e => e.SetaCode)
                    .HasMaxLength(50)
                    .HasColumnName("seta_code");

                entity.Property(e => e.Total).HasColumnName("total");

                entity.HasOne(d => d.SarsEmployerDetail)
                    .WithMany(p => p.SarsLevyDetails)
                    .HasForeignKey(d => d.SarsEmployerDetailId)
                    .HasConstraintName("FK739p8awpfxc152nvk579n9b9b");

                entity.HasOne(d => d.SarsFilel)
                    .WithMany(p => p.SarsLevyDetails)
                    .HasForeignKey(d => d.SarsFilelId)
                    .HasConstraintName("FKdxorjdcrkbtjoqty88wmldray");
            });

            modelBuilder.Entity<SarsLevyDetailCalculation>(entity =>
            {
                entity.ToTable("sars_levy_detail_calculation");

                entity.HasIndex(e => e.LastActionUserId, "FK1mhog34fdoplfjl586skbn4iq");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdminPercentage).HasColumnName("admin_percentage");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DiscretionaryPercentage).HasColumnName("discretionary_percentage");

                entity.Property(e => e.ForSchemeYear).HasColumnName("for_scheme_year");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUserId).HasColumnName("last_action_user_id");

                entity.Property(e => e.MandatoryPercentage).HasColumnName("mandatory_percentage");

                entity.Property(e => e.QctoPercentage).HasColumnName("qcto_percentage");

                entity.HasOne(d => d.LastActionUser)
                    .WithMany(p => p.SarsLevyDetailCalculations)
                    .HasForeignKey(d => d.LastActionUserId)
                    .HasConstraintName("FK1mhog34fdoplfjl586skbn4iq");
            });

            modelBuilder.Entity<SarsLevyDetailCalculationHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("sars_levy_detail_calculation_hist");

                entity.HasIndex(e => e.Rev, "FKq5cdopuue78s4ay9bmvsfte0l");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AdminPercentage).HasColumnName("admin_percentage");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DiscretionaryPercentage).HasColumnName("discretionary_percentage");

                entity.Property(e => e.ForSchemeYear).HasColumnName("for_scheme_year");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUserId).HasColumnName("last_action_user_id");

                entity.Property(e => e.MandatoryPercentage).HasColumnName("mandatory_percentage");

                entity.Property(e => e.QctoPercentage).HasColumnName("qcto_percentage");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SarsLevyDetailCalculationHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKq5cdopuue78s4ay9bmvsfte0l");
            });

            modelBuilder.Entity<SarsLevyRecon>(entity =>
            {
                entity.HasKey(e => e.Sdlnumber)
                    .HasName("PRIMARY");

                entity.ToTable("SarsLevyRecon");

                entity.Property(e => e.Sdlnumber).HasColumnName("sdlnumber");
            });

            modelBuilder.Entity<SarsLevySchemeYearReturn>(entity =>
            {
                entity.ToTable("sars_levy_scheme_year_returns");

                entity.HasIndex(e => e.LastActionUserId, "FKgqd8c4s89o82uh7sm4s6wjf1n");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AllowInvoicesDiscretionary)
                    .HasColumnType("bit(1)")
                    .HasColumnName("allow_invoices_discretionary");

                entity.Property(e => e.AllowInvoicesMandatory)
                    .HasColumnType("bit(1)")
                    .HasColumnName("allow_invoices_mandatory");

                entity.Property(e => e.AllowReturnsDiscretionary)
                    .HasColumnType("bit(1)")
                    .HasColumnName("allow_returns_discretionary");

                entity.Property(e => e.AllowReturnsMandatory)
                    .HasColumnType("bit(1)")
                    .HasColumnName("allow_returns_mandatory");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForSchemeYear).HasColumnName("for_scheme_year");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUserId).HasColumnName("last_action_user_id");

                entity.HasOne(d => d.LastActionUser)
                    .WithMany(p => p.SarsLevySchemeYearReturns)
                    .HasForeignKey(d => d.LastActionUserId)
                    .HasConstraintName("FKgqd8c4s89o82uh7sm4s6wjf1n");
            });

            modelBuilder.Entity<SarsLevySchemeYearReturnsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("sars_levy_scheme_year_returns_hist");

                entity.HasIndex(e => e.Rev, "FKbyfpf5p6wh7t2sxd9x928ougu");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AllowInvoicesDiscretionary)
                    .HasColumnType("bit(1)")
                    .HasColumnName("allow_invoices_discretionary");

                entity.Property(e => e.AllowInvoicesMandatory)
                    .HasColumnType("bit(1)")
                    .HasColumnName("allow_invoices_mandatory");

                entity.Property(e => e.AllowReturnsDiscretionary)
                    .HasColumnType("bit(1)")
                    .HasColumnName("allow_returns_discretionary");

                entity.Property(e => e.AllowReturnsMandatory)
                    .HasColumnType("bit(1)")
                    .HasColumnName("allow_returns_mandatory");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForSchemeYear).HasColumnName("for_scheme_year");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUserId).HasColumnName("last_action_user_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SarsLevySchemeYearReturnsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKbyfpf5p6wh7t2sxd9x928ougu");
            });

            modelBuilder.Entity<ScarcityReason>(entity =>
            {
                entity.ToTable("scarcity_reason");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<ScheduleChangesLog>(entity =>
            {
                entity.ToTable("schedule_changes_log");

                entity.HasIndex(e => e.CompanyId, "FK8sk0rftvx1ojvbkog6cfh59du");

                entity.HasIndex(e => e.ForUserId, "FKtckcjuxb3bie3rwdjx4gt2k5r");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForUserId).HasColumnName("for_user_id");

                entity.Property(e => e.Information).HasColumnName("information");

                entity.Property(e => e.ManualIntervention)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manual_intervention");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.ScheduleChangesLogs)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK8sk0rftvx1ojvbkog6cfh59du");

                entity.HasOne(d => d.ForUser)
                    .WithMany(p => p.ScheduleChangesLogs)
                    .HasForeignKey(d => d.ForUserId)
                    .HasConstraintName("FKtckcjuxb3bie3rwdjx4gt2k5r");
            });

            modelBuilder.Entity<ScheduledEvent>(entity =>
            {
                entity.ToTable("scheduled_event");

                entity.HasIndex(e => e.UserId, "FKl79o28djqfiul7e35uw3lh1cc");

                entity.HasIndex(e => e.ReviewCommitteeMeetingId, "FKm1qfrgatr57o1g73cdw6enebd");

                entity.HasIndex(e => e.CompanyId, "FKmqphuvei2jf96khr56t4p980w");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Appeals).HasColumnName("appeals");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.Behavior).HasColumnName("behavior");

                entity.Property(e => e.CollectionInformation)
                    .HasMaxLength(255)
                    .HasColumnName("collection_information");

                entity.Property(e => e.CollectionType).HasColumnName("collection_type");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyModerationDone)
                    .HasColumnType("bit(1)")
                    .HasColumnName("company_moderation_done")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Concistency).HasColumnName("concistency");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateOfCollection)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_collection");

                entity.Property(e => e.Decision).HasColumnName("decision");

                entity.Property(e => e.Documentation).HasColumnName("documentation");

                entity.Property(e => e.FromDateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("from_date_time");

                entity.Property(e => e.InternalModeration).HasColumnName("internal_moderation");

                entity.Property(e => e.LearnersSetForModeration)
                    .HasColumnType("bit(1)")
                    .HasColumnName("learners_set_for_moderation")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ModerationEnum).HasColumnName("moderation_enum");

                entity.Property(e => e.PercentageEnum).HasColumnName("percentage_enum");

                entity.Property(e => e.Plan).HasColumnName("plan");

                entity.Property(e => e.QualificationTypeSelectionEnum).HasColumnName("qualification_type_selection_enum");

                entity.Property(e => e.Recomendations).HasColumnName("recomendations");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.SignoffDate)
                    .HasColumnType("datetime")
                    .HasColumnName("signoff_date");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Support).HasColumnName("support");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.Title).HasColumnName("title");

                entity.Property(e => e.ToDateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("to_date_time");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.ScheduledEvents)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKmqphuvei2jf96khr56t4p980w");

                entity.HasOne(d => d.ReviewCommitteeMeeting)
                    .WithMany(p => p.ScheduledEvents)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingId)
                    .HasConstraintName("FKm1qfrgatr57o1g73cdw6enebd");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.ScheduledEvents)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKl79o28djqfiul7e35uw3lh1cc");
            });

            modelBuilder.Entity<ScheduledEventUser>(entity =>
            {
                entity.ToTable("scheduled_event_users");

                entity.HasIndex(e => e.ScheduledEventId, "FK3pbw2qqsmficws4q1n95ghmtn");

                entity.HasIndex(e => e.JobTitleId, "FK5g8ehacw2o5hoiet4qhnywibt");

                entity.HasIndex(e => e.UserId, "FKpwr6pmws67urhmtqa4c2fmjk7");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.JobTitleId).HasColumnName("job_title_id");

                entity.Property(e => e.ScheduledEventId).HasColumnName("scheduled_event_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.JobTitle)
                    .WithMany(p => p.ScheduledEventUsers)
                    .HasForeignKey(d => d.JobTitleId)
                    .HasConstraintName("FK5g8ehacw2o5hoiet4qhnywibt");

                entity.HasOne(d => d.ScheduledEvent)
                    .WithMany(p => p.ScheduledEventUsers)
                    .HasForeignKey(d => d.ScheduledEventId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK3pbw2qqsmficws4q1n95ghmtn");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.ScheduledEventUsers)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKpwr6pmws67urhmtqa4c2fmjk7");
            });

            modelBuilder.Entity<ScopeOfResponsibility>(entity =>
            {
                entity.ToTable("scope_of_responsibility");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<SdfCompany>(entity =>
            {
                entity.ToTable("sdf_company");

                entity.HasIndex(e => e.RelationshipToCompanyId, "FK54yiyxydsf3bil07a36o1ohu4");

                entity.HasIndex(e => e.SdfId, "FK9pjprrbgg3cgqsjjaqboybuya");

                entity.HasIndex(e => e.CompanyId, "FKdwl2q6e21eyp449y2ux6hsd4x");

                entity.HasIndex(e => e.SdfTypeId, "FKgoyvbd4npcci47yg5gwast59n");

                entity.HasIndex(e => e.ScopeOfResponsibilityId, "FKgwnn3hmdm0c8ufuv66yvnutqg");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.RelationshipToCompanyId).HasColumnName("relationship_to_company_id");

                entity.Property(e => e.ScopeOfResponsibilityId).HasColumnName("scope_of_responsibility_id");

                entity.Property(e => e.SdfId).HasColumnName("sdf_id");

                entity.Property(e => e.SdfTypeId).HasColumnName("sdf_type_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.SdfCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKdwl2q6e21eyp449y2ux6hsd4x");

                entity.HasOne(d => d.RelationshipToCompany)
                    .WithMany(p => p.SdfCompanies)
                    .HasForeignKey(d => d.RelationshipToCompanyId)
                    .HasConstraintName("FK54yiyxydsf3bil07a36o1ohu4");

                entity.HasOne(d => d.ScopeOfResponsibility)
                    .WithMany(p => p.SdfCompanies)
                    .HasForeignKey(d => d.ScopeOfResponsibilityId)
                    .HasConstraintName("FKgwnn3hmdm0c8ufuv66yvnutqg");

                entity.HasOne(d => d.Sdf)
                    .WithMany(p => p.SdfCompanies)
                    .HasForeignKey(d => d.SdfId)
                    .HasConstraintName("FK9pjprrbgg3cgqsjjaqboybuya");

                entity.HasOne(d => d.SdfType)
                    .WithMany(p => p.SdfCompanies)
                    .HasForeignKey(d => d.SdfTypeId)
                    .HasConstraintName("FKgoyvbd4npcci47yg5gwast59n");
            });

            modelBuilder.Entity<SdfCompanyHistory>(entity =>
            {
                entity.ToTable("sdf_company_history");

                entity.HasIndex(e => e.ForSdfCompany, "FK3o4lndiirosi17kgi7wibihr2");

                entity.HasIndex(e => e.SdfId, "FKcso9ljxwwvdxooa6facnh9d0p");

                entity.HasIndex(e => e.RelationshipToCompanyId, "FKhidp0vg9lrmtni1s5pv3420gj");

                entity.HasIndex(e => e.SdfTypeId, "FKllh0ff4fvla21cgci64otap1s");

                entity.HasIndex(e => e.CompanyId, "FKs7p2po46bq1s8bv2gw9kggslb");

                entity.HasIndex(e => e.ScopeOfResponsibilityId, "FKt42m1vfn39mnmde0citqwt1pu");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForSdfCompany).HasColumnName("for_sdf_company");

                entity.Property(e => e.RelationshipToCompanyId).HasColumnName("relationship_to_company_id");

                entity.Property(e => e.ScopeOfResponsibilityId).HasColumnName("scope_of_responsibility_id");

                entity.Property(e => e.SdfId).HasColumnName("sdf_id");

                entity.Property(e => e.SdfTypeId).HasColumnName("sdf_type_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.SdfCompanyHistories)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKs7p2po46bq1s8bv2gw9kggslb");

                entity.HasOne(d => d.ForSdfCompanyNavigation)
                    .WithMany(p => p.SdfCompanyHistories)
                    .HasForeignKey(d => d.ForSdfCompany)
                    .HasConstraintName("FK3o4lndiirosi17kgi7wibihr2");

                entity.HasOne(d => d.RelationshipToCompany)
                    .WithMany(p => p.SdfCompanyHistories)
                    .HasForeignKey(d => d.RelationshipToCompanyId)
                    .HasConstraintName("FKhidp0vg9lrmtni1s5pv3420gj");

                entity.HasOne(d => d.ScopeOfResponsibility)
                    .WithMany(p => p.SdfCompanyHistories)
                    .HasForeignKey(d => d.ScopeOfResponsibilityId)
                    .HasConstraintName("FKt42m1vfn39mnmde0citqwt1pu");

                entity.HasOne(d => d.Sdf)
                    .WithMany(p => p.SdfCompanyHistories)
                    .HasForeignKey(d => d.SdfId)
                    .HasConstraintName("FKcso9ljxwwvdxooa6facnh9d0p");

                entity.HasOne(d => d.SdfType)
                    .WithMany(p => p.SdfCompanyHistories)
                    .HasForeignKey(d => d.SdfTypeId)
                    .HasConstraintName("FKllh0ff4fvla21cgci64otap1s");
            });

            modelBuilder.Entity<SdfType>(entity =>
            {
                entity.ToTable("sdf_type");

                entity.HasIndex(e => e.SignOnRecognition, "FK3nlmdl17dhhw4c04nyuklvv63");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.RegisterLearners)
                    .HasColumnType("bit(1)")
                    .HasColumnName("register_learners");

                entity.Property(e => e.RegisterMentors)
                    .HasColumnType("bit(1)")
                    .HasColumnName("register_mentors");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SignOffWsp)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sign_off_wsp");

                entity.Property(e => e.SignOnRecognition).HasColumnName("sign_on_recognition");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.SignOnRecognitionNavigation)
                    .WithMany(p => p.SdfTypes)
                    .HasForeignKey(d => d.SignOnRecognition)
                    .HasConstraintName("FK3nlmdl17dhhw4c04nyuklvv63");
            });

            modelBuilder.Entity<SdpCompany>(entity =>
            {
                entity.ToTable("sdp_company");

               // entity.HasIndex(e => e.CompanyId, "FK1a1irng9ncy3y9tkdrwuiws6q");

               // entity.HasIndex(e => e.SpfTypeId, "FKdh10b2lutre40n6yq3l5qaf8b");

               // entity.HasIndex(e => e.RelationshipToCompanyId, "FKf8h2ndgfbq64fmpawiovml1wl");

               // entity.HasIndex(e => e.ScopeOfResponsibilityId, "FKq9ijf59g1cecrjkkr40c9ymjj");

                //entity.HasIndex(e => e.TrainingSiteId, "FKs9epimvyvwlpyaqw2rkuvtd4q");

               // entity.HasIndex(e => new { e.SdpId, e.CompanyId }, "sdpcompany_sdp_company");

               // entity.HasIndex(e => new { e.SdpId, e.CompanyId, e.TrainingSiteId }, "sdpcompany_sdp_company_site");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

              //  entity.Property(e => e.RelationshipToCompanyId).HasColumnName("relationship_to_company_id");

               // entity.Property(e => e.ScopeOfResponsibilityId).HasColumnName("scope_of_responsibility_id");

                entity.Property(e => e.SdpId).HasColumnName("sdp_id");

                entity.Property(e => e.SpfTypeId).HasColumnName("spf_type_id");

                entity.Property(e => e.TrainingSiteId).HasColumnName("training_site_id");

               /* entity.HasOne(d => d.Company)
                    .WithMany(p => p.SdpCompanies)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK1a1irng9ncy3y9tkdrwuiws6q");

                entity.HasOne(d => d.RelationshipToCompany)
                    .WithMany(p => p.SdpCompanies)
                    .HasForeignKey(d => d.RelationshipToCompanyId)
                    .HasConstraintName("FKf8h2ndgfbq64fmpawiovml1wl");

                entity.HasOne(d => d.ScopeOfResponsibility)
                    .WithMany(p => p.SdpCompanies)
                    .HasForeignKey(d => d.ScopeOfResponsibilityId)
                    .HasConstraintName("FKq9ijf59g1cecrjkkr40c9ymjj");

                entity.HasOne(d => d.Sdp)
                    .WithMany(p => p.SdpCompanies)
                    .HasForeignKey(d => d.SdpId)
                    .HasConstraintName("FKk9uq7en3985x9960stut87qcu");

                entity.HasOne(d => d.SpfType)
                    .WithMany(p => p.SdpCompanies)
                    .HasForeignKey(d => d.SpfTypeId)
                    .HasConstraintName("FKdh10b2lutre40n6yq3l5qaf8b");

                entity.HasOne(d => d.TrainingSite)
                    .WithMany(p => p.SdpCompanies)
                    .HasForeignKey(d => d.TrainingSiteId)
                    .HasConstraintName("FKs9epimvyvwlpyaqw2rkuvtd4q");*/
            });

            modelBuilder.Entity<SdpCompanyAction>(entity =>
            {
                entity.ToTable("sdp_company_actions");

                entity.HasIndex(e => e.SdpUserId, "FK3dlflvt4rg6s7t1mmc6hnssjj");

                entity.HasIndex(e => e.TrainingSiteId, "FK9epmdr8lxl8lt0490sf197sgx");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FK9lhx030qoy81a9dlwdn8voapx");

                entity.HasIndex(e => e.CreateUserId, "FK9qhec806posnhk4s480fen9o7");

                entity.HasIndex(e => e.CurrentDesignationId, "FKf47d5a5cqjtah8hwef45klb4f");

                entity.HasIndex(e => e.ApprovalUserId, "FKicvwytjefy8i72jxs8x0cy9t9");

                entity.HasIndex(e => e.CompanyId, "FKptj4g6aqkuhk78jxf7j89h8hw");

                entity.HasIndex(e => e.NewDesignationId, "FKqvorued86p5rsserwyieko988");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.ApprovalUserId).HasColumnName("approval_user_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CurrentDesignationId).HasColumnName("current_designation_id");

                entity.Property(e => e.NewDesignationId).HasColumnName("new_designation_id");

                entity.Property(e => e.Reason).HasColumnName("reason");

                entity.Property(e => e.SdpCompanyAction1).HasColumnName("sdp_company_action");

                entity.Property(e => e.SdpCompanyFlatId).HasColumnName("sdp_company_flat_id");

                entity.Property(e => e.SdpUserId).HasColumnName("sdp_user_id");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.TrainingSiteId).HasColumnName("training_site_id");

                entity.HasOne(d => d.ApprovalUser)
                    .WithMany(p => p.SdpCompanyActionApprovalUsers)
                    .HasForeignKey(d => d.ApprovalUserId)
                    .HasConstraintName("FKicvwytjefy8i72jxs8x0cy9t9");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.SdpCompanyActions)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKptj4g6aqkuhk78jxf7j89h8hw");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.SdpCompanyActionCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FK9qhec806posnhk4s480fen9o7");

                entity.HasOne(d => d.CurrentDesignation)
                    .WithMany(p => p.SdpCompanyActionCurrentDesignations)
                    .HasForeignKey(d => d.CurrentDesignationId)
                    .HasConstraintName("FKf47d5a5cqjtah8hwef45klb4f");

                entity.HasOne(d => d.NewDesignation)
                    .WithMany(p => p.SdpCompanyActionNewDesignations)
                    .HasForeignKey(d => d.NewDesignationId)
                    .HasConstraintName("FKqvorued86p5rsserwyieko988");

                entity.HasOne(d => d.SdpUser)
                    .WithMany(p => p.SdpCompanyActionSdpUsers)
                    .HasForeignKey(d => d.SdpUserId)
                    .HasConstraintName("FK3dlflvt4rg6s7t1mmc6hnssjj");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.SdpCompanyActions)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FK9lhx030qoy81a9dlwdn8voapx");

                entity.HasOne(d => d.TrainingSite)
                    .WithMany(p => p.SdpCompanyActions)
                    .HasForeignKey(d => d.TrainingSiteId)
                    .HasConstraintName("FK9epmdr8lxl8lt0490sf197sgx");
            });

            modelBuilder.Entity<SdpCompanyActionsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("sdp_company_actions_hist");

                entity.HasIndex(e => e.Rev, "FKr40e2ruw3ex6k5uulykhqpabc");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.ApprovalUserId).HasColumnName("approval_user_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CurrentDesignationId).HasColumnName("current_designation_id");

                entity.Property(e => e.NewDesignationId).HasColumnName("new_designation_id");

                entity.Property(e => e.Reason).HasColumnName("reason");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SdpCompanyAction).HasColumnName("sdp_company_action");

                entity.Property(e => e.SdpCompanyFlatId).HasColumnName("sdp_company_flat_id");

                entity.Property(e => e.SdpUserId).HasColumnName("sdp_user_id");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.TrainingSiteId).HasColumnName("training_site_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SdpCompanyActionsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKr40e2ruw3ex6k5uulykhqpabc");
            });

            modelBuilder.Entity<SdpCompanyHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("sdp_company_hist");

                entity.HasIndex(e => e.Rev, "FKe81ponjvhq8etwytfrsp8h9jb");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.RelationshipToCompanyId).HasColumnName("relationship_to_company_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.ScopeOfResponsibilityId).HasColumnName("scope_of_responsibility_id");

                entity.Property(e => e.SdpId).HasColumnName("sdp_id");

                entity.Property(e => e.SpfTypeId).HasColumnName("spf_type_id");

                entity.Property(e => e.TrainingSiteId).HasColumnName("training_site_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SdpCompanyHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKe81ponjvhq8etwytfrsp8h9jb");
            });

            modelBuilder.Entity<SdpCompanyHistory>(entity =>
            {
                entity.ToTable("sdp_company_history");

                entity.HasIndex(e => e.RelationshipToCompanyId, "FK4mclayukegvnxlk70st1pjgmk");

                entity.HasIndex(e => e.SdpId, "FKblggoy613ynkwt3kbqpx49x38");

                entity.HasIndex(e => e.ScopeOfResponsibilityId, "FKi0et8pikb5aun5d2ey4ewmm0l");

                entity.HasIndex(e => e.CompanyId, "FKmn7msvutl2kdgab7pt6orsf6");

                entity.HasIndex(e => e.ForSdpCompany, "FKppldpui1wu2w5nxlqirrndjwp");

                entity.HasIndex(e => e.SdpTypeId, "FKufm4ytc9dp1sxr0cj8xqjcrb");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForSdpCompany).HasColumnName("for_sdp_company");

                entity.Property(e => e.RelationshipToCompanyId).HasColumnName("relationship_to_company_id");

                entity.Property(e => e.ScopeOfResponsibilityId).HasColumnName("scope_of_responsibility_id");

                entity.Property(e => e.SdpId).HasColumnName("sdp_id");

                entity.Property(e => e.SdpTypeId).HasColumnName("sdp_type_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.SdpCompanyHistories)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKmn7msvutl2kdgab7pt6orsf6");

                /*entity.HasOne(d => d.ForSdpCompanyNavigation)
                    .WithMany(p => p.SdpCompanyHistories)
                    .HasForeignKey(d => d.ForSdpCompany)
                    .HasConstraintName("FKppldpui1wu2w5nxlqirrndjwp");*/

                entity.HasOne(d => d.RelationshipToCompany)
                    .WithMany(p => p.SdpCompanyHistories)
                    .HasForeignKey(d => d.RelationshipToCompanyId)
                    .HasConstraintName("FK4mclayukegvnxlk70st1pjgmk");

                entity.HasOne(d => d.ScopeOfResponsibility)
                    .WithMany(p => p.SdpCompanyHistories)
                    .HasForeignKey(d => d.ScopeOfResponsibilityId)
                    .HasConstraintName("FKi0et8pikb5aun5d2ey4ewmm0l");

                entity.HasOne(d => d.Sdp)
                    .WithMany(p => p.SdpCompanyHistories)
                    .HasForeignKey(d => d.SdpId)
                    .HasConstraintName("FKblggoy613ynkwt3kbqpx49x38");

                entity.HasOne(d => d.SdpType)
                    .WithMany(p => p.SdpCompanyHistories)
                    .HasForeignKey(d => d.SdpTypeId)
                    .HasConstraintName("FKufm4ytc9dp1sxr0cj8xqjcrb");
            });

            modelBuilder.Entity<SdpExtensionOfScope>(entity =>
            {
                entity.ToTable("sdp_extension_of_scope");

                entity.HasIndex(e => e.ReviewCommitteeMeetingId, "FK1y81hcb8bnw3qaaihgwmr9c5x");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FK1ypb6qy75ta7rl0jfxpuwbty5");

                entity.HasIndex(e => e.QualityAssuranceUserId, "FK25syw0qfrc3kmsbtdfxng616b");

                entity.HasIndex(e => e.ManagerQaUserId, "FK2gbw433q17wqmt3oek8bftyhn");

                entity.HasIndex(e => e.UsersId, "FK99uv56bxnwiaw75em6gpxmw4a");

                entity.HasIndex(e => e.ReviewCommitteeMeetingAgendaId, "FK9kwae8y6bt3jsfwu4iwrw0t8d");

                entity.HasIndex(e => e.SenioManagerQaUserId, "FKhs6gf19twqpn42dg2ccdce3ep");

                entity.HasIndex(e => e.SkillsProgramId, "FKrmlcv2cw7elhwaqmv51ueh21s");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ManagerQaUserId).HasColumnName("manager_qa_user_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.PreviousApprovalStatus).HasColumnName("previous_approval_status");

                entity.Property(e => e.PreviousCodeOfConductAcceptDate)
                    .HasColumnType("datetime")
                    .HasColumnName("previous_code_of_conduct_accept_date");

                entity.Property(e => e.QualityAssuranceUserId).HasColumnName("quality_assurance_user_id");

                entity.Property(e => e.RecommendedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("recommended_date");

                entity.Property(e => e.RecommendedToRevireCommDate)
                    .HasColumnType("datetime")
                    .HasColumnName("recommended_to_revire_comm_date");

                entity.Property(e => e.ReviewCommitteeMeetingAgendaId).HasColumnName("review_committee_meeting_agenda_id");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.SenioManagerQaUserId).HasColumnName("senio_manager_qa_user_id");

                entity.Property(e => e.SiteVisitComment)
                    .HasMaxLength(255)
                    .HasColumnName("site_visit_comment");

                entity.Property(e => e.SiteVisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("site_visit_date");

                entity.Property(e => e.SiteVisitDone)
                    .HasColumnType("bit(1)")
                    .HasColumnName("site_visit_done")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SiteVisitReportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("site_visit_report_date");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.UseSkillProgrammeRoute).HasColumnName("use_skill_programme_route");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.ManagerQaUser)
                    .WithMany(p => p.SdpExtensionOfScopeManagerQaUsers)
                    .HasForeignKey(d => d.ManagerQaUserId)
                    .HasConstraintName("FK2gbw433q17wqmt3oek8bftyhn");

                entity.HasOne(d => d.QualityAssuranceUser)
                    .WithMany(p => p.SdpExtensionOfScopeQualityAssuranceUsers)
                    .HasForeignKey(d => d.QualityAssuranceUserId)
                    .HasConstraintName("FK25syw0qfrc3kmsbtdfxng616b");

                entity.HasOne(d => d.ReviewCommitteeMeetingAgenda)
                    .WithMany(p => p.SdpExtensionOfScopes)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingAgendaId)
                    .HasConstraintName("FK9kwae8y6bt3jsfwu4iwrw0t8d");

                entity.HasOne(d => d.ReviewCommitteeMeeting)
                    .WithMany(p => p.SdpExtensionOfScopes)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingId)
                    .HasConstraintName("FK1y81hcb8bnw3qaaihgwmr9c5x");

                entity.HasOne(d => d.SenioManagerQaUser)
                    .WithMany(p => p.SdpExtensionOfScopeSenioManagerQaUsers)
                    .HasForeignKey(d => d.SenioManagerQaUserId)
                    .HasConstraintName("FKhs6gf19twqpn42dg2ccdce3ep");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.SdpExtensionOfScopes)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKrmlcv2cw7elhwaqmv51ueh21s");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.SdpExtensionOfScopes)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FK1ypb6qy75ta7rl0jfxpuwbty5");

                entity.HasOne(d => d.Users)
                    .WithMany(p => p.SdpExtensionOfScopeUsers)
                    .HasForeignKey(d => d.UsersId)
                    .HasConstraintName("FK99uv56bxnwiaw75em6gpxmw4a");
            });

            modelBuilder.Entity<SdpExtensionOfScopeHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("sdp_extension_of_scope_hist");

                entity.HasIndex(e => e.Rev, "FKtfuihwb2wmdu9ynepc7o1mdsj");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ManagerQaUserId).HasColumnName("manager_qa_user_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.PreviousApprovalStatus).HasColumnName("previous_approval_status");

                entity.Property(e => e.PreviousCodeOfConductAcceptDate)
                    .HasColumnType("datetime")
                    .HasColumnName("previous_code_of_conduct_accept_date");

                entity.Property(e => e.QualityAssuranceUserId).HasColumnName("quality_assurance_user_id");

                entity.Property(e => e.RecommendedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("recommended_date");

                entity.Property(e => e.RecommendedToRevireCommDate)
                    .HasColumnType("datetime")
                    .HasColumnName("recommended_to_revire_comm_date");

                entity.Property(e => e.ReviewCommitteeMeetingAgendaId).HasColumnName("review_committee_meeting_agenda_id");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SenioManagerQaUserId).HasColumnName("senio_manager_qa_user_id");

                entity.Property(e => e.SiteVisitComment)
                    .HasMaxLength(255)
                    .HasColumnName("site_visit_comment");

                entity.Property(e => e.SiteVisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("site_visit_date");

                entity.Property(e => e.SiteVisitDone)
                    .HasColumnType("bit(1)")
                    .HasColumnName("site_visit_done")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SiteVisitReportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("site_visit_report_date");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.UseSkillProgrammeRoute).HasColumnName("use_skill_programme_route");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SdpExtensionOfScopeHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKtfuihwb2wmdu9ynepc7o1mdsj");
            });

            modelBuilder.Entity<SdpReAccreditation>(entity =>
            {
                entity.ToTable("sdp_re_accreditation");

                entity.HasIndex(e => e.UsersId, "FKkntvros40thyfxvl9nkcq3w95");

                entity.HasIndex(e => e.ReviewCommitteeMeetingId, "FKlp128jv0ifqq2qlirbsvmu81n");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKns0yy7u7a20dx1kfu7roexhe1");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.PrevioursAccreditationApplicationType).HasColumnName("previours_accreditation_application_type");

                entity.Property(e => e.PrevioursSiteVisitComment)
                    .HasMaxLength(255)
                    .HasColumnName("previours_site_visit_comment");

                entity.Property(e => e.PrevioursSiteVisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("previours_site_visit_date");

                entity.Property(e => e.PrevioursSiteVisitReportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("previours_site_visit_report_date");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.ReviewCommitteeMeeting)
                    .WithMany(p => p.SdpReAccreditations)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingId)
                    .HasConstraintName("FKlp128jv0ifqq2qlirbsvmu81n");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.SdpReAccreditations)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKns0yy7u7a20dx1kfu7roexhe1");

                entity.HasOne(d => d.Users)
                    .WithMany(p => p.SdpReAccreditations)
                    .HasForeignKey(d => d.UsersId)
                    .HasConstraintName("FKkntvros40thyfxvl9nkcq3w95");
            });

            modelBuilder.Entity<SdpReAccreditationHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("sdp_re_accreditation_hist");

                entity.HasIndex(e => e.Rev, "FKklrb3j6l5tugyvp4vxjo6qo4a");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.PrevioursAccreditationApplicationType).HasColumnName("previours_accreditation_application_type");

                entity.Property(e => e.PrevioursSiteVisitComment)
                    .HasMaxLength(255)
                    .HasColumnName("previours_site_visit_comment");

                entity.Property(e => e.PrevioursSiteVisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("previours_site_visit_date");

                entity.Property(e => e.PrevioursSiteVisitReportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("previours_site_visit_report_date");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SdpReAccreditationHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKklrb3j6l5tugyvp4vxjo6qo4a");
            });

            modelBuilder.Entity<SdpType>(entity =>
            {
                entity.ToTable("sdp_type");

                entity.HasIndex(e => e.DesignationId, "FKqnxexls0ntothitymq4qhhwpx");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActionLearners)
                    .HasColumnType("bit(1)")
                    .HasColumnName("action_learners")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ActionSdpInformation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("action_sdp_information")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ActionTradeTestCentreAssessors)
                    .HasColumnType("bit(1)")
                    .HasColumnName("action_trade_test_centre_assessors")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AlterAssModLinked)
                    .HasColumnType("bit(1)")
                    .HasColumnName("alter_ass_mod_linked")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AlterSdpsLinked)
                    .HasColumnType("bit(1)")
                    .HasColumnName("alter_sdps_linked")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AlterSiteInfo)
                    .HasColumnType("bit(1)")
                    .HasColumnName("alter_site_info")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.DesignationId).HasColumnName("designation_id");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.RegisterLearners)
                    .HasColumnType("bit(1)")
                    .HasColumnName("register_learners")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.ViewLearners)
                    .HasColumnType("bit(1)")
                    .HasColumnName("view_learners")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ViewSdpInformation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("view_sdp_information")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ViewTradeTestCentreAssessors)
                    .HasColumnType("bit(1)")
                    .HasColumnName("view_trade_test_centre_assessors")
                    .HasDefaultValueSql("b'0'");

                entity.HasOne(d => d.Designation)
                    .WithMany(p => p.SdpTypes)
                    .HasForeignKey(d => d.DesignationId)
                    .HasConstraintName("FKqnxexls0ntothitymq4qhhwpx");
            });

            modelBuilder.Entity<SdpTypeHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("sdp_type_hist");

                entity.HasIndex(e => e.Rev, "FK38ewfuecxws43ofjeuchgne1i");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActionLearners)
                    .HasColumnType("bit(1)")
                    .HasColumnName("action_learners")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ActionSdpInformation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("action_sdp_information")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ActionTradeTestCentreAssessors)
                    .HasColumnType("bit(1)")
                    .HasColumnName("action_trade_test_centre_assessors")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AlterAssModLinked)
                    .HasColumnType("bit(1)")
                    .HasColumnName("alter_ass_mod_linked")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AlterSdpsLinked)
                    .HasColumnType("bit(1)")
                    .HasColumnName("alter_sdps_linked")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AlterSiteInfo)
                    .HasColumnType("bit(1)")
                    .HasColumnName("alter_site_info")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.DesignationId).HasColumnName("designation_id");

                entity.Property(e => e.RegisterLearners)
                    .HasColumnType("bit(1)")
                    .HasColumnName("register_learners")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.ViewLearners)
                    .HasColumnType("bit(1)")
                    .HasColumnName("view_learners")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ViewSdpInformation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("view_sdp_information")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ViewTradeTestCentreAssessors)
                    .HasColumnType("bit(1)")
                    .HasColumnName("view_trade_test_centre_assessors")
                    .HasDefaultValueSql("b'0'");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SdpTypeHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK38ewfuecxws43ofjeuchgne1i");
            });

            modelBuilder.Entity<SeeingRating>(entity =>
            {
                entity.ToTable("seeing_rating");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<SelfcaringRating>(entity =>
            {
                entity.ToTable("selfcaring_rating");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<SetmisFile100>(entity =>
            {
                entity.ToTable("setmis_file_100");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("country_code");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.EtqeDecisionNumber)
                    .HasMaxLength(255)
                    .HasColumnName("etqe_decision_number");

                entity.Property(e => e.LatitudeDegree)
                    .HasMaxLength(255)
                    .HasColumnName("latitude_degree");

                entity.Property(e => e.LatitudeMinutes)
                    .HasMaxLength(255)
                    .HasColumnName("latitude_minutes");

                entity.Property(e => e.LatitudeSeconds)
                    .HasMaxLength(255)
                    .HasColumnName("latitude_seconds");

                entity.Property(e => e.LongitudeDegree)
                    .HasMaxLength(255)
                    .HasColumnName("longitude_degree");

                entity.Property(e => e.LongitudeMinutes)
                    .HasMaxLength(255)
                    .HasColumnName("longitude_minutes");

                entity.Property(e => e.LongitudeSeconds)
                    .HasMaxLength(255)
                    .HasColumnName("longitude_seconds");

                entity.Property(e => e.ProviderAccreditationNum)
                    .HasMaxLength(255)
                    .HasColumnName("provider_accreditation_num");

                entity.Property(e => e.ProviderClassId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_class_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderContactCellNumber)
                    .HasMaxLength(255)
                    .HasColumnName("provider_contact_cell_number");

                entity.Property(e => e.ProviderContactEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("provider_contact_email_address");

                entity.Property(e => e.ProviderContactName)
                    .HasMaxLength(255)
                    .HasColumnName("provider_contact_name");

                entity.Property(e => e.ProviderContactPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("provider_contact_phone_number");

                entity.Property(e => e.ProviderEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("provider_end_date");

                entity.Property(e => e.ProviderEtqaId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqa_id");

                entity.Property(e => e.ProviderFaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("provider_fax_number");

                entity.Property(e => e.ProviderName)
                    .HasMaxLength(255)
                    .HasColumnName("provider_name");

                entity.Property(e => e.ProviderPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("provider_phone_number");

                entity.Property(e => e.ProviderPhysicalAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("provider_physical_address_1");

                entity.Property(e => e.ProviderPhysicalAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("provider_physical_address_2");

                entity.Property(e => e.ProviderPhysicalAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("provider_physical_address_3");

                entity.Property(e => e.ProviderPhysicalAddressCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_physical_address_code");

                entity.Property(e => e.ProviderPostalAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("provider_postal_address_1");

                entity.Property(e => e.ProviderPostalAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("provider_postal_address_2");

                entity.Property(e => e.ProviderPostalAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("provider_postal_address_3");

                entity.Property(e => e.ProviderPostalAddressCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_postal_address_code");

                entity.Property(e => e.ProviderSarsNumber)
                    .HasMaxLength(255)
                    .HasColumnName("provider_sars_number");

                entity.Property(e => e.ProviderStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("provider_start_date");

                entity.Property(e => e.ProviderStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_status_id");

                entity.Property(e => e.ProviderTypeId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_type_id");

                entity.Property(e => e.ProviderWebAddress)
                    .HasMaxLength(255)
                    .HasColumnName("provider_web_address");

                entity.Property(e => e.ProvinceCode)
                    .HasMaxLength(255)
                    .HasColumnName("province_code");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SicCode)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code");
            });

            modelBuilder.Entity<SetmisFile100Extracted>(entity =>
            {
                entity.ToTable("setmis_file_100_extracted");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(255)
                    .HasColumnName("countrycode");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateStampString)
                    .HasMaxLength(255)
                    .HasColumnName("dateStampString");

                entity.Property(e => e.Etqedecisionnumber)
                    .HasMaxLength(255)
                    .HasColumnName("etqedecisionnumber");

                entity.Property(e => e.Latitudedegreestring)
                    .HasMaxLength(255)
                    .HasColumnName("latitudedegreestring");

                entity.Property(e => e.Latitudeminutesstring)
                    .HasMaxLength(255)
                    .HasColumnName("latitudeminutesstring");

                entity.Property(e => e.Latitudesecondsstring)
                    .HasMaxLength(255)
                    .HasColumnName("latitudesecondsstring");

                entity.Property(e => e.LineNumber)
                    .HasMaxLength(255)
                    .HasColumnName("line_number");

                entity.Property(e => e.Longitudedegreestring)
                    .HasMaxLength(255)
                    .HasColumnName("longitudedegreestring");

                entity.Property(e => e.Longitudeminutesstring)
                    .HasMaxLength(255)
                    .HasColumnName("longitudeminutesstring");

                entity.Property(e => e.Longitudesecondsstring)
                    .HasMaxLength(255)
                    .HasColumnName("longitudesecondsstring");

                entity.Property(e => e.Provideraccreditationnum)
                    .HasMaxLength(255)
                    .HasColumnName("provideraccreditationnum");

                entity.Property(e => e.Providerclassid)
                    .HasMaxLength(255)
                    .HasColumnName("providerclassid");

                entity.Property(e => e.Providercode)
                    .HasMaxLength(255)
                    .HasColumnName("providercode");

                entity.Property(e => e.Providercontactcellnumber)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactcellnumber");

                entity.Property(e => e.Providercontactemailaddress)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactemailaddress");

                entity.Property(e => e.Providercontactname)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactname");

                entity.Property(e => e.Providercontactphonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactphonenumber");

                entity.Property(e => e.Providerenddatestring)
                    .HasMaxLength(255)
                    .HasColumnName("providerenddatestring");

                entity.Property(e => e.Provideretqaid)
                    .HasMaxLength(255)
                    .HasColumnName("provideretqaid");

                entity.Property(e => e.Providerfaxnumber)
                    .HasMaxLength(255)
                    .HasColumnName("providerfaxnumber");

                entity.Property(e => e.Providername)
                    .HasMaxLength(255)
                    .HasColumnName("providername");

                entity.Property(e => e.Providerphonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("providerphonenumber");

                entity.Property(e => e.Providerphysicaladdress1)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdress1");

                entity.Property(e => e.Providerphysicaladdress2)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdress2");

                entity.Property(e => e.Providerphysicaladdress3)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdress3");

                entity.Property(e => e.Providerphysicaladdresscode)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdresscode");

                entity.Property(e => e.Providerpostaladdress1)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdress1");

                entity.Property(e => e.Providerpostaladdress2)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdress2");

                entity.Property(e => e.Providerpostaladdress3)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdress3");

                entity.Property(e => e.Providerpostaladdresscode)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdresscode");

                entity.Property(e => e.Providersarsnumber)
                    .HasMaxLength(255)
                    .HasColumnName("providersarsnumber");

                entity.Property(e => e.Providerstartdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("providerstartdatestring");

                entity.Property(e => e.Providerstatusid)
                    .HasMaxLength(255)
                    .HasColumnName("providerstatusid");

                entity.Property(e => e.Providertypeid)
                    .HasMaxLength(255)
                    .HasColumnName("providertypeid");

                entity.Property(e => e.Providerwebaddress)
                    .HasMaxLength(255)
                    .HasColumnName("providerwebaddress");

                entity.Property(e => e.Provincecode)
                    .HasMaxLength(255)
                    .HasColumnName("provincecode");

                entity.Property(e => e.Sdlno)
                    .HasMaxLength(255)
                    .HasColumnName("sdlno");

                entity.Property(e => e.Siccode)
                    .HasMaxLength(255)
                    .HasColumnName("siccode");
            });

            modelBuilder.Entity<SetmisFile100ExtractedCopy>(entity =>
            {
                entity.ToTable("setmis_file_100_extracted_copy");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(255)
                    .HasColumnName("countrycode");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateStampString)
                    .HasMaxLength(255)
                    .HasColumnName("dateStampString");

                entity.Property(e => e.Etqedecisionnumber)
                    .HasMaxLength(255)
                    .HasColumnName("etqedecisionnumber");

                entity.Property(e => e.Latitudedegreestring)
                    .HasMaxLength(255)
                    .HasColumnName("latitudedegreestring");

                entity.Property(e => e.Latitudeminutesstring)
                    .HasMaxLength(255)
                    .HasColumnName("latitudeminutesstring");

                entity.Property(e => e.Latitudesecondsstring)
                    .HasMaxLength(255)
                    .HasColumnName("latitudesecondsstring");

                entity.Property(e => e.LineNumber)
                    .HasMaxLength(255)
                    .HasColumnName("line_number");

                entity.Property(e => e.Longitudedegreestring)
                    .HasMaxLength(255)
                    .HasColumnName("longitudedegreestring");

                entity.Property(e => e.Longitudeminutesstring)
                    .HasMaxLength(255)
                    .HasColumnName("longitudeminutesstring");

                entity.Property(e => e.Longitudesecondsstring)
                    .HasMaxLength(255)
                    .HasColumnName("longitudesecondsstring");

                entity.Property(e => e.Provideraccreditationnum)
                    .HasMaxLength(255)
                    .HasColumnName("provideraccreditationnum");

                entity.Property(e => e.Providerclassid)
                    .HasMaxLength(255)
                    .HasColumnName("providerclassid");

                entity.Property(e => e.Providercode)
                    .HasMaxLength(255)
                    .HasColumnName("providercode");

                entity.Property(e => e.Providercontactcellnumber)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactcellnumber");

                entity.Property(e => e.Providercontactemailaddress)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactemailaddress");

                entity.Property(e => e.Providercontactname)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactname");

                entity.Property(e => e.Providercontactphonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactphonenumber");

                entity.Property(e => e.Providerenddatestring)
                    .HasMaxLength(255)
                    .HasColumnName("providerenddatestring");

                entity.Property(e => e.Provideretqaid)
                    .HasMaxLength(255)
                    .HasColumnName("provideretqaid");

                entity.Property(e => e.Providerfaxnumber)
                    .HasMaxLength(255)
                    .HasColumnName("providerfaxnumber");

                entity.Property(e => e.Providername)
                    .HasMaxLength(255)
                    .HasColumnName("providername");

                entity.Property(e => e.Providerphonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("providerphonenumber");

                entity.Property(e => e.Providerphysicaladdress1)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdress1");

                entity.Property(e => e.Providerphysicaladdress2)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdress2");

                entity.Property(e => e.Providerphysicaladdress3)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdress3");

                entity.Property(e => e.Providerphysicaladdresscode)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdresscode");

                entity.Property(e => e.Providerpostaladdress1)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdress1");

                entity.Property(e => e.Providerpostaladdress2)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdress2");

                entity.Property(e => e.Providerpostaladdress3)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdress3");

                entity.Property(e => e.Providerpostaladdresscode)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdresscode");

                entity.Property(e => e.Providersarsnumber)
                    .HasMaxLength(255)
                    .HasColumnName("providersarsnumber");

                entity.Property(e => e.Providerstartdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("providerstartdatestring");

                entity.Property(e => e.Providerstatusid)
                    .HasMaxLength(255)
                    .HasColumnName("providerstatusid");

                entity.Property(e => e.Providertypeid)
                    .HasMaxLength(255)
                    .HasColumnName("providertypeid");

                entity.Property(e => e.Providerwebaddress)
                    .HasMaxLength(255)
                    .HasColumnName("providerwebaddress");

                entity.Property(e => e.Provincecode)
                    .HasMaxLength(255)
                    .HasColumnName("provincecode");

                entity.Property(e => e.Sdlno)
                    .HasMaxLength(255)
                    .HasColumnName("sdlno");

                entity.Property(e => e.Siccode)
                    .HasMaxLength(255)
                    .HasColumnName("siccode");
            });

            modelBuilder.Entity<SetmisFile200>(entity =>
            {
                entity.ToTable("setmis_file_200");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("country_code");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.EmployerApprovalStatusEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employer_approval_status_end_date");

                entity.Property(e => e.EmployerApprovalStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("employer_approval_status_id");

                entity.Property(e => e.EmployerApprovalStatusNum)
                    .HasMaxLength(255)
                    .HasColumnName("employer_approval_status_num");

                entity.Property(e => e.EmployerApprovalStatusStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employer_approval_status_start_date");

                entity.Property(e => e.EmployerCompanyName)
                    .HasMaxLength(255)
                    .HasColumnName("employer_company_name");

                entity.Property(e => e.EmployerContactCellNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_cell_number");

                entity.Property(e => e.EmployerContactEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_email_address");

                entity.Property(e => e.EmployerContactName)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_name");

                entity.Property(e => e.EmployerContactPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_contact_phone_number");

                entity.Property(e => e.EmployerFaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_fax_number");

                entity.Property(e => e.EmployerPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_phone_number");

                entity.Property(e => e.EmployerPhysicalAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("employer_physical_address_1");

                entity.Property(e => e.EmployerPhysicalAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("employer_physical_address_2");

                entity.Property(e => e.EmployerPhysicalAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("employer_physical_address_3");

                entity.Property(e => e.EmployerPhysicalAddressCode)
                    .HasMaxLength(255)
                    .HasColumnName("employer_physical_address_code");

                entity.Property(e => e.EmployerPostalAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("employer_postal_address_1");

                entity.Property(e => e.EmployerPostalAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("employer_postal_address_2");

                entity.Property(e => e.EmployerPostalAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("employer_postal_address_3");

                entity.Property(e => e.EmployerPostalAddressCode)
                    .HasMaxLength(255)
                    .HasColumnName("employer_postal_address_code");

                entity.Property(e => e.EmployerRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("employer_registration_number");

                entity.Property(e => e.EmployerTradingName)
                    .HasMaxLength(255)
                    .HasColumnName("employer_trading_name");

                entity.Property(e => e.Filler01)
                    .HasMaxLength(255)
                    .HasColumnName("filler_01");

                entity.Property(e => e.Filler02)
                    .HasMaxLength(255)
                    .HasColumnName("filler_02");

                entity.Property(e => e.LatitudeDegree)
                    .HasMaxLength(255)
                    .HasColumnName("latitude_degree");

                entity.Property(e => e.LatitudeMinutes)
                    .HasMaxLength(255)
                    .HasColumnName("latitude_minutes");

                entity.Property(e => e.LatitudeSeconds)
                    .HasMaxLength(255)
                    .HasColumnName("latitude_seconds");

                entity.Property(e => e.LongitudeDegree)
                    .HasMaxLength(255)
                    .HasColumnName("longitude_degree");

                entity.Property(e => e.LongitudeMinutes)
                    .HasMaxLength(255)
                    .HasColumnName("longitude_minutes");

                entity.Property(e => e.LongitudeSeconds)
                    .HasMaxLength(255)
                    .HasColumnName("longitude_seconds");

                entity.Property(e => e.MainSdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("main_sdl_no");

                entity.Property(e => e.ProvinceCode)
                    .HasMaxLength(255)
                    .HasColumnName("province_code");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SetaId)
                    .HasMaxLength(255)
                    .HasColumnName("seta_id");

                entity.Property(e => e.SicCode)
                    .HasMaxLength(255)
                    .HasColumnName("sic_code");

                entity.Property(e => e.SiteNo)
                    .HasPrecision(19, 2)
                    .HasColumnName("site_no");
            });

            modelBuilder.Entity<SetmisFile200Extracted>(entity =>
            {
                entity.ToTable("setmis_file_200_extracted");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(255)
                    .HasColumnName("countrycode");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Datestampstring)
                    .HasMaxLength(255)
                    .HasColumnName("datestampstring");

                entity.Property(e => e.Employerapprovalstatusenddate)
                    .HasMaxLength(255)
                    .HasColumnName("employerapprovalstatusenddate");

                entity.Property(e => e.Employerapprovalstatusidstring)
                    .HasMaxLength(255)
                    .HasColumnName("employerapprovalstatusidstring");

                entity.Property(e => e.Employerapprovalstatusnum)
                    .HasMaxLength(255)
                    .HasColumnName("employerapprovalstatusnum");

                entity.Property(e => e.Employerapprovalstatusstartdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("employerapprovalstatusstartdatestring");

                entity.Property(e => e.Employercompanyname)
                    .HasMaxLength(255)
                    .HasColumnName("employercompanyname");

                entity.Property(e => e.Employerregistrationnumber)
                    .HasMaxLength(255)
                    .HasColumnName("employerregistrationnumber");

                entity.Property(e => e.Employertradingname)
                    .HasMaxLength(255)
                    .HasColumnName("employertradingname");

                entity.Property(e => e.Filler01)
                    .HasMaxLength(255)
                    .HasColumnName("filler01");

                entity.Property(e => e.Filler02)
                    .HasMaxLength(255)
                    .HasColumnName("filler02");

                entity.Property(e => e.Latitudedegree)
                    .HasMaxLength(255)
                    .HasColumnName("latitudedegree");

                entity.Property(e => e.Latitudeminutes)
                    .HasMaxLength(255)
                    .HasColumnName("latitudeminutes");

                entity.Property(e => e.Latitudeseconds)
                    .HasMaxLength(255)
                    .HasColumnName("latitudeseconds");

                entity.Property(e => e.LineNumber)
                    .HasMaxLength(255)
                    .HasColumnName("line_number");

                entity.Property(e => e.Longitudedegree)
                    .HasMaxLength(255)
                    .HasColumnName("longitudedegree");

                entity.Property(e => e.Longitudeminutes)
                    .HasMaxLength(255)
                    .HasColumnName("longitudeminutes");

                entity.Property(e => e.Longitudeseconds)
                    .HasMaxLength(255)
                    .HasColumnName("longitudeseconds");

                entity.Property(e => e.Mainsdlno)
                    .HasMaxLength(255)
                    .HasColumnName("mainsdlno");

                entity.Property(e => e.Providercontactcellnumber)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactcellnumber");

                entity.Property(e => e.Providercontactemailaddress)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactemailaddress");

                entity.Property(e => e.Providercontactname)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactname");

                entity.Property(e => e.Providercontactphonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactphonenumber");

                entity.Property(e => e.Providerfaxnumber)
                    .HasMaxLength(255)
                    .HasColumnName("providerfaxnumber");

                entity.Property(e => e.Providerphonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("providerphonenumber");

                entity.Property(e => e.Providerphysicaladdress1)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdress1");

                entity.Property(e => e.Providerphysicaladdress2)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdress2");

                entity.Property(e => e.Providerphysicaladdress3)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdress3");

                entity.Property(e => e.Providerphysicaladdresscode)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdresscode");

                entity.Property(e => e.Providerpostaladdress1)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdress1");

                entity.Property(e => e.Providerpostaladdress2)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdress2");

                entity.Property(e => e.Providerpostaladdress3)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdress3");

                entity.Property(e => e.Providerpostaladdresscode)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdresscode");

                entity.Property(e => e.Provincecode)
                    .HasMaxLength(255)
                    .HasColumnName("provincecode");

                entity.Property(e => e.Sdlno)
                    .HasMaxLength(255)
                    .HasColumnName("sdlno");

                entity.Property(e => e.Setaidstring)
                    .HasMaxLength(255)
                    .HasColumnName("setaidstring");

                entity.Property(e => e.Siccode)
                    .HasMaxLength(255)
                    .HasColumnName("siccode");

                entity.Property(e => e.Siteno)
                    .HasMaxLength(255)
                    .HasColumnName("siteno");
            });

            modelBuilder.Entity<SetmisFile200ExtractedCopy>(entity =>
            {
                entity.ToTable("setmis_file_200_extracted_copy");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(255)
                    .HasColumnName("countrycode");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Datestampstring)
                    .HasMaxLength(255)
                    .HasColumnName("datestampstring");

                entity.Property(e => e.Employerapprovalstatusenddate)
                    .HasMaxLength(255)
                    .HasColumnName("employerapprovalstatusenddate");

                entity.Property(e => e.Employerapprovalstatusidstring)
                    .HasMaxLength(255)
                    .HasColumnName("employerapprovalstatusidstring");

                entity.Property(e => e.Employerapprovalstatusnum)
                    .HasMaxLength(255)
                    .HasColumnName("employerapprovalstatusnum");

                entity.Property(e => e.Employerapprovalstatusstartdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("employerapprovalstatusstartdatestring");

                entity.Property(e => e.Employercompanyname)
                    .HasMaxLength(255)
                    .HasColumnName("employercompanyname");

                entity.Property(e => e.Employerregistrationnumber)
                    .HasMaxLength(255)
                    .HasColumnName("employerregistrationnumber");

                entity.Property(e => e.Employertradingname)
                    .HasMaxLength(255)
                    .HasColumnName("employertradingname");

                entity.Property(e => e.Filler01)
                    .HasMaxLength(255)
                    .HasColumnName("filler01");

                entity.Property(e => e.Filler02)
                    .HasMaxLength(255)
                    .HasColumnName("filler02");

                entity.Property(e => e.Latitudedegree)
                    .HasMaxLength(255)
                    .HasColumnName("latitudedegree");

                entity.Property(e => e.Latitudeminutes)
                    .HasMaxLength(255)
                    .HasColumnName("latitudeminutes");

                entity.Property(e => e.Latitudeseconds)
                    .HasMaxLength(255)
                    .HasColumnName("latitudeseconds");

                entity.Property(e => e.LineNumber)
                    .HasMaxLength(255)
                    .HasColumnName("line_number");

                entity.Property(e => e.Longitudedegree)
                    .HasMaxLength(255)
                    .HasColumnName("longitudedegree");

                entity.Property(e => e.Longitudeminutes)
                    .HasMaxLength(255)
                    .HasColumnName("longitudeminutes");

                entity.Property(e => e.Longitudeseconds)
                    .HasMaxLength(255)
                    .HasColumnName("longitudeseconds");

                entity.Property(e => e.Mainsdlno)
                    .HasMaxLength(255)
                    .HasColumnName("mainsdlno");

                entity.Property(e => e.Providercontactcellnumber)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactcellnumber");

                entity.Property(e => e.Providercontactemailaddress)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactemailaddress");

                entity.Property(e => e.Providercontactname)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactname");

                entity.Property(e => e.Providercontactphonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("providercontactphonenumber");

                entity.Property(e => e.Providerfaxnumber)
                    .HasMaxLength(255)
                    .HasColumnName("providerfaxnumber");

                entity.Property(e => e.Providerphonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("providerphonenumber");

                entity.Property(e => e.Providerphysicaladdress1)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdress1");

                entity.Property(e => e.Providerphysicaladdress2)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdress2");

                entity.Property(e => e.Providerphysicaladdress3)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdress3");

                entity.Property(e => e.Providerphysicaladdresscode)
                    .HasMaxLength(255)
                    .HasColumnName("providerphysicaladdresscode");

                entity.Property(e => e.Providerpostaladdress1)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdress1");

                entity.Property(e => e.Providerpostaladdress2)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdress2");

                entity.Property(e => e.Providerpostaladdress3)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdress3");

                entity.Property(e => e.Providerpostaladdresscode)
                    .HasMaxLength(255)
                    .HasColumnName("providerpostaladdresscode");

                entity.Property(e => e.Provincecode)
                    .HasMaxLength(255)
                    .HasColumnName("provincecode");

                entity.Property(e => e.Sdlno)
                    .HasMaxLength(255)
                    .HasColumnName("sdlno");

                entity.Property(e => e.Setaidstring)
                    .HasMaxLength(255)
                    .HasColumnName("setaidstring");

                entity.Property(e => e.Siccode)
                    .HasMaxLength(255)
                    .HasColumnName("siccode");

                entity.Property(e => e.Siteno)
                    .HasMaxLength(255)
                    .HasColumnName("siteno");
            });

            modelBuilder.Entity<SetmisFile304>(entity =>
            {
                entity.ToTable("setmis_file_304");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.Filler01)
                    .HasMaxLength(255)
                    .HasColumnName("filler_01");

                entity.Property(e => e.Filler02)
                    .HasMaxLength(255)
                    .HasColumnName("filler_02");

                entity.Property(e => e.Filler03)
                    .HasMaxLength(255)
                    .HasColumnName("filler_03");

                entity.Property(e => e.LearningProgrammeTypeId)
                    .HasMaxLength(255)
                    .HasColumnName("learning_programme_type_id");

                entity.Property(e => e.NonNqfIntervCode)
                    .HasMaxLength(255)
                    .HasColumnName("non_nqf_interv_code");

                entity.Property(e => e.NonNqfIntervCredit)
                    .HasMaxLength(255)
                    .HasColumnName("non_nqf_interv_credit");

                entity.Property(e => e.NonNqfIntervEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("non_nqf_interv_etqe_id");

                entity.Property(e => e.NonNqfIntervName)
                    .HasMaxLength(255)
                    .HasColumnName("non_nqf_interv_name");

                entity.Property(e => e.NonNqfIntervRegEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("non_nqf_interv_reg_end_date");

                entity.Property(e => e.NonNqfIntervRegStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("non_nqf_interv_reg_start_date");

                entity.Property(e => e.NonNqfIntervStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("non_nqf_interv_status_id");

                entity.Property(e => e.SubFieldId)
                    .HasMaxLength(255)
                    .HasColumnName("sub_field_id");
            });

            modelBuilder.Entity<SetmisFile304Extracted>(entity =>
            {
                entity.ToTable("setmis_file_304_extracted");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Datestampstring)
                    .HasMaxLength(255)
                    .HasColumnName("datestampstring");

                entity.Property(e => e.Filler01)
                    .HasMaxLength(255)
                    .HasColumnName("filler01");

                entity.Property(e => e.Filler02)
                    .HasMaxLength(255)
                    .HasColumnName("filler02");

                entity.Property(e => e.Filler03)
                    .HasMaxLength(255)
                    .HasColumnName("filler03");

                entity.Property(e => e.Learningprogrammetypeid)
                    .HasMaxLength(255)
                    .HasColumnName("learningprogrammetypeid");

                entity.Property(e => e.LineNumber)
                    .HasMaxLength(255)
                    .HasColumnName("line_number");

                entity.Property(e => e.Nonnqfintervcode)
                    .HasMaxLength(255)
                    .HasColumnName("nonnqfintervcode");

                entity.Property(e => e.Nonnqfintervcredit)
                    .HasMaxLength(255)
                    .HasColumnName("nonnqfintervcredit");

                entity.Property(e => e.Nonnqfintervetqeid)
                    .HasMaxLength(255)
                    .HasColumnName("nonnqfintervetqeid");

                entity.Property(e => e.Nonnqfintervname)
                    .HasMaxLength(255)
                    .HasColumnName("nonnqfintervname");

                entity.Property(e => e.Nonnqfintervregenddatestring)
                    .HasMaxLength(255)
                    .HasColumnName("nonnqfintervregenddatestring");

                entity.Property(e => e.Nonnqfintervregstartdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("nonnqfintervregstartdatestring");

                entity.Property(e => e.Nonnqfintervstatusid)
                    .HasMaxLength(255)
                    .HasColumnName("nonnqfintervstatusid");

                entity.Property(e => e.Subfieldid)
                    .HasMaxLength(255)
                    .HasColumnName("subfieldid");
            });

            modelBuilder.Entity<SetmisFile400>(entity =>
            {
                entity.ToTable("setmis_file_400");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternativeIdType)
                    .HasMaxLength(255)
                    .HasColumnName("alternative_id_type");

                entity.Property(e => e.CitizenResidentStatusCode)
                    .HasMaxLength(255)
                    .HasColumnName("citizen_resident_status_code");

                entity.Property(e => e.CommunicatingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("communicating_rating_id");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.EquityCode)
                    .HasMaxLength(255)
                    .HasColumnName("equity_code");

                entity.Property(e => e.Filler01)
                    .HasMaxLength(255)
                    .HasColumnName("filler_01");

                entity.Property(e => e.Filler02)
                    .HasMaxLength(255)
                    .HasColumnName("filler_02");

                entity.Property(e => e.GenderCode)
                    .HasMaxLength(255)
                    .HasColumnName("gender_code");

                entity.Property(e => e.HearingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("hearing_rating_id");

                entity.Property(e => e.HomeLanguageCode)
                    .HasMaxLength(255)
                    .HasColumnName("home_language_code");

                entity.Property(e => e.LastSchoolEmisNo)
                    .HasMaxLength(255)
                    .HasColumnName("last_school_emis_no");

                entity.Property(e => e.LastSchoolYear)
                    .HasMaxLength(255)
                    .HasColumnName("last_school_year");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.NationalityCode)
                    .HasMaxLength(255)
                    .HasColumnName("nationality_code");

                entity.Property(e => e.PersonAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("person_alternate_id");

                entity.Property(e => e.PersonBirthDate)
                    .HasColumnType("datetime")
                    .HasColumnName("person_birth_date");

                entity.Property(e => e.PersonCellPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("person_cell_phone_number");

                entity.Property(e => e.PersonEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("person_email_address");

                entity.Property(e => e.PersonFaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("person_fax_number");

                entity.Property(e => e.PersonFirstName)
                    .HasMaxLength(255)
                    .HasColumnName("person_first_name");

                entity.Property(e => e.PersonHomeAddrPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("person_home_addr_postal_code");

                entity.Property(e => e.PersonHomeAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("person_home_address_1");

                entity.Property(e => e.PersonHomeAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("person_home_address_2");

                entity.Property(e => e.PersonHomeAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("person_home_address_3");

                entity.Property(e => e.PersonLastName)
                    .HasMaxLength(255)
                    .HasColumnName("person_last_name");

                entity.Property(e => e.PersonMiddleName)
                    .HasMaxLength(255)
                    .HasColumnName("person_middle_name");

                entity.Property(e => e.PersonPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("person_phone_number");

                entity.Property(e => e.PersonPostalAddrPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("person_postal_addr_postal_code");

                entity.Property(e => e.PersonPostalAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("person_postal_address_1");

                entity.Property(e => e.PersonPostalAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("person_postal_address_2");

                entity.Property(e => e.PersonPostalAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("person_postal_address_3");

                entity.Property(e => e.PersonPreviousAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("person_previous_alternate_id");

                entity.Property(e => e.PersonPreviousAlternateIdType)
                    .HasMaxLength(255)
                    .HasColumnName("person_previous_alternate_id_type");

                entity.Property(e => e.PersonPreviousLastName)
                    .HasMaxLength(255)
                    .HasColumnName("person_previous_last_name");

                entity.Property(e => e.PersonPreviousProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("person_previous_provider_code");

                entity.Property(e => e.PersonPreviousProviderEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("person_previous_provider_etqe_id");

                entity.Property(e => e.PersonTitle)
                    .HasMaxLength(255)
                    .HasColumnName("person_title");

                entity.Property(e => e.PopiActStatusDate)
                    .HasColumnType("datetime")
                    .HasColumnName("popi_act_status_date");

                entity.Property(e => e.PopiActStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("popi_act_status_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqe_id");

                entity.Property(e => e.ProvinceCode)
                    .HasMaxLength(255)
                    .HasColumnName("province_code");

                entity.Property(e => e.RememberingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("remembering_rating_id");

                entity.Property(e => e.SeeingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("seeing_rating_id");

                entity.Property(e => e.SelfcareRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("selfcare_rating_id");

                entity.Property(e => e.StatssaAreaCode)
                    .HasMaxLength(255)
                    .HasColumnName("statssa_area_code");

                entity.Property(e => e.WalkingRatingId)
                    .HasMaxLength(255)
                    .HasColumnName("walking_rating_id");
            });

            modelBuilder.Entity<SetmisFile400Extracted>(entity =>
            {
                entity.ToTable("setmis_file_400_extracted");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Alternativeidtype)
                    .HasMaxLength(255)
                    .HasColumnName("alternativeidtype");

                entity.Property(e => e.Citizenresidentstatuscode)
                    .HasMaxLength(255)
                    .HasColumnName("citizenresidentstatuscode");

                entity.Property(e => e.Communicationratingid)
                    .HasMaxLength(255)
                    .HasColumnName("communicationratingid");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Datestampstring)
                    .HasMaxLength(255)
                    .HasColumnName("datestampstring");

                entity.Property(e => e.Equitycode)
                    .HasMaxLength(255)
                    .HasColumnName("equitycode");

                entity.Property(e => e.Filler01)
                    .HasMaxLength(255)
                    .HasColumnName("filler01");

                entity.Property(e => e.Filler02)
                    .HasMaxLength(255)
                    .HasColumnName("filler02");

                entity.Property(e => e.Gendercode)
                    .HasMaxLength(255)
                    .HasColumnName("gendercode");

                entity.Property(e => e.Hearingratingid)
                    .HasMaxLength(255)
                    .HasColumnName("hearingratingid");

                entity.Property(e => e.Homelanguagecode)
                    .HasMaxLength(255)
                    .HasColumnName("homelanguagecode");

                entity.Property(e => e.Lastschoolemisno)
                    .HasMaxLength(255)
                    .HasColumnName("lastschoolemisno");

                entity.Property(e => e.Lastschoolyearstring)
                    .HasMaxLength(255)
                    .HasColumnName("lastschoolyearstring");

                entity.Property(e => e.LineNumber)
                    .HasMaxLength(255)
                    .HasColumnName("line_number");

                entity.Property(e => e.Nationalid)
                    .HasMaxLength(255)
                    .HasColumnName("nationalid");

                entity.Property(e => e.Nationalitycode)
                    .HasMaxLength(255)
                    .HasColumnName("nationalitycode");

                entity.Property(e => e.Personalternateid)
                    .HasMaxLength(255)
                    .HasColumnName("personalternateid");

                entity.Property(e => e.Personbirthdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("personbirthdatestring");

                entity.Property(e => e.Personcellphonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("personcellphonenumber");

                entity.Property(e => e.Personemailaddress)
                    .HasMaxLength(255)
                    .HasColumnName("personemailaddress");

                entity.Property(e => e.Personfaxnumber)
                    .HasMaxLength(255)
                    .HasColumnName("personfaxnumber");

                entity.Property(e => e.Personfirstname)
                    .HasMaxLength(255)
                    .HasColumnName("personfirstname");

                entity.Property(e => e.Personhomeaddress1)
                    .HasMaxLength(255)
                    .HasColumnName("personhomeaddress1");

                entity.Property(e => e.Personhomeaddress2)
                    .HasMaxLength(255)
                    .HasColumnName("personhomeaddress2");

                entity.Property(e => e.Personhomeaddress3)
                    .HasMaxLength(255)
                    .HasColumnName("personhomeaddress3");

                entity.Property(e => e.Personhomeaddrpostalcode)
                    .HasMaxLength(255)
                    .HasColumnName("personhomeaddrpostalcode");

                entity.Property(e => e.Personlastname)
                    .HasMaxLength(255)
                    .HasColumnName("personlastname");

                entity.Property(e => e.Personmiddlename)
                    .HasMaxLength(255)
                    .HasColumnName("personmiddlename");

                entity.Property(e => e.Personphonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("personphonenumber");

                entity.Property(e => e.Personpostaladdress1)
                    .HasMaxLength(255)
                    .HasColumnName("personpostaladdress1");

                entity.Property(e => e.Personpostaladdress2)
                    .HasMaxLength(255)
                    .HasColumnName("personpostaladdress2");

                entity.Property(e => e.Personpostaladdress3)
                    .HasMaxLength(255)
                    .HasColumnName("personpostaladdress3");

                entity.Property(e => e.Personpostaladdrpostalcode)
                    .HasMaxLength(255)
                    .HasColumnName("personpostaladdrpostalcode");

                entity.Property(e => e.Personpreviousalternateid)
                    .HasMaxLength(255)
                    .HasColumnName("personpreviousalternateid");

                entity.Property(e => e.Personpreviousalternativeidtype)
                    .HasMaxLength(255)
                    .HasColumnName("personpreviousalternativeidtype");

                entity.Property(e => e.Personpreviouslastname)
                    .HasMaxLength(255)
                    .HasColumnName("personpreviouslastname");

                entity.Property(e => e.Personpreviousprovidercode)
                    .HasMaxLength(255)
                    .HasColumnName("personpreviousprovidercode");

                entity.Property(e => e.Personpreviousprovideretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("personpreviousprovideretqeid");

                entity.Property(e => e.Persontitle)
                    .HasMaxLength(255)
                    .HasColumnName("persontitle");

                entity.Property(e => e.Popiactstatusdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("popiactstatusdatestring");

                entity.Property(e => e.Popiactstatusid)
                    .HasMaxLength(255)
                    .HasColumnName("popiactstatusid");

                entity.Property(e => e.Providercode)
                    .HasMaxLength(255)
                    .HasColumnName("providercode");

                entity.Property(e => e.Provideretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("provideretqeid");

                entity.Property(e => e.Provincecode)
                    .HasMaxLength(255)
                    .HasColumnName("provincecode");

                entity.Property(e => e.Rememberingratingid)
                    .HasMaxLength(255)
                    .HasColumnName("rememberingratingid");

                entity.Property(e => e.Seeingratingid)
                    .HasMaxLength(255)
                    .HasColumnName("seeingratingid");

                entity.Property(e => e.Selfcareratingid)
                    .HasMaxLength(255)
                    .HasColumnName("selfcareratingid");

                entity.Property(e => e.Statssaareacode)
                    .HasMaxLength(255)
                    .HasColumnName("statssaareacode");

                entity.Property(e => e.Walkingratingid)
                    .HasMaxLength(255)
                    .HasColumnName("walkingratingid");
            });

            modelBuilder.Entity<SetmisFile401>(entity =>
            {
                entity.ToTable("setmis_file_401");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternativeIdType)
                    .HasMaxLength(255)
                    .HasColumnName("alternative_id_type");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.DesignationEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("designation_end_date");

                entity.Property(e => e.DesignationEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("designation_etqe_id");

                entity.Property(e => e.DesignationId)
                    .HasMaxLength(255)
                    .HasColumnName("designation_id");

                entity.Property(e => e.DesignationRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("designation_registration_number");

                entity.Property(e => e.DesignationStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("designation_start_date");

                entity.Property(e => e.DesignationStructureStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("designation_structure_status_id");

                entity.Property(e => e.EtqeDecisionNumber)
                    .HasMaxLength(255)
                    .HasColumnName("etqe_decision_number");

                entity.Property(e => e.Filler01)
                    .HasMaxLength(255)
                    .HasColumnName("filler_01");

                entity.Property(e => e.Filler02)
                    .HasMaxLength(255)
                    .HasColumnName("filler_02");

                entity.Property(e => e.Filler03)
                    .HasMaxLength(255)
                    .HasColumnName("filler_03");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.PersonAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("person_alternate_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqe_id");
            });

            modelBuilder.Entity<SetmisFile401Extracted>(entity =>
            {
                entity.ToTable("setmis_file_401_extracted");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Alternativeidtype)
                    .HasMaxLength(255)
                    .HasColumnName("alternativeidtype");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Datestampstring)
                    .HasMaxLength(255)
                    .HasColumnName("datestampstring");

                entity.Property(e => e.Designationenddatestring)
                    .HasMaxLength(255)
                    .HasColumnName("designationenddatestring");

                entity.Property(e => e.Designationetqeid)
                    .HasMaxLength(255)
                    .HasColumnName("designationetqeid");

                entity.Property(e => e.Designationid)
                    .HasMaxLength(255)
                    .HasColumnName("designationid");

                entity.Property(e => e.Designationregistrationnumber)
                    .HasMaxLength(255)
                    .HasColumnName("designationregistrationnumber");

                entity.Property(e => e.Designationstartdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("designationstartdatestring");

                entity.Property(e => e.Designationstructurestatusid)
                    .HasMaxLength(255)
                    .HasColumnName("designationstructurestatusid");

                entity.Property(e => e.Etqedecisionnumber)
                    .HasMaxLength(255)
                    .HasColumnName("etqedecisionnumber");

                entity.Property(e => e.Filler01)
                    .HasMaxLength(255)
                    .HasColumnName("filler01");

                entity.Property(e => e.Filler02)
                    .HasMaxLength(255)
                    .HasColumnName("filler02");

                entity.Property(e => e.Filler03)
                    .HasMaxLength(255)
                    .HasColumnName("filler03");

                entity.Property(e => e.LineNumber)
                    .HasMaxLength(255)
                    .HasColumnName("line_number");

                entity.Property(e => e.Nationalid)
                    .HasMaxLength(255)
                    .HasColumnName("nationalid");

                entity.Property(e => e.Personalternateid)
                    .HasMaxLength(255)
                    .HasColumnName("personalternateid");

                entity.Property(e => e.Providercode)
                    .HasMaxLength(255)
                    .HasColumnName("providercode");

                entity.Property(e => e.Provideretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("provideretqeid");
            });

            modelBuilder.Entity<SetmisFile500>(entity =>
            {
                entity.ToTable("setmis_file_500");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternativeIdType)
                    .HasMaxLength(255)
                    .HasColumnName("alternative_id_type");

                entity.Property(e => e.AssessorEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_etqe_id");

                entity.Property(e => e.AssessorRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_registration_number");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(255)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.CumulativeSpend)
                    .HasMaxLength(255)
                    .HasColumnName("cumulative_spend");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.EconomicStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("economic_status_id");

                entity.Property(e => e.EnrolmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("enrolment_date");

                entity.Property(e => e.EnrolmentStatusDate)
                    .HasColumnType("datetime")
                    .HasColumnName("enrolment_status_date");

                entity.Property(e => e.EnrolmentStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("enrolment_status_id");

                entity.Property(e => e.EnrolmentStatusReasonId)
                    .HasMaxLength(255)
                    .HasColumnName("enrolment_status_reason_id");

                entity.Property(e => e.FundingId)
                    .HasMaxLength(255)
                    .HasColumnName("funding_id");

                entity.Property(e => e.LearnershipId)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_id");

                entity.Property(e => e.MostRecentRegistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("most_recent_registration_date");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.PersonAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("person_alternate_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqe_id");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SiteNo)
                    .HasMaxLength(255)
                    .HasColumnName("site_no");

                entity.Property(e => e.UrbanRuralId)
                    .HasMaxLength(255)
                    .HasColumnName("urban_rural_id");
            });

            modelBuilder.Entity<SetmisFile500Extracted>(entity =>
            {
                entity.ToTable("setmis_file_500_extracted");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Alternativeidtype)
                    .HasMaxLength(255)
                    .HasColumnName("alternativeidtype");

                entity.Property(e => e.Assessoretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("assessoretqeid");

                entity.Property(e => e.Assessorregistrationnumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessorregistrationnumber");

                entity.Property(e => e.Certificatenumber)
                    .HasMaxLength(255)
                    .HasColumnName("certificatenumber");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Cumulativespend)
                    .HasMaxLength(255)
                    .HasColumnName("cumulativespend");

                entity.Property(e => e.Datestampstring)
                    .HasMaxLength(255)
                    .HasColumnName("datestampstring");

                entity.Property(e => e.Economicstatusid)
                    .HasMaxLength(255)
                    .HasColumnName("economicstatusid");

                entity.Property(e => e.Enrolmentdate)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentdate");

                entity.Property(e => e.Enrolmentstatusdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentstatusdatestring");

                entity.Property(e => e.Enrolmentstatusid)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentstatusid");

                entity.Property(e => e.Enrolmentstatusreasonid)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentstatusreasonid");

                entity.Property(e => e.Fundingid)
                    .HasMaxLength(255)
                    .HasColumnName("fundingid");

                entity.Property(e => e.Learnershipid)
                    .HasMaxLength(255)
                    .HasColumnName("learnershipid");

                entity.Property(e => e.LineNumber)
                    .HasMaxLength(255)
                    .HasColumnName("line_number");

                entity.Property(e => e.Mostrecentregistrationdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("mostrecentregistrationdatestring");

                entity.Property(e => e.Nationalid)
                    .HasMaxLength(255)
                    .HasColumnName("nationalid");

                entity.Property(e => e.Ofocode)
                    .HasMaxLength(255)
                    .HasColumnName("ofocode");

                entity.Property(e => e.Personalternateid)
                    .HasMaxLength(255)
                    .HasColumnName("personalternateid");

                entity.Property(e => e.Providercode)
                    .HasMaxLength(255)
                    .HasColumnName("providercode");

                entity.Property(e => e.Provideretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("provideretqeid");

                entity.Property(e => e.Sdlno)
                    .HasMaxLength(255)
                    .HasColumnName("sdlno");

                entity.Property(e => e.Siteno)
                    .HasMaxLength(255)
                    .HasColumnName("siteno");

                entity.Property(e => e.Urbanruralid)
                    .HasMaxLength(255)
                    .HasColumnName("urbanruralid");
            });

            modelBuilder.Entity<SetmisFile501>(entity =>
            {
                entity.ToTable("setmis_file_501");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternativeIdType)
                    .HasMaxLength(255)
                    .HasColumnName("alternative_id_type");

                entity.Property(e => e.AssessorEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_etqe_id");

                entity.Property(e => e.AssessorRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_registration_number");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(255)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.CumulativeSpending)
                    .HasMaxLength(255)
                    .HasColumnName("cumulative_spending");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.EconomicStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("economic_status_id");

                entity.Property(e => e.EnrolmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("enrolment_date");

                entity.Property(e => e.EnrolmentStatusDate)
                    .HasColumnType("datetime")
                    .HasColumnName("enrolment_status_date");

                entity.Property(e => e.EnrolmentStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("enrolment_status_id");

                entity.Property(e => e.EnrolmentStatusReasonId)
                    .HasMaxLength(255)
                    .HasColumnName("enrolment_status_reason_id");

                entity.Property(e => e.EnrolmentTypeId)
                    .HasMaxLength(255)
                    .HasColumnName("enrolment_type_id");

                entity.Property(e => e.Filler01)
                    .HasMaxLength(255)
                    .HasColumnName("filler_01");

                entity.Property(e => e.Filler02)
                    .HasMaxLength(255)
                    .HasColumnName("filler_02");

                entity.Property(e => e.Filler03)
                    .HasMaxLength(255)
                    .HasColumnName("filler_03");

                entity.Property(e => e.Filler04)
                    .HasMaxLength(255)
                    .HasColumnName("filler_04");

                entity.Property(e => e.Filler05)
                    .HasMaxLength(255)
                    .HasColumnName("filler_05");

                entity.Property(e => e.Filler06)
                    .HasMaxLength(255)
                    .HasColumnName("filler_06");

                entity.Property(e => e.Filler07)
                    .HasMaxLength(255)
                    .HasColumnName("filler_07");

                entity.Property(e => e.Filler08)
                    .HasMaxLength(255)
                    .HasColumnName("filler_08");

                entity.Property(e => e.Filler09)
                    .HasMaxLength(255)
                    .HasColumnName("filler_09");

                entity.Property(e => e.Filler10)
                    .HasMaxLength(255)
                    .HasColumnName("filler_10");

                entity.Property(e => e.Filler11)
                    .HasMaxLength(255)
                    .HasColumnName("filler_11");

                entity.Property(e => e.FundingId)
                    .HasMaxLength(255)
                    .HasColumnName("funding_id");

                entity.Property(e => e.LearnershipId)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_id");

                entity.Property(e => e.LearningProgrammeTypeId)
                    .HasMaxLength(255)
                    .HasColumnName("learning_programme_type_id");

                entity.Property(e => e.MostRecentRegistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("most_recent_registration_date");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.PartOfId)
                    .HasMaxLength(255)
                    .HasColumnName("part_of_id");

                entity.Property(e => e.PersonAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("person_alternate_id");

                entity.Property(e => e.PracticalProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("practical_provider_code");

                entity.Property(e => e.PracticalProviderEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("practical_provider_etqe_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqe_id");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_id");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SiteNo)
                    .HasPrecision(19, 2)
                    .HasColumnName("site_no");

                entity.Property(e => e.UrbanRuralId)
                    .HasMaxLength(255)
                    .HasColumnName("urban_rural_id");
            });

            modelBuilder.Entity<SetmisFile501Extracted>(entity =>
            {
                entity.ToTable("setmis_file_501_extracted");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Alternativeidtype)
                    .HasMaxLength(255)
                    .HasColumnName("alternativeidtype");

                entity.Property(e => e.Assessoretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("assessoretqeid");

                entity.Property(e => e.Assessorregistrationnumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessorregistrationnumber");

                entity.Property(e => e.Certificatenumber)
                    .HasMaxLength(255)
                    .HasColumnName("certificatenumber");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Cumulativespending)
                    .HasMaxLength(255)
                    .HasColumnName("cumulativespending");

                entity.Property(e => e.Datestampstring)
                    .HasMaxLength(255)
                    .HasColumnName("datestampstring");

                entity.Property(e => e.Economicstatusid)
                    .HasMaxLength(255)
                    .HasColumnName("economicstatusid");

                entity.Property(e => e.Enrolmentdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentdatestring");

                entity.Property(e => e.Enrolmentstatusdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentstatusdatestring");

                entity.Property(e => e.Enrolmentstatusid)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentstatusid");

                entity.Property(e => e.Enrolmentstatusreasonid)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentstatusreasonid");

                entity.Property(e => e.Enrolmenttypeid)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmenttypeid");

                entity.Property(e => e.Filler01)
                    .HasMaxLength(255)
                    .HasColumnName("filler01");

                entity.Property(e => e.Filler02)
                    .HasMaxLength(255)
                    .HasColumnName("filler02");

                entity.Property(e => e.Filler03)
                    .HasMaxLength(255)
                    .HasColumnName("filler03");

                entity.Property(e => e.Filler04)
                    .HasMaxLength(255)
                    .HasColumnName("filler04");

                entity.Property(e => e.Filler05)
                    .HasMaxLength(255)
                    .HasColumnName("filler05");

                entity.Property(e => e.Filler06)
                    .HasMaxLength(255)
                    .HasColumnName("filler06");

                entity.Property(e => e.Filler07)
                    .HasMaxLength(255)
                    .HasColumnName("filler07");

                entity.Property(e => e.Filler08)
                    .HasMaxLength(255)
                    .HasColumnName("filler08");

                entity.Property(e => e.Filler09)
                    .HasMaxLength(255)
                    .HasColumnName("filler09");

                entity.Property(e => e.Filler10)
                    .HasMaxLength(255)
                    .HasColumnName("filler10");

                entity.Property(e => e.Filler11)
                    .HasMaxLength(255)
                    .HasColumnName("filler11");

                entity.Property(e => e.Fundingid)
                    .HasMaxLength(255)
                    .HasColumnName("fundingid");

                entity.Property(e => e.Learnershipid)
                    .HasMaxLength(255)
                    .HasColumnName("learnershipid");

                entity.Property(e => e.Learningprogrammetypeid)
                    .HasMaxLength(255)
                    .HasColumnName("learningprogrammetypeid");

                entity.Property(e => e.LineNumber)
                    .HasMaxLength(255)
                    .HasColumnName("line_number");

                entity.Property(e => e.Mostrecentregistrationdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("mostrecentregistrationdatestring");

                entity.Property(e => e.Nationalid)
                    .HasMaxLength(255)
                    .HasColumnName("nationalid");

                entity.Property(e => e.Ofocode)
                    .HasMaxLength(255)
                    .HasColumnName("ofocode");

                entity.Property(e => e.Partofid)
                    .HasMaxLength(255)
                    .HasColumnName("partofid");

                entity.Property(e => e.Personalternateid)
                    .HasMaxLength(255)
                    .HasColumnName("personalternateid");

                entity.Property(e => e.Practicalprovidercode)
                    .HasMaxLength(255)
                    .HasColumnName("practicalprovidercode");

                entity.Property(e => e.Practicalprovideretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("practicalprovideretqeid");

                entity.Property(e => e.Providercode)
                    .HasMaxLength(255)
                    .HasColumnName("providercode");

                entity.Property(e => e.Provideretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("provideretqeid");

                entity.Property(e => e.Qualificationid)
                    .HasMaxLength(255)
                    .HasColumnName("qualificationid");

                entity.Property(e => e.Sdlno)
                    .HasMaxLength(255)
                    .HasColumnName("sdlno");

                entity.Property(e => e.Siteno)
                    .HasMaxLength(255)
                    .HasColumnName("siteno");

                entity.Property(e => e.Urbanruralid)
                    .HasMaxLength(255)
                    .HasColumnName("urbanruralid");
            });

            modelBuilder.Entity<SetmisFile502>(entity =>
            {
                entity.ToTable("setmis_file_502");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternativeIdType)
                    .HasMaxLength(255)
                    .HasColumnName("alternative_id_type");

                entity.Property(e => e.AssessorEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_etqe_id");

                entity.Property(e => e.AssessorRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_registration_number");

                entity.Property(e => e.CumulativeSpending)
                    .HasMaxLength(255)
                    .HasColumnName("cumulative_spending");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.EconomicStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("economic_status_id");

                entity.Property(e => e.EnrolmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("enrolment_date");

                entity.Property(e => e.EnrolmentStatusDate)
                    .HasColumnType("datetime")
                    .HasColumnName("enrolment_status_date");

                entity.Property(e => e.EnrolmentStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("enrolment_status_id");

                entity.Property(e => e.EnrolmentStatusReasonId)
                    .HasMaxLength(255)
                    .HasColumnName("enrolment_status_reason_id");

                entity.Property(e => e.EnrolmentTypeId)
                    .HasMaxLength(255)
                    .HasColumnName("enrolment_type_id");

                entity.Property(e => e.FundingId)
                    .HasMaxLength(255)
                    .HasColumnName("funding_id");

                entity.Property(e => e.LearnershipId)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_id");

                entity.Property(e => e.MostRecentRegistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("most_recent_registration_date");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.NonNqfIntervEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("non_nqf_interv_etqe_id");

                entity.Property(e => e.NonNqfInterventionCode)
                    .HasMaxLength(255)
                    .HasColumnName("non_nqf_intervention_code");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.PartOfId)
                    .HasMaxLength(255)
                    .HasColumnName("part_of_id");

                entity.Property(e => e.PersonAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("person_alternate_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqe_id");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_id");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SiteNo)
                    .HasMaxLength(255)
                    .HasColumnName("site_no");

                entity.Property(e => e.UrbanRuralId)
                    .HasMaxLength(255)
                    .HasColumnName("urban_rural_id");
            });

            modelBuilder.Entity<SetmisFile502Extracted>(entity =>
            {
                entity.ToTable("setmis_file_502_extracted");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Alternativeidtype)
                    .HasMaxLength(255)
                    .HasColumnName("alternativeidtype");

                entity.Property(e => e.Assessoretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("assessoretqeid");

                entity.Property(e => e.Assessorregistrationnumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessorregistrationnumber");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Cumulativespending)
                    .HasMaxLength(255)
                    .HasColumnName("cumulativespending");

                entity.Property(e => e.Datestampstring)
                    .HasMaxLength(255)
                    .HasColumnName("datestampstring");

                entity.Property(e => e.Economicstatusid)
                    .HasMaxLength(255)
                    .HasColumnName("economicstatusid");

                entity.Property(e => e.Enrolmentdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentdatestring");

                entity.Property(e => e.Enrolmentstatusdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentstatusdatestring");

                entity.Property(e => e.Enrolmentstatusid)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentstatusid");

                entity.Property(e => e.Enrolmentstatusreasonid)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentstatusreasonid");

                entity.Property(e => e.Enrolmenttypeid)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmenttypeid");

                entity.Property(e => e.Fundingid)
                    .HasMaxLength(255)
                    .HasColumnName("fundingid");

                entity.Property(e => e.Learnershipid)
                    .HasMaxLength(255)
                    .HasColumnName("learnershipid");

                entity.Property(e => e.LineNumber)
                    .HasMaxLength(255)
                    .HasColumnName("line_number");

                entity.Property(e => e.Mostrecentregistrationdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("mostrecentregistrationdatestring");

                entity.Property(e => e.Nationalid)
                    .HasMaxLength(255)
                    .HasColumnName("nationalid");

                entity.Property(e => e.Nonnqfintervcode)
                    .HasMaxLength(255)
                    .HasColumnName("nonnqfintervcode");

                entity.Property(e => e.Nonnqfintervetqeid)
                    .HasMaxLength(255)
                    .HasColumnName("nonnqfintervetqeid");

                entity.Property(e => e.Ofocode)
                    .HasMaxLength(255)
                    .HasColumnName("ofocode");

                entity.Property(e => e.Partofid)
                    .HasMaxLength(255)
                    .HasColumnName("partofid");

                entity.Property(e => e.Personalternateid)
                    .HasMaxLength(255)
                    .HasColumnName("personalternateid");

                entity.Property(e => e.Providercode)
                    .HasMaxLength(255)
                    .HasColumnName("providercode");

                entity.Property(e => e.Provideretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("provideretqeid");

                entity.Property(e => e.Qualificationid)
                    .HasMaxLength(255)
                    .HasColumnName("qualificationid");

                entity.Property(e => e.Sdlno)
                    .HasMaxLength(255)
                    .HasColumnName("sdlno");

                entity.Property(e => e.Siteno)
                    .HasMaxLength(255)
                    .HasColumnName("siteno");

                entity.Property(e => e.Urbanruralid)
                    .HasMaxLength(255)
                    .HasColumnName("urbanruralid");
            });

            modelBuilder.Entity<SetmisFile503>(entity =>
            {
                entity.ToTable("setmis_file_503");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternativeIdType)
                    .HasMaxLength(255)
                    .HasColumnName("alternative_id_type");

                entity.Property(e => e.AssessorEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_etqe_id");

                entity.Property(e => e.AssessorRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_registration_number");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(255)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.CumulativeSpend)
                    .HasMaxLength(255)
                    .HasColumnName("cumulative_spend");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.EconomicStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("economic_status_id");

                entity.Property(e => e.EnrolmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("enrolment_date");

                entity.Property(e => e.EnrolmentStatusDate)
                    .HasColumnType("datetime")
                    .HasColumnName("enrolment_status_date");

                entity.Property(e => e.EnrolmentStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("enrolment_status_id");

                entity.Property(e => e.EnrolmentStatusReasonId)
                    .HasMaxLength(255)
                    .HasColumnName("enrolment_status_reason_id");

                entity.Property(e => e.EnrolmentTypeId)
                    .HasMaxLength(255)
                    .HasColumnName("enrolment_type_id");

                entity.Property(e => e.Filler01)
                    .HasMaxLength(255)
                    .HasColumnName("filler_01");

                entity.Property(e => e.Filler02)
                    .HasMaxLength(255)
                    .HasColumnName("filler_02");

                entity.Property(e => e.Filler03)
                    .HasMaxLength(255)
                    .HasColumnName("filler_03");

                entity.Property(e => e.Filler04)
                    .HasMaxLength(255)
                    .HasColumnName("filler_04");

                entity.Property(e => e.Filler05)
                    .HasMaxLength(255)
                    .HasColumnName("filler_05");

                entity.Property(e => e.Filler06)
                    .HasMaxLength(255)
                    .HasColumnName("filler_06");

                entity.Property(e => e.Filler07)
                    .HasMaxLength(255)
                    .HasColumnName("filler_07");

                entity.Property(e => e.Filler08)
                    .HasMaxLength(255)
                    .HasColumnName("filler_08");

                entity.Property(e => e.Filler09)
                    .HasMaxLength(255)
                    .HasColumnName("filler_09");

                entity.Property(e => e.FundingId)
                    .HasMaxLength(255)
                    .HasColumnName("funding_id");

                entity.Property(e => e.LearnershipId)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_id");

                entity.Property(e => e.MostRecentRegistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("most_recent_registration_date");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.NonNqfIntervCode)
                    .HasMaxLength(255)
                    .HasColumnName("non_nqf_interv_code");

                entity.Property(e => e.NonNqfIntervetqeId)
                    .HasMaxLength(255)
                    .HasColumnName("non_nqf_intervetqe_id");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.PartOfId)
                    .HasMaxLength(255)
                    .HasColumnName("part_of_id");

                entity.Property(e => e.PersonAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("person_alternate_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqe_id");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_id");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SiteNo)
                    .HasMaxLength(255)
                    .HasColumnName("site_no");

                entity.Property(e => e.UnitStandardId)
                    .HasMaxLength(255)
                    .HasColumnName("unit_standard_id");

                entity.Property(e => e.UrbanRuralId)
                    .HasMaxLength(255)
                    .HasColumnName("urban_rural_id");
            });

            modelBuilder.Entity<SetmisFile503Extracted>(entity =>
            {
                entity.ToTable("setmis_file_503_extracted");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Alternativeidtype)
                    .HasMaxLength(255)
                    .HasColumnName("alternativeidtype");

                entity.Property(e => e.Assessoretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("assessoretqeid");

                entity.Property(e => e.Assessorregistrationnumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessorregistrationnumber");

                entity.Property(e => e.Certificatenumber)
                    .HasMaxLength(255)
                    .HasColumnName("certificatenumber");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Cumulativespend)
                    .HasMaxLength(255)
                    .HasColumnName("cumulativespend");

                entity.Property(e => e.Datestampstring)
                    .HasMaxLength(255)
                    .HasColumnName("datestampstring");

                entity.Property(e => e.Economicstatusid)
                    .HasMaxLength(255)
                    .HasColumnName("economicstatusid");

                entity.Property(e => e.Enrolmentdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentdatestring");

                entity.Property(e => e.Enrolmentstatusdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentstatusdatestring");

                entity.Property(e => e.Enrolmentstatusid)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentstatusid");

                entity.Property(e => e.Enrolmentstatusreasonid)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmentstatusreasonid");

                entity.Property(e => e.Enrolmenttypeid)
                    .HasMaxLength(255)
                    .HasColumnName("enrolmenttypeid");

                entity.Property(e => e.Filler01)
                    .HasMaxLength(255)
                    .HasColumnName("filler01");

                entity.Property(e => e.Filler02)
                    .HasMaxLength(255)
                    .HasColumnName("filler02");

                entity.Property(e => e.Filler03)
                    .HasMaxLength(255)
                    .HasColumnName("filler03");

                entity.Property(e => e.Filler04)
                    .HasMaxLength(255)
                    .HasColumnName("filler04");

                entity.Property(e => e.Filler05)
                    .HasMaxLength(255)
                    .HasColumnName("filler05");

                entity.Property(e => e.Filler06)
                    .HasMaxLength(255)
                    .HasColumnName("filler06");

                entity.Property(e => e.Filler07)
                    .HasMaxLength(255)
                    .HasColumnName("filler07");

                entity.Property(e => e.Filler08)
                    .HasMaxLength(255)
                    .HasColumnName("filler08");

                entity.Property(e => e.Filler09)
                    .HasMaxLength(255)
                    .HasColumnName("filler09");

                entity.Property(e => e.Fundingid)
                    .HasMaxLength(255)
                    .HasColumnName("fundingid");

                entity.Property(e => e.Learnershipid)
                    .HasMaxLength(255)
                    .HasColumnName("learnershipid");

                entity.Property(e => e.LineNumber)
                    .HasMaxLength(255)
                    .HasColumnName("line_number");

                entity.Property(e => e.Mostrecentregistrationdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("mostrecentregistrationdatestring");

                entity.Property(e => e.Nationalid)
                    .HasMaxLength(255)
                    .HasColumnName("nationalid");

                entity.Property(e => e.Nonnqfintervcode)
                    .HasMaxLength(255)
                    .HasColumnName("nonnqfintervcode");

                entity.Property(e => e.Nonnqfintervetqeid)
                    .HasMaxLength(255)
                    .HasColumnName("nonnqfintervetqeid");

                entity.Property(e => e.Ofocode)
                    .HasMaxLength(255)
                    .HasColumnName("ofocode");

                entity.Property(e => e.Partof)
                    .HasMaxLength(255)
                    .HasColumnName("partof");

                entity.Property(e => e.Personalternateid)
                    .HasMaxLength(255)
                    .HasColumnName("personalternateid");

                entity.Property(e => e.Providercode)
                    .HasMaxLength(255)
                    .HasColumnName("providercode");

                entity.Property(e => e.Provideretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("provideretqeid");

                entity.Property(e => e.Qualificationidstring)
                    .HasMaxLength(255)
                    .HasColumnName("qualificationidstring");

                entity.Property(e => e.Sdlno)
                    .HasMaxLength(255)
                    .HasColumnName("sdlno");

                entity.Property(e => e.Siteno)
                    .HasMaxLength(255)
                    .HasColumnName("siteno");

                entity.Property(e => e.Unitstandardidstring)
                    .HasMaxLength(255)
                    .HasColumnName("unitstandardidstring");

                entity.Property(e => e.Urbanruralid)
                    .HasMaxLength(255)
                    .HasColumnName("urbanruralid");
            });

            modelBuilder.Entity<SetmisFile505>(entity =>
            {
                entity.ToTable("setmis_file_505");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternativeIdType)
                    .HasMaxLength(255)
                    .HasColumnName("alternative_id_type");

                entity.Property(e => e.AssessorEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_etqe_id");

                entity.Property(e => e.AssessorRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessor_registration_number");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.ModeratorEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_etqe_id");

                entity.Property(e => e.ModeratorRegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("moderator_registration_number");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.PersonAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("person_alternate_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqe_id");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_id");

                entity.Property(e => e.TradeTestDate)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_date");

                entity.Property(e => e.TradeTestNumber)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_number");

                entity.Property(e => e.TradeTestProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_provider_code");

                entity.Property(e => e.TradeTestProviderEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_provider_etqe_id");

                entity.Property(e => e.TradeTestResultId)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_result_id");

                entity.Property(e => e.TradeTestResultReasonId)
                    .HasMaxLength(255)
                    .HasColumnName("trade_test_result_reason_id");
            });

            modelBuilder.Entity<SetmisFile505Extracted>(entity =>
            {
                entity.ToTable("setmis_file_505_extracted");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Assessoretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("assessoretqeid");

                entity.Property(e => e.Assessorregistrationnumber)
                    .HasMaxLength(255)
                    .HasColumnName("assessorregistrationnumber");

                entity.Property(e => e.Aternativeidtypeid)
                    .HasMaxLength(255)
                    .HasColumnName("aternativeidtypeid");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Datestampstring)
                    .HasMaxLength(255)
                    .HasColumnName("datestampstring");

                entity.Property(e => e.LineNumber)
                    .HasMaxLength(255)
                    .HasColumnName("line_number");

                entity.Property(e => e.Moderatoretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("moderatoretqeid");

                entity.Property(e => e.Moderatorregistrationnumber)
                    .HasMaxLength(255)
                    .HasColumnName("moderatorregistrationnumber");

                entity.Property(e => e.Nationalid)
                    .HasMaxLength(255)
                    .HasColumnName("nationalid");

                entity.Property(e => e.Personalternativeid)
                    .HasMaxLength(255)
                    .HasColumnName("personalternativeid");

                entity.Property(e => e.Providercode)
                    .HasMaxLength(255)
                    .HasColumnName("providercode");

                entity.Property(e => e.Provideretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("provideretqeid");

                entity.Property(e => e.Qualificationid)
                    .HasMaxLength(255)
                    .HasColumnName("qualificationid");

                entity.Property(e => e.Tradetestdate)
                    .HasMaxLength(255)
                    .HasColumnName("tradetestdate");

                entity.Property(e => e.Tradetestnumber)
                    .HasMaxLength(255)
                    .HasColumnName("tradetestnumber");

                entity.Property(e => e.Tradetestprovidercode)
                    .HasMaxLength(255)
                    .HasColumnName("tradetestprovidercode");

                entity.Property(e => e.Tradetestprovideretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("tradetestprovideretqeid");

                entity.Property(e => e.Tradetestresultid)
                    .HasMaxLength(255)
                    .HasColumnName("tradetestresultid");

                entity.Property(e => e.Tradetestresultreasonid)
                    .HasMaxLength(255)
                    .HasColumnName("tradetestresultreasonid");
            });

            modelBuilder.Entity<SetmisFile506>(entity =>
            {
                entity.ToTable("setmis_file_506");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AternativeIdTypeId)
                    .HasMaxLength(255)
                    .HasColumnName("aternative_id_type_id");

                entity.Property(e => e.CumulativeSpend)
                    .HasMaxLength(255)
                    .HasColumnName("cumulative_spend");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("end_date");

                entity.Property(e => e.FundingId)
                    .HasMaxLength(255)
                    .HasColumnName("funding_id");

                entity.Property(e => e.InternshipStatusId)
                    .HasMaxLength(255)
                    .HasColumnName("internship_status_id");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("national_id");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.PersonAlternativeId)
                    .HasMaxLength(255)
                    .HasColumnName("person_alternative_id");

                entity.Property(e => e.ProviderCode)
                    .HasMaxLength(255)
                    .HasColumnName("provider_code");

                entity.Property(e => e.ProviderEtqeId)
                    .HasMaxLength(255)
                    .HasColumnName("provider_etqe_id");

                entity.Property(e => e.QualificationAchievementDate)
                    .HasColumnType("datetime")
                    .HasColumnName("qualification_achievement_date");

                entity.Property(e => e.QualificationId)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_id");

                entity.Property(e => e.SdlNo)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_no");

                entity.Property(e => e.SiteNo)
                    .HasMaxLength(255)
                    .HasColumnName("site_no");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.UrbanRuralId)
                    .HasMaxLength(255)
                    .HasColumnName("urban_rural_id");
            });

            modelBuilder.Entity<SetmisFile506Extracted>(entity =>
            {
                entity.ToTable("setmis_file_506_extracted");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlternativeIdType)
                    .HasMaxLength(255)
                    .HasColumnName("alternativeIdType");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Cumulativespend)
                    .HasMaxLength(255)
                    .HasColumnName("cumulativespend");

                entity.Property(e => e.Datestampstring)
                    .HasMaxLength(255)
                    .HasColumnName("datestampstring");

                entity.Property(e => e.Enddate)
                    .HasMaxLength(255)
                    .HasColumnName("enddate");

                entity.Property(e => e.Fundingid)
                    .HasMaxLength(255)
                    .HasColumnName("fundingid");

                entity.Property(e => e.Internshipstatusid)
                    .HasMaxLength(255)
                    .HasColumnName("internshipstatusid");

                entity.Property(e => e.LineNumber)
                    .HasMaxLength(255)
                    .HasColumnName("line_number");

                entity.Property(e => e.NationalId)
                    .HasMaxLength(255)
                    .HasColumnName("nationalId");

                entity.Property(e => e.Ofocode)
                    .HasMaxLength(255)
                    .HasColumnName("ofocode");

                entity.Property(e => e.PersonAlternateId)
                    .HasMaxLength(255)
                    .HasColumnName("personAlternateId");

                entity.Property(e => e.Providercode)
                    .HasMaxLength(255)
                    .HasColumnName("providercode");

                entity.Property(e => e.Provideretqeid)
                    .HasMaxLength(255)
                    .HasColumnName("provideretqeid");

                entity.Property(e => e.Qualificationachievementdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("qualificationachievementdatestring");

                entity.Property(e => e.Qualificationid)
                    .HasMaxLength(255)
                    .HasColumnName("qualificationid");

                entity.Property(e => e.Sdlno)
                    .HasMaxLength(255)
                    .HasColumnName("sdlno");

                entity.Property(e => e.Siteno)
                    .HasMaxLength(255)
                    .HasColumnName("siteno");

                entity.Property(e => e.Startdatestring)
                    .HasMaxLength(255)
                    .HasColumnName("startdatestring");

                entity.Property(e => e.Urbanruralid)
                    .HasMaxLength(255)
                    .HasColumnName("urbanruralid");
            });

            modelBuilder.Entity<Setum>(entity =>
            {
                entity.ToTable("seta");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<SicCode>(entity =>
            {
                entity.ToTable("sic_code");

                entity.HasIndex(e => e.ChamberId, "FK1i5gyhj0tpu03b6a905yvyemg");

                entity.HasIndex(e => e.Code, "code");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ChamberId).HasColumnName("chamber_id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.Chamber)
                    .WithMany(p => p.SicCodes)
                    .HasForeignKey(d => d.ChamberId)
                    .HasConstraintName("FK1i5gyhj0tpu03b6a905yvyemg");
            });

            modelBuilder.Entity<Signoff>(entity =>
            {
                entity.ToTable("signoff");

                entity.HasIndex(e => e.WspDisputeId, "FK1cvct4gd1r9538vhutto96ly1");

                entity.HasIndex(e => e.MgVerificationId, "FK4mbj1n3609n5mllptib6wt9ad");

                entity.HasIndex(e => e.RoleId, "FKce5qs6gskdxev9uk697c3i2nn");

                entity.HasIndex(e => e.DgVerificationId, "FKewrnl5pndirasrw4dbexu44pi");

                entity.HasIndex(e => e.WspId, "FKmxf6kpqg27l29yinjoxgihrfn");

                entity.HasIndex(e => e.TempSignoffId, "FKn7cdtusawvxa9coki9y25qvax");

                entity.HasIndex(e => e.UserId, "FKpshdkykafq4c2nuku7qnmerxi");

                entity.HasIndex(e => e.ChangeUserId, "FKxktbgttqu3v2uh5m9qc9lh6c");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CanChangeSignOffUser)
                    .HasColumnType("bit(1)")
                    .HasColumnName("can_change_sign_off_user");

                entity.Property(e => e.ChangeUserId).HasColumnName("change_user_id");

                entity.Property(e => e.Completed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("completed");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateSignOffUserChanged)
                    .HasColumnType("datetime")
                    .HasColumnName("date_sign_off_user_changed");

                entity.Property(e => e.DgVerificationId).HasColumnName("dg_verification_id");

                entity.Property(e => e.Dispute)
                    .HasColumnType("bit(1)")
                    .HasColumnName("dispute");

                entity.Property(e => e.ExpiryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("expiry_date");

                entity.Property(e => e.ExternalUserSignoff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("external_user_signoff");

                entity.Property(e => e.Guid)
                    .HasMaxLength(100)
                    .HasColumnName("guid");

                entity.Property(e => e.LastestSignoff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("lastest_signoff");

                entity.Property(e => e.MgVerificationId).HasColumnName("mg_verification_id");

                entity.Property(e => e.OneTimePassword)
                    .HasMaxLength(1000)
                    .HasColumnName("one_time_password");

                entity.Property(e => e.RoleId).HasColumnName("role_id");

                entity.Property(e => e.SignOffDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sign_off_date");

                entity.Property(e => e.SignOffTitle).HasColumnName("sign_off_title");

                entity.Property(e => e.SignoffByEnum).HasColumnName("signoff_by_enum");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TempSignoffId).HasColumnName("temp_signoff_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WspDisputeId).HasColumnName("wsp_dispute_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.ChangeUser)
                    .WithMany(p => p.SignoffChangeUsers)
                    .HasForeignKey(d => d.ChangeUserId)
                    .HasConstraintName("FKxktbgttqu3v2uh5m9qc9lh6c");

                entity.HasOne(d => d.DgVerification)
                    .WithMany(p => p.Signoffs)
                    .HasForeignKey(d => d.DgVerificationId)
                    .HasConstraintName("FKewrnl5pndirasrw4dbexu44pi");

                entity.HasOne(d => d.MgVerification)
                    .WithMany(p => p.Signoffs)
                    .HasForeignKey(d => d.MgVerificationId)
                    .HasConstraintName("FK4mbj1n3609n5mllptib6wt9ad");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.Signoffs)
                    .HasForeignKey(d => d.RoleId)
                    .HasConstraintName("FKce5qs6gskdxev9uk697c3i2nn");

                entity.HasOne(d => d.TempSignoff)
                    .WithMany(p => p.Signoffs)
                    .HasForeignKey(d => d.TempSignoffId)
                    .HasConstraintName("FKn7cdtusawvxa9coki9y25qvax");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.SignoffUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKpshdkykafq4c2nuku7qnmerxi");

                entity.HasOne(d => d.WspDispute)
                    .WithMany(p => p.Signoffs)
                    .HasForeignKey(d => d.WspDisputeId)
                    .HasConstraintName("FK1cvct4gd1r9538vhutto96ly1");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.Signoffs)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKmxf6kpqg27l29yinjoxgihrfn");
            });

            modelBuilder.Entity<SignoffHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("signoff_hist");

                entity.HasIndex(e => e.Rev, "FKiraasw35yd96btrt74qc9kv32");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CanChangeSignOffUser)
                    .HasColumnType("bit(1)")
                    .HasColumnName("can_change_sign_off_user");

                entity.Property(e => e.ChangeUserId).HasColumnName("change_user_id");

                entity.Property(e => e.Completed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("completed");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateSignOffUserChanged)
                    .HasColumnType("datetime")
                    .HasColumnName("date_sign_off_user_changed");

                entity.Property(e => e.DgVerificationId).HasColumnName("dg_verification_id");

                entity.Property(e => e.Dispute)
                    .HasColumnType("bit(1)")
                    .HasColumnName("dispute");

                entity.Property(e => e.ExpiryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("expiry_date");

                entity.Property(e => e.ExternalUserSignoff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("external_user_signoff");

                entity.Property(e => e.Guid)
                    .HasMaxLength(100)
                    .HasColumnName("guid");

                entity.Property(e => e.LastestSignoff)
                    .HasColumnType("bit(1)")
                    .HasColumnName("lastest_signoff");

                entity.Property(e => e.MgVerificationId).HasColumnName("mg_verification_id");

                entity.Property(e => e.OneTimePassword)
                    .HasMaxLength(1000)
                    .HasColumnName("one_time_password");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RoleId).HasColumnName("role_id");

                entity.Property(e => e.SignOffDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sign_off_date");

                entity.Property(e => e.SignOffTitle).HasColumnName("sign_off_title");

                entity.Property(e => e.SignoffByEnum).HasColumnName("signoff_by_enum");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TempSignoffId).HasColumnName("temp_signoff_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WspDisputeId).HasColumnName("wsp_dispute_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SignoffHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKiraasw35yd96btrt74qc9kv32");
            });

            modelBuilder.Entity<SiteResponse>(entity =>
            {
                entity.ToTable("sites");

               // entity.HasIndex(e => e.LegacyOrganisationSitesId, "FK1qk9xpdhivf0tqk675r63hj7e");

                entity.HasIndex(e => e.CompanyId, "FKgnvft1nosi2esfl6ohn9jfukv");

                entity.HasIndex(e => e.RegisteredAddressId, "FKjjmse3uaca47r6avg71r540g4");

                entity.HasIndex(e => e.FormUserId, "FKsx8kf743p7y9uxuepivlggt2l");

                entity.Property(e => e.Id).HasColumnName("id");

               /* entity.Property(e => e.CompanyGuid)
                    .HasMaxLength(100)
                    .HasColumnName("company_guid");*/

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(40)
                    .HasColumnName("company_name");

               /* entity.Property(e => e.CompanyRegistrationNumber)
                    .HasMaxLength(40)
                    .HasColumnName("company_registration_number");*/

                entity.Property(e => e.CompanySiteNumber)
                    .HasMaxLength(10)
                    .HasColumnName("company_site_number");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                /*entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");*/

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.FormUserId).HasColumnName("form_user_id");

              //  entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

              /*  entity.Property(e => e.LevyNumber)
                    .HasMaxLength(40)
                    .HasColumnName("levy_number");*/

                entity.Property(e => e.NumberOfEmployees).HasColumnName("number_of_employees");

                entity.Property(e => e.RegisteredAddressId).HasColumnName("registered_address_id");

              /*  entity.Property(e => e.SiteNumber)
                    .HasMaxLength(100)
                    .HasColumnName("site_number");*/

                entity.Property(e => e.SiteStatus).HasColumnName("site_status");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

               /* entity.HasOne(d => d.Company)
                    .WithMany(p => p.Sites)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKgnvft1nosi2esfl6ohn9jfukv");

                entity.HasOne(d => d.FormUser)
                    .WithMany(p => p.Sites)
                    .HasForeignKey(d => d.FormUserId)
                    .HasConstraintName("FKsx8kf743p7y9uxuepivlggt2l");

                entity.HasOne(d => d.LegacyOrganisationSites)
                    .WithMany(p => p.Sites)
                    .HasForeignKey(d => d.LegacyOrganisationSitesId)
                    .HasConstraintName("FK1qk9xpdhivf0tqk675r63hj7e");

                entity.HasOne(d => d.RegisteredAddress)
                    .WithMany(p => p.SitesNavigation)
                    .HasForeignKey(d => d.RegisteredAddressId)
                    .HasConstraintName("FKjjmse3uaca47r6avg71r540g4");*/
            });

            modelBuilder.Entity<SiteVisit>(entity =>
            {
                entity.ToTable("site_visit");

                entity.HasIndex(e => e.CompanyId, "FK5j62pkbyrfip446v62t6vtl1f");

                entity.HasIndex(e => e.UserId, "FK6gtc46g13ae9dhtalu7jo65o");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateApproved)
                    .HasColumnType("datetime")
                    .HasColumnName("date_approved");
        
                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.VisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("visit_date"); 

                 entity.Property(e => e.AssessmentProcessBatchId).HasColumnName("assessment_process_batch_id");
            });

            modelBuilder.Entity<SiteVisitReportDispute>(entity =>
            {
                entity.ToTable("site_visit_report_dispute");

                entity.HasIndex(e => e.CreateUserId, "FK6a3mpw2atvcdfugkb3mvrqg4x");

                entity.HasIndex(e => e.SiteVisitReportId, "FKit43bcrnwacb4g0irfu87b3b1");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.ResonForDispute).HasColumnName("reson_for_dispute");

                entity.Property(e => e.SiteVisitReportId).HasColumnName("site_visit_report_id");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.SiteVisitReportDisputes)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FK6a3mpw2atvcdfugkb3mvrqg4x");

                entity.HasOne(d => d.SiteVisitReport)
                    .WithMany(p => p.SiteVisitReportDisputes)
                    .HasForeignKey(d => d.SiteVisitReportId)
                    .HasConstraintName("FKit43bcrnwacb4g0irfu87b3b1");
            });

            modelBuilder.Entity<SiteVisitReportNew>(entity =>
            {
                entity.ToTable("site_visit_report_new");

                entity.HasIndex(e => e.Site, "FK3h13mvwubyepulej8kfh0nru8");

                entity.HasIndex(e => e.SafetyYesNoTwo, "FK3t0ghu9kjwhhtp67skjka55d0");

                entity.HasIndex(e => e.EquipmentYesNoFour, "FK54uqi8x3cd5aetwwei6w03gxl");

                entity.HasIndex(e => e.RecordYesNoOne, "FK6ogn1xp7g4qp826wolk0iw34n");

                entity.HasIndex(e => e.SafetyYesNoOne, "FK8tuss4jk6p0fdpbt5wvm1rp07");

                entity.HasIndex(e => e.EquipmentYesNoThree, "FKgybg3lwpuqqoafe7rcc9ci7c6");

                entity.HasIndex(e => e.EquipmentYesNoFive, "FKi6idlu0596pnbo4wmy7ci67o");

                entity.HasIndex(e => e.RecordYesNoTwo, "FKjqncbhlvcpwq9gw68twdddxqv");

                entity.HasIndex(e => e.CompanyId, "FKjvrns0424altbpru8o1g2uy74");

                entity.HasIndex(e => e.SafetyYesNoThree, "FKjxp42g68ws9tglq92fvj3vqh5");

                entity.HasIndex(e => e.UserId, "FKnrox1q2wig262dksdl7dqhs72");

                entity.HasIndex(e => e.EquipmentYesNoTwo, "FKqsytqm2jv80tpxg697u08txe5");

                entity.HasIndex(e => e.EquipmentYesNoOne, "FKst57f1p1gjtuqs1icoa6hh155");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Comments).HasColumnName("comments");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateApproved)
                    .HasColumnType("datetime")
                    .HasColumnName("date_approved");

                entity.Property(e => e.EquipmentFiveRevisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("equipment_five_revisit_date");

                entity.Property(e => e.EquipmentFourRevisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("equipment_four_revisit_date");

                entity.Property(e => e.EquipmentOneRevisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("equipment_one_revisit_date");

                entity.Property(e => e.EquipmentThreeRevisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("equipment_three_revisit_date");

                entity.Property(e => e.EquipmentTwoRevisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("equipment_two_revisit_date");

                entity.Property(e => e.EquipmentYesNoFive).HasColumnName("equipment_yes_no_five");

                entity.Property(e => e.EquipmentYesNoFour).HasColumnName("equipment_yes_no_four");

                entity.Property(e => e.EquipmentYesNoOne).HasColumnName("equipment_yes_no_one");

                entity.Property(e => e.EquipmentYesNoThree).HasColumnName("equipment_yes_no_three");

                entity.Property(e => e.EquipmentYesNoTwo).HasColumnName("equipment_yes_no_two");

                entity.Property(e => e.GpsDetails).HasColumnName("gps_details");

                entity.Property(e => e.RecordOneRevisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("record_one_revisit_date");

                entity.Property(e => e.RecordTwoRevisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("record_two_revisit_date");

                entity.Property(e => e.RecordYesNoOne).HasColumnName("record_yes_no_one");

                entity.Property(e => e.RecordYesNoTwo).HasColumnName("record_yes_no_two");

                entity.Property(e => e.RevisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("revisit_date");

                entity.Property(e => e.SafetyOneRevisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("safety_one_revisit_date");

                entity.Property(e => e.SafetyThreeRevisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("safety_three_revisit_date");

                entity.Property(e => e.SafetyTwoRevisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("safety_two_revisit_date");

                entity.Property(e => e.SafetyYesNoOne).HasColumnName("safety_yes_no_one");

                entity.Property(e => e.SafetyYesNoThree).HasColumnName("safety_yes_no_three");

                entity.Property(e => e.SafetyYesNoTwo).HasColumnName("safety_yes_no_two");

                entity.Property(e => e.Site).HasColumnName("site");

                entity.Property(e => e.SiteVisitReportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("site_visit_report_date");

                entity.Property(e => e.SiteVisitReportStatus).HasColumnName("site_visit_report_status");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.SiteVisitReportNews)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKjvrns0424altbpru8o1g2uy74");

                entity.HasOne(d => d.EquipmentYesNoFiveNavigation)
                    .WithMany(p => p.SiteVisitReportNewEquipmentYesNoFiveNavigations)
                    .HasForeignKey(d => d.EquipmentYesNoFive)
                    .HasConstraintName("FKi6idlu0596pnbo4wmy7ci67o");

                entity.HasOne(d => d.EquipmentYesNoFourNavigation)
                    .WithMany(p => p.SiteVisitReportNewEquipmentYesNoFourNavigations)
                    .HasForeignKey(d => d.EquipmentYesNoFour)
                    .HasConstraintName("FK54uqi8x3cd5aetwwei6w03gxl");

                entity.HasOne(d => d.EquipmentYesNoOneNavigation)
                    .WithMany(p => p.SiteVisitReportNewEquipmentYesNoOneNavigations)
                    .HasForeignKey(d => d.EquipmentYesNoOne)
                    .HasConstraintName("FKst57f1p1gjtuqs1icoa6hh155");

                entity.HasOne(d => d.EquipmentYesNoThreeNavigation)
                    .WithMany(p => p.SiteVisitReportNewEquipmentYesNoThreeNavigations)
                    .HasForeignKey(d => d.EquipmentYesNoThree)
                    .HasConstraintName("FKgybg3lwpuqqoafe7rcc9ci7c6");

                entity.HasOne(d => d.EquipmentYesNoTwoNavigation)
                    .WithMany(p => p.SiteVisitReportNewEquipmentYesNoTwoNavigations)
                    .HasForeignKey(d => d.EquipmentYesNoTwo)
                    .HasConstraintName("FKqsytqm2jv80tpxg697u08txe5");

                entity.HasOne(d => d.RecordYesNoOneNavigation)
                    .WithMany(p => p.SiteVisitReportNewRecordYesNoOneNavigations)
                    .HasForeignKey(d => d.RecordYesNoOne)
                    .HasConstraintName("FK6ogn1xp7g4qp826wolk0iw34n");

                entity.HasOne(d => d.RecordYesNoTwoNavigation)
                    .WithMany(p => p.SiteVisitReportNewRecordYesNoTwoNavigations)
                    .HasForeignKey(d => d.RecordYesNoTwo)
                    .HasConstraintName("FKjqncbhlvcpwq9gw68twdddxqv");

                entity.HasOne(d => d.SafetyYesNoOneNavigation)
                    .WithMany(p => p.SiteVisitReportNewSafetyYesNoOneNavigations)
                    .HasForeignKey(d => d.SafetyYesNoOne)
                    .HasConstraintName("FK8tuss4jk6p0fdpbt5wvm1rp07");

                entity.HasOne(d => d.SafetyYesNoThreeNavigation)
                    .WithMany(p => p.SiteVisitReportNewSafetyYesNoThreeNavigations)
                    .HasForeignKey(d => d.SafetyYesNoThree)
                    .HasConstraintName("FKjxp42g68ws9tglq92fvj3vqh5");

                entity.HasOne(d => d.SafetyYesNoTwoNavigation)
                    .WithMany(p => p.SiteVisitReportNewSafetyYesNoTwoNavigations)
                    .HasForeignKey(d => d.SafetyYesNoTwo)
                    .HasConstraintName("FK3t0ghu9kjwhhtp67skjka55d0");

              /*  entity.HasOne(d => d.SiteNavigation)
                    .WithMany(p => p.SiteVisitReportNews)
                    .HasForeignKey(d => d.Site)
                    .HasConstraintName("FK3h13mvwubyepulej8kfh0nru8");*/

                entity.HasOne(d => d.User)
                    .WithMany(p => p.SiteVisitReportNews)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKnrox1q2wig262dksdl7dqhs72");
            });

            modelBuilder.Entity<SiteVisitReportSme>(entity =>
            {
                entity.ToTable("site_visit_report_sme");

                entity.HasIndex(e => e.TradeId, "FK7htawch30dk7aqsb2e6m4sx5j");

                entity.HasIndex(e => e.UserId, "FK7ra57rjbdu3pwl6yrjqr6swgm");

                entity.HasIndex(e => e.SiteVisitReportId, "FKgpq52lpnnelx545i5d2vrrj1w");

                entity.HasIndex(e => e.Site, "FKki9n23t52vw9wbigc7ygvm0vd");

                entity.HasIndex(e => e.QualificationId, "FKn6kpy2tcirscgooduf34rby2e");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("first_name");

                entity.Property(e => e.FullNames)
                    .HasMaxLength(255)
                    .HasColumnName("full_names");

                entity.Property(e => e.IdentityNumber)
                    .HasMaxLength(255)
                    .HasColumnName("identity_number");

                entity.Property(e => e.LastName)
                    .HasMaxLength(255)
                    .HasColumnName("last_name");

                entity.Property(e => e.Passport)
                    .HasMaxLength(255)
                    .HasColumnName("passport");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Site).HasColumnName("site");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(255)
                    .HasColumnName("siteName");

                entity.Property(e => e.SiteVisitReportId).HasColumnName("site_visit_report_id");

                entity.Property(e => e.TradeId).HasColumnName("trade_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.SiteVisitReportSmes)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKn6kpy2tcirscgooduf34rby2e");

               /* entity.HasOne(d => d.SiteNavigation)
                    .WithMany(p => p.SiteVisitReportSmes)
                    .HasForeignKey(d => d.Site)
                    .HasConstraintName("FKki9n23t52vw9wbigc7ygvm0vd");*/

                entity.HasOne(d => d.SiteVisitReport)
                    .WithMany(p => p.SiteVisitReportSmes)
                    .HasForeignKey(d => d.SiteVisitReportId)
                    .HasConstraintName("FKgpq52lpnnelx545i5d2vrrj1w");

                entity.HasOne(d => d.Trade)
                    .WithMany(p => p.SiteVisitReportSmes)
                    .HasForeignKey(d => d.TradeId)
                    .HasConstraintName("FK7htawch30dk7aqsb2e6m4sx5j");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.SiteVisitReportSmes)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK7ra57rjbdu3pwl6yrjqr6swgm");
            });

            modelBuilder.Entity<SitesHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("sites_hist");

                entity.HasIndex(e => e.Rev, "FKfpsyjy26d7e4xjtc6a3wy5v2d");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CompanyGuid)
                    .HasMaxLength(100)
                    .HasColumnName("company_guid");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(70)
                    .HasColumnName("company_name");

                entity.Property(e => e.CompanyRegistrationNumber)
                    .HasMaxLength(40)
                    .HasColumnName("company_registration_number");

                entity.Property(e => e.CompanySiteNumber)
                    .HasMaxLength(10)
                    .HasColumnName("company_site_number");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.FormUserId).HasColumnName("form_user_id");

                entity.Property(e => e.LegacyOrganisationSitesId).HasColumnName("legacy_organisation_sites_id");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(40)
                    .HasColumnName("levy_number");

                entity.Property(e => e.NumberOfEmployees).HasColumnName("number_of_employees");

                entity.Property(e => e.RegisteredAddressId).HasColumnName("registered_address_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SiteNumber)
                    .HasMaxLength(100)
                    .HasColumnName("site_number");

                entity.Property(e => e.SiteStatus).HasColumnName("site_status");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SitesHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKfpsyjy26d7e4xjtc6a3wy5v2d");
            });

            modelBuilder.Entity<SitesHistory>(entity =>
            {
                entity.ToTable("sites_history");

                entity.HasIndex(e => e.FormUserId, "FK3uotx7fphwvddbb8dxdu9tkx");

                entity.HasIndex(e => e.ForSiteId, "FKbu1t3crby4e10aveonyay6gvw");

                entity.HasIndex(e => e.CompanyId, "FKh7ykm2f7ga0r4vshtvs2jwx4u");

                entity.HasIndex(e => e.RegisteredAddressId, "FKj7no88ia3g6h9tvkc1rcl7ie1");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyGuid)
                    .HasMaxLength(100)
                    .HasColumnName("company_guid");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(70)
                    .HasColumnName("company_name");

                entity.Property(e => e.CompanyRegistrationNumber)
                    .HasMaxLength(40)
                    .HasColumnName("company_registration_number");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.ForSiteFlatId).HasColumnName("for_site_flat_id");

                entity.Property(e => e.ForSiteId).HasColumnName("for_site_id");

                entity.Property(e => e.FormUserId).HasColumnName("form_user_id");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(40)
                    .HasColumnName("levy_number");

                entity.Property(e => e.NumberOfEmployees).HasColumnName("number_of_employees");

                entity.Property(e => e.RegisteredAddressId).HasColumnName("registered_address_id");

                entity.Property(e => e.SiteNumber)
                    .HasMaxLength(100)
                    .HasColumnName("site_number");

                entity.Property(e => e.SiteStatus).HasColumnName("site_status");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.SitesHistories)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKh7ykm2f7ga0r4vshtvs2jwx4u");

               /* entity.HasOne(d => d.ForSite)
                    .WithMany(p => p.SitesHistories)
                    .HasForeignKey(d => d.ForSiteId)
                    .HasConstraintName("FKbu1t3crby4e10aveonyay6gvw");*/

                entity.HasOne(d => d.FormUser)
                    .WithMany(p => p.SitesHistories)
                    .HasForeignKey(d => d.FormUserId)
                    .HasConstraintName("FK3uotx7fphwvddbb8dxdu9tkx");

                entity.HasOne(d => d.RegisteredAddress)
                    .WithMany(p => p.SitesHistories)
                    .HasForeignKey(d => d.RegisteredAddressId)
                    .HasConstraintName("FKj7no88ia3g6h9tvkc1rcl7ie1");
            });

            modelBuilder.Entity<SitesSme>(entity =>
            {
                entity.ToTable("sites_sme");

                entity.HasIndex(e => e.ResidentialAddressId, "FK4xy5tvfgg6qeal5ybyyp05smo");

                entity.HasIndex(e => e.DeleteUserId, "FKjvr699cwaed2r1mw121ow4ljs");

                entity.HasIndex(e => e.QualificationId, "FKoo9uvl9ii3gy2nuteyw5yy21j");

                entity.HasIndex(e => e.CompanyId, "FKq2ix40de8qr2i1a14i28i5bah");

                entity.HasIndex(e => e.SitesId, "FKq4uhl1pm9lcyejex1klb4uwkn");

                entity.HasIndex(e => e.ApproveUserId, "FKrtbdxku6jpeh7a44mv4dl4xcr");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Active)
                    .HasColumnType("bit(1)")
                    .HasColumnName("active");

                entity.Property(e => e.ApproveUserId).HasColumnName("approve_user_id");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DeleteUserId).HasColumnName("delete_user_id");

                entity.Property(e => e.ExistingUser)
                    .HasColumnType("bit(1)")
                    .HasColumnName("existing_user");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.IdentityNumber)
                    .HasMaxLength(100)
                    .HasColumnName("identity_number");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.LockSme)
                    .HasColumnType("bit(1)")
                    .HasColumnName("lock_sme");

                entity.Property(e => e.NlrdNumber)
                    .HasMaxLength(100)
                    .HasColumnName("nlrd_number");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(100)
                    .HasColumnName("passport_number");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Reason)
                    .HasMaxLength(255)
                    .HasColumnName("reason");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.SitesId).HasColumnName("sites_id");

                entity.Property(e => e.SmeType)
                    .HasMaxLength(255)
                    .HasColumnName("sme_type");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UseCompanyAddress)
                    .HasColumnType("bit(1)")
                    .HasColumnName("use_company_address");

                entity.HasOne(d => d.ApproveUser)
                    .WithMany(p => p.SitesSmeApproveUsers)
                    .HasForeignKey(d => d.ApproveUserId)
                    .HasConstraintName("FKrtbdxku6jpeh7a44mv4dl4xcr");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.SitesSmes)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKq2ix40de8qr2i1a14i28i5bah");

                entity.HasOne(d => d.DeleteUser)
                    .WithMany(p => p.SitesSmeDeleteUsers)
                    .HasForeignKey(d => d.DeleteUserId)
                    .HasConstraintName("FKjvr699cwaed2r1mw121ow4ljs");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.SitesSmes)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKoo9uvl9ii3gy2nuteyw5yy21j");

                entity.HasOne(d => d.ResidentialAddress)
                    .WithMany(p => p.SitesSmes)
                    .HasForeignKey(d => d.ResidentialAddressId)
                    .HasConstraintName("FK4xy5tvfgg6qeal5ybyyp05smo");

               /* entity.HasOne(d => d.Sites)
                    .WithMany(p => p.SitesSmes)
                    .HasForeignKey(d => d.SitesId)
                    .HasConstraintName("FKq4uhl1pm9lcyejex1klb4uwkn");*/
            });

            modelBuilder.Entity<SitesSmeHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("sites_sme_hist");

                entity.HasIndex(e => e.Rev, "FKliiucu0oy7yudq305cntybmio");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Active)
                    .HasColumnType("bit(1)")
                    .HasColumnName("active");

                entity.Property(e => e.ApproveUserId).HasColumnName("approve_user_id");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DeleteUserId).HasColumnName("delete_user_id");

                entity.Property(e => e.ExistingUser)
                    .HasColumnType("bit(1)")
                    .HasColumnName("existing_user");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.IdentityNumber)
                    .HasMaxLength(100)
                    .HasColumnName("identity_number");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.LockSme)
                    .HasColumnType("bit(1)")
                    .HasColumnName("lock_sme");

                entity.Property(e => e.NlrdNumber)
                    .HasMaxLength(100)
                    .HasColumnName("nlrd_number");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(100)
                    .HasColumnName("passport_number");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Reason)
                    .HasMaxLength(255)
                    .HasColumnName("reason");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SitesId).HasColumnName("sites_id");

                entity.Property(e => e.SmeType)
                    .HasMaxLength(255)
                    .HasColumnName("sme_type");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UseCompanyAddress)
                    .HasColumnType("bit(1)")
                    .HasColumnName("use_company_address");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SitesSmeHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKliiucu0oy7yudq305cntybmio");
            });

            modelBuilder.Entity<SizeOfCompany>(entity =>
            {
                entity.ToTable("size_of_company");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.MazSize).HasColumnName("maz_size");

                entity.Property(e => e.MinSize).HasColumnName("min_size");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<SkillsGapTrackLookUp>(entity =>
            {
                entity.ToTable("skills_gap_track_Look_up");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.FutherDetailRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("futher_detail_required");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<SkillsGapTrackLookUpHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("skills_gap_track_Look_up_hist");

                entity.HasIndex(e => e.Rev, "FK8tajtxml2hw47ca6wer4ye4lv");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.FutherDetailRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("futher_detail_required");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SkillsGapTrackLookUpHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK8tajtxml2hw47ca6wer4ye4lv");
            });

            modelBuilder.Entity<SkillsIdentification>(entity =>
            {
                entity.ToTable("skills_identification");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<SkillsProgram>(entity =>
            {
                entity.ToTable("skills_program");

                entity.HasIndex(e => e.NetqaId, "FK4jlhmj4pxmyncogi51g32vo0y");

                entity.HasIndex(e => e.QualificationId, "FKr3vw3hypawolna2futyio8u4w");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Credits).HasColumnName("credits");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.Duration).HasColumnName("duration");

                entity.Property(e => e.NetqaId).HasColumnName("netqa_id");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.ProgrammeId)
                    .HasMaxLength(100)
                    .HasColumnName("programme_id");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("registration_number");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.Netqa)
                    .WithMany(p => p.SkillsPrograms)
                    .HasForeignKey(d => d.NetqaId)
                    .HasConstraintName("FK4jlhmj4pxmyncogi51g32vo0y");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.SkillsPrograms)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKr3vw3hypawolna2futyio8u4w");
            });

            modelBuilder.Entity<SkillsProgramHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("skills_program_hist");

                entity.HasIndex(e => e.Rev, "FKfagpbgbejxtg1nve4gmvwdn1g");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Credits).HasColumnName("credits");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.Duration).HasColumnName("duration");

                entity.Property(e => e.NetqaId).HasColumnName("netqa_id");

                entity.Property(e => e.ProgrammeId)
                    .HasMaxLength(100)
                    .HasColumnName("programme_id");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("registration_number");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SkillsProgramHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKfagpbgbejxtg1nve4gmvwdn1g");
            });

            modelBuilder.Entity<SkillsProgramUnitStandard>(entity =>
            {
                entity.ToTable("skills_program_unit_standards");

                entity.HasIndex(e => e.SkillsProgramId, "FKg6jjmd5l1g1i2ahg925m9jnn6");

                entity.HasIndex(e => e.QualificationId, "FKlnmoh7m3vodmxgq1gqcf3ob1c");

                entity.HasIndex(e => e.UnitStandardsId, "FKp9lljwchopofr5plvg176khbl");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.UnitStandardTypeEnum).HasColumnName("unit_standard_type_enum");

                entity.Property(e => e.UnitStandardsId).HasColumnName("unit_standards_id");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.SkillsProgramUnitStandards)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKlnmoh7m3vodmxgq1gqcf3ob1c");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.SkillsProgramUnitStandards)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKg6jjmd5l1g1i2ahg925m9jnn6");

                entity.HasOne(d => d.UnitStandards)
                    .WithMany(p => p.SkillsProgramUnitStandards)
                    .HasForeignKey(d => d.UnitStandardsId)
                    .HasConstraintName("FKp9lljwchopofr5plvg176khbl");
            });

            modelBuilder.Entity<SkillsRegistration>(entity =>
            {
                entity.ToTable("skills_registration");

                entity.HasIndex(e => e.SkillsIdentificationId, "FK71brms5r7wxg2cmmhmsi8hoiw");

                entity.HasIndex(e => e.UserId, "FKcn9ixmtufxm6cmgg78a6xp983");

                entity.HasIndex(e => e.CompanyId, "FKiks7iwulxyvt3in6mow76nyoh");

                entity.HasIndex(e => e.OfoCodesId, "FKjtd40dlujxcathso5j28c45t9");

                entity.HasIndex(e => e.ReviewCommitteeMeetingId, "FKqxc1l26ggx2cr2he0ky77pb0d");

                entity.HasIndex(e => e.QualificationId, "FKrif9yxymas08ujaklx8x4x207");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AboveNqfLevel1).HasColumnName("above_nqf_level_1");

                entity.Property(e => e.AlignedToAnExistingOrganizingFramework).HasColumnName("aligned_to_an_existing_organizing_framework");

                entity.Property(e => e.AmendedTitle)
                    .HasMaxLength(200)
                    .HasColumnName("amended_title");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FitCareer).HasColumnName("fit_career");

                entity.Property(e => e.HasNqfBeenDetermined).HasColumnName("has_nqf_been_determined");

                entity.Property(e => e.HowWillAssist)
                    .HasMaxLength(200)
                    .HasColumnName("how_will_assist");

                entity.Property(e => e.IntergratedSummativeAssesment).HasColumnName("intergrated_summative_assesment");

                entity.Property(e => e.LastDateForEnrolment)
                    .HasColumnType("datetime")
                    .HasColumnName("last_date_for_enrolment");

                entity.Property(e => e.LearnerOnCompletionHaveEmployableSkill).HasColumnName("learner_on_completion_have_employable_skill");

                entity.Property(e => e.LearningAssumedToBeInPlace).HasColumnName("learning_assumed_to_be_in_place");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.ProposedTitle)
                    .HasMaxLength(200)
                    .HasColumnName("proposed_title");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("registration_number");

                entity.Property(e => e.ResearchSummary).HasColumnName("research_summary");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.SectorsIdentified).HasColumnName("sectors_identified");

                entity.Property(e => e.SequenceOfUsAddressed).HasColumnName("sequence_of_us_addressed");

                entity.Property(e => e.SkillsIdentificationId).HasColumnName("skills_identification_id");

                entity.Property(e => e.SkillsProgrammesArticulate).HasColumnName("skills_programmes_articulate");

                entity.Property(e => e.SkillsType).HasColumnName("skills_type");

                entity.Property(e => e.SubmissionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("submission_date");

                entity.Property(e => e.TitleOfTheSkillsProgrammeSkillsSetAddressing).HasColumnName("title_of_the_skills_programme_skills_set_addressing");

                entity.Property(e => e.UsPartOfNqf).HasColumnName("us_part_of_nqf");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.SkillsRegistrations)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKiks7iwulxyvt3in6mow76nyoh");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.SkillsRegistrations)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKjtd40dlujxcathso5j28c45t9");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.SkillsRegistrations)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKrif9yxymas08ujaklx8x4x207");

                entity.HasOne(d => d.ReviewCommitteeMeeting)
                    .WithMany(p => p.SkillsRegistrations)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingId)
                    .HasConstraintName("FKqxc1l26ggx2cr2he0ky77pb0d");

                entity.HasOne(d => d.SkillsIdentification)
                    .WithMany(p => p.SkillsRegistrations)
                    .HasForeignKey(d => d.SkillsIdentificationId)
                    .HasConstraintName("FK71brms5r7wxg2cmmhmsi8hoiw");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.SkillsRegistrations)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKcn9ixmtufxm6cmgg78a6xp983");
            });

            modelBuilder.Entity<SkillsRegistrationAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("skills_registration_AUD");

                entity.HasIndex(e => e.Rev, "FKksiefta17mlolyw8a2xpuclp7");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SkillsRegistrationAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKksiefta17mlolyw8a2xpuclp7");
            });

            modelBuilder.Entity<SkillsRegistrationQualificationUnitStandard>(entity =>
            {
                entity.ToTable("skills_registration_qualification_unit_standards");

                entity.HasIndex(e => e.QualificationId, "FK25s5x32w9lrsi5cuuxve3l3l5");

                entity.HasIndex(e => e.UnitStandardsId, "FKawq5fa0464440cgtp7ppg8mmn");

                entity.HasIndex(e => e.SkillsRegistrationId, "FKnecr0awffygpkvbxh6ak4luyp");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SkillsRegistrationId).HasColumnName("skills_registration_id");

                entity.Property(e => e.UnitStandardsId).HasColumnName("unit_standards_id");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.SkillsRegistrationQualificationUnitStandards)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK25s5x32w9lrsi5cuuxve3l3l5");

                entity.HasOne(d => d.SkillsRegistration)
                    .WithMany(p => p.SkillsRegistrationQualificationUnitStandards)
                    .HasForeignKey(d => d.SkillsRegistrationId)
                    .HasConstraintName("FKnecr0awffygpkvbxh6ak4luyp");

                entity.HasOne(d => d.UnitStandards)
                    .WithMany(p => p.SkillsRegistrationQualificationUnitStandards)
                    .HasForeignKey(d => d.UnitStandardsId)
                    .HasConstraintName("FKawq5fa0464440cgtp7ppg8mmn");
            });

            modelBuilder.Entity<SkillsRegistrationUnitStandard>(entity =>
            {
                entity.ToTable("skills_registration_unit_standards");

                entity.HasIndex(e => e.SkillsRegistrationId, "FK12nqrf2wrugf1bybvuk1udwi1");

                entity.HasIndex(e => e.QualificationId, "FK7nmaudoph1oast2h5qo3pq7ji");

                entity.HasIndex(e => e.UnitStandardsId, "FK9qqhruwjfps142itj1g734pcc");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SkillsRegistrationId).HasColumnName("skills_registration_id");

                entity.Property(e => e.UnitStandardsId).HasColumnName("unit_standards_id");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.SkillsRegistrationUnitStandards)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK7nmaudoph1oast2h5qo3pq7ji");

                entity.HasOne(d => d.SkillsRegistration)
                    .WithMany(p => p.SkillsRegistrationUnitStandards)
                    .HasForeignKey(d => d.SkillsRegistrationId)
                    .HasConstraintName("FK12nqrf2wrugf1bybvuk1udwi1");

                entity.HasOne(d => d.UnitStandards)
                    .WithMany(p => p.SkillsRegistrationUnitStandards)
                    .HasForeignKey(d => d.UnitStandardsId)
                    .HasConstraintName("FK9qqhruwjfps142itj1g734pcc");
            });

            modelBuilder.Entity<SkillsSet>(entity =>
            {
                entity.ToTable("skills_set");

                entity.HasIndex(e => e.QualificationId, "FKa9bo67024pnj8naqfkj44gyos");

                entity.HasIndex(e => e.NetqaId, "FKcjng3jvcujqdd7ewyhkeri2v3");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Credits).HasColumnName("credits");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.Duration).HasColumnName("duration");

                entity.Property(e => e.NetqaId).HasColumnName("netqa_id");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.ProgrammeId)
                    .HasMaxLength(100)
                    .HasColumnName("programme_id");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("registration_number");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.HasOne(d => d.Netqa)
                    .WithMany(p => p.SkillsSets)
                    .HasForeignKey(d => d.NetqaId)
                    .HasConstraintName("FKcjng3jvcujqdd7ewyhkeri2v3");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.SkillsSets)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKa9bo67024pnj8naqfkj44gyos");
            });

            modelBuilder.Entity<SkillsSetHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("skills_set_hist");

                entity.HasIndex(e => e.Rev, "FK7gsueiglcox58uqkexeenjoc1");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Credits).HasColumnName("credits");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.Duration).HasColumnName("duration");

                entity.Property(e => e.NetqaId).HasColumnName("netqa_id");

                entity.Property(e => e.ProgrammeId)
                    .HasMaxLength(100)
                    .HasColumnName("programme_id");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RegistrationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("registration_number");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SkillsSetHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK7gsueiglcox58uqkexeenjoc1");
            });

            modelBuilder.Entity<SkillsSetUnitStandard>(entity =>
            {
                entity.ToTable("skills_set_unit_standards");

                entity.HasIndex(e => e.SkillsSetId, "FK80bajqcm23abe5ieph406fhbx");

                entity.HasIndex(e => e.QualificationId, "FK9v4joc7qofh8rl56uqq39ttr3");

                entity.HasIndex(e => e.UnitStandardsId, "FKdqj2xmq51uxhb422smgmsor82");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.UnitStandardTypeEnum).HasColumnName("unit_standard_type_enum");

                entity.Property(e => e.UnitStandardsId).HasColumnName("unit_standards_id");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.SkillsSetUnitStandards)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK9v4joc7qofh8rl56uqq39ttr3");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.SkillsSetUnitStandards)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FK80bajqcm23abe5ieph406fhbx");

                entity.HasOne(d => d.UnitStandards)
                    .WithMany(p => p.SkillsSetUnitStandards)
                    .HasForeignKey(d => d.UnitStandardsId)
                    .HasConstraintName("FKdqj2xmq51uxhb422smgmsor82");
            });

            modelBuilder.Entity<SmeQualification>(entity =>
            {
                entity.ToTable("sme_qualifications");

                entity.HasIndex(e => e.SmeQualificationsParentId, "FK4qy4309wiw77d1ycbqumn86iv");

                entity.HasIndex(e => e.SitesSmeId, "FKc3tubf34in5b9kdmdry73oh5a");

                entity.HasIndex(e => e.ApproveUserId, "FKi97ae01g6kjqk4xmd7odomtyx");

                entity.HasIndex(e => e.QualificationId, "FKk7ul4c4xfoymbsv8ji8ab5d03");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Acepted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("acepted");

                entity.Property(e => e.ApproveUserId).HasColumnName("approve_user_id");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SitesSmeId).HasColumnName("sites_sme_id");

                entity.Property(e => e.SmeQualificationsParentId).HasColumnName("sme_qualifications_parent_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.HasOne(d => d.ApproveUser)
                    .WithMany(p => p.SmeQualifications)
                    .HasForeignKey(d => d.ApproveUserId)
                    .HasConstraintName("FKi97ae01g6kjqk4xmd7odomtyx");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.SmeQualifications)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKk7ul4c4xfoymbsv8ji8ab5d03");

                entity.HasOne(d => d.SitesSme)
                    .WithMany(p => p.SmeQualifications)
                    .HasForeignKey(d => d.SitesSmeId)
                    .HasConstraintName("FKc3tubf34in5b9kdmdry73oh5a");

                entity.HasOne(d => d.SmeQualificationsParent)
                    .WithMany(p => p.InverseSmeQualificationsParent)
                    .HasForeignKey(d => d.SmeQualificationsParentId)
                    .HasConstraintName("FK4qy4309wiw77d1ycbqumn86iv");
            });

            modelBuilder.Entity<SmeQualificationsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("sme_qualifications_hist");

                entity.HasIndex(e => e.Rev, "FKcnfoumuj7r1ogykftp55n40dr");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Acepted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("acepted");

                entity.Property(e => e.ApproveUserId).HasColumnName("approve_user_id");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SitesSmeId).HasColumnName("sites_sme_id");

                entity.Property(e => e.SmeQualificationsParentId).HasColumnName("sme_qualifications_parent_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.SmeQualificationsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKcnfoumuj7r1ogykftp55n40dr");
            });

            modelBuilder.Entity<SocioeconomicStatusCode>(entity =>
            {
                entity.ToTable("socioeconomic_status_code");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<SoftDeleteChildExample>(entity =>
            {
                entity.ToTable("soft_delete_child_example");

                entity.HasIndex(e => e.SoftDeleteExampleId, "FKknlxypdytmsxshhpnswlhgv2v");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ChildDescription)
                    .HasMaxLength(20)
                    .HasColumnName("child_description");

                entity.Property(e => e.Deleted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("deleted")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SoftDeleteExampleId).HasColumnName("soft_delete_example_id");

                entity.HasOne(d => d.SoftDeleteExample)
                    .WithMany(p => p.SoftDeleteChildExamples)
                    .HasForeignKey(d => d.SoftDeleteExampleId)
                    .HasConstraintName("FKknlxypdytmsxshhpnswlhgv2v");
            });

            modelBuilder.Entity<SoftDeleteExample>(entity =>
            {
                entity.ToTable("soft_delete_example");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Deleted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("deleted")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Description)
                    .HasMaxLength(20)
                    .HasColumnName("description");
            });

            modelBuilder.Entity<SprocedureLog>(entity =>
            {
                entity.ToTable("sprocedure_log");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.SpComments)
                    .HasMaxLength(255)
                    .HasColumnName("sp_comments");

                entity.Property(e => e.SpDetails)
                    .HasMaxLength(255)
                    .HasColumnName("sp_details");

                entity.Property(e => e.SpName)
                    .HasMaxLength(100)
                    .HasColumnName("sp_name");

                entity.Property(e => e.SpRanBy)
                    .HasMaxLength(100)
                    .HasColumnName("sp_ran_by");

                entity.Property(e => e.SpRanWhen)
                    .HasColumnType("datetime")
                    .HasColumnName("sp_ran_when");

                entity.Property(e => e.SpStatus).HasColumnName("sp_status");

                entity.Property(e => e.SpStatusResponse)
                    .HasMaxLength(255)
                    .HasColumnName("sp_status_response");
            });

            modelBuilder.Entity<StakeholderRelation>(entity =>
            {
                entity.ToTable("stakeholder_relations");

                entity.HasIndex(e => e.UserId, "FKo9t3u3ehpd2qhg22m2640b5dw");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdditionalComment)
                    .HasMaxLength(550)
                    .HasColumnName("additional_comment");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateSubmitted)
                    .HasColumnType("datetime")
                    .HasColumnName("date_submitted");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.RelationTypeEnum)
                    .HasMaxLength(255)
                    .HasColumnName("relation_type_enum");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.StakeholderRelationsFlatId).HasColumnName("stakeholder_relations_flat_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.StakeholderRelations)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKo9t3u3ehpd2qhg22m2640b5dw");
            });

            modelBuilder.Entity<StakeholderRelationsSurvey>(entity =>
            {
                entity.ToTable("stakeholder_relations_survey");

                entity.HasIndex(e => e.UserId, "FK22rw28v2b21in7ij27gakmute");

                entity.HasIndex(e => e.StakeholderRelationsId, "FKon941kmxa70aalnxuhb4ieyes");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.NotAtAll)
                    .HasColumnType("bit(1)")
                    .HasColumnName("not_at_all");

                entity.Property(e => e.NotReally)
                    .HasColumnType("bit(1)")
                    .HasColumnName("not_really");

                entity.Property(e => e.Nuetral)
                    .HasColumnType("bit(1)")
                    .HasColumnName("nuetral");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.RatingEnum)
                    .HasMaxLength(255)
                    .HasColumnName("rating_enum");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.StakeholderRelationsId).HasColumnName("stakeholder_relations_id");

                entity.Property(e => e.ToaLargeExtent)
                    .HasColumnType("bit(1)")
                    .HasColumnName("toa_large_extent");

                entity.Property(e => e.ToaLimitedExtent)
                    .HasColumnType("bit(1)")
                    .HasColumnName("toa_limited_extent");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.StakeholderRelations)
                    .WithMany(p => p.StakeholderRelationsSurveys)
                    .HasForeignKey(d => d.StakeholderRelationsId)
                    .HasConstraintName("FKon941kmxa70aalnxuhb4ieyes");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.StakeholderRelationsSurveys)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK22rw28v2b21in7ij27gakmute");
            });

            modelBuilder.Entity<StatementOfResult>(entity =>
            {
                entity.ToTable("statement_of_results");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<StatssaAreaCode>(entity =>
            {
                entity.ToTable("statssa_area_code");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Status>(entity =>
            {
                entity.ToTable("statuses");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.ForProcess).HasColumnName("for_process");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<StrategicPriority>(entity =>
            {
                entity.ToTable("strategic_priorities");

                entity.HasIndex(e => e.CreateUserId, "FKl4ilakumxbjs2a338v1cfql7h");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("description");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.StrategicPrioritiesNavigation)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKl4ilakumxbjs2a338v1cfql7h");
            });

            modelBuilder.Entity<StructureStatus>(entity =>
            {
                entity.ToTable("structure_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<StructureStatusId>(entity =>
            {
                entity.ToTable("structure_status_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Subdomain>(entity =>
            {
                entity.ToTable("subdomain");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Subfield>(entity =>
            {
                entity.ToTable("subfield");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<SummativeAssessmentReportTest>(entity =>
            {
                entity.ToTable("summative_assessment_report");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.NqfAlignedId).HasColumnName("nqf_aligned_id");

                entity.Property(e => e.PivotNonPivot).HasColumnName("pivot_non_pivot");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.TrainingProviderVerficationId).HasColumnName("training_provider_verfication_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UsersId).HasColumnName("users_id");
                entity.Property(e => e.InterventionLevelId).HasColumnName("intervention_level_id");
                entity.Property(e => e.NonSetaQualificationsCompletionId).HasColumnName("non_seta_qualifications_completion_id");
                entity.Property(e => e.NqfLevelsId).HasColumnName("nqf_levels_id");
                
                

                /*entity.Property(e => e.AssessmentProgressStatusTypeId).HasColumnName("assessment_progress_status_type_id");*/

            });

            /*modelBuilder.Entity<SummativeAssessmentReport>(entity =>
            {
                entity.ToTable("summative_assessment_report");

                entity.HasIndex(e => e.TrainingProviderVerficationId, "FK3he8iom9xni88c0nckkl1iy2p");

                //entity.HasIndex(e => e.
                //, "FK6wv70jnm6xw690kiab1i6rakn");

                entity.HasIndex(e => e.SkillsProgramId, "FK8k4801p0qgu37ene1q8fl8wxr");

                entity.HasIndex(e => e.InterventionTypeId, "FKcski401dbt5jepi5eq3rr588j");

                entity.HasIndex(e => e.SkillsSetId, "FKdo4y7nn4n9ek6tdyethon68s");

               entity.HasIndex(e => e.CompanyLearnersId, "FKeh8dhqwvtkn545v09s07nl9gp");

                entity.HasIndex(e => e.NqfAlignedId, "FKett0rkp825a8y7km89cbv7o5q");

                entity.HasIndex(e => e.UsersId, "FKi7h05h8tioa1rso91kk0y0nur");

                entity.HasIndex(e => e.NonSetaQualificationsCompletionId, "FKkd95907wkqtxeg43lrhwenrc9");

                entity.HasIndex(e => e.QualificationId, "FKlsl5aq5g9tf0557mikexj2jno");

                entity.HasIndex(e => e.UnitStandardId, "FKpu4i9lc8j41abqd7lnby2mhvi");

                entity.HasIndex(e => e.NqfLevelsId, "FKsacc58np1k4s0ivsgh5q097u5");

                entity.Property(e => e.Id).HasColumnName("id");

               entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                //entity.Property(e => e.InterventionLevelId).HasColumnName("intervention_level_id");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.NonSetaQualificationsCompletionId).HasColumnName("non_seta_qualifications_completion_id");

                entity.Property(e => e.NqfAlignedId).HasColumnName("nqf_aligned_id");

                entity.Property(e => e.NqfLevelsId).HasColumnName("nqf_levels_id");

                entity.Property(e => e.PivotNonPivot).HasColumnName("pivot_non_pivot");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.TrainingProviderVerficationId).HasColumnName("training_provider_verfication_id");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.Property(e => e.AssessmentProgressStatusTypeId).HasColumnName("assessment_progress_status_type_id");

              /*  entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.SummativeAssessmentReports)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FKeh8dhqwvtkn545v09s07nl9gp");*/

                //entity.HasOne(d => d.InterventionLevel)
                //    .WithMany(p => p.SummativeAssessmentReports)
                //    .HasForeignKey(d => d.InterventionLevelId)
                //    .HasConstraintName("FK6wv70jnm6xw690kiab1i6rakn");

              /*  entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.SummativeAssessmentReports)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FKcski401dbt5jepi5eq3rr588j");

                entity.HasOne(d => d.NonSetaQualificationsCompletion)
                    .WithMany(p => p.SummativeAssessmentReports)
                    .HasForeignKey(d => d.NonSetaQualificationsCompletionId)
                    .HasConstraintName("FKkd95907wkqtxeg43lrhwenrc9");

                entity.HasOne(d => d.NqfAligned)
                    .WithMany(p => p.SummativeAssessmentReports)
                    .HasForeignKey(d => d.NqfAlignedId)
                    .HasConstraintName("FKett0rkp825a8y7km89cbv7o5q");

                entity.HasOne(d => d.NqfLevels)
                    .WithMany(p => p.SummativeAssessmentReports)
                    .HasForeignKey(d => d.NqfLevelsId)
                    .HasConstraintName("FKsacc58np1k4s0ivsgh5q097u5");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.SummativeAssessmentReports)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKlsl5aq5g9tf0557mikexj2jno");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.SummativeAssessmentReports)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FK8k4801p0qgu37ene1q8fl8wxr");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.SummativeAssessmentReports)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FKdo4y7nn4n9ek6tdyethon68s");

                entity.HasOne(d => d.TrainingProviderVerfication)
                    .WithMany(p => p.SummativeAssessmentReports)
                    .HasForeignKey(d => d.TrainingProviderVerficationId)
                    .HasConstraintName("FK3he8iom9xni88c0nckkl1iy2p");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.SummativeAssessmentReports)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKpu4i9lc8j41abqd7lnby2mhvi");

                entity.HasOne(d => d.Users)
                    .WithMany(p => p.SummativeAssessmentReports)
                    .HasForeignKey(d => d.UsersId)
                    .HasConstraintName("FKi7h05h8tioa1rso91kk0y0nur"); 
            }); */

            modelBuilder.Entity<SummativeAssessmentReportUnitStandard>(entity =>
            {
                entity.ToTable("summative_assessment_report_unit_standards");

                entity.HasIndex(e => e.UnitStandardsId, "FK36fasssmards8qi5sd3q5w3jn");

                entity.HasIndex(e => e.CompanyLearnersId, "FK5ohqadh1h7k67790bok3aquwr");

                entity.HasIndex(e => e.QualificationId, "FK6repuicffid7p0xa70dkh0h3c");

                entity.HasIndex(e => e.ModeratorApplicationId, "FKamu4f25joskr7oye1yqy56lap");

                entity.HasIndex(e => e.SummativeAssessmentReportId, "FKaqqp0v1q45ax3kwaiqrr4ui9d");

                entity.HasIndex(e => e.AssessorApplicationId, "FKojte7i9mkw4u4oseiex6imr45");

                entity.HasIndex(e => e.ModeratorUserId, "FKpf9jomv99e0vfypegwnf5bnlq");

                entity.HasIndex(e => e.AssessorUserId, "FKppnfkexi36ib8i9ou6o7iugng");

                entity.HasIndex(e => e.LegacyModeratorAccredidationId, "FKqbh0jwp5d4ku6o7srrjsytwjf");

                entity.HasIndex(e => e.LegacyAssessorAccredidationId, "FKtmjq4787ojroxhipc4icf0rv");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AssesmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("assesment_date");

                entity.Property(e => e.AssessorApplicationId).HasColumnName("assessor_application_id");

                entity.Property(e => e.AssessorUserId).HasColumnName("assessor_user_id");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CompetenceEnum).HasColumnName("competence_enum");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.LegacyAssessorAccredidationId).HasColumnName("legacy_assessor_accredidation_id");

                entity.Property(e => e.LegacyModeratorAccredidationId).HasColumnName("legacy_moderator_accredidation_id");

                entity.Property(e => e.ModerationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("moderation_date");

                entity.Property(e => e.ModeratorApplicationId).HasColumnName("moderator_application_id");

                entity.Property(e => e.ModeratorUserId).HasColumnName("moderator_user_id");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SummativeAssessmentReportId).HasColumnName("summative_assessment_report_id");

                entity.Property(e => e.UnitStandardTypeEnum).HasColumnName("unit_standard_type_enum");

                entity.Property(e => e.UnitStandardsId).HasColumnName("unit_standards_id");

                entity.HasOne(d => d.AssessorApplication)
                    .WithMany(p => p.SummativeAssessmentReportUnitStandardAssessorApplications)
                    .HasForeignKey(d => d.AssessorApplicationId)
                    .HasConstraintName("FKojte7i9mkw4u4oseiex6imr45");

                entity.HasOne(d => d.AssessorUser)
                    .WithMany(p => p.SummativeAssessmentReportUnitStandardAssessorUsers)
                    .HasForeignKey(d => d.AssessorUserId)
                    .HasConstraintName("FKppnfkexi36ib8i9ou6o7iugng");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.SummativeAssessmentReportUnitStandards)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FK5ohqadh1h7k67790bok3aquwr");

                entity.HasOne(d => d.LegacyAssessorAccredidation)
                    .WithMany(p => p.SummativeAssessmentReportUnitStandards)
                    .HasForeignKey(d => d.LegacyAssessorAccredidationId)
                    .HasConstraintName("FKtmjq4787ojroxhipc4icf0rv");

                entity.HasOne(d => d.LegacyModeratorAccredidation)
                    .WithMany(p => p.SummativeAssessmentReportUnitStandards)
                    .HasForeignKey(d => d.LegacyModeratorAccredidationId)
                    .HasConstraintName("FKqbh0jwp5d4ku6o7srrjsytwjf");

                entity.HasOne(d => d.ModeratorApplication)
                    .WithMany(p => p.SummativeAssessmentReportUnitStandardModeratorApplications)
                    .HasForeignKey(d => d.ModeratorApplicationId)
                    .HasConstraintName("FKamu4f25joskr7oye1yqy56lap");

                entity.HasOne(d => d.ModeratorUser)
                    .WithMany(p => p.SummativeAssessmentReportUnitStandardModeratorUsers)
                    .HasForeignKey(d => d.ModeratorUserId)
                    .HasConstraintName("FKpf9jomv99e0vfypegwnf5bnlq");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.SummativeAssessmentReportUnitStandards)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK6repuicffid7p0xa70dkh0h3c");

              /*  entity.HasOne(d => d.SummativeAssessmentReport)
                    .WithMany(p => p.SummativeAssessmentReportUnitStandards)
                    .HasForeignKey(d => d.SummativeAssessmentReportId)
                    .HasConstraintName("FKaqqp0v1q45ax3kwaiqrr4ui9d");*/

                entity.HasOne(d => d.UnitStandards)
                    .WithMany(p => p.SummativeAssessmentReportUnitStandards)
                    .HasForeignKey(d => d.UnitStandardsId)
                    .HasConstraintName("FK36fasssmards8qi5sd3q5w3jn");
            });

            modelBuilder.Entity<SupportEmail>(entity =>
            {
                entity.ToTable("support_emails");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");

                entity.Property(e => e.SupportType).HasColumnName("support_type");
            });

            modelBuilder.Entity<TS1>(entity =>
            {
                entity.ToTable("t_s1");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(255)
                    .HasColumnName("levy_number");

                entity.Property(e => e.SchemeYear).HasColumnName("scheme_year");

                entity.Property(e => e.StatusDescription)
                    .HasMaxLength(255)
                    .HasColumnName("status_description");
            });

            modelBuilder.Entity<TS2>(entity =>
            {
                entity.ToTable("t_s2");

                entity.HasIndex(e => e.Ts1Id, "FK5jh6i7qhc6oaet4r8aych529j");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccountCode)
                    .HasMaxLength(255)
                    .HasColumnName("account_code");

                entity.Property(e => e.Chamber)
                    .HasMaxLength(255)
                    .HasColumnName("chamber");

                entity.Property(e => e.ChamberCode).HasColumnName("chamber_code");

                entity.Property(e => e.CurrentTrxAmount)
                    .HasMaxLength(255)
                    .HasColumnName("current_trx_amount");

                entity.Property(e => e.CurrentTrxAmountD).HasColumnName("current_trx_amount_d");

                entity.Property(e => e.DocumentAmount)
                    .HasMaxLength(255)
                    .HasColumnName("document_amount");

                entity.Property(e => e.DocumentAmountD).HasColumnName("document_amount_d");

                entity.Property(e => e.DocumentDate)
                    .HasMaxLength(255)
                    .HasColumnName("document_date");

                entity.Property(e => e.DocumentDateD)
                    .HasColumnType("datetime")
                    .HasColumnName("document_date_d");

                entity.Property(e => e.DocumentNumber)
                    .HasMaxLength(255)
                    .HasColumnName("document_number");

                entity.Property(e => e.DocumentStatus)
                    .HasMaxLength(255)
                    .HasColumnName("document_status");

                entity.Property(e => e.DocumentStatus2)
                    .HasMaxLength(255)
                    .HasColumnName("document_status_2");

                entity.Property(e => e.DocumentType)
                    .HasMaxLength(255)
                    .HasColumnName("document_type");

                entity.Property(e => e.FinancialYear).HasColumnName("financial_year");

                entity.Property(e => e.GpCodeSchemeYear)
                    .HasMaxLength(255)
                    .HasColumnName("gp_code_scheme_year");

                entity.Property(e => e.GrantAllocation)
                    .HasMaxLength(255)
                    .HasColumnName("grant_allocation");

                entity.Property(e => e.GrantType)
                    .HasMaxLength(255)
                    .HasColumnName("grant_type");

                entity.Property(e => e.GrntTypeGpCode).HasColumnName("grnt_type_gp_code");

                entity.Property(e => e.Newfile)
                    .HasColumnType("bit(1)")
                    .HasColumnName("newfile");

                entity.Property(e => e.PostedDate)
                    .HasMaxLength(255)
                    .HasColumnName("posted_date");

                entity.Property(e => e.PostedDateD)
                    .HasColumnType("datetime")
                    .HasColumnName("posted_date_d");

                entity.Property(e => e.PostingDate)
                    .HasMaxLength(255)
                    .HasColumnName("posting_date");

                entity.Property(e => e.PostingDateD)
                    .HasColumnType("datetime")
                    .HasColumnName("posting_date_d");

                entity.Property(e => e.SchemeYear).HasColumnName("scheme_year");

                entity.Property(e => e.TransactionDescription)
                    .HasMaxLength(255)
                    .HasColumnName("transaction_description");

                entity.Property(e => e.TrxSource)
                    .HasMaxLength(255)
                    .HasColumnName("trx_Source");

                entity.Property(e => e.Ts1Id).HasColumnName("ts1_id");

                entity.Property(e => e.Tx)
                    .HasMaxLength(255)
                    .HasColumnName("tx");

                entity.Property(e => e.Ty)
                    .HasMaxLength(255)
                    .HasColumnName("ty");

                entity.Property(e => e.VendorId)
                    .HasMaxLength(255)
                    .HasColumnName("vendor_id");

                entity.Property(e => e.VendorName)
                    .HasMaxLength(255)
                    .HasColumnName("vendor_name");

                entity.Property(e => e.Voided)
                    .HasMaxLength(255)
                    .HasColumnName("voided");

                entity.Property(e => e.VoucherNumber)
                    .HasMaxLength(255)
                    .HasColumnName("voucher_number");

                entity.HasOne(d => d.Ts1)
                    .WithMany(p => p.TS2s)
                    .HasForeignKey(d => d.Ts1Id)
                    .HasConstraintName("FK5jh6i7qhc6oaet4r8aych529j");
            });

            modelBuilder.Entity<mersetaWebAPI.Models.Task>(entity =>
            {
                entity.ToTable("tasks");

                entity.HasIndex(e => e.HostingCompanyProcessId, "FK2g1l0d88a10yt00vnkg1hk5kx");

                entity.HasIndex(e => e.ProcessRoleId, "FKl4r720tac1ii2gmahichk6o41");

                entity.HasIndex(e => e.PreviousTaskId, "FKlpb6c0d6366ox9cxv2sxpqf26");

                entity.HasIndex(e => e.CreateUserId, "FKolfwt62wlloqsc5vvfgjcgt0q");

                entity.HasIndex(e => e.CompanyId, "FKp4nsi1c955qpyqptfbfemdue0");

                entity.HasIndex(e => e.ActionUserId, "FKr4wibrh24ut4rq8ecyj4x83s2");

                entity.HasIndex(e => new { e.TargetClass, e.TargetKey }, "hs_inx_003");

                entity.HasIndex(e => e.TargetClass, "target_class");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("action_date");

                entity.Property(e => e.ActionUserId).HasColumnName("action_user_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("completion_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("due_date");

                entity.Property(e => e.FirstInProcess)
                    .HasColumnType("bit(1)")
                    .HasColumnName("first_in_process");

                entity.Property(e => e.Guid)
                    .HasMaxLength(100)
                    .HasColumnName("guid");

                entity.Property(e => e.HostingCompanyProcessId).HasColumnName("hosting_company_process_id");

                entity.Property(e => e.PreviousTaskId).HasColumnName("previous_task_id");

                entity.Property(e => e.ProcessRoleId).HasColumnName("process_role_id");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.TargetClass).HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                /*entity.Property(e => e.TaskDirectPage)
                    .HasMaxLength(100)
                    .HasColumnName("task_direct_page");*/

                entity.Property(e => e.TaskStatus).HasColumnName("task_status");

                entity.Property(e => e.WorkflowProcess).HasColumnName("workflow_process");

                entity.HasOne(d => d.ActionUser)
                    .WithMany(p => p.TaskActionUsers)
                    .HasForeignKey(d => d.ActionUserId)
                    .HasConstraintName("FKr4wibrh24ut4rq8ecyj4x83s2");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.Tasks)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKp4nsi1c955qpyqptfbfemdue0");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.TaskCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKolfwt62wlloqsc5vvfgjcgt0q");

                entity.HasOne(d => d.HostingCompanyProcess)
                    .WithMany(p => p.Tasks)
                    .HasForeignKey(d => d.HostingCompanyProcessId)
                    .HasConstraintName("FK2g1l0d88a10yt00vnkg1hk5kx");

                entity.HasOne(d => d.PreviousTask)
                    .WithMany(p => p.InversePreviousTask)
                    .HasForeignKey(d => d.PreviousTaskId)
                    .HasConstraintName("FKlpb6c0d6366ox9cxv2sxpqf26");

                entity.HasOne(d => d.ProcessRole)
                    .WithMany(p => p.Tasks)
                    .HasForeignKey(d => d.ProcessRoleId)
                    .HasConstraintName("FKl4r720tac1ii2gmahichk6o41");
            });

            modelBuilder.Entity<TaskRejectionContent>(entity =>
            {
                entity.ToTable("task_rejection_contents");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<TaskUser>(entity =>
            {
                entity.ToTable("task_users");

                entity.HasIndex(e => e.UserId, "FK6cv479hyfnkedc7nqc46tmag6");

                entity.HasIndex(e => e.TaskId, "FKa7gicndcly21nk29xxfiuu9o7");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.TaskId).HasColumnName("task_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

               /* entity.HasOne(d => d.Task)
                    .WithMany(p => p.TaskUsers)
                    .HasForeignKey(d => d.TaskId)
                    .HasConstraintName("FKa7gicndcly21nk29xxfiuu9o7");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.TaskUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK6cv479hyfnkedc7nqc46tmag6");*/
            });

            modelBuilder.Entity<TempAddress>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_address");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUser).HasColumnName("create_user");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.InitialValidation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("initialValidation");

                entity.Property(e => e.LastUpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_update_date");

                entity.Property(e => e.LastUpdateUser).HasColumnName("last_update_user");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.LatitudeDegrees).HasColumnName("latitude_degrees");

                entity.Property(e => e.LatitudeMinutes).HasColumnName("latitude_minutes");

                entity.Property(e => e.LatitudeSeconds).HasColumnName("latitude_seconds");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.LongitudeDegrees).HasColumnName("longitude_degrees");

                entity.Property(e => e.LongitudeMinutes).HasColumnName("longitude_minutes");

                entity.Property(e => e.LongitudeSeconds).HasColumnName("longitude_seconds");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(10)
                    .HasColumnName("postcode");

                entity.Property(e => e.PrimaryAddr)
                    .HasColumnType("bit(1)")
                    .HasColumnName("primary_addr");

                entity.Property(e => e.SameAddress)
                    .HasColumnType("bit(1)")
                    .HasColumnName("same_address");

                entity.Property(e => e.SitesId).HasColumnName("sites_id");

                entity.Property(e => e.StatsSaareaCodeId).HasColumnName("stats_saarea_code_id");

                entity.Property(e => e.TownId).HasColumnName("town_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.ValidiationRanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("validiationRanDate");

                entity.Property(e => e.WorkflowValidation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("workflowValidation");
            });

            modelBuilder.Entity<TempSignoff>(entity =>
            {
                entity.ToTable("temp_signoff");

                entity.HasIndex(e => e.LastActionUser, "FKrene5hbi1o7kcki3qde1x4rqo");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.IdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("id_number");

                entity.Property(e => e.IdPassportSelection).HasColumnName("id_passport_selection");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(100)
                    .HasColumnName("middle_name");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(30)
                    .HasColumnName("passport_number");

                entity.Property(e => e.RefToSignOffFlat).HasColumnName("ref_to_sign_off_flat");

                entity.HasOne(d => d.LastActionUserNavigation)
                    .WithMany(p => p.TempSignoffs)
                    .HasForeignKey(d => d.LastActionUser)
                    .HasConstraintName("FKrene5hbi1o7kcki3qde1x4rqo");
            });

            modelBuilder.Entity<Tempx>(entity =>
            {
                entity.ToTable("tempx");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BatchNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Batch_Number");

                entity.Property(e => e.Chamber).HasMaxLength(255);

                entity.Property(e => e.ChamberCode).HasColumnName("Chamber_code");

                entity.Property(e => e.ContraAccountNumber8)
                    .HasMaxLength(255)
                    .HasColumnName("Contra_account_number_8_");

                entity.Property(e => e.ContraType10)
                    .HasMaxLength(255)
                    .HasColumnName("Contra_type_10_");

                entity.Property(e => e.ContraValue9)
                    .HasMaxLength(255)
                    .HasColumnName("Contra_Value_9_");

                entity.Property(e => e.Converted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("converted");

                entity.Property(e => e.CreditorId11)
                    .HasMaxLength(255)
                    .HasColumnName("Creditor_ID_11_");

                entity.Property(e => e.CurrentTransactionAmount)
                    .HasMaxLength(255)
                    .HasColumnName("Current_transaction_amount");

                entity.Property(e => e.Diff)
                    .HasMaxLength(255)
                    .HasColumnName("DIFF");

                entity.Property(e => e.DocumentAmount)
                    .HasMaxLength(255)
                    .HasColumnName("_Document_amount_");

                entity.Property(e => e.DocumentNumber12)
                    .HasMaxLength(255)
                    .HasColumnName("Document_number_12");

                entity.Property(e => e.DocumentType)
                    .HasMaxLength(255)
                    .HasColumnName("Document_Type");

                entity.Property(e => e.FinancialYear).HasColumnName("Financial_year");

                entity.Property(e => e.GrantType)
                    .HasMaxLength(255)
                    .HasColumnName("Grant_type");

                entity.Property(e => e.LevyYear3).HasColumnName("Levy_Year_3");

                entity.Property(e => e.MainAccountNumber5)
                    .HasMaxLength(255)
                    .HasColumnName("Main_account_number_5");

                entity.Property(e => e.MainAccountType7)
                    .HasMaxLength(255)
                    .HasColumnName("Main_account_type_7_");

                entity.Property(e => e.MainAccountValue6)
                    .HasMaxLength(255)
                    .HasColumnName("Main_Account_Value_6_");

                entity.Property(e => e.PaymentStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Payment_status");

                entity.Property(e => e.PostingDate)
                    .HasMaxLength(255)
                    .HasColumnName("Posting_Date");

                entity.Property(e => e.PostingStatus13)
                    .HasMaxLength(255)
                    .HasColumnName("Posting_status_13");

                entity.Property(e => e.RefVoucherNumber4)
                    .HasMaxLength(255)
                    .HasColumnName("Ref_Voucher_Number_4");

                entity.Property(e => e.Sdlnumber)
                    .HasMaxLength(255)
                    .HasColumnName("SDLNUMBER");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(255)
                    .HasColumnName("Transaction_date");

                entity.Property(e => e.TransactionDescription)
                    .HasMaxLength(255)
                    .HasColumnName("Transaction_Description");

                entity.Property(e => e.TrxSource)
                    .HasMaxLength(255)
                    .HasColumnName("TRX_Source");

                entity.Property(e => e.VendorName).HasMaxLength(255);

                entity.Property(e => e.Xxx)
                    .HasMaxLength(255)
                    .HasColumnName("xxx");
            });

            modelBuilder.Entity<Title>(entity =>
            {
                entity.ToTable("title");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Tool>(entity =>
            {
                entity.ToTable("tool");

                entity.HasIndex(e => e.ToolCategoryId, "FKgpq4eiyjcsgcncsys89nxv4pj");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.RatioId)
                    .HasColumnType("tinyblob")
                    .HasColumnName("ratio_id");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.ToolCategoryId).HasColumnName("tool_category_id");

                entity.HasOne(d => d.ToolCategory)
                    .WithMany(p => p.Tools)
                    .HasForeignKey(d => d.ToolCategoryId)
                    .HasConstraintName("FKgpq4eiyjcsgcncsys89nxv4pj");
            });

            modelBuilder.Entity<ToolCategory>(entity =>
            {
                entity.ToTable("tool_category");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<ToolList>(entity =>
            {
                entity.ToTable("tool_list");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<ToolListCategory>(entity =>
            {
                entity.ToTable("tool_list_category");

                entity.HasIndex(e => e.ToolCategoryId, "FKf0raf6v4lnj3cgtpjdbsdm69s");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.ToolCategoryId).HasColumnName("tool_category_id");

                entity.Property(e => e.ToolListId).HasColumnName("tool_list_id");

                entity.HasOne(d => d.ToolCategory)
                    .WithMany(p => p.ToolListCategories)
                    .HasForeignKey(d => d.ToolCategoryId)
                    .HasConstraintName("FKf0raf6v4lnj3cgtpjdbsdm69s");
            });

            modelBuilder.Entity<ToolListTool>(entity =>
            {
                entity.ToTable("tool_list_tool");

                entity.HasIndex(e => e.ToolId, "FKn4kknufgdtrp5rt5fuuic33vx");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.ToolId).HasColumnName("tool_id");

                entity.Property(e => e.ToolListId).HasColumnName("tool_list_id");

                entity.HasOne(d => d.Tool)
                    .WithMany(p => p.ToolListTools)
                    .HasForeignKey(d => d.ToolId)
                    .HasConstraintName("FKn4kknufgdtrp5rt5fuuic33vx");
            });

            modelBuilder.Entity<Town>(entity =>
            {
                entity.ToTable("towns");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(5)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");
            });

            modelBuilder.Entity<TradeAppraisalsChecklist>(entity =>
            {
                entity.ToTable("trade_appraisals_checklist");

                entity.HasIndex(e => e.Answer, "FK21l41ndxy8q82o15khmdspq3x");

                entity.HasIndex(e => e.WorkplaceApprovalId, "FK7yq3eg6ohy6a87wy6js6tcqnc");

                entity.HasIndex(e => e.AppraisalChecklistId, "FKa22682fbrd71l6umgu6o47q55");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Answer).HasColumnName("answer");

                entity.Property(e => e.AppraisalChecklistId).HasColumnName("appraisal_checklist_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.WorkplaceApprovalId).HasColumnName("workplace_approval_id");

                entity.HasOne(d => d.AnswerNavigation)
                    .WithMany(p => p.TradeAppraisalsChecklists)
                    .HasForeignKey(d => d.Answer)
                    .HasConstraintName("FK21l41ndxy8q82o15khmdspq3x");

                entity.HasOne(d => d.AppraisalChecklist)
                    .WithMany(p => p.TradeAppraisalsChecklists)
                    .HasForeignKey(d => d.AppraisalChecklistId)
                    .HasConstraintName("FKa22682fbrd71l6umgu6o47q55");

                entity.HasOne(d => d.WorkplaceApproval)
                    .WithMany(p => p.TradeAppraisalsChecklists)
                    .HasForeignKey(d => d.WorkplaceApprovalId)
                    .HasConstraintName("FK7yq3eg6ohy6a87wy6js6tcqnc");
            });

            modelBuilder.Entity<TradeAppraisalsChecklistAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("trade_appraisals_checklist_AUD");

                entity.HasIndex(e => e.Rev, "FKghuw7w6s2cdjavbkjra5wig00");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Answer).HasColumnName("answer");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.TradeAppraisalsChecklistAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKghuw7w6s2cdjavbkjra5wig00");
            });

            modelBuilder.Entity<TradeTestCentersHistoric>(entity =>
            {
                entity.ToTable("trade_test_centers_historic");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.TradeTestCenterName)
                    .HasMaxLength(500)
                    .HasColumnName("trade_test_center_name");
            });

            modelBuilder.Entity<TradeTestResult>(entity =>
            {
                entity.ToTable("trade_test_result");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<TradeTestTaskResult>(entity =>
            {
                entity.ToTable("trade_test_task_result");

                entity.HasIndex(e => e.CompanyLearnersTradeTestId, "FKd44w67fbktd0d1h7u8i3nhd6k");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyLearnersTradeTestId).HasColumnName("company_learners_trade_test_id");

                entity.Property(e => e.Competence).HasColumnName("competence");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Task).HasColumnName("task");

                entity.HasOne(d => d.CompanyLearnersTradeTest)
                    .WithMany(p => p.TradeTestTaskResults)
                    .HasForeignKey(d => d.CompanyLearnersTradeTestId)
                    .HasConstraintName("FKd44w67fbktd0d1h7u8i3nhd6k");
            });

            modelBuilder.Entity<TrainingComittee>(entity =>
            {
                entity.ToTable("training_comittee");

                entity.HasIndex(e => e.TitleId, "FK1gy7nixqg2f70qh6pontpjotr");

                entity.HasIndex(e => e.CompanyId, "FKcphq65yellvphmyfs7nf4yyr8");

                entity.HasIndex(e => e.GenderId, "FKhgypcny4vb7a2xdfh2l6cf2p6");

                entity.HasIndex(e => e.UnionId, "FKjmn4y3kbit1j3ieqxa456cuut");

                entity.HasIndex(e => e.EquityId, "FKmtm2xpnp5klj3mt248pu9k252");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CellNumber)
                    .HasMaxLength(20)
                    .HasColumnName("cell_number");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(26)
                    .HasColumnName("first_name");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.IdType).HasColumnName("id_type");

                entity.Property(e => e.LastName)
                    .HasMaxLength(45)
                    .HasColumnName("last_name");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(20)
                    .HasColumnName("passport_number");

                entity.Property(e => e.RsaIdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("rsa_id_number");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TitleId).HasColumnName("title_id");

                entity.Property(e => e.UnionId).HasColumnName("union_id");

                entity.Property(e => e.UnionName)
                    .HasMaxLength(100)
                    .HasColumnName("union_name");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.TrainingComittees)
                    .HasForeignKey(d => d.CompanyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKcphq65yellvphmyfs7nf4yyr8");

                entity.HasOne(d => d.Equity)
                    .WithMany(p => p.TrainingComittees)
                    .HasForeignKey(d => d.EquityId)
                    .HasConstraintName("FKmtm2xpnp5klj3mt248pu9k252");

                entity.HasOne(d => d.Gender)
                    .WithMany(p => p.TrainingComittees)
                    .HasForeignKey(d => d.GenderId)
                    .HasConstraintName("FKhgypcny4vb7a2xdfh2l6cf2p6");

                entity.HasOne(d => d.Title)
                    .WithMany(p => p.TrainingComittees)
                    .HasForeignKey(d => d.TitleId)
                    .HasConstraintName("FK1gy7nixqg2f70qh6pontpjotr");

                entity.HasOne(d => d.Union)
                    .WithMany(p => p.TrainingComittees)
                    .HasForeignKey(d => d.UnionId)
                    .HasConstraintName("FKjmn4y3kbit1j3ieqxa456cuut");
            });

            modelBuilder.Entity<TrainingComitteeHostory>(entity =>
            {
                entity.ToTable("training_comittee_hostory");

                entity.HasIndex(e => e.EquityId, "FK10pa9r1pi0ryxlsuyjgr1jo8t");

                entity.HasIndex(e => e.TitleId, "FK6ghftijeydtkq9qtfqxxkhkd7");

                entity.HasIndex(e => e.UnionId, "FKbf0oym85wt6f8tf3s0ferqnn1");

                entity.HasIndex(e => e.ForTrainingComittee, "FKltxiha3ivu31ywihc1ogr9pf2");

                entity.HasIndex(e => e.GenderId, "FKo78oh8wt5senwx77w2whg8a2u");

                entity.HasIndex(e => e.CompanyId, "FKt11c0jkcyrvdu3l31tsjem09v");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CellNumber)
                    .HasMaxLength(20)
                    .HasColumnName("cell_number");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(26)
                    .HasColumnName("first_name");

                entity.Property(e => e.ForTrainingComittee).HasColumnName("for_training_comittee");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.IdType).HasColumnName("id_type");

                entity.Property(e => e.LastName)
                    .HasMaxLength(45)
                    .HasColumnName("last_name");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(20)
                    .HasColumnName("passport_number");

                entity.Property(e => e.RsaIdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("rsa_id_number");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TitleId).HasColumnName("title_id");

                entity.Property(e => e.UnionId).HasColumnName("union_id");

                entity.Property(e => e.UnionName)
                    .HasMaxLength(100)
                    .HasColumnName("union_name");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.TrainingComitteeHostories)
                    .HasForeignKey(d => d.CompanyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKt11c0jkcyrvdu3l31tsjem09v");

                entity.HasOne(d => d.Equity)
                    .WithMany(p => p.TrainingComitteeHostories)
                    .HasForeignKey(d => d.EquityId)
                    .HasConstraintName("FK10pa9r1pi0ryxlsuyjgr1jo8t");

                entity.HasOne(d => d.ForTrainingComitteeNavigation)
                    .WithMany(p => p.TrainingComitteeHostories)
                    .HasForeignKey(d => d.ForTrainingComittee)
                    .HasConstraintName("FKltxiha3ivu31ywihc1ogr9pf2");

                entity.HasOne(d => d.Gender)
                    .WithMany(p => p.TrainingComitteeHostories)
                    .HasForeignKey(d => d.GenderId)
                    .HasConstraintName("FKo78oh8wt5senwx77w2whg8a2u");

                entity.HasOne(d => d.Title)
                    .WithMany(p => p.TrainingComitteeHostories)
                    .HasForeignKey(d => d.TitleId)
                    .HasConstraintName("FK6ghftijeydtkq9qtfqxxkhkd7");

                entity.HasOne(d => d.Union)
                    .WithMany(p => p.TrainingComitteeHostories)
                    .HasForeignKey(d => d.UnionId)
                    .HasConstraintName("FKbf0oym85wt6f8tf3s0ferqnn1");
            });

            modelBuilder.Entity<TrainingDeliveryMethod>(entity =>
            {
                entity.ToTable("training_delivery_method");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<TrainingImpactRating>(entity =>
            {
                entity.ToTable("training_impact_rating");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<TrainingProviderApplication>(entity =>
            {
                entity.ToTable("training_provider_application");

                entity.HasIndex(e => e.ProviderStatusId, "FK18et81saubi01kdysd99rbs7w");

                entity.HasIndex(e => e.ProviderClass, "FK4cj0kd6ld4oia9e3ieuqfc88q");

                entity.HasIndex(e => e.AccreditationStatus, "FK63ch55s9r5x864cuv4uyxq6s3");

                entity.HasIndex(e => e.ProviderType, "FK8rlah9nk70ifped7jg4e1l37q");

                entity.HasIndex(e => e.ManagerQaUserId, "FK9f5564u1o292icvc550jakcju");

                entity.HasIndex(e => e.ReviewCommitteeMeetingAgendaId, "FK9kjpqn180v3bj3ia131lvi11w");

                entity.HasIndex(e => e.ScopeOfResponsibilityId, "FKcj298ayh2hvn28hf6lyj1p3pj");

                entity.HasIndex(e => e.SenioManagerQaUserId, "FKdgn335fogawpebrgj0m4vavpl");

                entity.HasIndex(e => e.SkillsSetId, "FKfckcwh4lorhksgk95bpp0bl0o");

                entity.HasIndex(e => e.RelationshipToCompanyId, "FKforl0loci2q67jvquqcgaasgg");

                entity.HasIndex(e => e.NonSetaCompanyId, "FKhqlp7v1rjh7t2e798d26kbhia");

                entity.HasIndex(e => e.ReviewCommitteeMeetingId, "FKif5nyr42wrc5idiy2g6rwhsm3");

                entity.HasIndex(e => e.TrainingSiteId, "FKijn2aob3ka4ho8m5ufnda3sjo");

                entity.HasIndex(e => e.CompanyId, "FKjya7odg46jo4g3v0ahh0ax5kd");

                entity.HasIndex(e => e.EtqaId, "FKo769xpcc1b5jmm32w6fkjlgha");

                entity.HasIndex(e => e.UsersId, "FKqpturqt8rre7j5m4naf1f7sbv");

                entity.HasIndex(e => e.QualityAssuranceUserId, "FKre55f2v80tc4l5n1mli6iet73");

                entity.HasIndex(e => e.SkillsProgramId, "FKrquujyxc650mh916xmmxt0lqf");

                entity.HasIndex(e => e.LegacyProviderAccreditationId, "FKry73m03krntcw7srowsjov3j1");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationApplicationType).HasColumnName("accreditation_application_type");

                entity.Property(e => e.AccreditationNumber)
                    .HasMaxLength(100)
                    .HasColumnName("accreditation_number");

                entity.Property(e => e.AccreditationPeriod)
                    .HasMaxLength(100)
                    .HasColumnName("accreditation_period");

                entity.Property(e => e.AccreditationStatus).HasColumnName("accreditation_status");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.AssessmentOnly)
                    .HasColumnType("bit(1)")
                    .HasColumnName("assessment_only")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(255)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.CodeOfConductAcceptDate)
                    .HasColumnType("datetime")
                    .HasColumnName("code_of_conduct_accept_date");

                entity.Property(e => e.CodeOfConductAccepted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("code_of_conduct_accepted");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DuplicateApplication)
                    .HasColumnType("bit(1)")
                    .HasColumnName("duplicate_application")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.EtqaEviewCommitteeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etqa_review_committee_date");

                entity.Property(e => e.EtqaId).HasColumnName("etqa_id");

                entity.Property(e => e.ExpiriyDate)
                    .HasColumnType("datetime")
                    .HasColumnName("expiriy_date");

                entity.Property(e => e.FacilitatorAssessorModAvailable)
                    .HasColumnType("bit(1)")
                    .HasColumnName("facilitator_assessor_mod_available")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.FinalRejectDate)
                    .HasColumnType("datetime")
                    .HasColumnName("final_reject_date");

                entity.Property(e => e.FinalRejected)
                    .HasColumnType("bit(1)")
                    .HasColumnName("final_rejected")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.LegacyProviderAccreditationId).HasColumnName("legacy_provider_accreditation_id");

                entity.Property(e => e.ManagerQaUserId).HasColumnName("manager_qa_user_id");

                entity.Property(e => e.NonSetaCompanyId).HasColumnName("non_seta_company_id");

                entity.Property(e => e.PreviousStatus).HasColumnName("previous_status");

                entity.Property(e => e.ProviderClass).HasColumnName("provider_class");

                entity.Property(e => e.ProviderStatusId).HasColumnName("provider_status_id");

                entity.Property(e => e.ProviderType).HasColumnName("provider_type");

                entity.Property(e => e.QualityAssuranceUserId).HasColumnName("quality_assurance_user_id");

                entity.Property(e => e.RecommendedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("recommended_date");

                entity.Property(e => e.RecommendedToRevireCommDate)
                    .HasColumnType("datetime")
                    .HasColumnName("recommended_to_revire_comm_date");

                entity.Property(e => e.RelationshipToCompanyId).HasColumnName("relationship_to_company_id");

                entity.Property(e => e.ReviewCommitteeMeetingAgendaId).HasColumnName("review_committee_meeting_agenda_id");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.ScopeOfResponsibilityId).HasColumnName("scope_of_responsibility_id");

                entity.Property(e => e.SenioManagerQaUserId).HasColumnName("senio_manager_qa_user_id");

                entity.Property(e => e.SiteVisitComment)
                    .HasMaxLength(255)
                    .HasColumnName("site_visit_comment");

                entity.Property(e => e.SiteVisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("site_visit_date");

                entity.Property(e => e.SiteVisitDone)
                    .HasColumnType("bit(1)")
                    .HasColumnName("site_visit_done")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SiteVisitReportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("site_visit_report_date");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.StatusBeforeSuspension).HasColumnName("status_before_suspension");

                entity.Property(e => e.TrainingAssessment)
                    .HasColumnType("bit(1)")
                    .HasColumnName("training_assessment")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TrainingSiteId).HasColumnName("training_site_id");

                entity.Property(e => e.UseSkillProgrammeRoute).HasColumnName("use_skill_programme_route");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.AccreditationStatusNavigation)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.AccreditationStatus)
                    .HasConstraintName("FK63ch55s9r5x864cuv4uyxq6s3");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKjya7odg46jo4g3v0ahh0ax5kd");

                entity.HasOne(d => d.Etqa)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.EtqaId)
                    .HasConstraintName("FKo769xpcc1b5jmm32w6fkjlgha");

                entity.HasOne(d => d.LegacyProviderAccreditation)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.LegacyProviderAccreditationId)
                    .HasConstraintName("FKry73m03krntcw7srowsjov3j1");

                entity.HasOne(d => d.ManagerQaUser)
                    .WithMany(p => p.TrainingProviderApplicationManagerQaUsers)
                    .HasForeignKey(d => d.ManagerQaUserId)
                    .HasConstraintName("FK9f5564u1o292icvc550jakcju");

                entity.HasOne(d => d.NonSetaCompany)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.NonSetaCompanyId)
                    .HasConstraintName("FKhqlp7v1rjh7t2e798d26kbhia");

                entity.HasOne(d => d.ProviderClassNavigation)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.ProviderClass)
                    .HasConstraintName("FK4cj0kd6ld4oia9e3ieuqfc88q");

                entity.HasOne(d => d.ProviderStatus)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.ProviderStatusId)
                    .HasConstraintName("FK18et81saubi01kdysd99rbs7w");

                entity.HasOne(d => d.ProviderTypeNavigation)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.ProviderType)
                    .HasConstraintName("FK8rlah9nk70ifped7jg4e1l37q");

                entity.HasOne(d => d.QualityAssuranceUser)
                    .WithMany(p => p.TrainingProviderApplicationQualityAssuranceUsers)
                    .HasForeignKey(d => d.QualityAssuranceUserId)
                    .HasConstraintName("FKre55f2v80tc4l5n1mli6iet73");

                entity.HasOne(d => d.RelationshipToCompany)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.RelationshipToCompanyId)
                    .HasConstraintName("FKforl0loci2q67jvquqcgaasgg");

                entity.HasOne(d => d.ReviewCommitteeMeetingAgenda)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingAgendaId)
                    .HasConstraintName("FK9kjpqn180v3bj3ia131lvi11w");

                entity.HasOne(d => d.ReviewCommitteeMeeting)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.ReviewCommitteeMeetingId)
                    .HasConstraintName("FKif5nyr42wrc5idiy2g6rwhsm3");

                entity.HasOne(d => d.ScopeOfResponsibility)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.ScopeOfResponsibilityId)
                    .HasConstraintName("FKcj298ayh2hvn28hf6lyj1p3pj");

                entity.HasOne(d => d.SenioManagerQaUser)
                    .WithMany(p => p.TrainingProviderApplicationSenioManagerQaUsers)
                    .HasForeignKey(d => d.SenioManagerQaUserId)
                    .HasConstraintName("FKdgn335fogawpebrgj0m4vavpl");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKrquujyxc650mh916xmmxt0lqf");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FKfckcwh4lorhksgk95bpp0bl0o");

                entity.HasOne(d => d.TrainingSite)
                    .WithMany(p => p.TrainingProviderApplications)
                    .HasForeignKey(d => d.TrainingSiteId)
                    .HasConstraintName("FKijn2aob3ka4ho8m5ufnda3sjo");

                entity.HasOne(d => d.Users)
                    .WithMany(p => p.TrainingProviderApplicationUsers)
                    .HasForeignKey(d => d.UsersId)
                    .HasConstraintName("FKqpturqt8rre7j5m4naf1f7sbv");
            });

            modelBuilder.Entity<TrainingProviderApplicationHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("training_provider_application_hist");

                entity.HasIndex(e => e.Rev, "FKica33y67p2pthfm5n7h8vp9bb");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AccreditationApplicationType).HasColumnName("accreditation_application_type");

                entity.Property(e => e.AccreditationNumber)
                    .HasMaxLength(100)
                    .HasColumnName("accreditation_number");

                entity.Property(e => e.AccreditationPeriod)
                    .HasMaxLength(100)
                    .HasColumnName("accreditation_period");

                entity.Property(e => e.AccreditationStatus).HasColumnName("accreditation_status");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.AssessmentOnly)
                    .HasColumnType("bit(1)")
                    .HasColumnName("assessment_only")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(255)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.CodeOfConductAcceptDate)
                    .HasColumnType("datetime")
                    .HasColumnName("code_of_conduct_accept_date");

                entity.Property(e => e.CodeOfConductAccepted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("code_of_conduct_accepted");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DuplicateApplication)
                    .HasColumnType("bit(1)")
                    .HasColumnName("duplicate_application")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.EtqaEviewCommitteeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etqa_eview_committee_date");

                entity.Property(e => e.EtqaId).HasColumnName("etqa_id");

                entity.Property(e => e.ExpiriyDate)
                    .HasColumnType("datetime")
                    .HasColumnName("expiriy_date");

                entity.Property(e => e.FacilitatorAssessorModAvailable)
                    .HasColumnType("bit(1)")
                    .HasColumnName("facilitator_assessor_mod_available")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.FinalRejectDate)
                    .HasColumnType("datetime")
                    .HasColumnName("final_reject_date");

                entity.Property(e => e.FinalRejected)
                    .HasColumnType("bit(1)")
                    .HasColumnName("final_rejected")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.LegacyProviderAccreditationId).HasColumnName("legacy_provider_accreditation_id");

                entity.Property(e => e.ManagerQaUserId).HasColumnName("manager_qa_user_id");

                entity.Property(e => e.NonSetaCompanyId).HasColumnName("non_seta_company_id");

                entity.Property(e => e.PreviousStatus).HasColumnName("previous_status");

                entity.Property(e => e.ProviderClass).HasColumnName("provider_class");

                entity.Property(e => e.ProviderStatusId).HasColumnName("provider_status_id");

                entity.Property(e => e.ProviderType).HasColumnName("provider_type");

                entity.Property(e => e.QualityAssuranceUserId).HasColumnName("quality_assurance_user_id");

                entity.Property(e => e.RecommendedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("recommended_date");

                entity.Property(e => e.RecommendedToRevireCommDate)
                    .HasColumnType("datetime")
                    .HasColumnName("recommended_to_revire_comm_date");

                entity.Property(e => e.RelationshipToCompanyId).HasColumnName("relationship_to_company_id");

                entity.Property(e => e.ReviewCommitteeMeetingAgendaId).HasColumnName("review_committee_meeting_agenda_id");

                entity.Property(e => e.ReviewCommitteeMeetingId).HasColumnName("review_committee_meeting_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.ScopeOfResponsibilityId).HasColumnName("scope_of_responsibility_id");

                entity.Property(e => e.SenioManagerQaUserId).HasColumnName("senio_manager_qa_user_id");

                entity.Property(e => e.SiteVisitComment)
                    .HasMaxLength(255)
                    .HasColumnName("site_visit_comment");

                entity.Property(e => e.SiteVisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("site_visit_date");

                entity.Property(e => e.SiteVisitDone)
                    .HasColumnType("bit(1)")
                    .HasColumnName("site_visit_done")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SiteVisitReportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("site_visit_report_date");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.StatusBeforeSuspension).HasColumnName("status_before_suspension");

                entity.Property(e => e.TrainingAssessment)
                    .HasColumnType("bit(1)")
                    .HasColumnName("training_assessment")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TrainingSiteId).HasColumnName("training_site_id");

                entity.Property(e => e.UseSkillProgrammeRoute).HasColumnName("use_skill_programme_route");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.TrainingProviderApplicationHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKica33y67p2pthfm5n7h8vp9bb");
            });

            modelBuilder.Entity<TrainingProviderDocParent>(entity =>
            {
                entity.ToTable("training_provider_doc_parent");

                entity.HasIndex(e => e.DocId, "FKjn31399fa1wljx08qbvtl8tsw");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DocId).HasColumnName("doc_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.HasOne(d => d.Doc)
                    .WithMany(p => p.TrainingProviderDocParents)
                    .HasForeignKey(d => d.DocId)
                    .HasConstraintName("FKjn31399fa1wljx08qbvtl8tsw");
            });

            modelBuilder.Entity<TrainingProviderLearnership>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("training_provider_learnership");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FK64d5r1pymtwp68ctia3uq1qmd");

                entity.HasIndex(e => e.TrainingProviderDocParentId, "FKi2ff8icvdcjgqnqxcgnwhrfaw");

                entity.HasIndex(e => e.Rev, "FKshllg6d6256faco3dmn2xhh4q");

                entity.HasIndex(e => e.LearnershipId, "FKsrn0m29r7n274idvg4vmi7q0");

                entity.HasIndex(e => e.Id, "UK_64dh84co0ksiss5kxp0rb09we")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.LearnershipId).HasColumnName("Learnership_id");

                entity.Property(e => e.ManuallyAdded)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manually_added")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.TrainingProviderLearnerships)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FKsrn0m29r7n274idvg4vmi7q0");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.TrainingProviderLearnerships)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKshllg6d6256faco3dmn2xhh4q");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.TrainingProviderLearnerships)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FK64d5r1pymtwp68ctia3uq1qmd");

                entity.HasOne(d => d.TrainingProviderDocParent)
                    .WithMany(p => p.TrainingProviderLearnerships)
                    .HasForeignKey(d => d.TrainingProviderDocParentId)
                    .HasConstraintName("FKi2ff8icvdcjgqnqxcgnwhrfaw");
            });

            modelBuilder.Entity<TrainingProviderMonitoring>(entity =>
            {
                entity.ToTable("training_provider_monitoring");

                entity.HasIndex(e => e.SpdUserId, "FK59mi01dahii92avrmjdrca07k");

                entity.HasIndex(e => e.CompanyId, "FKamlt8isrt371eimce3kb13vje");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKbktpgscm4gr8i3v59bvgu3p4d");

                entity.HasIndex(e => e.UserId, "FKib9alf8o1swdq4ugjy9kb4u8y");

                entity.HasIndex(e => e.InitiatingQaId, "FKm0ekh5ycj1rth411mhum8s1xa");

                entity.HasIndex(e => e.QaManagerId, "FKnsymwdr32vwvw4bhm0pjdsj7m");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.Audit)
                    .HasColumnType("bit(1)")
                    .HasColumnName("audit");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.InitiatingQaId).HasColumnName("initiating_qa_id");

                entity.Property(e => e.MonitoringDate)
                    .HasColumnType("datetime")
                    .HasColumnName("monitoring_date");

                entity.Property(e => e.QaComments).HasColumnName("qa_comments");

                entity.Property(e => e.QaDateSubmission)
                    .HasColumnType("datetime")
                    .HasColumnName("qa_date_submission");

                entity.Property(e => e.QaManagerId).HasColumnName("qa_manager_id");

                entity.Property(e => e.QaRecommendation).HasColumnName("qa_recommendation");

                entity.Property(e => e.SpdUserDateSubmission)
                    .HasColumnType("datetime")
                    .HasColumnName("spd_user_date_submission");

                entity.Property(e => e.SpdUserId).HasColumnName("spd_user_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.TrainingProviderMonitorings)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKamlt8isrt371eimce3kb13vje");

                entity.HasOne(d => d.InitiatingQa)
                    .WithMany(p => p.TrainingProviderMonitoringInitiatingQas)
                    .HasForeignKey(d => d.InitiatingQaId)
                    .HasConstraintName("FKm0ekh5ycj1rth411mhum8s1xa");

                entity.HasOne(d => d.QaManager)
                    .WithMany(p => p.TrainingProviderMonitoringQaManagers)
                    .HasForeignKey(d => d.QaManagerId)
                    .HasConstraintName("FKnsymwdr32vwvw4bhm0pjdsj7m");

                entity.HasOne(d => d.SpdUser)
                    .WithMany(p => p.TrainingProviderMonitoringSpdUsers)
                    .HasForeignKey(d => d.SpdUserId)
                    .HasConstraintName("FK59mi01dahii92avrmjdrca07k");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.TrainingProviderMonitorings)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKbktpgscm4gr8i3v59bvgu3p4d");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.TrainingProviderMonitoringUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKib9alf8o1swdq4ugjy9kb4u8y");
            });

            modelBuilder.Entity<TrainingProviderSkillsProgram>(entity =>
            {
                entity.ToTable("training_provider_skills_program");

                entity.HasIndex(e => e.SkillsProgramId, "FK2y1wtax8bmuvj3wnyhllg1ndc");

                entity.HasIndex(e => e.TrainingProviderDocParentId, "FK313n8msqee9nflwdfh15hwltc");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKsur9stp6lhisxblctab0ivy5y");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ManuallyAdded)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manually_added")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.TrainingProviderSkillsPrograms)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FK2y1wtax8bmuvj3wnyhllg1ndc");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.TrainingProviderSkillsPrograms)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKsur9stp6lhisxblctab0ivy5y");

                entity.HasOne(d => d.TrainingProviderDocParent)
                    .WithMany(p => p.TrainingProviderSkillsPrograms)
                    .HasForeignKey(d => d.TrainingProviderDocParentId)
                    .HasConstraintName("FK313n8msqee9nflwdfh15hwltc");
            });

            modelBuilder.Entity<TrainingProviderSkillsProgramHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("training_provider_skills_program_hist");

                entity.HasIndex(e => e.Rev, "FKf0dupc8bdpy5gxr27vyp50mqc");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ManuallyAdded)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manually_added")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.TrainingProviderSkillsProgramHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKf0dupc8bdpy5gxr27vyp50mqc");
            });

            modelBuilder.Entity<TrainingProviderSkillsSet>(entity =>
            {
                entity.ToTable("training_provider_skills_set");

                entity.HasIndex(e => e.TrainingProviderDocParentId, "FK1j2do9vehyyo7xlr36paai8je");

                entity.HasIndex(e => e.SkillsSetId, "FK8k71yfg18x1rn1wsg8g7l2f0k");

                entity.HasIndex(e => e.TrainingProviderApplicationId, "FKnw5mshx06e33vxnxb6vxruuhd");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ManuallyAdded)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manually_added")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.TrainingProviderSkillsSets)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FK8k71yfg18x1rn1wsg8g7l2f0k");

                entity.HasOne(d => d.TrainingProviderApplication)
                    .WithMany(p => p.TrainingProviderSkillsSets)
                    .HasForeignKey(d => d.TrainingProviderApplicationId)
                    .HasConstraintName("FKnw5mshx06e33vxnxb6vxruuhd");

                entity.HasOne(d => d.TrainingProviderDocParent)
                    .WithMany(p => p.TrainingProviderSkillsSets)
                    .HasForeignKey(d => d.TrainingProviderDocParentId)
                    .HasConstraintName("FK1j2do9vehyyo7xlr36paai8je");
            });

            modelBuilder.Entity<TrainingProviderSkillsSetHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("training_provider_skills_set_hist");

                entity.HasIndex(e => e.Rev, "FKsdfavii5ng1obgt2t9uos9yr");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ManuallyAdded)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manually_added")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TrainingProviderApplicationId).HasColumnName("training_provider_application_id");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.TrainingProviderSkillsSetHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKsdfavii5ng1obgt2t9uos9yr");
            });

            modelBuilder.Entity<TrainingProviderVerfication>(entity =>
            {
                entity.ToTable("training_provider_verfication");

                entity.HasIndex(e => e.ReviewUserId, "FK1o4p435mjyksvmbqaccg7h2lu");

                entity.HasIndex(e => e.CreateUserId, "FKecl9i9if8patn09nsscg6t8g4");

                entity.HasIndex(e => e.ScheduledEventId, "FKi1lee3vu7df66sfq3bp5tjtjj");

                entity.HasIndex(e => e.CompanyLearnersId, "FKohx070teyiiq6t5v99xpu28nx");

                entity.HasIndex(e => e.TrainingProviderId, "FKpqsbns53h0dfoq26st6nbtcys");

                entity.HasIndex(e => e.TrainingProviderVerficationParentId, "FKtn9vqvfcgeq2676lfm8bob72k");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.AssessmentDone)
                    .HasColumnType("bit(1)")
                    .HasColumnName("assessment_done")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CeritificateCollectionEnum).HasColumnName("ceritificate_collection_enum");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(30)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.CetificateGenerated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("cetificate_generated")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CetificateGeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("cetificate_generated_date");

                entity.Property(e => e.CollectionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("collection_date");

                entity.Property(e => e.CollectionType).HasColumnName("collection_type");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CompanyModerationDone)
                    .HasColumnType("bit(1)")
                    .HasColumnName("company_moderation_done")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CreatedByMerseta)
                    .HasColumnType("bit(1)")
                    .HasColumnName("created_by_merseta")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreatedFinalApproval)
                    .HasColumnType("bit(1)")
                    .HasColumnName("created_final_approval")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.DateForVisitProvided)
                    .HasColumnType("bit(1)")
                    .HasColumnName("date_for_visit_provided");

                entity.Property(e => e.Downloads)
                    .HasColumnName("downloads")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.ForModeration)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_moderation")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.GenerateAddEnum).HasColumnName("generate_add_enum");

                entity.Property(e => e.LearnerModerationDone)
                    .HasColumnType("bit(1)")
                    .HasColumnName("learner_moderation_done")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ModerationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("moderation_date");

                entity.Property(e => e.ReviewDate)
                    .HasColumnType("datetime")
                    .HasColumnName("review_date");

                entity.Property(e => e.ReviewUserId).HasColumnName("review_user_id");

                entity.Property(e => e.ScheduledEventId).HasColumnName("scheduled_event_id");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(30)
                    .HasColumnName("serial_number");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TrainingProviderId).HasColumnName("training_provider_id");

                entity.Property(e => e.TrainingProviderVerficationParentId).HasColumnName("training_provider_verfication_parent_id");

                entity.Property(e => e.VerificationStatus).HasColumnName("verification_status");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.TrainingProviderVerfications)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FKohx070teyiiq6t5v99xpu28nx");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.TrainingProviderVerficationCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKecl9i9if8patn09nsscg6t8g4");

                entity.HasOne(d => d.ReviewUser)
                    .WithMany(p => p.TrainingProviderVerficationReviewUsers)
                    .HasForeignKey(d => d.ReviewUserId)
                    .HasConstraintName("FK1o4p435mjyksvmbqaccg7h2lu");

                entity.HasOne(d => d.ScheduledEvent)
                    .WithMany(p => p.TrainingProviderVerfications)
                    .HasForeignKey(d => d.ScheduledEventId)
                    .HasConstraintName("FKi1lee3vu7df66sfq3bp5tjtjj");

                entity.HasOne(d => d.TrainingProvider)
                    .WithMany(p => p.TrainingProviderVerfications)
                    .HasForeignKey(d => d.TrainingProviderId)
                    .HasConstraintName("FKpqsbns53h0dfoq26st6nbtcys");

                entity.HasOne(d => d.TrainingProviderVerficationParent)
                    .WithMany(p => p.InverseTrainingProviderVerficationParent)
                    .HasForeignKey(d => d.TrainingProviderVerficationParentId)
                    .HasConstraintName("FKtn9vqvfcgeq2676lfm8bob72k");
            });

            modelBuilder.Entity<TrainingProviderVerficationHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("training_provider_verfication_hist");

                entity.HasIndex(e => e.Rev, "FKf0mxth2kp1esb4kvgk7xrgwn9");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.AssessmentDone)
                    .HasColumnType("bit(1)")
                    .HasColumnName("assessment_done")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CeritificateCollectionEnum).HasColumnName("ceritificate_collection_enum");

                entity.Property(e => e.CertificateNumber)
                    .HasMaxLength(30)
                    .HasColumnName("certificate_number");

                entity.Property(e => e.CetificateGenerated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("cetificate_generated")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CetificateGeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("cetificate_generated_date");

                entity.Property(e => e.CollectionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("collection_date");

                entity.Property(e => e.CollectionType).HasColumnName("collection_type");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CompanyModerationDone)
                    .HasColumnType("bit(1)")
                    .HasColumnName("company_moderation_done")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CreatedByMerseta)
                    .HasColumnType("bit(1)")
                    .HasColumnName("created_by_merseta")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreatedFinalApproval)
                    .HasColumnType("bit(1)")
                    .HasColumnName("created_final_approval")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.DateForVisitProvided)
                    .HasColumnType("bit(1)")
                    .HasColumnName("date_for_visit_provided");

                entity.Property(e => e.Downloads)
                    .HasColumnName("downloads")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.ForModeration)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_moderation")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.GenerateAddEnum).HasColumnName("generate_add_enum");

                entity.Property(e => e.LearnerModerationDone)
                    .HasColumnType("bit(1)")
                    .HasColumnName("learner_moderation_done")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ModerationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("moderation_date");

                entity.Property(e => e.ReviewDate)
                    .HasColumnType("datetime")
                    .HasColumnName("review_date");

                entity.Property(e => e.ReviewUserId).HasColumnName("review_user_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.ScheduledEventId).HasColumnName("scheduled_event_id");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(30)
                    .HasColumnName("serial_number");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TrainingProviderId).HasColumnName("training_provider_id");

                entity.Property(e => e.TrainingProviderVerficationParentId).HasColumnName("training_provider_verfication_parent_id");

                entity.Property(e => e.VerificationStatus).HasColumnName("verification_status");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.TrainingProviderVerficationHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKf0mxth2kp1esb4kvgk7xrgwn9");
            });

            modelBuilder.Entity<TrainingProviderVerficationLearner>(entity =>
            {
                entity.ToTable("training_provider_verfication_learners");

                entity.HasIndex(e => e.CompanyLearnersId, "FKg1s2s6emkk5pq0rensi4gn921");

                entity.HasIndex(e => e.TrainingProviderVerificationId, "FKglleg56h7ixkmgxkv3ndj2p31");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.TrainingProviderVerificationId).HasColumnName("training_provider_verification_id");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.TrainingProviderVerficationLearners)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FKg1s2s6emkk5pq0rensi4gn921");

                entity.HasOne(d => d.TrainingProviderVerification)
                    .WithMany(p => p.TrainingProviderVerficationLearners)
                    .HasForeignKey(d => d.TrainingProviderVerificationId)
                    .HasConstraintName("FKglleg56h7ixkmgxkv3ndj2p31");
            });

            modelBuilder.Entity<TrainingProviderVerficationLearnersHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("training_provider_verfication_learners_hist");

                entity.HasIndex(e => e.Rev, "FK5snafap6cthjt1d8g2del9teg");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("company_learners_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TrainingProviderVerificationId).HasColumnName("training_provider_verification_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.TrainingProviderVerficationLearnersHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK5snafap6cthjt1d8g2del9teg");
            });

            modelBuilder.Entity<TrainingReportedAtrPtr>(entity =>
            {
                entity.ToTable("training_reported_atr_ptr");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<TrainingReportedAtrPtrHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("training_reported_atr_ptr_hist");

                entity.HasIndex(e => e.Rev, "FK7cop1ttvt20bsv9rew3728x7k");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.TrainingReportedAtrPtrHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK7cop1ttvt20bsv9rew3728x7k");
            });

            modelBuilder.Entity<TrainingSite>(entity =>
            {
                entity.ToTable("training_site");

                entity.HasIndex(e => e.PostalAddressId, "FKautbyc2b3sgstkthhrm9rnfwc");

                entity.HasIndex(e => e.CompanyId, "FKjocyl8anu8ww1lbdy0137p5ob");

                entity.HasIndex(e => e.ResidentialAddressId, "FKlhx1tfjtxxqcymhdoir0048yl");

                entity.HasIndex(e => e.LastActionUserId, "FKopj3w00r10g1rc9x0qbnu6w8j");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.LastActionUserDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_user_date");

                entity.Property(e => e.LastActionUserId).HasColumnName("last_action_user_id");

                entity.Property(e => e.PostalAddressId).HasColumnName("postal_address_id");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.SiteGuid)
                    .HasMaxLength(100)
                    .HasColumnName("site_guid");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(70)
                    .HasColumnName("site_name");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.TrainingSites)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKjocyl8anu8ww1lbdy0137p5ob");

                entity.HasOne(d => d.LastActionUser)
                    .WithMany(p => p.TrainingSites)
                    .HasForeignKey(d => d.LastActionUserId)
                    .HasConstraintName("FKopj3w00r10g1rc9x0qbnu6w8j");

                entity.HasOne(d => d.PostalAddress)
                    .WithMany(p => p.TrainingSitePostalAddresses)
                    .HasForeignKey(d => d.PostalAddressId)
                    .HasConstraintName("FKautbyc2b3sgstkthhrm9rnfwc");

                entity.HasOne(d => d.ResidentialAddress)
                    .WithMany(p => p.TrainingSiteResidentialAddresses)
                    .HasForeignKey(d => d.ResidentialAddressId)
                    .HasConstraintName("FKlhx1tfjtxxqcymhdoir0048yl");
            });

            modelBuilder.Entity<TrainingSiteHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("training_site_hist");

                entity.HasIndex(e => e.Rev, "FK7saijspo3foho18hflm5bmgah");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.LastActionUserDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_user_date");

                entity.Property(e => e.LastActionUserId).HasColumnName("last_action_user_id");

                entity.Property(e => e.PostalAddressId).HasColumnName("postal_address_id");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SiteGuid)
                    .HasMaxLength(100)
                    .HasColumnName("site_guid");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(70)
                    .HasColumnName("site_name");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.TrainingSiteHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK7saijspo3foho18hflm5bmgah");
            });

            modelBuilder.Entity<TransactionsCompanyValidiation>(entity =>
            {
                entity.ToTable("transactions_company_validiation");

                entity.HasIndex(e => e.CreateUsersId, "FKgcwohcovhky5l6io0t9rwdmgu");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUsersId).HasColumnName("create_users_id");

                entity.Property(e => e.ErrorEntry)
                    .HasColumnType("bit(1)")
                    .HasColumnName("error_entry");

                entity.Property(e => e.ErrorMessage).HasColumnName("error_message");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(255)
                    .HasColumnName("levy_number");

                entity.Property(e => e.NewCompany)
                    .HasColumnType("bit(1)")
                    .HasColumnName("new_company");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.CreateUsers)
                    .WithMany(p => p.TransactionsCompanyValidiations)
                    .HasForeignKey(d => d.CreateUsersId)
                    .HasConstraintName("FKgcwohcovhky5l6io0t9rwdmgu");
            });

            modelBuilder.Entity<TransactionsCompanyValidiationHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("transactions_company_validiation_hist");

                entity.HasIndex(e => e.Rev, "FKi5bemmwq92xtphjt77o6mer49");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUsersId).HasColumnName("create_users_id");

                entity.Property(e => e.ErrorEntry)
                    .HasColumnType("bit(1)")
                    .HasColumnName("error_entry");

                entity.Property(e => e.ErrorMessage).HasColumnName("error_message");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(255)
                    .HasColumnName("levy_number");

                entity.Property(e => e.NewCompany)
                    .HasColumnType("bit(1)")
                    .HasColumnName("new_company");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.TransactionsCompanyValidiationHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKi5bemmwq92xtphjt77o6mer49");
            });

            modelBuilder.Entity<TvetFetQualification>(entity =>
            {
                entity.ToTable("tvet_fet_qualification");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AppearInQmrReport)
                    .HasColumnType("bit(1)")
                    .HasColumnName("appear_in_qmr_report")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.TvetFet)
                    .HasColumnType("bit(1)")
                    .HasColumnName("tvet_fet")
                    .HasDefaultValueSql("b'0'");
            });

            modelBuilder.Entity<UnionMembership>(entity =>
            {
                entity.ToTable("union_membership");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<UpdateAuditTrail>(entity =>
            {
                entity.ToTable("update_audit_trail");

                entity.HasIndex(e => e.UsersId, "FK2s2tpdumxwkjtr76b6ayawtj8");

                entity.HasIndex(e => e.CompanyId, "FK9cdnvi0bynacrb5jwyok8fdcc");

                entity.HasIndex(e => e.BankingDetailsId, "FKiuu3i4wsnummae2ayvi4lnh21");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BankingDetailsId).HasColumnName("banking_details_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.BankingDetails)
                    .WithMany(p => p.UpdateAuditTrails)
                    .HasForeignKey(d => d.BankingDetailsId)
                    .HasConstraintName("FKiuu3i4wsnummae2ayvi4lnh21");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.UpdateAuditTrails)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK9cdnvi0bynacrb5jwyok8fdcc");

                entity.HasOne(d => d.Users)
                    .WithMany(p => p.UpdateAuditTrails)
                    .HasForeignKey(d => d.UsersId)
                    .HasConstraintName("FK2s2tpdumxwkjtr76b6ayawtj8");
            });

            modelBuilder.Entity<UpdateAuditTrailChange>(entity =>
            {
                entity.ToTable("update_audit_trail_changes");

                entity.HasIndex(e => e.AuditTrailId, "FK5mp4fbgja8y8dl9wo7fi7t3ye");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AuditTrailId).HasColumnName("audit_trail_id");

                entity.Property(e => e.FieldName).HasColumnName("field_name");

                entity.Property(e => e.FromValue).HasColumnName("from_value");

                entity.Property(e => e.ToValue).HasColumnName("to_value");

                entity.HasOne(d => d.AuditTrail)
                    .WithMany(p => p.UpdateAuditTrailChanges)
                    .HasForeignKey(d => d.AuditTrailId)
                    .HasConstraintName("FK5mp4fbgja8y8dl9wo7fi7t3ye");
            });

            modelBuilder.Entity<UploadTrackerAtrWsp>(entity =>
            {
                entity.ToTable("upload_tracker_atr_wsp");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Action)
                    .HasMaxLength(255)
                    .HasColumnName("action");

                entity.Property(e => e.Amount).HasColumnName("amount");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Section)
                    .HasMaxLength(255)
                    .HasColumnName("section");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");
            });

            modelBuilder.Entity<UrbalRural>(entity =>
            {
                entity.ToTable("urbal_rural");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.ToTable("users");

                entity.HasIndex(e => e.MunicipalityId, "FK2u44l6bsqy64fc6pwg4t9alxq");

                entity.HasIndex(e => e.QualificationId, "FK4f7clcry9ykih2pdqsy1avsdx");

                entity.HasIndex(e => e.MaritalStatusId, "FK77lyxvd8yo8bybmwqxdxj3xe3");

                entity.HasIndex(e => e.DisabledId, "FK7tsm78lyp56b72f1eh7sukyog");

                entity.HasIndex(e => e.ResidentialAddressId, "FK7yoxr7vevujgpwkvfqlgcmcqq");

                entity.HasIndex(e => e.UnionMembershipId, "FKb0vyxxs06rdii48lxgfhpeoo3");

                entity.HasIndex(e => e.TitleId, "FKbkodvdicj8ip4804wiqhe9e9d");

                entity.HasIndex(e => e.LearnershipId, "FKe6x675wefxcrvghnkv1jdmpa2");

                entity.HasIndex(e => e.ProfileImageId, "FKe9m3buhrd541cj89320px18t4");

                entity.HasIndex(e => e.LastChgUserId, "FKfy1finmkkaakxitgxa14vuihc");

                entity.HasIndex(e => e.PostalAddressId, "FKg47p37fi8b8t0uxxtmcov0dwr");

                entity.HasIndex(e => e.BirthAddressId, "FKg4lx3hbc426i4ir5rj4rohm0h");

                entity.HasIndex(e => e.DisabilityRatingId, "FKglwsrme8rsotwb5q1efvh1818");

                entity.HasIndex(e => e.LegalGaurdianId, "FKk4ql5p7sbu9bx102ikdxiph9m");

                entity.HasIndex(e => e.DisabilityStatus, "FKkq13jybqu5uqmhbuw3ftj22et");

                entity.HasIndex(e => e.HomeLanguage, "FKlmps5u5sp43hs5xgp11yrneyu");

                entity.HasIndex(e => e.NationalityId, "FKlny21mholiaykmo8js78d3o36");

                entity.HasIndex(e => e.BirthTownId, "FKmmxaxmfjylk2m6n4xsdhcs64e");

                entity.HasIndex(e => e.OrganisedLabourUnionMembershipId, "FKnne6t3uriwce5i647gyaywqts");

                entity.HasIndex(e => e.GenderId, "FKo0h29eo9e4y4wvd5yh0sn03rp");

                entity.HasIndex(e => e.PreviousSchools, "FKom47t27alxx5mgflx2up6t646");

                entity.HasIndex(e => e.EquityId, "FKp2ax2hpi5qdq2trwtjoknwuv0");

                entity.HasIndex(e => e.OfficeId, "FKqkpp0ulm5tj5l7rvxwb6jw6t4");

                entity.HasIndex(e => e.OfoCodesId, "FKsepbddjg3cgvejxpifepw3yga");

                entity.HasIndex(e => e.Email, "email_UNIQUE")
                    .IsUnique();

                entity.HasIndex(e => e.RsaIdNumber, "rsa_id_number_UNIQUE")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AcceptPopi)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept_popi")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AcceptPopiDate)
                    .HasColumnType("datetime")
                    .HasColumnName("accept_popi_date");

                entity.Property(e => e.Active)
                    .HasColumnType("bit(1)")
                    .HasColumnName("active");

                entity.Property(e => e.AddAssessment)
                    .HasColumnType("bit(1)")
                    .HasColumnName("add_assessment")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Admin)
                    .HasColumnType("bit(1)")
                    .HasColumnName("admin")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AlloocateDg)
                    .HasColumnType("bit(1)")
                    .HasColumnName("alloocate_dg")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AlterLegacyApplications)
                    .HasColumnType("bit(1)")
                    .HasColumnName("alter_legacy_applications")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.Approved)
                    .HasColumnType("bit(1)")
                    .HasColumnName("approved")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.BirthAddressId).HasColumnName("birth_address_id");

                entity.Property(e => e.BirthTownId).HasColumnName("birth_town_id");

                entity.Property(e => e.CellNumber)
                    .HasMaxLength(20)
                    .HasColumnName("cell_number");

                entity.Property(e => e.CitizenResidentStatus)
                    .HasMaxLength(100)
                    .HasColumnName("citizen_Resident_Status");

                entity.Property(e => e.CompanyRegisterReport)
                    .HasColumnType("bit(1)")
                    .HasColumnName("company_register_report")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ConfirmExpireDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirm_expire_date");

                entity.Property(e => e.CoursewareDistroSub)
                    .HasColumnType("bit(1)")
                    .HasColumnName("courseware_distro_sub")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUser).HasColumnName("create_user");

                entity.Property(e => e.DataExtracts)
                    .HasColumnType("bit(1)")
                    .HasColumnName("data_extracts")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.DateOfBirth)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_birth");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.DgContractingBulkApproval)
                    .HasColumnType("bit(1)")
                    .HasColumnName("dg_contracting_bulk_approval")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.DgVerificationReport)
                    .HasColumnType("bit(1)")
                    .HasColumnName("dg_verification_report")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Disability).HasColumnName("disability");

                entity.Property(e => e.DisabilityRatingId).HasColumnName("disability_rating_id");

                entity.Property(e => e.DisabilityStatus).HasColumnName("disabilityStatus");

                entity.Property(e => e.DisabledId).HasColumnName("disabled_id");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");

                entity.Property(e => e.EmailConfirmDate)
                    .HasColumnType("datetime")
                    .HasColumnName("email_confirm_date");

                entity.Property(e => e.EmailGuid)
                    .HasMaxLength(100)
                    .HasColumnName("email_guid");

                entity.Property(e => e.EmploymentStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employment_start_date");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.Finance)
                    .HasColumnType("bit(1)")
                    .HasColumnName("finance")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name")
                    .HasDefaultValueSql("'\"\"'");

                entity.Property(e => e.FirstNameAltered)
                    .HasMaxLength(100)
                    .HasColumnName("first_name_altered");

                entity.Property(e => e.FirstNameOrginal)
                    .HasMaxLength(100)
                    .HasColumnName("first_name_orginal");

                entity.Property(e => e.FundingWindow)
                    .HasColumnType("bit(1)")
                    .HasColumnName("funding_window")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.GenerateCertificates)
                    .HasColumnType("bit(1)")
                    .HasColumnName("generate_certificates")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.GpBankingDetails)
                    .HasColumnType("bit(1)")
                    .HasColumnName("gp_banking_details")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.GpTransactionsManagement)
                    .HasColumnType("bit(1)")
                    .HasColumnName("gp_transactions_management")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.GrantTrendAnylsis)
                    .HasColumnType("bit(1)")
                    .HasColumnName("grant_trend_anylsis")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.HoldingRoom)
                    .HasColumnType("bit(1)")
                    .HasColumnName("holding_room")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.HomeLanguage).HasColumnName("home_language");

                entity.Property(e => e.IdType).HasColumnName("id_type");

                entity.Property(e => e.IosAndroid)
                    .HasMaxLength(1)
                    .HasColumnName("ios_android");
                entity.Property(e => e.AlternativeIdType).HasColumnName("alternative_id_type");

                entity.Property(e => e.AlternativeIdNumber)
                   .HasMaxLength(255)
                   .HasColumnName("alternative_id_number");
                entity.Property(e => e.LastChgUserId).HasColumnName("last_chg_user_id");

                entity.Property(e => e.LastLogin)
                    .HasColumnType("datetime")
                    .HasColumnName("last_login");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name")
                    .HasDefaultValueSql("'\"\"'");

                entity.Property(e => e.LastSchoolYear)
                    .HasColumnType("datetime")
                    .HasColumnName("last_school_year");

                entity.Property(e => e.LastUpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_update_date");

                entity.Property(e => e.LastUpdateUser).HasColumnName("last_update_user");

                entity.Property(e => e.LearnerReviewMember)
                    .HasColumnType("bit(1)")
                    .HasColumnName("learner_review_member")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.LearnerSubmissionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_submission_date");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.LegalGaurdianId).HasColumnName("legal_gaurdian_id");

                entity.Property(e => e.LevyDetailMgTransactions)
                    .HasColumnType("bit(1)")
                    .HasColumnName("levy_detail_mg_transactions")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MaidenName)
                    .HasMaxLength(100)
                    .HasColumnName("maiden_name");

                entity.Property(e => e.MancoGrantApproval)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manco_grant_approval")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MancoMember)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manco_member")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Maried).HasColumnName("maried");

                entity.Property(e => e.MaritalStatusId).HasColumnName("marital_status_id");

                entity.Property(e => e.MgVerificationReport)
                    .HasColumnType("bit(1)")
                    .HasColumnName("mg_verification_report")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(100)
                    .HasColumnName("middle_name");

                entity.Property(e => e.MiddleNameAltered)
                    .HasMaxLength(100)
                    .HasColumnName("middle_name_altered");

                entity.Property(e => e.MiddleNameOrginal)
                    .HasMaxLength(100)
                    .HasColumnName("middle_name_orginal");

                entity.Property(e => e.MoaRegisterAccess)
                    .HasColumnType("bit(1)")
                    .HasColumnName("moa_register_access")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.NationalityId).HasColumnName("nationality_id");

                entity.Property(e => e.NextOfKinName)
                    .HasMaxLength(100)
                    .HasColumnName("next_of_kin_name");

                entity.Property(e => e.NextOfKinTelephone)
                    .HasMaxLength(20)
                    .HasColumnName("next_of_kin_telephone");

                entity.Property(e => e.NsdpReportConfig)
                    .HasColumnType("bit(1)")
                    .HasColumnName("nsdp_report_config")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NsdpReportEdit)
                    .HasColumnType("bit(1)")
                    .HasColumnName("nsdp_report_edit")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NsdpReportView)
                    .HasColumnType("bit(1)")
                    .HasColumnName("nsdp_report_view")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.OfficeId).HasColumnName("office_id");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OrganisedLabourUnionMembershipId).HasColumnName("organised_labour_union_membership_id");

                entity.Property(e => e.PartOfUnion).HasColumnName("part_of_union");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(30)
                    .HasColumnName("passport_number");

                entity.Property(e => e.Password)
                    .HasMaxLength(1000)
                    .HasColumnName("password");

                entity.Property(e => e.PhoneId)
                    .HasMaxLength(100)
                    .HasColumnName("phone_id");

                entity.Property(e => e.PostalAddressId).HasColumnName("postal_address_id");

                entity.Property(e => e.PreviousSchools).HasColumnName("previous_schools");

                entity.Property(e => e.PrimaryEmailAddress)
                    .HasMaxLength(100)
                    .HasColumnName("primary_email_address");

                entity.Property(e => e.PrioirtySkillsReport)
                    .HasColumnType("bit(1)")
                    .HasColumnName("prioirty_skills_report")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ProcessAssessorModApplication)
                    .HasColumnType("bit(1)")
                    .HasColumnName("process_assessor_mod_application")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ProfileImageId).HasColumnName("profile_image_id");

                entity.Property(e => e.ProjectCreation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("project_creation")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ProjectTermination)
                    .HasColumnType("bit(1)")
                    .HasColumnName("project_termination")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Province)
                    .HasMaxLength(50)
                    .HasColumnName("province");

                entity.Property(e => e.QmrAccess)
                    .HasColumnType("bit(1)")
                    .HasColumnName("qmr_access")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.QualWorkplaceAssignment)
                    .HasColumnType("bit(1)")
                    .HasColumnName("qual_workplace_assignment")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RecieveEmailTaskNotification)
                    .HasColumnType("bit(1)")
                    .HasColumnName("recieve_email_task_notification")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.RegisterLearner)
                    .HasColumnType("bit(1)")
                    .HasColumnName("register_learner")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.RegistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("registration_date");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.ReviewCommitteeMember)
                    .HasColumnType("bit(1)")
                    .HasColumnName("review_committee_member")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.RsaCitizenType).HasColumnName("rsa_citizen_type");

                entity.Property(e => e.RsaIdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("rsa_id_number");

                entity.Property(e => e.SarsLevyDetailCalc)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sars_levy_detail_calc")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SarsLevyMandInvoicesUpdate)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sars_levy_mand_invoices_update")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SecondaryEmailAddress)
                    .HasMaxLength(100)
                    .HasColumnName("secondary_email_address");

                entity.Property(e => e.SspReporting)
                    .HasColumnType("bit(1)")
                    .HasColumnName("ssp_reporting")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.StrategicPriorities)
                    .HasColumnType("bit(1)")
                    .HasColumnName("strategic_priorities")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SuperAdmin)
                    .HasColumnType("bit(1)")
                    .HasColumnName("super_admin")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TaskReporting)
                    .HasColumnType("bit(1)")
                    .HasColumnName("task_reporting")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TempRasIdOrPassportNumber)
                    .HasMaxLength(30)
                    .HasColumnName("temp_ras_id_or_passport_number");

                entity.Property(e => e.TempReporting)
                    .HasColumnType("bit(1)")
                    .HasColumnName("temp_reporting")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TitleId).HasColumnName("title_id");

                entity.Property(e => e.UndertakenLearningProgramBefore).HasColumnName("undertaken_learning_program_before");

                entity.Property(e => e.UnionMembershipId).HasColumnName("union_membership_id");

                entity.Property(e => e.UploadData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("upload_data")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.UrbanRuralEnum).HasColumnName("urban_rural_enum");

                entity.Property(e => e.Username)
                    .HasMaxLength(100)
                    .HasColumnName("username");

                entity.Property(e => e.ValidiationRanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("validiation_ran_date");

                entity.Property(e => e.ViewBugs)
                    .HasColumnType("bit(1)")
                    .HasColumnName("view_bugs")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ViewExtensionRequest)
                    .HasColumnType("bit(1)")
                    .HasColumnName("view_extension_request")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ViewUploadData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("view_upload_data")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.WithdrawContracts)
                    .HasColumnType("bit(1)")
                    .HasColumnName("withdraw_contracts")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.WorkContactNumber)
                    .HasMaxLength(20)
                    .HasColumnName("work_contact_number");

                entity.Property(e => e.WspManagment)
                    .HasColumnType("bit(1)")
                    .HasColumnName("wsp_managment")
                    .HasDefaultValueSql("b'0'");

                entity.HasOne(d => d.BirthAddress)
                    .WithMany(p => p.UserBirthAddresses)
                    .HasForeignKey(d => d.BirthAddressId)
                    .HasConstraintName("FKg4lx3hbc426i4ir5rj4rohm0h");

                entity.HasOne(d => d.BirthTown)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.BirthTownId)
                    .HasConstraintName("FKmmxaxmfjylk2m6n4xsdhcs64e");

                entity.HasOne(d => d.DisabilityRating)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.DisabilityRatingId)
                    .HasConstraintName("FKglwsrme8rsotwb5q1efvh1818");

                entity.HasOne(d => d.DisabilityStatusNavigation)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.DisabilityStatus)
                    .HasConstraintName("FKkq13jybqu5uqmhbuw3ftj22et");

                entity.HasOne(d => d.Disabled)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.DisabledId)
                    .HasConstraintName("FK7tsm78lyp56b72f1eh7sukyog");

                entity.HasOne(d => d.Equity)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.EquityId)
                    .HasConstraintName("FKp2ax2hpi5qdq2trwtjoknwuv0");

                entity.HasOne(d => d.Gender)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.GenderId)
                    .HasConstraintName("FKo0h29eo9e4y4wvd5yh0sn03rp");

                entity.HasOne(d => d.HomeLanguageNavigation)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.HomeLanguage)
                    .HasConstraintName("FKlmps5u5sp43hs5xgp11yrneyu");

                entity.HasOne(d => d.LastChgUser)
                    .WithMany(p => p.InverseLastChgUser)
                    .HasForeignKey(d => d.LastChgUserId)
                    .HasConstraintName("FKfy1finmkkaakxitgxa14vuihc");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FKe6x675wefxcrvghnkv1jdmpa2");

                entity.HasOne(d => d.LegalGaurdian)
                    .WithMany(p => p.InverseLegalGaurdian)
                    .HasForeignKey(d => d.LegalGaurdianId)
                    .HasConstraintName("FKk4ql5p7sbu9bx102ikdxiph9m");

                entity.HasOne(d => d.MaritalStatus)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.MaritalStatusId)
                    .HasConstraintName("FK77lyxvd8yo8bybmwqxdxj3xe3");

                entity.HasOne(d => d.Municipality)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.MunicipalityId)
                    .HasConstraintName("FK2u44l6bsqy64fc6pwg4t9alxq");

                entity.HasOne(d => d.Nationality)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.NationalityId)
                    .HasConstraintName("FKlny21mholiaykmo8js78d3o36");

                entity.HasOne(d => d.Office)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.OfficeId)
                    .HasConstraintName("FKqkpp0ulm5tj5l7rvxwb6jw6t4");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKsepbddjg3cgvejxpifepw3yga");

                entity.HasOne(d => d.OrganisedLabourUnionMembership)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.OrganisedLabourUnionMembershipId)
                    .HasConstraintName("FKnne6t3uriwce5i647gyaywqts");

                entity.HasOne(d => d.PostalAddress)
                    .WithMany(p => p.UserPostalAddresses)
                    .HasForeignKey(d => d.PostalAddressId)
                    .HasConstraintName("FKg47p37fi8b8t0uxxtmcov0dwr");

                entity.HasOne(d => d.PreviousSchoolsNavigation)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.PreviousSchools)
                    .HasConstraintName("FKom47t27alxx5mgflx2up6t646");

                entity.HasOne(d => d.ProfileImage)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.ProfileImageId)
                    .HasConstraintName("FKe9m3buhrd541cj89320px18t4");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK4f7clcry9ykih2pdqsy1avsdx");

                entity.HasOne(d => d.ResidentialAddress)
                    .WithMany(p => p.UserResidentialAddresses)
                    .HasForeignKey(d => d.ResidentialAddressId)
                    .HasConstraintName("FK7yoxr7vevujgpwkvfqlgcmcqq");

                entity.HasOne(d => d.Title)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.TitleId)
                    .HasConstraintName("FKbkodvdicj8ip4804wiqhe9e9d");

                entity.HasOne(d => d.UnionMembership)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.UnionMembershipId)
                    .HasConstraintName("FKb0vyxxs06rdii48lxgfhpeoo3");
            });

            modelBuilder.Entity<UserBrowserInformation>(entity =>
            {
                entity.ToTable("user_browser_information");

                entity.HasIndex(e => e.TasksId, "FK4ysj5kaq73rrg244y3bs1tn8m");

                entity.HasIndex(e => e.UsersId, "FKocsuf8onamcxs63e85bnsrgtm");

                entity.HasIndex(e => e.IpAddress, "ip_address")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 1 });

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BrowserName).HasColumnName("browser_name");

                entity.Property(e => e.CallingClass).HasColumnName("calling_class");

                entity.Property(e => e.CallingMethod).HasColumnName("calling_method");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FullUrl).HasColumnName("full_url");

                entity.Property(e => e.IpAddress)
                    .HasColumnType("longtext")
                    .HasColumnName("ip_address");

                entity.Property(e => e.IpAddressDecoded).HasColumnName("ip_address_decoded");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.OperatingSystem).HasColumnName("operating_system");

                entity.Property(e => e.Referrer).HasColumnName("referrer");

                entity.Property(e => e.TasksId).HasColumnName("tasks_id");

                entity.Property(e => e.UserAgent).HasColumnName("user_agent");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.Tasks)
                    .WithMany(p => p.UserBrowserInformations)
                    .HasForeignKey(d => d.TasksId)
                    .HasConstraintName("FK4ysj5kaq73rrg244y3bs1tn8m");

                entity.HasOne(d => d.Users)
                    .WithMany(p => p.UserBrowserInformations)
                    .HasForeignKey(d => d.UsersId)
                    .HasConstraintName("FKocsuf8onamcxs63e85bnsrgtm");
            });

            modelBuilder.Entity<UserChangeRequest>(entity =>
            {
                entity.ToTable("user_change_request");

                entity.HasIndex(e => e.GenderId, "FK1cn5nsx54dscvnjdvtuphnvof");

                entity.HasIndex(e => e.DisabilityStatus, "FKffa7xuspdegk7xr7ctrmt0lio");

                entity.HasIndex(e => e.NationalityId, "FKkmgek5wm5rkylax8blojd0re4");

                entity.HasIndex(e => e.EquityId, "FKm3wdn9dperefp3ds5s2xuft3m");

                entity.HasIndex(e => e.LegalGaurdianId, "FKom94y9e7cuum191wmuysuhhg");

                entity.HasIndex(e => e.UserId, "FKt0qljcsxdq8njkcbg9xdonexw");

                entity.HasIndex(e => e.TitleId, "FKywd33wdlwrrr017lpt8o227l");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CellNumber)
                    .HasMaxLength(20)
                    .HasColumnName("cell_number");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateOfBirth)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_birth");

                entity.Property(e => e.Disability).HasColumnName("disability");

                entity.Property(e => e.DisabilityStatus).HasColumnName("disabilityStatus");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.LegalGaurdianId).HasColumnName("legal_gaurdian_id");

                entity.Property(e => e.Maried).HasColumnName("maried");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(100)
                    .HasColumnName("middle_name");

                entity.Property(e => e.NationalityId).HasColumnName("nationality_id");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(30)
                    .HasColumnName("passport_number");

                entity.Property(e => e.RsaIdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("rsa_id_number");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TitleId).HasColumnName("title_id");

                entity.Property(e => e.UrbanRuralEnum).HasColumnName("urban_rural_enum");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.DisabilityStatusNavigation)
                    .WithMany(p => p.UserChangeRequests)
                    .HasForeignKey(d => d.DisabilityStatus)
                    .HasConstraintName("FKffa7xuspdegk7xr7ctrmt0lio");

                entity.HasOne(d => d.Equity)
                    .WithMany(p => p.UserChangeRequests)
                    .HasForeignKey(d => d.EquityId)
                    .HasConstraintName("FKm3wdn9dperefp3ds5s2xuft3m");

                entity.HasOne(d => d.Gender)
                    .WithMany(p => p.UserChangeRequests)
                    .HasForeignKey(d => d.GenderId)
                    .HasConstraintName("FK1cn5nsx54dscvnjdvtuphnvof");

                entity.HasOne(d => d.LegalGaurdian)
                    .WithMany(p => p.UserChangeRequestLegalGaurdians)
                    .HasForeignKey(d => d.LegalGaurdianId)
                    .HasConstraintName("FKom94y9e7cuum191wmuysuhhg");

                entity.HasOne(d => d.Nationality)
                    .WithMany(p => p.UserChangeRequests)
                    .HasForeignKey(d => d.NationalityId)
                    .HasConstraintName("FKkmgek5wm5rkylax8blojd0re4");

                entity.HasOne(d => d.Title)
                    .WithMany(p => p.UserChangeRequests)
                    .HasForeignKey(d => d.TitleId)
                    .HasConstraintName("FKywd33wdlwrrr017lpt8o227l");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UserChangeRequestUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKt0qljcsxdq8njkcbg9xdonexw");
            });

            modelBuilder.Entity<UserChangeRequestAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("user_change_request_AUD");

                entity.HasIndex(e => e.Rev, "FKqd6vjxkpd4hplserrfxwj93ru");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.DisabilityStatus).HasColumnName("disabilityStatus");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.NationalityId).HasColumnName("nationality_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TitleId).HasColumnName("title_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.UserChangeRequestAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKqd6vjxkpd4hplserrfxwj93ru");
            });

            modelBuilder.Entity<UserHostingCompany>(entity =>
            {
                entity.ToTable("user_hosting_company");

                entity.HasIndex(e => e.UserId, "FK19xhfnh9t0gr5w59v9bcn5qe5");

                entity.HasIndex(e => e.HostingCompanyId, "FKtbsevnjysf5rdxff5oou5mbqu");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.HostingCompany)
                    .WithMany(p => p.UserHostingCompanies)
                    .HasForeignKey(d => d.HostingCompanyId)
                    .HasConstraintName("FKtbsevnjysf5rdxff5oou5mbqu");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UserHostingCompanies)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK19xhfnh9t0gr5w59v9bcn5qe5");
            });

            modelBuilder.Entity<UserLearnership>(entity =>
            {
                entity.ToTable("user_learnership");

                entity.HasIndex(e => e.LearnershipId, "FK5goxduhsdurhq2rf10eh4pm2m");

                entity.HasIndex(e => e.ForAssessorModeratorApplicationId, "FKdi96k5o9j22w1y80qio8q18my");

                entity.HasIndex(e => e.UserId, "FKrb8wx8o6mb6noukdf3ue8goc9");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForAssessorModeratorApplicationId).HasColumnName("for_assessor_moderator_application_id");

                entity.Property(e => e.LearnershipId).HasColumnName("Learnership_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.ForAssessorModeratorApplication)
                    .WithMany(p => p.UserLearnerships)
                    .HasForeignKey(d => d.ForAssessorModeratorApplicationId)
                    .HasConstraintName("FKdi96k5o9j22w1y80qio8q18my");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.UserLearnerships)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FK5goxduhsdurhq2rf10eh4pm2m");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UserLearnerships)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKrb8wx8o6mb6noukdf3ue8goc9");
            });

            modelBuilder.Entity<UserLearnershipHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("user_learnership_hist");

                entity.HasIndex(e => e.Rev, "FKj2mhgldhc4ojdqwtyj9vovsm9");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForAssessorModeratorApplicationId).HasColumnName("for_assessor_moderator_application_id");

                entity.Property(e => e.LearnershipId).HasColumnName("Learnership_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.UserLearnershipHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKj2mhgldhc4ojdqwtyj9vovsm9");
            });

            modelBuilder.Entity<UserPermission>(entity =>
            {
                entity.ToTable("user_permissions");

                entity.HasIndex(e => e.UserId, "user_permissions_user_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.LegacySiteAllocation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_site_allocation")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.LegacySiteAllocationAlter)
                    .HasColumnType("bit(1)")
                    .HasColumnName("legacy_site_allocation_alter")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ProviderSuspension)
                    .HasColumnType("bit(1)")
                    .HasColumnName("provider_suspension")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ProviderSuspensionAlter)
                    .HasColumnType("bit(1)")
                    .HasColumnName("provider_suspension_alter")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UserPermissions)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKkowxl8b2bngrxd1gafh13005u");
            });

            modelBuilder.Entity<UserQualification>(entity =>
            {
                entity.ToTable("user_qualifications");

               // entity.HasIndex(e => e.QualificationTypeId, "FKdba9md3u9jieci9uhyu3942nl");

                entity.HasIndex(e => e.QualificationId, "FKgib0qr9jq6t2e2i2gigts3b15");

                entity.HasIndex(e => e.UpdateUserId, "FKlc25w3vjw9g4a82k4bw3gngej");

                entity.HasIndex(e => e.UserId, "FKlo3edp6k7tamaxwo0eyh4rtd");

                entity.HasIndex(e => e.ForAssessorModeratorApplicationId, "FKtedgt058d29oudskofb3o9g0s");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ExpirtyDate)
                    .HasColumnType("datetime")
                    .HasColumnName("expirty_date");

                entity.Property(e => e.ForAssessorModeratorApplicationId).HasColumnName("for_assessor_moderator_application_id");

               //entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

              //  entity.Property(e => e.QualificationTypeId).HasColumnName("qualification_type_id");

                entity.Property(e => e.QualificationUpdated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("qualification_updated")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");

                entity.Property(e => e.UpdateUserId).HasColumnName("update_user_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.ForAssessorModeratorApplication)
                    .WithMany(p => p.UserQualifications)
                    .HasForeignKey(d => d.ForAssessorModeratorApplicationId)
                    .HasConstraintName("FKtedgt058d29oudskofb3o9g0s");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.UserQualifications)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKgib0qr9jq6t2e2i2gigts3b15");

              /*  entity.HasOne(d => d.QualificationType)
                    .WithMany(p => p.UserQualifications)
                    .HasForeignKey(d => d.QualificationTypeId)
                    .HasConstraintName("FKdba9md3u9jieci9uhyu3942nl");*/

                entity.HasOne(d => d.UpdateUser)
                    .WithMany(p => p.UserQualificationUpdateUsers)
                    .HasForeignKey(d => d.UpdateUserId)
                    .HasConstraintName("FKlc25w3vjw9g4a82k4bw3gngej");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UserQualificationUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKlo3edp6k7tamaxwo0eyh4rtd");
            });

            modelBuilder.Entity<UserQualificationsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("user_qualifications_hist");

                entity.HasIndex(e => e.Rev, "FKqoomp98prgj94ncnq3ub4pd19");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ExpirtyDate)
                    .HasColumnType("datetime")
                    .HasColumnName("expirty_date");

                entity.Property(e => e.ForAssessorModeratorApplicationId).HasColumnName("for_assessor_moderator_application_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.QualificationTypeId).HasColumnName("qualification_type_id");

                entity.Property(e => e.QualificationUpdated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("qualification_updated")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");

                entity.Property(e => e.UpdateUserId).HasColumnName("update_user_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.UserQualificationsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKqoomp98prgj94ncnq3ub4pd19");
            });

            modelBuilder.Entity<UserResponsibility>(entity =>
            {
                entity.ToTable("user_responsibility");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.ForProcess).HasColumnName("for_process");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<UserSkillsProgramme>(entity =>
            {
                entity.ToTable("user_skills_programme");

                entity.HasIndex(e => e.SkillsProgramId, "FK9lfpxjkou7c02x69swtassvxv");

                entity.HasIndex(e => e.ForAssessorModeratorApplicationId, "FKa5gppc76w6ax1foooajev020v");

                entity.HasIndex(e => e.UserId, "FKrenv6ix6m7q1h078fubapt67e");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForAssessorModeratorApplicationId).HasColumnName("for_assessor_moderator_application_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.ForAssessorModeratorApplication)
                    .WithMany(p => p.UserSkillsProgrammes)
                    .HasForeignKey(d => d.ForAssessorModeratorApplicationId)
                    .HasConstraintName("FKa5gppc76w6ax1foooajev020v");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.UserSkillsProgrammes)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FK9lfpxjkou7c02x69swtassvxv");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UserSkillsProgrammes)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKrenv6ix6m7q1h078fubapt67e");
            });

            modelBuilder.Entity<UserSkillsProgrammeHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("user_skills_programme_hist");

                entity.HasIndex(e => e.Rev, "FK2989y3kpk0gwibi4bbeelw6ye");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForAssessorModeratorApplicationId).HasColumnName("for_assessor_moderator_application_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.UserSkillsProgrammeHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK2989y3kpk0gwibi4bbeelw6ye");
            });

            modelBuilder.Entity<UserUnitStandard>(entity =>
            {
                entity.ToTable("user_unit_standard");

                entity.HasIndex(e => e.UnitStandardId, "FK4a5l4ixejqg27wkpkh6v5gwdx");

                entity.HasIndex(e => e.ForQualificationId, "FKdw3uph2fcig0agdh9eq9bvpkg");

                entity.HasIndex(e => e.ForAssessorModeratorApplicationId, "FKey1jttds4unq7o1avybo39383");

                entity.HasIndex(e => e.UserId, "FKoq6vp6ma1jtyo08ak943xd8jc");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForAssessorModeratorApplicationId).HasColumnName("for_assessor_moderator_application_id");

                entity.Property(e => e.ForQualificationId).HasColumnName("for_qualification_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.ForAssessorModeratorApplication)
                    .WithMany(p => p.UserUnitStandards)
                    .HasForeignKey(d => d.ForAssessorModeratorApplicationId)
                    .HasConstraintName("FKey1jttds4unq7o1avybo39383");

                entity.HasOne(d => d.ForQualification)
                    .WithMany(p => p.UserUnitStandards)
                    .HasForeignKey(d => d.ForQualificationId)
                    .HasConstraintName("FKdw3uph2fcig0agdh9eq9bvpkg");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.UserUnitStandards)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FK4a5l4ixejqg27wkpkh6v5gwdx");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UserUnitStandards)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKoq6vp6ma1jtyo08ak943xd8jc");
            });

            modelBuilder.Entity<UserUnitStandardHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("user_unit_standard_hist");

                entity.HasIndex(e => e.Rev, "FKcg2oyrbaqbypipjwfguiyinuq");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ForAssessorModeratorApplicationId).HasColumnName("for_assessor_moderator_application_id");

                entity.Property(e => e.ForQualificationId).HasColumnName("for_qualification_id");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.UserUnitStandardHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKcg2oyrbaqbypipjwfguiyinuq");
            });

            modelBuilder.Entity<UsersDisability>(entity =>
            {
                entity.ToTable("users_disability");

                entity.HasIndex(e => e.DisabilityRatingId, "FK36t7cd4da1yg28kf22tm87piu");

                entity.HasIndex(e => e.UserId, "FK8pxa3gqy2xum9phxkqt49cv2j");

                entity.HasIndex(e => e.DisabilityStatus, "FKkvga4xm4fi90agcmuiyduxwq7");

                entity.HasIndex(e => e.UpdateUserId, "FKqy2b0sn2ptt7jmx5fx5whalp7");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DisabilityRatingId).HasColumnName("disability_rating_id");

                entity.Property(e => e.DisabilityStatus).HasColumnName("disabilityStatus");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");

                entity.Property(e => e.UpdateUserId).HasColumnName("update_user_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.DisabilityRating)
                    .WithMany(p => p.UsersDisabilities)
                    .HasForeignKey(d => d.DisabilityRatingId)
                    .HasConstraintName("FK36t7cd4da1yg28kf22tm87piu");

                entity.HasOne(d => d.DisabilityStatusNavigation)
                    .WithMany(p => p.UsersDisabilities)
                    .HasForeignKey(d => d.DisabilityStatus)
                    .HasConstraintName("FKkvga4xm4fi90agcmuiyduxwq7");

                entity.HasOne(d => d.UpdateUser)
                    .WithMany(p => p.UsersDisabilityUpdateUsers)
                    .HasForeignKey(d => d.UpdateUserId)
                    .HasConstraintName("FKqy2b0sn2ptt7jmx5fx5whalp7");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UsersDisabilityUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK8pxa3gqy2xum9phxkqt49cv2j");
            });

            modelBuilder.Entity<UsersDisabilityAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("users_disability_AUD");

                entity.HasIndex(e => e.Rev, "FKeml1ljjk7xrbn8lnopx3jntcr");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.DisabilityRatingId).HasColumnName("disability_rating_id");

                entity.Property(e => e.DisabilityStatus).HasColumnName("disabilityStatus");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.UsersDisabilityAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKeml1ljjk7xrbn8lnopx3jntcr");
            });

            modelBuilder.Entity<UsersDisabilityHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("users_disability_hist");

                entity.HasIndex(e => e.Rev, "FK6ufnk2lparmmo0d4sdqg9u5pi");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DisabilityRatingId).HasColumnName("disability_rating_id");

                entity.Property(e => e.DisabilityStatus).HasColumnName("disabilityStatus");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");

                entity.Property(e => e.UpdateUserId).HasColumnName("update_user_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.UsersDisabilityHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK6ufnk2lparmmo0d4sdqg9u5pi");
            });

            modelBuilder.Entity<UsersHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("users_hist");

                entity.HasIndex(e => e.Rev, "FK8mojd0q14ur9ayjvmt5al7o9y");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AcceptPopi)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept_popi")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AcceptPopiDate)
                    .HasColumnType("datetime")
                    .HasColumnName("accept_popi_date");

                entity.Property(e => e.Active)
                    .HasColumnType("bit(1)")
                    .HasColumnName("active");

                entity.Property(e => e.AddAssessment)
                    .HasColumnType("bit(1)")
                    .HasColumnName("add_assessment")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Admin)
                    .HasColumnType("bit(1)")
                    .HasColumnName("admin")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AlloocateDg)
                    .HasColumnType("bit(1)")
                    .HasColumnName("alloocate_dg")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.AlterLegacyApplications)
                    .HasColumnType("bit(1)")
                    .HasColumnName("alter_legacy_applications")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.Approved)
                    .HasColumnType("bit(1)")
                    .HasColumnName("approved")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.BirthAddressId).HasColumnName("birth_address_id");

                entity.Property(e => e.BirthTownId).HasColumnName("birth_town_id");

                entity.Property(e => e.CellNumber)
                    .HasMaxLength(20)
                    .HasColumnName("cell_number");

                entity.Property(e => e.CitizenResidentStatus)
                    .HasMaxLength(100)
                    .HasColumnName("citizen_Resident_Status");

                entity.Property(e => e.CitizenResidentStatus1)
                    .HasMaxLength(100)
                    .HasColumnName("citizenResidentStatus");

                entity.Property(e => e.CompanyRegisterReport)
                    .HasColumnType("bit(1)")
                    .HasColumnName("company_register_report")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ConfirmExpireDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirm_expire_date");

                entity.Property(e => e.CoursewareDistroSub)
                    .HasColumnType("bit(1)")
                    .HasColumnName("courseware_distro_sub")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DataExtracts)
                    .HasColumnType("bit(1)")
                    .HasColumnName("data_extracts")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.DateOfBirth)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_birth");

                entity.Property(e => e.DateStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("date_stamp");

                entity.Property(e => e.Datestamp1)
                    .HasColumnType("datetime")
                    .HasColumnName("datestamp");

                entity.Property(e => e.DgContractingBulkApproval)
                    .HasColumnType("bit(1)")
                    .HasColumnName("dg_contracting_bulk_approval")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.DgVerificationReport)
                    .HasColumnType("bit(1)")
                    .HasColumnName("dg_verification_report")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Disability).HasColumnName("disability");

                entity.Property(e => e.DisabilityRatingId).HasColumnName("disability_rating_id");

                entity.Property(e => e.DisabilityStatus).HasColumnName("disabilityStatus");

                entity.Property(e => e.DisabledId).HasColumnName("disabled_id");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");

                entity.Property(e => e.EmailConfirmDate)
                    .HasColumnType("datetime")
                    .HasColumnName("email_confirm_date");

                entity.Property(e => e.EmailGuid)
                    .HasMaxLength(100)
                    .HasColumnName("email_guid");

                entity.Property(e => e.EmploymentStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("employment_start_date");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.Finance)
                    .HasColumnType("bit(1)")
                    .HasColumnName("finance")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.FirstNameAltered)
                    .HasMaxLength(100)
                    .HasColumnName("first_name_altered");

                entity.Property(e => e.FirstNameOrginal)
                    .HasMaxLength(100)
                    .HasColumnName("first_name_orginal");

                entity.Property(e => e.FundingWindow)
                    .HasColumnType("bit(1)")
                    .HasColumnName("funding_window")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.GenerateCertificates)
                    .HasColumnType("bit(1)")
                    .HasColumnName("generate_certificates")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.GpBankingDetails)
                    .HasColumnType("bit(1)")
                    .HasColumnName("gp_banking_details")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.GpTransactionsManagement)
                    .HasColumnType("bit(1)")
                    .HasColumnName("gp_transactions_management")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.GrantTrendAnylsis)
                    .HasColumnType("bit(1)")
                    .HasColumnName("grant_trend_anylsis")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.HoldingRoom)
                    .HasColumnType("bit(1)")
                    .HasColumnName("holding_room")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.HomeLanguage).HasColumnName("home_language");

                entity.Property(e => e.IdType).HasColumnName("id_type");

                entity.Property(e => e.IosAndroid)
                    .HasMaxLength(1)
                    .HasColumnName("ios_android");

                entity.Property(e => e.LastChgUserId).HasColumnName("last_chg_user_id");

                entity.Property(e => e.LastLogin)
                    .HasColumnType("datetime")
                    .HasColumnName("last_login");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.LastSchoolYear)
                    .HasColumnType("datetime")
                    .HasColumnName("last_school_year");

                entity.Property(e => e.LearnerReviewMember)
                    .HasColumnType("bit(1)")
                    .HasColumnName("learner_review_member")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.LearnerSubmissionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("learner_submission_date");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.Learnersubmissiondate1)
                    .HasColumnType("datetime")
                    .HasColumnName("learnersubmissiondate");

                entity.Property(e => e.LegalGaurdianId).HasColumnName("legal_gaurdian_id");

                entity.Property(e => e.LevyDetailMgTransactions)
                    .HasColumnType("bit(1)")
                    .HasColumnName("levy_detail_mg_transactions")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MaidenName)
                    .HasMaxLength(100)
                    .HasColumnName("maiden_name");

                entity.Property(e => e.MancoGrantApproval)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manco_grant_approval")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MancoMember)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manco_member")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Maried).HasColumnName("maried");

                entity.Property(e => e.MaritalStatusId).HasColumnName("marital_status_id");

                entity.Property(e => e.MgVerificationReport)
                    .HasColumnType("bit(1)")
                    .HasColumnName("mg_verification_report")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(100)
                    .HasColumnName("middle_name");

                entity.Property(e => e.MiddleNameAltered)
                    .HasMaxLength(100)
                    .HasColumnName("middle_name_altered");

                entity.Property(e => e.MiddleNameOrginal)
                    .HasMaxLength(100)
                    .HasColumnName("middle_name_orginal");

                entity.Property(e => e.MoaRegisterAccess)
                    .HasColumnType("bit(1)")
                    .HasColumnName("moa_register_access")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.NationalityId).HasColumnName("nationality_id");

                entity.Property(e => e.NextOfKinName)
                    .HasMaxLength(100)
                    .HasColumnName("next_of_kin_name");

                entity.Property(e => e.NextOfKinTelephone)
                    .HasMaxLength(20)
                    .HasColumnName("next_of_kin_telephone");

                entity.Property(e => e.Nextofkinname1)
                    .HasMaxLength(100)
                    .HasColumnName("nextofkinname");

                entity.Property(e => e.Nextofkintelephone1)
                    .HasMaxLength(20)
                    .HasColumnName("nextofkintelephone");

                entity.Property(e => e.NsdpReportConfig)
                    .HasColumnType("bit(1)")
                    .HasColumnName("nsdp_report_config")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NsdpReportEdit)
                    .HasColumnType("bit(1)")
                    .HasColumnName("nsdp_report_edit")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NsdpReportView)
                    .HasColumnType("bit(1)")
                    .HasColumnName("nsdp_report_view")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.OfficeId).HasColumnName("office_id");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OrganisedLabourUnionMembershipId).HasColumnName("organised_labour_union_membership_id");

                entity.Property(e => e.PartOfUnion).HasColumnName("part_of_union");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(30)
                    .HasColumnName("passport_number");

                entity.Property(e => e.Password)
                    .HasMaxLength(1000)
                    .HasColumnName("password");

                entity.Property(e => e.PhoneId)
                    .HasMaxLength(100)
                    .HasColumnName("phone_id");

                entity.Property(e => e.PostalAddressId).HasColumnName("postal_address_id");

                entity.Property(e => e.PreviousSchools).HasColumnName("previous_schools");

                entity.Property(e => e.PrimaryEmailAddress1)
                    .HasMaxLength(100)
                    .HasColumnName("primary_email_address");

                entity.Property(e => e.Primaryemailaddress)
                    .HasMaxLength(100)
                    .HasColumnName("primaryemailaddress");

                entity.Property(e => e.PrioirtySkillsReport)
                    .HasColumnType("bit(1)")
                    .HasColumnName("prioirty_skills_report")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ProcessAssessorModApplication)
                    .HasColumnType("bit(1)")
                    .HasColumnName("process_assessor_mod_application")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ProfileImageId).HasColumnName("profile_image_id");

                entity.Property(e => e.ProjectCreation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("project_creation")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ProjectTermination)
                    .HasColumnType("bit(1)")
                    .HasColumnName("project_termination")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Province)
                    .HasMaxLength(50)
                    .HasColumnName("province");

                entity.Property(e => e.QmrAccess)
                    .HasColumnType("bit(1)")
                    .HasColumnName("qmr_access")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.QualWorkplaceAssignment)
                    .HasColumnType("bit(1)")
                    .HasColumnName("qual_workplace_assignment")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.RecieveEmailTaskNotification)
                    .HasColumnType("bit(1)")
                    .HasColumnName("recieve_email_task_notification")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.RegisterLearner)
                    .HasColumnType("bit(1)")
                    .HasColumnName("register_learner")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.RegistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("registration_date");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.ReviewCommitteeMember)
                    .HasColumnType("bit(1)")
                    .HasColumnName("review_committee_member")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.RsaCitizenType).HasColumnName("rsa_citizen_type");

                entity.Property(e => e.RsaIdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("rsa_id_number");

                entity.Property(e => e.SarsLevyDetailCalc)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sars_levy_detail_calc")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SarsLevyMandInvoicesUpdate)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sars_levy_mand_invoices_update")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SecondaryEmailAddress1)
                    .HasMaxLength(100)
                    .HasColumnName("secondary_email_address");

                entity.Property(e => e.Secondaryemailaddress)
                    .HasMaxLength(100)
                    .HasColumnName("secondaryemailaddress");

                entity.Property(e => e.SspReporting)
                    .HasColumnType("bit(1)")
                    .HasColumnName("ssp_reporting")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.StrategicPriorities)
                    .HasColumnType("bit(1)")
                    .HasColumnName("strategic_priorities")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SuperAdmin)
                    .HasColumnType("bit(1)")
                    .HasColumnName("super_admin")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TaskReporting)
                    .HasColumnType("bit(1)")
                    .HasColumnName("task_reporting")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TempRasIdOrPassportNumber)
                    .HasMaxLength(30)
                    .HasColumnName("temp_ras_id_or_passport_number");

                entity.Property(e => e.TempReporting)
                    .HasColumnType("bit(1)")
                    .HasColumnName("temp_reporting")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TitleId).HasColumnName("title_id");

                entity.Property(e => e.UndertakenLearningProgramBefore).HasColumnName("undertaken_learning_program_before");

                entity.Property(e => e.UnionMembershipId).HasColumnName("union_membership_id");

                entity.Property(e => e.UploadData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("upload_data")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.UrbanRuralEnum).HasColumnName("urban_rural_enum");

                entity.Property(e => e.Username)
                    .HasMaxLength(100)
                    .HasColumnName("username");

                entity.Property(e => e.ValidiationRanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("validiation_ran_date");

                entity.Property(e => e.ViewBugs)
                    .HasColumnType("bit(1)")
                    .HasColumnName("view_bugs")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ViewExtensionRequest)
                    .HasColumnType("bit(1)")
                    .HasColumnName("view_extension_request")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ViewUploadData)
                    .HasColumnType("bit(1)")
                    .HasColumnName("view_upload_data")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.WithdrawContracts)
                    .HasColumnType("bit(1)")
                    .HasColumnName("withdraw_contracts")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.WorkContactNumber)
                    .HasMaxLength(20)
                    .HasColumnName("work_contact_number");

                entity.Property(e => e.WspManagment)
                    .HasColumnType("bit(1)")
                    .HasColumnName("wsp_managment")
                    .HasDefaultValueSql("b'0'");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.UsersHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK8mojd0q14ur9ayjvmt5al7o9y");
            });

            modelBuilder.Entity<UsersLanguage>(entity =>
            {
                entity.ToTable("users_language");

                entity.HasIndex(e => e.UserId, "FK5hihesktqsx37uytrb6i3iwoo");

                entity.HasIndex(e => e.ReadId, "FK5upt8q7dp5c621kamajibi6fm");

                entity.HasIndex(e => e.SpearkId, "FK93kr3d7k7yfnk97w7evhaix6");

                entity.HasIndex(e => e.UpdateUserId, "FKbpdb8rq4kldy23f9lvg1j7s51");

                entity.HasIndex(e => e.WriteId, "FKgju55nxte9lh1eeevb7qu0nrv");

                entity.HasIndex(e => e.LanguageId, "FKhkjch11vda87wg8hgl3aros07");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HomeLanguage)
                    .HasColumnType("bit(1)")
                    .HasColumnName("home_language");

                entity.Property(e => e.LanguageId).HasColumnName("language_id");

                entity.Property(e => e.ReadId).HasColumnName("read_id");

                entity.Property(e => e.SpearkId).HasColumnName("speak_id");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");

                entity.Property(e => e.UpdateUserId).HasColumnName("update_user_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WriteId).HasColumnName("write_id");

                entity.HasOne(d => d.Language)
                    .WithMany(p => p.UsersLanguages)
                    .HasForeignKey(d => d.LanguageId)
                    .HasConstraintName("FKhkjch11vda87wg8hgl3aros07");

                entity.HasOne(d => d.Read)
                    .WithMany(p => p.UsersLanguageReads)
                    .HasForeignKey(d => d.ReadId)
                    .HasConstraintName("FK5upt8q7dp5c621kamajibi6fm");

                entity.HasOne(d => d.Speark)
                    .WithMany(p => p.UsersLanguageSpearks)
                    .HasForeignKey(d => d.SpearkId)
                    .HasConstraintName("FK93kr3d7k7yfnk97w7evhaix6");

                entity.HasOne(d => d.UpdateUser)
                    .WithMany(p => p.UsersLanguageUpdateUsers)
                    .HasForeignKey(d => d.UpdateUserId)
                    .HasConstraintName("FKbpdb8rq4kldy23f9lvg1j7s51");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UsersLanguageUsers)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK5hihesktqsx37uytrb6i3iwoo");

                entity.HasOne(d => d.Write)
                    .WithMany(p => p.UsersLanguageWrites)
                    .HasForeignKey(d => d.WriteId)
                    .HasConstraintName("FKgju55nxte9lh1eeevb7qu0nrv");
            });

            modelBuilder.Entity<UsersLanguageHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("users_language_hist");

                entity.HasIndex(e => e.Rev, "FKkddxjtdtvch7oyjmvwebmuv8u");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HomeLanguage)
                    .HasColumnType("bit(1)")
                    .HasColumnName("home_language");

                entity.Property(e => e.LanguageId).HasColumnName("language_id");

                entity.Property(e => e.ReadId).HasColumnName("read_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SpearkId).HasColumnName("speark_id");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");

                entity.Property(e => e.UpdateUserId).HasColumnName("update_user_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WriteId).HasColumnName("write_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.UsersLanguageHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKkddxjtdtvch7oyjmvwebmuv8u");
            });

            modelBuilder.Entity<UsersResponsibilitiesHistory>(entity =>
            {
                entity.ToTable("users_responsibilities_history");

                entity.HasIndex(e => e.UserResponsibilityId, "FK7j1ic4lfyif85lkdiq11ad4iw");

                entity.HasIndex(e => e.CompanyUsersId, "FKstbnvpsylmcow9l5n6d1u59y7");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyUsersId).HasColumnName("company_users_id");

                entity.Property(e => e.UserResponsibilityId).HasColumnName("user_responsibility_id");

                entity.HasOne(d => d.CompanyUsers)
                    .WithMany(p => p.UsersResponsibilitiesHistories)
                    .HasForeignKey(d => d.CompanyUsersId)
                    .HasConstraintName("FKstbnvpsylmcow9l5n6d1u59y7");

                entity.HasOne(d => d.UserResponsibility)
                    .WithMany(p => p.UsersResponsibilitiesHistories)
                    .HasForeignKey(d => d.UserResponsibilityId)
                    .HasConstraintName("FK7j1ic4lfyif85lkdiq11ad4iw");
            });

            modelBuilder.Entity<UsersResponsibility>(entity =>
            {
                entity.ToTable("users_responsibilities");

                entity.HasIndex(e => e.UserResponsibilityId, "FK1gb36mf62xv1q3945e6ctssgv");

                entity.HasIndex(e => e.CompanyUsersId, "FK7w3743g0wpk3gue54ck4f6jfb");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyUsersId).HasColumnName("company_users_id");

                entity.Property(e => e.UserResponsibilityId).HasColumnName("user_responsibility_id");

                entity.HasOne(d => d.CompanyUsers)
                    .WithMany(p => p.UsersResponsibilities)
                    .HasForeignKey(d => d.CompanyUsersId)
                    .HasConstraintName("FK7w3743g0wpk3gue54ck4f6jfb");

                entity.HasOne(d => d.UserResponsibility)
                    .WithMany(p => p.UsersResponsibilities)
                    .HasForeignKey(d => d.UserResponsibilityId)
                    .HasConstraintName("FK1gb36mf62xv1q3945e6ctssgv");
            });

            modelBuilder.Entity<UsersRole>(entity =>
            {
                entity.ToTable("users_role");

                entity.HasIndex(e => e.ProcessRolesId, "FKefjt921hwld4pl479vjim5mxx");

                entity.HasIndex(e => e.UsersId, "FKiu0xsee0dmwa28nffgyf4bcvc");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.ProcessRolesId).HasColumnName("process_roles_id");

                entity.Property(e => e.UsersId).HasColumnName("users_id");

                entity.HasOne(d => d.ProcessRoles)
                    .WithMany(p => p.UsersRoles)
                    .HasForeignKey(d => d.ProcessRolesId)
                    .HasConstraintName("FKefjt921hwld4pl479vjim5mxx");

                entity.HasOne(d => d.Users)
                    .WithMany(p => p.UsersRoles)
                    .HasForeignKey(d => d.UsersId)
                    .HasConstraintName("FKiu0xsee0dmwa28nffgyf4bcvc");
            });

            modelBuilder.Entity<UsersTrainingProvider>(entity =>
            {
                entity.ToTable("users_training_provider");

                entity.HasIndex(e => e.CompanyId, "FKdd79u7q7x6h4hx91422x3h0td");

                entity.HasIndex(e => e.UserId, "FKsri8inj4kcsruqm6o9rdgbmu5");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.InterventionStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("intervention_start_date");

                entity.Property(e => e.RegistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("registration_date");

                entity.Property(e => e.TrainingDescription)
                    .HasMaxLength(250)
                    .HasColumnName("training_description");

                entity.Property(e => e.TrainingDurationDescription)
                    .HasMaxLength(250)
                    .HasColumnName("training_duration_description");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.UsersTrainingProviders)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKdd79u7q7x6h4hx91422x3h0td");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UsersTrainingProviders)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKsri8inj4kcsruqm6o9rdgbmu5");
            });

            modelBuilder.Entity<UsersType>(entity =>
            {
                entity.ToTable("users_type");

                entity.HasIndex(e => e.UserId, "FKp50m3kdr57obxfp3jjl9x8c19");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.TypeOfUser).HasColumnName("type_of_user");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UsersTypes)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKp50m3kdr57obxfp3jjl9x8c19");
            });

            modelBuilder.Entity<VacancyReason>(entity =>
            {
                entity.ToTable("vacancy_reasons");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<Validity>(entity =>
            {
                entity.ToTable("validity");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<WalkingRating>(entity =>
            {
                entity.ToTable("walking_rating");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<WithdrawReason>(entity =>
            {
                entity.ToTable("withdraw_reasons");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.ForClo)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_clo");

                entity.Property(e => e.ForCrm)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_crm");

                entity.Property(e => e.ForExecutive)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_executive");

                entity.Property(e => e.ForManager)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_manager");

                entity.Property(e => e.ForProcess).HasColumnName("for_process");

                entity.Property(e => e.ForSeniorManager)
                    .HasColumnType("bit(1)")
                    .HasColumnName("for_senior_manager");

                entity.Property(e => e.HowTo)
                    .HasMaxLength(500)
                    .HasColumnName("how_to");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.SoftDeleted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_deleted")
                    .HasDefaultValueSql("b'0'");
            });

            modelBuilder.Entity<WithdrawReasonMultipleSelection>(entity =>
            {
                entity.ToTable("withdraw_reason_multiple_selection");

                entity.HasIndex(e => e.WithdrawReasonId, "FK1ej58r1gbxwovq6nuj58gfmvw");

                entity.HasIndex(e => e.CreateUserId, "FK5ensqncq6sxi1r9i02jt9x4vt");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdditionalInformation)
                    .HasMaxLength(1000)
                    .HasColumnName("additional_information");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.ForProcess).HasColumnName("for_process");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TaskId).HasColumnName("task_id");

                entity.Property(e => e.WithdrawReasonId).HasColumnName("withdraw_reason_id");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.WithdrawReasonMultipleSelections)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FK5ensqncq6sxi1r9i02jt9x4vt");

                entity.HasOne(d => d.WithdrawReason)
                    .WithMany(p => p.WithdrawReasonMultipleSelections)
                    .HasForeignKey(d => d.WithdrawReasonId)
                    .HasConstraintName("FK1ej58r1gbxwovq6nuj58gfmvw");
            });

            modelBuilder.Entity<WithdrawReasonMultipleSelectionHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("withdraw_reason_multiple_selection_hist");

                entity.HasIndex(e => e.Rev, "FK3ngrjksk5u9ggxvimoutrgtln");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AdditionalInformation)
                    .HasMaxLength(1000)
                    .HasColumnName("additional_information");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.ForProcess).HasColumnName("for_process");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TaskId).HasColumnName("task_id");

                entity.Property(e => e.WithdrawReasonId).HasColumnName("withdraw_reason_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WithdrawReasonMultipleSelectionHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK3ngrjksk5u9ggxvimoutrgtln");
            });

            modelBuilder.Entity<WorkPlaceApproval>(entity =>
            {
                entity.ToTable("work_place_approval");

                entity.HasIndex(e => e.EffectiveRecord, "FK22vnkhlxs757o89bv0qljdo9x");

                entity.HasIndex(e => e.WorkplaceCoverTradeOrQualificationSdf, "FK2bm3rjokx1ael7uyfiklsl7wu");

                entity.HasIndex(e => e.LegacyEmployerWa2WorkplaceId, "FK2i6e9peq7ohi48biouk0pjk27");

                entity.HasIndex(e => e.SuitableQualifiedMentor, "FK33pgv0kpbnhl83gl8aicowivm");

                entity.HasIndex(e => e.PretectiveWear, "FK37r898tuaiqw0daq4qpg375ak");

                entity.HasIndex(e => e.CommittedOhsaOrMhsaCompliant, "FK3usxdav4eh61ck4skkn40aix8");

                entity.HasIndex(e => e.RecordKeepingSystem, "FK4cf9wxytkfkfnwq82etetegh8");

                entity.HasIndex(e => e.TaxClearanceCertificate, "FK4dvhfatfnus2e5p98dtfcchg0");

                entity.HasIndex(e => e.FormalAgreementAprrovedWorkpalces, "FK4t4f3t389my3wum7gyqj87ls1");

                entity.HasIndex(e => e.IdentifiedCommittedStaff, "FK57j643kbe0x0yxaienrcihcqg");

                entity.HasIndex(e => e.RelevantCoreWork, "FK62n7l2hmg7bwwyidndth1xl96");

                entity.HasIndex(e => e.CompanyId, "FK6hji5k66hp2tf6bvy06ae04k7");

                entity.HasIndex(e => e.AllToolsAvailableSdf, "FK73fc88f96tfdqqdiys73rkxh");

                entity.HasIndex(e => e.IdentifiedCommittedStaffSdf, "FK78ahf3yuur6s8cogi2w13d3db");

                entity.HasIndex(e => e.AbilityToCoverEntireScope, "FK859xyc0bmy9qk7e7f2mcm9djg");

                entity.HasIndex(e => e.OfoCodesId, "FK8cbj7w2ddibl07vf3k1tgls12");

                entity.HasIndex(e => e.CommittedOhsaOrMhsaCompliantSdf, "FK8ryn50ws6iracy02upjgn7bit");

                entity.HasIndex(e => e.ReviewUserId, "FK9356hri1bry5al6qgv9407xac");

                entity.HasIndex(e => e.ApprovedBySeta, "FK9as4jdngkyw9n5s7py9qhr5ed");

                entity.HasIndex(e => e.RelevantLearnerRatio, "FK9kl3a8x8tvpsc2ed16b97cgx8");

                entity.HasIndex(e => e.QualifiedMentorsForTrade, "FK9muj2a4afpfii6bgs1rq0gdap");

                entity.HasIndex(e => e.NewApplication, "FK9v40hkuv35kcysb840p9xvklw");

                entity.HasIndex(e => e.RecordKeepingSystemSdf, "FKa247uxk0f0in9y2vbkf7cwrt1");

                entity.HasIndex(e => e.DeclarationFromEmployer, "FKahvtkjuyiueewg3njy9ou7i33");

                entity.HasIndex(e => e.PreviouslyApproved, "FKanxamdxm6jixo0ga2eadeer8n");

                entity.HasIndex(e => e.MandatoryGrantId, "FKapmda0uvjlyqb2avj0cr25bk");

                entity.HasIndex(e => e.PretectiveWearSdf, "FKbixkos5r9d9du34pmr8b7pgbg");

                entity.HasIndex(e => e.OhsaMhsaCompliant, "FKbrky4djlhuc0h3n7oxki0jnk2");

                entity.HasIndex(e => e.AccessToMaterialSdf, "FKchel7ryaa3deumy6spbhgbb4t");

                entity.HasIndex(e => e.QualificationId, "FKcnur5h28mflpvhf6exstxcmr6");

                entity.HasIndex(e => e.StructuredImplementationPlan, "FKdvrtlkad1hpq6qn80ck3c8yi4");

                entity.HasIndex(e => e.AllToolsAvailable, "FKe0ll1xe4t9mwob7asmdtl3ydy");

                entity.HasIndex(e => e.HealthSafetyOfficer, "FKe6pum2imxk0qke6xh8a4ra3qn");

                entity.HasIndex(e => e.EvidenceAttachedOfPrevios, "FKgwj6ryjffmdhitln7yweo7npm");

                entity.HasIndex(e => e.CopyOfSelfEvaluation, "FKh1wfgtg7oyr0hr8cuilhw7d41");

                entity.HasIndex(e => e.LetterOfCommitment, "FKhc6lkfbhgil0ct7ieb6emsd9n");

                entity.HasIndex(e => e.DeclarationIndicationCommitment, "FKi8olrp7chyd2h04gndpmowhsi");

                entity.HasIndex(e => e.WorkplaceCoverTradeOrQualification, "FKidh7347rsosb5gu3e3k9g9r5y");

                entity.HasIndex(e => e.SkillsProgramId, "FKidocmw7phlkcs4govtn3alda6");

                entity.HasIndex(e => e.WorkplaceAbleToCoverScope, "FKigtgoipv5jw6pxvqsxvico3nf");

                entity.HasIndex(e => e.LayoutEnvironmentSafe, "FKij7rg478g9ogpxspoxkw3oh4q");

                entity.HasIndex(e => e.ExtensionOfScope, "FKiqbyc256qpkws8irhacn9nk4c");

                entity.HasIndex(e => e.StructuredImplementationPlanSdf, "FKjs1lvjpx466f85f4ytnb4ntdj");

                entity.HasIndex(e => e.FormalAgreementWithOtherSdf, "FKk4ggyfjkbyq0m07akea325kv3");

                entity.HasIndex(e => e.CommittedtoBecompliantRelevantLegislationApplicableSdf, "FKkga52b8a0kqdsw3j04telktr7");

                entity.HasIndex(e => e.FormalAgreementWithOther, "FKkubr14d4cckps5lao8eqi3ist");

                entity.HasIndex(e => e.MentorArtisanRationAcceptable, "FKme9g2yqj1mu07wt9aenwj01uo");

                entity.HasIndex(e => e.SuitableQualifiedMentors, "FKmjvayuytlyhu5t4lekul0uwfy");

                entity.HasIndex(e => e.AsPerSkillsArea, "FKnb0ouaehmg1g99kk8xnk6mwmx");

                entity.HasIndex(e => e.QualifiedMentorsForTradeSdf, "FKoc4fbneux6hguoe161a5cfiub");

                entity.HasIndex(e => e.SitesId, "FKojp9ntoe4n9apvovbtpevo4ke");

                entity.HasIndex(e => e.LayoutEnvironmentSafeSdf, "FKokm3f20s5fqo0uo4nom4egw90");

                entity.HasIndex(e => e.WorkplaceLayout, "FKowrf5ppp659bj8kch4iedp47s");

                entity.HasIndex(e => e.SkillsSetId, "FKp5knatwl0acw7vfrpt6dt2k1j");

                entity.HasIndex(e => e.UnitstandardId, "FKpiau1cbvv3fcr28murmm0cp7");

                entity.HasIndex(e => e.MentorArtisanRationAcceptableSdf, "FKpplfbj9af0ncgenybsnxmm230");

                entity.HasIndex(e => e.AccessMaterialConsumable, "FKpq2wy4ym1qe1mywrf0puwol5l");

                entity.HasIndex(e => e.LearnershipId, "FKrgotf3eslcd59fgnv1vyl8lky");

                entity.HasIndex(e => e.AccessToMaterial, "FKs6a4uml4wmu4949q3if0nba2k");

                entity.HasIndex(e => e.CommittedtoBecompliantRelevantLegislationApplicable, "FKsbfadkmcg8kxhf247jiqeb46s");

                entity.HasIndex(e => e.AccessCover, "FKsqjmtv8ql722m7rm2fe8vcxdm");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AbilityToCoverEntireScope).HasColumnName("ability_to_cover_entire_scope");

                entity.Property(e => e.AccessCover).HasColumnName("access_cover");

                entity.Property(e => e.AccessMaterialConsumable).HasColumnName("access_material_consumable");

                entity.Property(e => e.AccessToMaterial).HasColumnName("access_to_material");

                entity.Property(e => e.AccessToMaterialSdf).HasColumnName("accessToMaterial_sdf");

                entity.Property(e => e.AllToolsAvailable).HasColumnName("all_tools_available");

                entity.Property(e => e.AllToolsAvailableSdf).HasColumnName("all_tools_available_sdf");

                entity.Property(e => e.AmendmentsRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("amendments_required");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.ApprovalReviewDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_review_date");

                entity.Property(e => e.ApprovedBySeta).HasColumnName("approved_by_seta");

                entity.Property(e => e.AsPerSkillsArea).HasColumnName("as_per_skills_area");

                entity.Property(e => e.CloRecommendation).HasColumnName("clo_recommendation");

                entity.Property(e => e.CommittedOhsaOrMhsaCompliant).HasColumnName("committed_ohsa_or_mhsa_compliant");

                entity.Property(e => e.CommittedOhsaOrMhsaCompliantSdf).HasColumnName("committed_ohsa_or_mhsa_compliant_sdf");

                entity.Property(e => e.CommittedtoBecompliantRelevantLegislationApplicable).HasColumnName("committedto_becompliant_relevant_legislation_applicable");

                entity.Property(e => e.CommittedtoBecompliantRelevantLegislationApplicableSdf).HasColumnName("committedto_becompliant_relevant_legislation_applicable_sdf");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CopyOfSelfEvaluation).HasColumnName("copy_of_self_evaluation");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateCaptured)
                    .HasColumnType("datetime")
                    .HasColumnName("date_captured");

                entity.Property(e => e.DateForVisitProvided)
                    .HasColumnType("bit(1)")
                    .HasColumnName("date_for_visit_provided");

                entity.Property(e => e.DeclarationFromEmployer).HasColumnName("declaration_from_employer");

                entity.Property(e => e.DeclarationIndicationCommitment).HasColumnName("declaration_indication_commitment");

                entity.Property(e => e.EffectiveRecord).HasColumnName("effective_record");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("end_date");

                entity.Property(e => e.EnsureExplanation).HasColumnName("ensure_explanation");

                entity.Property(e => e.EvidenceAttachedOfPrevios).HasColumnName("evidence_attached_of_previos");

                entity.Property(e => e.ExtensionOfScope).HasColumnName("extension_of_scope");

                entity.Property(e => e.FormalAgreementAprrovedWorkpalces).HasColumnName("formal_agreement_aprroved_workpalces");

                entity.Property(e => e.FormalAgreementWithOther).HasColumnName("formal_agreement_with_other");

                entity.Property(e => e.FormalAgreementWithOtherSdf).HasColumnName("formal_agreement_with_other_sdf");

                entity.Property(e => e.HealthSafetyOfficer).HasColumnName("health_safety_officer");

                entity.Property(e => e.IdentifiedCommittedStaff).HasColumnName("identified_committed_staff");

                entity.Property(e => e.IdentifiedCommittedStaffSdf).HasColumnName("identified_committed_staff_sdf");

                entity.Property(e => e.LayoutEnvironmentSafe).HasColumnName("layout_environment_safe");

                entity.Property(e => e.LayoutEnvironmentSafeSdf).HasColumnName("layout_environment_safe_sdf");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.LegacyEmployerWa2WorkplaceId).HasColumnName("legacy_employer_wa2_workplace_id");

                entity.Property(e => e.LetterOfCommitment).HasColumnName("letter_of_commitment");

                entity.Property(e => e.MandatoryGrantId).HasColumnName("mandatory_grant_id");

                entity.Property(e => e.MentorArtisanRationAcceptable).HasColumnName("mentor_artisan_ration_acceptable");

                entity.Property(e => e.MentorArtisanRationAcceptableSdf).HasColumnName("mentor_artisan_ration_acceptable_sdf");

                entity.Property(e => e.NewApplication).HasColumnName("new_application");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.OhsaMhsaCompliant).HasColumnName("ohsa_mhsa_compliant");

                entity.Property(e => e.OrigionalApprovalEnum).HasColumnName("origional_approval_enum");

                entity.Property(e => e.PretectiveWear).HasColumnName("pretective_wear");

                entity.Property(e => e.PretectiveWearSdf).HasColumnName("pretective_wear_sdf");

                entity.Property(e => e.PreviouslyApproved).HasColumnName("previously_approved");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.QualifiedMentorsForTrade).HasColumnName("qualified_mentors_for_trade");

                entity.Property(e => e.QualifiedMentorsForTradeSdf).HasColumnName("qualified_mentors_for_trade_sdf");

                entity.Property(e => e.RecordKeepingSystem).HasColumnName("record_keeping_system");

                entity.Property(e => e.RecordKeepingSystemSdf).HasColumnName("record_keeping_system_sdf");

                entity.Property(e => e.RejectMessage)
                    .HasMaxLength(255)
                    .HasColumnName("reject_message");

                entity.Property(e => e.RelevantCoreWork).HasColumnName("relevant_core_work");

                entity.Property(e => e.RelevantLearnerRatio).HasColumnName("relevant_learner_ratio");

                entity.Property(e => e.ReviewDate)
                    .HasColumnType("datetime")
                    .HasColumnName("review_date");

                entity.Property(e => e.ReviewUserId).HasColumnName("review_user_id");

                entity.Property(e => e.SitesId).HasColumnName("sites_id");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.StructuredImplementationPlan).HasColumnName("structured_implementation_plan");

                entity.Property(e => e.StructuredImplementationPlanSdf).HasColumnName("structured_implementation_plan_sdf");

                entity.Property(e => e.SuitableQualifiedMentor).HasColumnName("suitable_qualified_mentor");

                entity.Property(e => e.SuitableQualifiedMentors).HasColumnName("suitable_qualified_mentors");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TaxClearanceCertificate).HasColumnName("tax_clearance_certificate");

                entity.Property(e => e.UnitstandardId).HasColumnName("unitstandard_id");

                entity.Property(e => e.WithClientCompany)
                    .HasColumnType("bit(1)")
                    .HasColumnName("with_client_company");

                entity.Property(e => e.WithManager)
                    .HasColumnType("bit(1)")
                    .HasColumnName("with_manager");

                entity.Property(e => e.WorkplaceAbleToCoverScope).HasColumnName("workplace_able_to_cover_scope");

                entity.Property(e => e.WorkplaceApprovalTypeEnum).HasColumnName("workplace_approval_type_enum");

                entity.Property(e => e.WorkplaceCoverTradeOrQualification).HasColumnName("workplace_cover_trade_or_qualification");

                entity.Property(e => e.WorkplaceCoverTradeOrQualificationSdf).HasColumnName("workplace_cover_trade_or_qualification_sdf");

                entity.Property(e => e.WorkplaceLayout).HasColumnName("workplace_layout");

                entity.Property(e => e.WpaAppealed)
                    .HasColumnType("bit(1)")
                    .HasColumnName("wpa_appealed");

                entity.Property(e => e.WpaNumber)
                    .HasMaxLength(255)
                    .HasColumnName("wpa_number");

                entity.HasOne(d => d.AbilityToCoverEntireScopeNavigation)
                    .WithMany(p => p.WorkPlaceApprovalAbilityToCoverEntireScopeNavigations)
                    .HasForeignKey(d => d.AbilityToCoverEntireScope)
                    .HasConstraintName("FK859xyc0bmy9qk7e7f2mcm9djg");

                entity.HasOne(d => d.AccessCoverNavigation)
                    .WithMany(p => p.WorkPlaceApprovalAccessCoverNavigations)
                    .HasForeignKey(d => d.AccessCover)
                    .HasConstraintName("FKsqjmtv8ql722m7rm2fe8vcxdm");

                entity.HasOne(d => d.AccessMaterialConsumableNavigation)
                    .WithMany(p => p.WorkPlaceApprovalAccessMaterialConsumableNavigations)
                    .HasForeignKey(d => d.AccessMaterialConsumable)
                    .HasConstraintName("FKpq2wy4ym1qe1mywrf0puwol5l");

                entity.HasOne(d => d.AccessToMaterialNavigation)
                    .WithMany(p => p.WorkPlaceApprovalAccessToMaterialNavigations)
                    .HasForeignKey(d => d.AccessToMaterial)
                    .HasConstraintName("FKs6a4uml4wmu4949q3if0nba2k");

                entity.HasOne(d => d.AccessToMaterialSdfNavigation)
                    .WithMany(p => p.WorkPlaceApprovalAccessToMaterialSdfNavigations)
                    .HasForeignKey(d => d.AccessToMaterialSdf)
                    .HasConstraintName("FKchel7ryaa3deumy6spbhgbb4t");

                entity.HasOne(d => d.AllToolsAvailableNavigation)
                    .WithMany(p => p.WorkPlaceApprovalAllToolsAvailableNavigations)
                    .HasForeignKey(d => d.AllToolsAvailable)
                    .HasConstraintName("FKe0ll1xe4t9mwob7asmdtl3ydy");

                entity.HasOne(d => d.AllToolsAvailableSdfNavigation)
                    .WithMany(p => p.WorkPlaceApprovalAllToolsAvailableSdfNavigations)
                    .HasForeignKey(d => d.AllToolsAvailableSdf)
                    .HasConstraintName("FK73fc88f96tfdqqdiys73rkxh");

                entity.HasOne(d => d.ApprovedBySetaNavigation)
                    .WithMany(p => p.WorkPlaceApprovals)
                    .HasForeignKey(d => d.ApprovedBySeta)
                    .HasConstraintName("FK9as4jdngkyw9n5s7py9qhr5ed");

                entity.HasOne(d => d.AsPerSkillsAreaNavigation)
                    .WithMany(p => p.WorkPlaceApprovalAsPerSkillsAreaNavigations)
                    .HasForeignKey(d => d.AsPerSkillsArea)
                    .HasConstraintName("FKnb0ouaehmg1g99kk8xnk6mwmx");

                entity.HasOne(d => d.CommittedOhsaOrMhsaCompliantNavigation)
                    .WithMany(p => p.WorkPlaceApprovalCommittedOhsaOrMhsaCompliantNavigations)
                    .HasForeignKey(d => d.CommittedOhsaOrMhsaCompliant)
                    .HasConstraintName("FK3usxdav4eh61ck4skkn40aix8");

                entity.HasOne(d => d.CommittedOhsaOrMhsaCompliantSdfNavigation)
                    .WithMany(p => p.WorkPlaceApprovalCommittedOhsaOrMhsaCompliantSdfNavigations)
                    .HasForeignKey(d => d.CommittedOhsaOrMhsaCompliantSdf)
                    .HasConstraintName("FK8ryn50ws6iracy02upjgn7bit");

                entity.HasOne(d => d.CommittedtoBecompliantRelevantLegislationApplicableNavigation)
                    .WithMany(p => p.WorkPlaceApprovalCommittedtoBecompliantRelevantLegislationApplicableNavigations)
                    .HasForeignKey(d => d.CommittedtoBecompliantRelevantLegislationApplicable)
                    .HasConstraintName("FKsbfadkmcg8kxhf247jiqeb46s");

                entity.HasOne(d => d.CommittedtoBecompliantRelevantLegislationApplicableSdfNavigation)
                    .WithMany(p => p.WorkPlaceApprovalCommittedtoBecompliantRelevantLegislationApplicableSdfNavigations)
                    .HasForeignKey(d => d.CommittedtoBecompliantRelevantLegislationApplicableSdf)
                    .HasConstraintName("FKkga52b8a0kqdsw3j04telktr7");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.WorkPlaceApprovals)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK6hji5k66hp2tf6bvy06ae04k7");

                entity.HasOne(d => d.CopyOfSelfEvaluationNavigation)
                    .WithMany(p => p.WorkPlaceApprovalCopyOfSelfEvaluationNavigations)
                    .HasForeignKey(d => d.CopyOfSelfEvaluation)
                    .HasConstraintName("FKh1wfgtg7oyr0hr8cuilhw7d41");

                entity.HasOne(d => d.DeclarationFromEmployerNavigation)
                    .WithMany(p => p.WorkPlaceApprovalDeclarationFromEmployerNavigations)
                    .HasForeignKey(d => d.DeclarationFromEmployer)
                    .HasConstraintName("FKahvtkjuyiueewg3njy9ou7i33");

                entity.HasOne(d => d.DeclarationIndicationCommitmentNavigation)
                    .WithMany(p => p.WorkPlaceApprovalDeclarationIndicationCommitmentNavigations)
                    .HasForeignKey(d => d.DeclarationIndicationCommitment)
                    .HasConstraintName("FKi8olrp7chyd2h04gndpmowhsi");

                entity.HasOne(d => d.EffectiveRecordNavigation)
                    .WithMany(p => p.WorkPlaceApprovalEffectiveRecordNavigations)
                    .HasForeignKey(d => d.EffectiveRecord)
                    .HasConstraintName("FK22vnkhlxs757o89bv0qljdo9x");

                entity.HasOne(d => d.EvidenceAttachedOfPreviosNavigation)
                    .WithMany(p => p.WorkPlaceApprovalEvidenceAttachedOfPreviosNavigations)
                    .HasForeignKey(d => d.EvidenceAttachedOfPrevios)
                    .HasConstraintName("FKgwj6ryjffmdhitln7yweo7npm");

                entity.HasOne(d => d.ExtensionOfScopeNavigation)
                    .WithMany(p => p.WorkPlaceApprovalExtensionOfScopeNavigations)
                    .HasForeignKey(d => d.ExtensionOfScope)
                    .HasConstraintName("FKiqbyc256qpkws8irhacn9nk4c");

                entity.HasOne(d => d.FormalAgreementAprrovedWorkpalcesNavigation)
                    .WithMany(p => p.WorkPlaceApprovalFormalAgreementAprrovedWorkpalcesNavigations)
                    .HasForeignKey(d => d.FormalAgreementAprrovedWorkpalces)
                    .HasConstraintName("FK4t4f3t389my3wum7gyqj87ls1");

                entity.HasOne(d => d.FormalAgreementWithOtherNavigation)
                    .WithMany(p => p.WorkPlaceApprovalFormalAgreementWithOtherNavigations)
                    .HasForeignKey(d => d.FormalAgreementWithOther)
                    .HasConstraintName("FKkubr14d4cckps5lao8eqi3ist");

                entity.HasOne(d => d.FormalAgreementWithOtherSdfNavigation)
                    .WithMany(p => p.WorkPlaceApprovalFormalAgreementWithOtherSdfNavigations)
                    .HasForeignKey(d => d.FormalAgreementWithOtherSdf)
                    .HasConstraintName("FKk4ggyfjkbyq0m07akea325kv3");

                entity.HasOne(d => d.HealthSafetyOfficerNavigation)
                    .WithMany(p => p.WorkPlaceApprovalHealthSafetyOfficerNavigations)
                    .HasForeignKey(d => d.HealthSafetyOfficer)
                    .HasConstraintName("FKe6pum2imxk0qke6xh8a4ra3qn");

                entity.HasOne(d => d.IdentifiedCommittedStaffNavigation)
                    .WithMany(p => p.WorkPlaceApprovalIdentifiedCommittedStaffNavigations)
                    .HasForeignKey(d => d.IdentifiedCommittedStaff)
                    .HasConstraintName("FK57j643kbe0x0yxaienrcihcqg");

                entity.HasOne(d => d.IdentifiedCommittedStaffSdfNavigation)
                    .WithMany(p => p.WorkPlaceApprovalIdentifiedCommittedStaffSdfNavigations)
                    .HasForeignKey(d => d.IdentifiedCommittedStaffSdf)
                    .HasConstraintName("FK78ahf3yuur6s8cogi2w13d3db");

                entity.HasOne(d => d.LayoutEnvironmentSafeNavigation)
                    .WithMany(p => p.WorkPlaceApprovalLayoutEnvironmentSafeNavigations)
                    .HasForeignKey(d => d.LayoutEnvironmentSafe)
                    .HasConstraintName("FKij7rg478g9ogpxspoxkw3oh4q");

                entity.HasOne(d => d.LayoutEnvironmentSafeSdfNavigation)
                    .WithMany(p => p.WorkPlaceApprovalLayoutEnvironmentSafeSdfNavigations)
                    .HasForeignKey(d => d.LayoutEnvironmentSafeSdf)
                    .HasConstraintName("FKokm3f20s5fqo0uo4nom4egw90");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.WorkPlaceApprovals)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FKrgotf3eslcd59fgnv1vyl8lky");

                entity.HasOne(d => d.LegacyEmployerWa2Workplace)
                    .WithMany(p => p.WorkPlaceApprovals)
                    .HasForeignKey(d => d.LegacyEmployerWa2WorkplaceId)
                    .HasConstraintName("FK2i6e9peq7ohi48biouk0pjk27");

                entity.HasOne(d => d.LetterOfCommitmentNavigation)
                    .WithMany(p => p.WorkPlaceApprovalLetterOfCommitmentNavigations)
                    .HasForeignKey(d => d.LetterOfCommitment)
                    .HasConstraintName("FKhc6lkfbhgil0ct7ieb6emsd9n");

                entity.HasOne(d => d.MandatoryGrant)
                    .WithMany(p => p.WorkPlaceApprovals)
                    .HasForeignKey(d => d.MandatoryGrantId)
                    .HasConstraintName("FKapmda0uvjlyqb2avj0cr25bk");

                entity.HasOne(d => d.MentorArtisanRationAcceptableNavigation)
                    .WithMany(p => p.WorkPlaceApprovalMentorArtisanRationAcceptableNavigations)
                    .HasForeignKey(d => d.MentorArtisanRationAcceptable)
                    .HasConstraintName("FKme9g2yqj1mu07wt9aenwj01uo");

                entity.HasOne(d => d.MentorArtisanRationAcceptableSdfNavigation)
                    .WithMany(p => p.WorkPlaceApprovalMentorArtisanRationAcceptableSdfNavigations)
                    .HasForeignKey(d => d.MentorArtisanRationAcceptableSdf)
                    .HasConstraintName("FKpplfbj9af0ncgenybsnxmm230");

                entity.HasOne(d => d.NewApplicationNavigation)
                    .WithMany(p => p.WorkPlaceApprovalNewApplicationNavigations)
                    .HasForeignKey(d => d.NewApplication)
                    .HasConstraintName("FK9v40hkuv35kcysb840p9xvklw");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.WorkPlaceApprovals)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FK8cbj7w2ddibl07vf3k1tgls12");

                entity.HasOne(d => d.OhsaMhsaCompliantNavigation)
                    .WithMany(p => p.WorkPlaceApprovalOhsaMhsaCompliantNavigations)
                    .HasForeignKey(d => d.OhsaMhsaCompliant)
                    .HasConstraintName("FKbrky4djlhuc0h3n7oxki0jnk2");

                entity.HasOne(d => d.PretectiveWearNavigation)
                    .WithMany(p => p.WorkPlaceApprovalPretectiveWearNavigations)
                    .HasForeignKey(d => d.PretectiveWear)
                    .HasConstraintName("FK37r898tuaiqw0daq4qpg375ak");

                entity.HasOne(d => d.PretectiveWearSdfNavigation)
                    .WithMany(p => p.WorkPlaceApprovalPretectiveWearSdfNavigations)
                    .HasForeignKey(d => d.PretectiveWearSdf)
                    .HasConstraintName("FKbixkos5r9d9du34pmr8b7pgbg");

                entity.HasOne(d => d.PreviouslyApprovedNavigation)
                    .WithMany(p => p.WorkPlaceApprovalPreviouslyApprovedNavigations)
                    .HasForeignKey(d => d.PreviouslyApproved)
                    .HasConstraintName("FKanxamdxm6jixo0ga2eadeer8n");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.WorkPlaceApprovals)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKcnur5h28mflpvhf6exstxcmr6");

                entity.HasOne(d => d.QualifiedMentorsForTradeNavigation)
                    .WithMany(p => p.WorkPlaceApprovalQualifiedMentorsForTradeNavigations)
                    .HasForeignKey(d => d.QualifiedMentorsForTrade)
                    .HasConstraintName("FK9muj2a4afpfii6bgs1rq0gdap");

                entity.HasOne(d => d.QualifiedMentorsForTradeSdfNavigation)
                    .WithMany(p => p.WorkPlaceApprovalQualifiedMentorsForTradeSdfNavigations)
                    .HasForeignKey(d => d.QualifiedMentorsForTradeSdf)
                    .HasConstraintName("FKoc4fbneux6hguoe161a5cfiub");

                entity.HasOne(d => d.RecordKeepingSystemNavigation)
                    .WithMany(p => p.WorkPlaceApprovalRecordKeepingSystemNavigations)
                    .HasForeignKey(d => d.RecordKeepingSystem)
                    .HasConstraintName("FK4cf9wxytkfkfnwq82etetegh8");

                entity.HasOne(d => d.RecordKeepingSystemSdfNavigation)
                    .WithMany(p => p.WorkPlaceApprovalRecordKeepingSystemSdfNavigations)
                    .HasForeignKey(d => d.RecordKeepingSystemSdf)
                    .HasConstraintName("FKa247uxk0f0in9y2vbkf7cwrt1");

                entity.HasOne(d => d.RelevantCoreWorkNavigation)
                    .WithMany(p => p.WorkPlaceApprovalRelevantCoreWorkNavigations)
                    .HasForeignKey(d => d.RelevantCoreWork)
                    .HasConstraintName("FK62n7l2hmg7bwwyidndth1xl96");

                entity.HasOne(d => d.RelevantLearnerRatioNavigation)
                    .WithMany(p => p.WorkPlaceApprovalRelevantLearnerRatioNavigations)
                    .HasForeignKey(d => d.RelevantLearnerRatio)
                    .HasConstraintName("FK9kl3a8x8tvpsc2ed16b97cgx8");

                entity.HasOne(d => d.ReviewUser)
                    .WithMany(p => p.WorkPlaceApprovals)
                    .HasForeignKey(d => d.ReviewUserId)
                    .HasConstraintName("FK9356hri1bry5al6qgv9407xac");

                /*entity.HasOne(d => d.Sites)
                    .WithMany(p => p.WorkPlaceApprovals)
                    .HasForeignKey(d => d.SitesId)
                    .HasConstraintName("FKojp9ntoe4n9apvovbtpevo4ke");*/

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.WorkPlaceApprovals)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKidocmw7phlkcs4govtn3alda6");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.WorkPlaceApprovals)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FKp5knatwl0acw7vfrpt6dt2k1j");

                entity.HasOne(d => d.StructuredImplementationPlanNavigation)
                    .WithMany(p => p.WorkPlaceApprovalStructuredImplementationPlanNavigations)
                    .HasForeignKey(d => d.StructuredImplementationPlan)
                    .HasConstraintName("FKdvrtlkad1hpq6qn80ck3c8yi4");

                entity.HasOne(d => d.StructuredImplementationPlanSdfNavigation)
                    .WithMany(p => p.WorkPlaceApprovalStructuredImplementationPlanSdfNavigations)
                    .HasForeignKey(d => d.StructuredImplementationPlanSdf)
                    .HasConstraintName("FKjs1lvjpx466f85f4ytnb4ntdj");

                entity.HasOne(d => d.SuitableQualifiedMentorNavigation)
                    .WithMany(p => p.WorkPlaceApprovalSuitableQualifiedMentorNavigations)
                    .HasForeignKey(d => d.SuitableQualifiedMentor)
                    .HasConstraintName("FK33pgv0kpbnhl83gl8aicowivm");

                entity.HasOne(d => d.SuitableQualifiedMentorsNavigation)
                    .WithMany(p => p.WorkPlaceApprovalSuitableQualifiedMentorsNavigations)
                    .HasForeignKey(d => d.SuitableQualifiedMentors)
                    .HasConstraintName("FKmjvayuytlyhu5t4lekul0uwfy");

                entity.HasOne(d => d.TaxClearanceCertificateNavigation)
                    .WithMany(p => p.WorkPlaceApprovalTaxClearanceCertificateNavigations)
                    .HasForeignKey(d => d.TaxClearanceCertificate)
                    .HasConstraintName("FK4dvhfatfnus2e5p98dtfcchg0");

                entity.HasOne(d => d.Unitstandard)
                    .WithMany(p => p.WorkPlaceApprovals)
                    .HasForeignKey(d => d.UnitstandardId)
                    .HasConstraintName("FKpiau1cbvv3fcr28murmm0cp7");

                entity.HasOne(d => d.WorkplaceAbleToCoverScopeNavigation)
                    .WithMany(p => p.WorkPlaceApprovalWorkplaceAbleToCoverScopeNavigations)
                    .HasForeignKey(d => d.WorkplaceAbleToCoverScope)
                    .HasConstraintName("FKigtgoipv5jw6pxvqsxvico3nf");

                entity.HasOne(d => d.WorkplaceCoverTradeOrQualificationNavigation)
                    .WithMany(p => p.WorkPlaceApprovalWorkplaceCoverTradeOrQualificationNavigations)
                    .HasForeignKey(d => d.WorkplaceCoverTradeOrQualification)
                    .HasConstraintName("FKidh7347rsosb5gu3e3k9g9r5y");

                entity.HasOne(d => d.WorkplaceCoverTradeOrQualificationSdfNavigation)
                    .WithMany(p => p.WorkPlaceApprovalWorkplaceCoverTradeOrQualificationSdfNavigations)
                    .HasForeignKey(d => d.WorkplaceCoverTradeOrQualificationSdf)
                    .HasConstraintName("FK2bm3rjokx1ael7uyfiklsl7wu");

                entity.HasOne(d => d.WorkplaceLayoutNavigation)
                    .WithMany(p => p.WorkPlaceApprovalWorkplaceLayoutNavigations)
                    .HasForeignKey(d => d.WorkplaceLayout)
                    .HasConstraintName("FKowrf5ppp659bj8kch4iedp47s");
            });

            modelBuilder.Entity<WorkPlaceApprovalDatum>(entity =>
            {
                entity.ToTable("work_place_approval_data");

                entity.HasIndex(e => e.LearnershipId, "FK50cdn3w2od51luellytgast9s");

                entity.HasIndex(e => e.QualificationId, "FK7vnclaxlqjyuyl21ky5klalke");

                entity.HasIndex(e => e.SkillsProgramId, "FK7yl3pbnyahf6s0q2m8miwtcss");

                entity.HasIndex(e => e.OfoCodesId, "FKk4sl4egcbo9mmef8mr6ogy4y");

                entity.HasIndex(e => e.CompanyId, "FKqx1gpghkk312cx5k8y0is37ws");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationStartDate)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_start_date");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.LearnershipCode)
                    .HasMaxLength(255)
                    .HasColumnName("learnership_code");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.QualificationCode)
                    .HasMaxLength(255)
                    .HasColumnName("qualification_code");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.SProgrammeCode)
                    .HasMaxLength(255)
                    .HasColumnName("s_programme_code");

                entity.Property(e => e.SdlNumber)
                    .HasMaxLength(255)
                    .HasColumnName("sdl_number");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.WorkPlaceApprovalData)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKqx1gpghkk312cx5k8y0is37ws");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.WorkPlaceApprovalData)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FK50cdn3w2od51luellytgast9s");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.WorkPlaceApprovalData)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKk4sl4egcbo9mmef8mr6ogy4y");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.WorkPlaceApprovalData)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK7vnclaxlqjyuyl21ky5klalke");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.WorkPlaceApprovalData)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FK7yl3pbnyahf6s0q2m8miwtcss");
            });

            modelBuilder.Entity<WorkPlaceApprovalMentor>(entity =>
            {
                entity.ToTable("work_place_approval_mentor");

                entity.HasIndex(e => e.CreateUserId, "FK4gf88jdyei5cesjji4h0jo5l");

                entity.HasIndex(e => e.WorkPlaceApprovalId, "FK9ruv02u46b0bqhmx7gnumb7fy");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.WithClientCompany)
                    .HasColumnType("bit(1)")
                    .HasColumnName("with_client_company");

                entity.Property(e => e.WorkPlaceApprovalId).HasColumnName("work_place_approval_id");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.WorkPlaceApprovalMentors)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FK4gf88jdyei5cesjji4h0jo5l");

                entity.HasOne(d => d.WorkPlaceApproval)
                    .WithMany(p => p.WorkPlaceApprovalMentors)
                    .HasForeignKey(d => d.WorkPlaceApprovalId)
                    .HasConstraintName("FK9ruv02u46b0bqhmx7gnumb7fy");
            });

            modelBuilder.Entity<WorkPlaceApprovalSite>(entity =>
            {
                entity.ToTable("work_place_approval_sites");

                entity.HasIndex(e => e.QualificationId, "FK8wdi79cfmkk356ukmri9ndbo5");

                entity.HasIndex(e => e.WorkPlaceApprovalId, "FKejmiakc1acik7wr2e4nhqweqd");

                entity.HasIndex(e => e.WorkPlaceApprovalMentorId, "FKfach0vfo0eoh66r41p7r3g42a");

                entity.HasIndex(e => e.ResidentialAddressId, "FKjmeeq7sf67ou335urkvs5fqrb");

                entity.HasIndex(e => e.SitesSmeId, "FKq21cme73jlvlq3gxia92vd519");

                entity.HasIndex(e => e.SitesId, "FKqyneqtq1vv0w08hdawv57vyvp");

                entity.HasIndex(e => e.DeleteUserId, "FKrxamvo8puk4jrvxxjfydj2jvq");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DeleteUserId).HasColumnName("delete_user_id");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.IdentityNumber)
                    .HasMaxLength(100)
                    .HasColumnName("identity_number");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.LearnershipRegistrationNumber).HasColumnName("learnership_registration_number");

                entity.Property(e => e.NumberOfArtisans).HasColumnName("number_of_artisans");

                entity.Property(e => e.NumberOfLearners).HasColumnName("number_of_learners");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(100)
                    .HasColumnName("passport_number");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.SitesId).HasColumnName("sites_id");

                entity.Property(e => e.SitesSmeId).HasColumnName("sites_sme_id");

                entity.Property(e => e.UseCompanyAddress)
                    .HasColumnType("bit(1)")
                    .HasColumnName("use_company_address");

                entity.Property(e => e.WorkPlaceApprovalId).HasColumnName("workPlace_approval_id");

                entity.Property(e => e.WorkPlaceApprovalMentorId).HasColumnName("workPlace_approval_mentor_id");

                entity.HasOne(d => d.DeleteUser)
                    .WithMany(p => p.WorkPlaceApprovalSites)
                    .HasForeignKey(d => d.DeleteUserId)
                    .HasConstraintName("FKrxamvo8puk4jrvxxjfydj2jvq");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.WorkPlaceApprovalSites)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FK8wdi79cfmkk356ukmri9ndbo5");

                entity.HasOne(d => d.ResidentialAddress)
                    .WithMany(p => p.WorkPlaceApprovalSites)
                    .HasForeignKey(d => d.ResidentialAddressId)
                    .HasConstraintName("FKjmeeq7sf67ou335urkvs5fqrb");

               /* entity.HasOne(d => d.Sites)
                    .WithMany(p => p.WorkPlaceApprovalSites)
                    .HasForeignKey(d => d.SitesId)
                    .HasConstraintName("FKqyneqtq1vv0w08hdawv57vyvp");*/

                entity.HasOne(d => d.SitesSme)
                    .WithMany(p => p.WorkPlaceApprovalSites)
                    .HasForeignKey(d => d.SitesSmeId)
                    .HasConstraintName("FKq21cme73jlvlq3gxia92vd519");

                entity.HasOne(d => d.WorkPlaceApproval)
                    .WithMany(p => p.WorkPlaceApprovalSites)
                    .HasForeignKey(d => d.WorkPlaceApprovalId)
                    .HasConstraintName("FKejmiakc1acik7wr2e4nhqweqd");

                entity.HasOne(d => d.WorkPlaceApprovalMentor)
                    .WithMany(p => p.WorkPlaceApprovalSites)
                    .HasForeignKey(d => d.WorkPlaceApprovalMentorId)
                    .HasConstraintName("FKfach0vfo0eoh66r41p7r3g42a");
            });

            modelBuilder.Entity<WorkPlaceApprovalSitesHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("work_place_approval_sites_hist");

                entity.HasIndex(e => e.Rev, "FKrusaw5tocbv1ve6qe06kr768d");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DeleteUserId).HasColumnName("delete_user_id");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.IdentityNumber)
                    .HasMaxLength(100)
                    .HasColumnName("identity_number");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.LearnershipRegistrationNumber).HasColumnName("learnership_registration_number");

                entity.Property(e => e.NumberOfArtisans).HasColumnName("number_of_artisans");

                entity.Property(e => e.NumberOfLearners).HasColumnName("number_of_learners");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(100)
                    .HasColumnName("passport_number");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.ResidentialAddressId).HasColumnName("residential_address_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SitesId).HasColumnName("sites_id");

                entity.Property(e => e.SitesSmeId).HasColumnName("sites_sme_id");

                entity.Property(e => e.UseCompanyAddress)
                    .HasColumnType("bit(1)")
                    .HasColumnName("use_company_address");

                entity.Property(e => e.WorkPlaceApprovalId).HasColumnName("workPlace_approval_id");

                entity.Property(e => e.WorkPlaceApprovalMentorId).HasColumnName("workPlace_approval_mentor_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WorkPlaceApprovalSitesHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKrusaw5tocbv1ve6qe06kr768d");
            });

            modelBuilder.Entity<WorkPlaceApprovalSkillsProgram>(entity =>
            {
                entity.ToTable("work_place_approval_skills_program");

                entity.HasIndex(e => e.WorkPlaceApprovalId, "FK65hxjx9ha83hns5mlh7xdy2nl");

                entity.HasIndex(e => e.SkillsProgramId, "FKe3o6l00emtwxhit6ukftemfc8");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.AcceptEnum).HasColumnName("accept_enum");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.WorkPlaceApprovalId).HasColumnName("work_place_approval_id");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.WorkPlaceApprovalSkillsPrograms)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKe3o6l00emtwxhit6ukftemfc8");

                entity.HasOne(d => d.WorkPlaceApproval)
                    .WithMany(p => p.WorkPlaceApprovalSkillsPrograms)
                    .HasForeignKey(d => d.WorkPlaceApprovalId)
                    .HasConstraintName("FK65hxjx9ha83hns5mlh7xdy2nl");
            });

            modelBuilder.Entity<WorkPlaceApprovalSkillsSet>(entity =>
            {
                entity.ToTable("work_place_approval_skills_set");

                entity.HasIndex(e => e.SkillsSetId, "FKbdox92n0yokqbrhdi4ae54vli");

                entity.HasIndex(e => e.TrainingProviderDocParentId, "FKmeoduvtk4atxpaeicxf2jin17");

                entity.HasIndex(e => e.WorkPlaceApprovalId, "FKst7nkhamcnxncar7b7nsa9fkx");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.AcceptEnum).HasColumnName("accept_enum");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.Property(e => e.WorkPlaceApprovalId).HasColumnName("work_place_approval_id");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.WorkPlaceApprovalSkillsSets)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FKbdox92n0yokqbrhdi4ae54vli");

                entity.HasOne(d => d.TrainingProviderDocParent)
                    .WithMany(p => p.WorkPlaceApprovalSkillsSets)
                    .HasForeignKey(d => d.TrainingProviderDocParentId)
                    .HasConstraintName("FKmeoduvtk4atxpaeicxf2jin17");

                entity.HasOne(d => d.WorkPlaceApproval)
                    .WithMany(p => p.WorkPlaceApprovalSkillsSets)
                    .HasForeignKey(d => d.WorkPlaceApprovalId)
                    .HasConstraintName("FKst7nkhamcnxncar7b7nsa9fkx");
            });

            modelBuilder.Entity<WorkPlaceApprovalSkillsSetAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("work_place_approval_skills_set_AUD");

                entity.HasIndex(e => e.Rev, "FKlg1uf1xyrd6m8p4eymwol0x8n");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WorkPlaceApprovalSkillsSetAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKlg1uf1xyrd6m8p4eymwol0x8n");
            });

            modelBuilder.Entity<WorkPlaceApprovalToolList>(entity =>
            {
                entity.ToTable("work_place_approval_tool_list");

                entity.HasIndex(e => e.WorkPlaceApprovalId, "FK731ny3fu0dea05jnwg58ij31b");

                entity.HasIndex(e => e.QualificationToolListId, "FKmeaa7xeqrfwunydekmwhbjhhd");

                entity.HasIndex(e => e.ToolListToolsId, "FKtb9mocc3isgsg9wfaqfxqwcvj");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.AcceptEnum).HasColumnName("accept_enum");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.QualificationToolListId).HasColumnName("qualification_tool_list_id");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.ToolListId).HasColumnName("tool_list_id");

                entity.Property(e => e.ToolListToolsId).HasColumnName("tool_list_tools_id");

                entity.Property(e => e.WorkPlaceApprovalId).HasColumnName("work_place_approval_id");

                entity.HasOne(d => d.QualificationToolList)
                    .WithMany(p => p.WorkPlaceApprovalToolLists)
                    .HasForeignKey(d => d.QualificationToolListId)
                    .HasConstraintName("FKmeaa7xeqrfwunydekmwhbjhhd");

                entity.HasOne(d => d.ToolListTools)
                    .WithMany(p => p.WorkPlaceApprovalToolLists)
                    .HasForeignKey(d => d.ToolListToolsId)
                    .HasConstraintName("FKtb9mocc3isgsg9wfaqfxqwcvj");

                entity.HasOne(d => d.WorkPlaceApproval)
                    .WithMany(p => p.WorkPlaceApprovalToolLists)
                    .HasForeignKey(d => d.WorkPlaceApprovalId)
                    .HasConstraintName("FK731ny3fu0dea05jnwg58ij31b");
            });

            modelBuilder.Entity<WorkPlaceApprovalTrade>(entity =>
            {
                entity.ToTable("work_place_approval_trades");

                entity.HasIndex(e => e.OfoCodesId, "FKj7xi44b2hg4l7pbj4tr16w45p");

                entity.HasIndex(e => e.DeleteUserId, "FKlbdti4fd7ontb2j9c4egowwss");

                entity.HasIndex(e => e.WorkPlaceApprovalId, "FKr0hyx03p4gsfx8y3c9tirvb3v");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DeleteUserId).HasColumnName("delete_user_id");

                entity.Property(e => e.NumberOfLearners).HasColumnName("number_of_learners");

                entity.Property(e => e.NumberOfMentors).HasColumnName("number_of_mentors");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.WorkPlaceApprovalId).HasColumnName("workPlace_approval_id");

                entity.HasOne(d => d.DeleteUser)
                    .WithMany(p => p.WorkPlaceApprovalTrades)
                    .HasForeignKey(d => d.DeleteUserId)
                    .HasConstraintName("FKlbdti4fd7ontb2j9c4egowwss");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.WorkPlaceApprovalTrades)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKj7xi44b2hg4l7pbj4tr16w45p");

                entity.HasOne(d => d.WorkPlaceApproval)
                    .WithMany(p => p.WorkPlaceApprovalTrades)
                    .HasForeignKey(d => d.WorkPlaceApprovalId)
                    .HasConstraintName("FKr0hyx03p4gsfx8y3c9tirvb3v");
            });

            modelBuilder.Entity<WorkPlaceApprovalTradesHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("work_place_approval_trades_hist");

                entity.HasIndex(e => e.Rev, "FKb6qeeoacxqcr4j0m6kr63qpst");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DeleteUserId).HasColumnName("delete_user_id");

                entity.Property(e => e.NumberOfLearners).HasColumnName("number_of_learners");

                entity.Property(e => e.NumberOfMentors).HasColumnName("number_of_mentors");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.WorkPlaceApprovalId).HasColumnName("workPlace_approval_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WorkPlaceApprovalTradesHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKb6qeeoacxqcr4j0m6kr63qpst");
            });

            modelBuilder.Entity<WorkPlaceApprovalUnitStandard>(entity =>
            {
                entity.ToTable("work_place_approval_unit_standards");

                entity.HasIndex(e => e.UnitStandardsId, "FKejs1qh3kqixne3w701um8qntb");

                entity.HasIndex(e => e.WorkPlaceApprovalId, "FKnus3oocuuwhjfysivvhrf1v5j");

                entity.HasIndex(e => e.TrainingProviderDocParentId, "FKvhuqkygebcre7yxqf0g6x1tj");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.AcceptEnum).HasColumnName("accept_enum");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.SoftDelete)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_delete");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.Property(e => e.UnitStandardsId).HasColumnName("unit_standards_id");

                entity.Property(e => e.WorkPlaceApprovalId).HasColumnName("work_place_approval_id");

                entity.HasOne(d => d.TrainingProviderDocParent)
                    .WithMany(p => p.WorkPlaceApprovalUnitStandards)
                    .HasForeignKey(d => d.TrainingProviderDocParentId)
                    .HasConstraintName("FKvhuqkygebcre7yxqf0g6x1tj");

                entity.HasOne(d => d.UnitStandards)
                    .WithMany(p => p.WorkPlaceApprovalUnitStandards)
                    .HasForeignKey(d => d.UnitStandardsId)
                    .HasConstraintName("FKejs1qh3kqixne3w701um8qntb");

                entity.HasOne(d => d.WorkPlaceApproval)
                    .WithMany(p => p.WorkPlaceApprovalUnitStandards)
                    .HasForeignKey(d => d.WorkPlaceApprovalId)
                    .HasConstraintName("FKnus3oocuuwhjfysivvhrf1v5j");
            });

            modelBuilder.Entity<WorkPlaceApprovalUnitStandardsAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("work_place_approval_unit_standards_AUD");

                entity.HasIndex(e => e.Rev, "FK470fgxjv819dk0nmw7e8lkwgi");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TrainingProviderDocParentId).HasColumnName("training_provider_doc_parent_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WorkPlaceApprovalUnitStandardsAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK470fgxjv819dk0nmw7e8lkwgi");
            });

            modelBuilder.Entity<WorkPlaceApprovalVisitDateLog>(entity =>
            {
                entity.ToTable("work_place_approval_visit_date_log");

                entity.HasIndex(e => e.UserId, "FK5lsbixi8pldavfcvfgw1ikvv");

                entity.HasIndex(e => e.WorkPlaceApprovalId, "FKjm04aosot4mj61r8kykx0xk1x");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdditionalInfo)
                    .HasMaxLength(100)
                    .HasColumnName("additional_info");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateOfVisit)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_visit");

                entity.Property(e => e.SystemGenerated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_generated");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WorkPlaceApprovalId).HasColumnName("workPlace_approval_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.WorkPlaceApprovalVisitDateLogs)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK5lsbixi8pldavfcvfgw1ikvv");

                entity.HasOne(d => d.WorkPlaceApproval)
                    .WithMany(p => p.WorkPlaceApprovalVisitDateLogs)
                    .HasForeignKey(d => d.WorkPlaceApprovalId)
                    .HasConstraintName("FKjm04aosot4mj61r8kykx0xk1x");
            });

            modelBuilder.Entity<WorkplaceLinked>(entity =>
            {
                entity.ToTable("workplace_linked");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(10)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            modelBuilder.Entity<WorkplaceMonitoring>(entity =>
            {
                entity.ToTable("workplace_monitoring");

                entity.HasIndex(e => e.CompanyId, "FK1mrcshu0nsglhqr3qx8og97cf");

                entity.HasIndex(e => e.UserId, "FK4nen39m7jbxaq4c8fwy36phci");

                entity.HasIndex(e => e.ActiveContractsId, "FK7tqf47ou2rkf1kra6c7qhgqgw");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccessTrainingProvider).HasColumnName("access_training_provider");

                entity.Property(e => e.ActiveContractsId).HasColumnName("active_contracts_id");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.BariersReltingToTraining).HasColumnName("bariers_relting_to_training");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ExposedTrainingRequirements).HasColumnName("exposed_training_requirements");

                entity.Property(e => e.ExtendAnyContract).HasColumnName("extend_any_contract");

                entity.Property(e => e.IgnoreTranchePayments)
                    .HasColumnType("bit(1)")
                    .HasColumnName("ignore_tranche_payments");

                entity.Property(e => e.IndicatedPerRelevantContract).HasColumnName("indicated_per_relevant_contract");

                entity.Property(e => e.PossessionN1Certificate).HasColumnName("possession_n1_Certificate");

                entity.Property(e => e.PrescribedBargainingCouncilWages).HasColumnName("prescribed_bargaining_council_wages");

                entity.Property(e => e.QualifiedMentor).HasColumnName("qualified_mentor");

                entity.Property(e => e.RecieveToolbox).HasColumnName("recieve_toolbox");

                entity.Property(e => e.RequiredPpe).HasColumnName("required_ppe");

                entity.Property(e => e.SatisfiedTraining).HasColumnName("satisfied_training");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.VisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("visit_date");

                entity.HasOne(d => d.ActiveContracts)
                    .WithMany(p => p.WorkplaceMonitorings)
                    .HasForeignKey(d => d.ActiveContractsId)
                    .HasConstraintName("FK7tqf47ou2rkf1kra6c7qhgqgw");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.WorkplaceMonitorings)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK1mrcshu0nsglhqr3qx8og97cf");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.WorkplaceMonitorings)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK4nen39m7jbxaq4c8fwy36phci");
            });

            modelBuilder.Entity<WorkplaceMonitoringActionPlan>(entity =>
            {
                entity.ToTable("workplace_monitoring_action_plan");

                entity.HasIndex(e => e.LastActionUser, "FKseitnr0juriu33lbed5gcvit7");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Action).HasColumnName("action");

                entity.Property(e => e.ActionPlanValidiationType).HasColumnName("action_plan_validiation_type");

                entity.Property(e => e.AtRisk).HasColumnName("at_risk");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Criteria)
                    .HasMaxLength(255)
                    .HasColumnName("criteria");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.LastActionUserNavigation)
                    .WithMany(p => p.WorkplaceMonitoringActionPlans)
                    .HasForeignKey(d => d.LastActionUser)
                    .HasConstraintName("FKseitnr0juriu33lbed5gcvit7");
            });

            modelBuilder.Entity<WorkplaceMonitoringActionPlanHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("workplace_monitoring_action_plan_hist");

                entity.HasIndex(e => e.Rev, "FKgqumx96d7xbuml735x37g2hrw");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Action).HasColumnName("action");

                entity.Property(e => e.ActionPlanValidiationType).HasColumnName("action_plan_validiation_type");

                entity.Property(e => e.AtRisk).HasColumnName("at_risk");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Criteria)
                    .HasMaxLength(255)
                    .HasColumnName("criteria");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WorkplaceMonitoringActionPlanHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKgqumx96d7xbuml735x37g2hrw");
            });

            modelBuilder.Entity<WorkplaceMonitoringDgMonitoring>(entity =>
            {
                entity.ToTable("workplace_monitoring_dg_monitoring");

                entity.HasIndex(e => e.LastActionUser, "FK5h93gs35p1y41krolqjjwiiud");

                entity.HasIndex(e => e.ActiveContractsId, "FKndc2bb04x94liuyg8pwymp1ny");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActiveContractStatus).HasColumnName("active_contract_status");

                entity.Property(e => e.ActiveContractsId).HasColumnName("active_contracts_id");

                entity.Property(e => e.CanTermiateMoa)
                    .HasColumnType("bit(1)")
                    .HasColumnName("can_termiate_moa")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ContractStatusEnum)
                    .HasMaxLength(255)
                    .HasColumnName("contract_status_enum");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.KeepContractActive).HasColumnName("keep_contract_active");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.MoaType)
                    .HasMaxLength(255)
                    .HasColumnName("moa_type");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.ActiveContracts)
                    .WithMany(p => p.WorkplaceMonitoringDgMonitorings)
                    .HasForeignKey(d => d.ActiveContractsId)
                    .HasConstraintName("FKndc2bb04x94liuyg8pwymp1ny");

                entity.HasOne(d => d.LastActionUserNavigation)
                    .WithMany(p => p.WorkplaceMonitoringDgMonitorings)
                    .HasForeignKey(d => d.LastActionUser)
                    .HasConstraintName("FK5h93gs35p1y41krolqjjwiiud");
            });

            modelBuilder.Entity<WorkplaceMonitoringDgMonitoringHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("workplace_monitoring_dg_monitoring_hist");

                entity.HasIndex(e => e.Rev, "FK5j7esdr6spouvmtunoqq1m4wr");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActiveContractStatus).HasColumnName("active_contract_status");

                entity.Property(e => e.ActiveContractsId).HasColumnName("active_contracts_id");

                entity.Property(e => e.CanTermiateMoa)
                    .HasColumnType("bit(1)")
                    .HasColumnName("can_termiate_moa")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ContractStatusEnum)
                    .HasMaxLength(255)
                    .HasColumnName("contract_status_enum");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.KeepContractActive).HasColumnName("keep_contract_active");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.MoaType)
                    .HasMaxLength(255)
                    .HasColumnName("moa_type");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WorkplaceMonitoringDgMonitoringHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK5j7esdr6spouvmtunoqq1m4wr");
            });

            modelBuilder.Entity<WorkplaceMonitoringDiscretionaryGrantComplianceSurvey>(entity =>
            {
                entity.ToTable("workplace_monitoring_discretionary_grant_compliance_survey");

                entity.HasIndex(e => e.LastActionUser, "FK2wa27l7dvnspngoi1ybfmule2");

                entity.HasIndex(e => e.AnswerLookUpId, "FK9qr06o3w9hmr0p6h139c5tjfc");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Answer).HasColumnName("answer");

                entity.Property(e => e.AnswerLookUpId).HasColumnName("answer_look_up_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.Number).HasColumnName("number");

                entity.Property(e => e.Question)
                    .HasMaxLength(255)
                    .HasColumnName("question");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.AnswerLookUp)
                    .WithMany(p => p.WorkplaceMonitoringDiscretionaryGrantComplianceSurveys)
                    .HasForeignKey(d => d.AnswerLookUpId)
                    .HasConstraintName("FK9qr06o3w9hmr0p6h139c5tjfc");

                entity.HasOne(d => d.LastActionUserNavigation)
                    .WithMany(p => p.WorkplaceMonitoringDiscretionaryGrantComplianceSurveys)
                    .HasForeignKey(d => d.LastActionUser)
                    .HasConstraintName("FK2wa27l7dvnspngoi1ybfmule2");
            });

            modelBuilder.Entity<WorkplaceMonitoringDiscretionaryGrantComplianceSurveyHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("workplace_monitoring_discretionary_grant_compliance_survey_hist");

                entity.HasIndex(e => e.Rev, "FK5fyf4lbpekb00o1mm61wvh8gx");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Answer).HasColumnName("answer");

                entity.Property(e => e.AnswerLookUpId).HasColumnName("answer_look_up_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.Number).HasColumnName("number");

                entity.Property(e => e.Question)
                    .HasMaxLength(255)
                    .HasColumnName("question");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WorkplaceMonitoringDiscretionaryGrantComplianceSurveyHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK5fyf4lbpekb00o1mm61wvh8gx");
            });

            modelBuilder.Entity<WorkplaceMonitoringLearnerInduction>(entity =>
            {
                entity.ToTable("workplace_monitoring_learner_induction");

                entity.HasIndex(e => e.LearnershipId, "FK5cvr656ydx8foqv2pr8ohn1t1");

                entity.HasIndex(e => e.SkillsSetId, "FKd5052wpo367amoea623a544en");

                entity.HasIndex(e => e.LastActionUser, "FKd6a31x0to3rl5tu0yufrjmnu1");

                entity.HasIndex(e => e.QualificationId, "FKglcpi17iu92nmi3u60h8q1xxe");

                entity.HasIndex(e => e.UnitStandardId, "FKkl8ri6cwpfusic8pawvn33kmn");

                entity.HasIndex(e => e.SkillsProgramId, "FKn4ap83k949xf1rcms697x1elr");

                entity.HasIndex(e => e.NonCreditBearingIntervationTitleId, "FKovfgqhjlvnwpn9bm3uyaclj9f");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.NonCreditBearingIntervationTitleId).HasColumnName("non_credit_bearing_intervation_title_id");

                entity.Property(e => e.NumberOfAttendees).HasColumnName("number_of_attendees");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.QualificationTypeSelection).HasColumnName("qualification_type_selection");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.SystemGenerated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_generated")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.HasOne(d => d.LastActionUserNavigation)
                    .WithMany(p => p.WorkplaceMonitoringLearnerInductions)
                    .HasForeignKey(d => d.LastActionUser)
                    .HasConstraintName("FKd6a31x0to3rl5tu0yufrjmnu1");

                entity.HasOne(d => d.Learnership)
                    .WithMany(p => p.WorkplaceMonitoringLearnerInductions)
                    .HasForeignKey(d => d.LearnershipId)
                    .HasConstraintName("FK5cvr656ydx8foqv2pr8ohn1t1");

                entity.HasOne(d => d.NonCreditBearingIntervationTitle)
                    .WithMany(p => p.WorkplaceMonitoringLearnerInductions)
                    .HasForeignKey(d => d.NonCreditBearingIntervationTitleId)
                    .HasConstraintName("FKovfgqhjlvnwpn9bm3uyaclj9f");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.WorkplaceMonitoringLearnerInductions)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKglcpi17iu92nmi3u60h8q1xxe");

                entity.HasOne(d => d.SkillsProgram)
                    .WithMany(p => p.WorkplaceMonitoringLearnerInductions)
                    .HasForeignKey(d => d.SkillsProgramId)
                    .HasConstraintName("FKn4ap83k949xf1rcms697x1elr");

                entity.HasOne(d => d.SkillsSet)
                    .WithMany(p => p.WorkplaceMonitoringLearnerInductions)
                    .HasForeignKey(d => d.SkillsSetId)
                    .HasConstraintName("FKd5052wpo367amoea623a544en");

                entity.HasOne(d => d.UnitStandard)
                    .WithMany(p => p.WorkplaceMonitoringLearnerInductions)
                    .HasForeignKey(d => d.UnitStandardId)
                    .HasConstraintName("FKkl8ri6cwpfusic8pawvn33kmn");
            });

            modelBuilder.Entity<WorkplaceMonitoringLearnerInductionHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("workplace_monitoring_learner_induction_hist");

                entity.HasIndex(e => e.Rev, "FKjj1gmt11vx3jf8c95nf0w5pmb");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.LearnershipId).HasColumnName("learnership_id");

                entity.Property(e => e.NonCreditBearingIntervationTitleId).HasColumnName("non_credit_bearing_intervation_title_id");

                entity.Property(e => e.NumberOfAttendees).HasColumnName("number_of_attendees");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.QualificationTypeSelection).HasColumnName("qualification_type_selection");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SkillsProgramId).HasColumnName("skills_program_id");

                entity.Property(e => e.SkillsSetId).HasColumnName("skills_set_id");

                entity.Property(e => e.SystemGenerated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_generated")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.UnitStandardId).HasColumnName("unit_standard_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WorkplaceMonitoringLearnerInductionHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKjj1gmt11vx3jf8c95nf0w5pmb");
            });

            modelBuilder.Entity<WorkplaceMonitoringLearnerPayment>(entity =>
            {
                entity.ToTable("workplace_monitoring_learner_payments");

                entity.HasIndex(e => e.ActiveContractsId, "FKldasjnriiahq8kpjdxnsrs5la");

                entity.HasIndex(e => e.LastActionUser, "FKrjqa4datkb97c43150bysukaw");

                entity.HasIndex(e => e.ProjectImplementationPlanLearnersId, "FKt9xd6y50k8m6ovia4sqahjiqm");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActiveContractsId).HasColumnName("active_contracts_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FinalTranchePaid)
                    .HasColumnType("bit(1)")
                    .HasColumnName("final_tranche_paid");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.PayTranchPayment)
                    .HasColumnType("bit(1)")
                    .HasColumnName("pay_tranch_payment");

                entity.Property(e => e.PaymentAvalible)
                    .HasColumnType("bit(1)")
                    .HasColumnName("payment_avalible");

                entity.Property(e => e.ProjectImplementationPlanLearnersId).HasColumnName("project_implementation_plan_learners_id");

                entity.Property(e => e.RanCheck)
                    .HasColumnType("bit(1)")
                    .HasColumnName("ran_check");

                entity.Property(e => e.ReasonPaymentNotAvalaible)
                    .HasMaxLength(255)
                    .HasColumnName("reason_payment_not_avalaible");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TranchPayment)
                    .HasMaxLength(255)
                    .HasColumnName("tranch_payment");

                entity.HasOne(d => d.ActiveContracts)
                    .WithMany(p => p.WorkplaceMonitoringLearnerPayments)
                    .HasForeignKey(d => d.ActiveContractsId)
                    .HasConstraintName("FKldasjnriiahq8kpjdxnsrs5la");

                entity.HasOne(d => d.LastActionUserNavigation)
                    .WithMany(p => p.WorkplaceMonitoringLearnerPayments)
                    .HasForeignKey(d => d.LastActionUser)
                    .HasConstraintName("FKrjqa4datkb97c43150bysukaw");

                entity.HasOne(d => d.ProjectImplementationPlanLearners)
                    .WithMany(p => p.WorkplaceMonitoringLearnerPayments)
                    .HasForeignKey(d => d.ProjectImplementationPlanLearnersId)
                    .HasConstraintName("FKt9xd6y50k8m6ovia4sqahjiqm");
            });

            modelBuilder.Entity<WorkplaceMonitoringLearnerPaymentsHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("workplace_monitoring_learner_payments_hist");

                entity.HasIndex(e => e.Rev, "FKqpxr4ml4llfpvivx7t85f4h6u");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActiveContractsId).HasColumnName("active_contracts_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FinalTranchePaid)
                    .HasColumnType("bit(1)")
                    .HasColumnName("final_tranche_paid");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.PayTranchPayment)
                    .HasColumnType("bit(1)")
                    .HasColumnName("pay_tranch_payment");

                entity.Property(e => e.PaymentAvalible)
                    .HasColumnType("bit(1)")
                    .HasColumnName("payment_avalible");

                entity.Property(e => e.ProjectImplementationPlanLearnersId).HasColumnName("project_implementation_plan_learners_id");

                entity.Property(e => e.RanCheck)
                    .HasColumnType("bit(1)")
                    .HasColumnName("ran_check");

                entity.Property(e => e.ReasonPaymentNotAvalaible)
                    .HasMaxLength(255)
                    .HasColumnName("reason_payment_not_avalaible");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TranchPayment)
                    .HasMaxLength(255)
                    .HasColumnName("tranch_payment");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WorkplaceMonitoringLearnerPaymentsHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKqpxr4ml4llfpvivx7t85f4h6u");
            });

            modelBuilder.Entity<WorkplaceMonitoringLearnerSurvey>(entity =>
            {
                entity.ToTable("workplace_monitoring_learner_survey");

                entity.HasIndex(e => e.CreateUserId, "FKdm7dbiw4nrt35w61jp8rq22nn");

                entity.HasIndex(e => e.CompanyLearnersId, "FKevnj5g5gkld9vuxif56142ru8");

                entity.HasIndex(e => e.InterventionTypeId, "FKoigqla8ye5f9dae4agr09abc6");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("companyLearners_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.CompanyLearners)
                    .WithMany(p => p.WorkplaceMonitoringLearnerSurveys)
                    .HasForeignKey(d => d.CompanyLearnersId)
                    .HasConstraintName("FKevnj5g5gkld9vuxif56142ru8");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.WorkplaceMonitoringLearnerSurveys)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKdm7dbiw4nrt35w61jp8rq22nn");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.WorkplaceMonitoringLearnerSurveys)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FKoigqla8ye5f9dae4agr09abc6");
            });

            modelBuilder.Entity<WorkplaceMonitoringLearnerSurveyAnswer>(entity =>
            {
                entity.ToTable("workplace_monitoring_learner_survey_answers");

                entity.HasIndex(e => e.LastActionUser, "FKq4wpeohpi24tdr84p5e68io0i");

                entity.HasIndex(e => e.InterventionTypeId, "FKrby21s514qsmo2htcq8901uw8");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Answer).HasColumnName("answer");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.Question)
                    .HasMaxLength(255)
                    .HasColumnName("question");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.WorkplaceMonitoringLearnerSurveyAnswers)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FKrby21s514qsmo2htcq8901uw8");

                entity.HasOne(d => d.LastActionUserNavigation)
                    .WithMany(p => p.WorkplaceMonitoringLearnerSurveyAnswers)
                    .HasForeignKey(d => d.LastActionUser)
                    .HasConstraintName("FKq4wpeohpi24tdr84p5e68io0i");
            });

            modelBuilder.Entity<WorkplaceMonitoringLearnerSurveyAnswersHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("workplace_monitoring_learner_survey_answers_hist");

                entity.HasIndex(e => e.Rev, "FKbusxjm86e6i6e4yf075qo17mp");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Answer).HasColumnName("answer");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.Question)
                    .HasMaxLength(255)
                    .HasColumnName("question");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WorkplaceMonitoringLearnerSurveyAnswersHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKbusxjm86e6i6e4yf075qo17mp");
            });

            modelBuilder.Entity<WorkplaceMonitoringLearnerSurveyHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("workplace_monitoring_learner_survey_hist");

                entity.HasIndex(e => e.Rev, "FKf7se9fowvm3tm8k312jnipiks");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CompanyLearnersId).HasColumnName("companyLearners_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WorkplaceMonitoringLearnerSurveyHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKf7se9fowvm3tm8k312jnipiks");
            });

            modelBuilder.Entity<WorkplaceMonitoringMitigation>(entity =>
            {
                entity.ToTable("workplace_monitoring_mitigation");

                entity.HasIndex(e => e.WorkplaceMonitoringId, "FK5sty3e3xky518e6ichodl2g7b");

                entity.HasIndex(e => e.ResponsibleId, "FKpsvyt3durtyyjepn5ooepsu76");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("action_date");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("due_date");

                entity.Property(e => e.NonComplianceIssue)
                    .HasMaxLength(255)
                    .HasColumnName("non_compliance_issue");

                entity.Property(e => e.ResponsibleId).HasColumnName("responsible_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.WorkplaceMonitoringId).HasColumnName("workplace_monitoring_id");

                entity.HasOne(d => d.Responsible)
                    .WithMany(p => p.WorkplaceMonitoringMitigations)
                    .HasForeignKey(d => d.ResponsibleId)
                    .HasConstraintName("FKpsvyt3durtyyjepn5ooepsu76");

                entity.HasOne(d => d.WorkplaceMonitoring)
                    .WithMany(p => p.WorkplaceMonitoringMitigations)
                    .HasForeignKey(d => d.WorkplaceMonitoringId)
                    .HasConstraintName("FK5sty3e3xky518e6ichodl2g7b");
            });

            modelBuilder.Entity<WorkplaceMonitoringMitigationPlan>(entity =>
            {
                entity.ToTable("workplace_monitoring_mitigation_plan");

                entity.HasIndex(e => e.LearnerSurveyLinkId, "FK1bdxk8eby7q3f6vsujmc5a228");

                entity.HasIndex(e => e.DiscretionaryGrantComplianceLinkSurveyId, "FK5lhgaljyjrxg2fj2n659akqbx");

                entity.HasIndex(e => e.CreateUserId, "FKddkq60qei6ixnw0r62o3685rq");

                entity.HasIndex(e => e.LearnerSurveyAnswerLinkId, "FKdvbtoof4h4yqk692y2qjiydon");

                entity.HasIndex(e => e.WorkplaceMonitoringSiteVisit, "FKg9f91q80qutw998yhynedscli");

                entity.HasIndex(e => e.LastActionUser, "FKq467sej99u0gqk2wpp50v32c5");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActionPlan)
                    .HasMaxLength(255)
                    .HasColumnName("action_plan");

                entity.Property(e => e.AllInfoProvided)
                    .HasColumnType("bit(1)")
                    .HasColumnName("all_info_provided")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CanAction)
                    .HasColumnType("bit(1)")
                    .HasColumnName("can_action")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.DateSubmitted)
                    .HasColumnType("datetime")
                    .HasColumnName("date_submitted");

                entity.Property(e => e.DiscretionaryGrantComplianceLinkSurveyId).HasColumnName("discretionary_grant_compliance_link_survey_id");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("due_date");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.LearnerSurveyAnswerLinkId).HasColumnName("learner_survey_answer_link_id");

                entity.Property(e => e.LearnerSurveyLinkId).HasColumnName("learner_survey_link_id");

                entity.Property(e => e.NonComplianceIssue).HasColumnName("non_compliance_issue");

                entity.Property(e => e.OpenClosed).HasColumnName("open_closed");

                entity.Property(e => e.Responsible)
                    .HasMaxLength(255)
                    .HasColumnName("responsible");

                entity.Property(e => e.SoftDeleted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_deleted")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SystemGenerated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_generated")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SystemGeneratedMessage)
                    .HasMaxLength(255)
                    .HasColumnName("system_generated_message");

                entity.Property(e => e.WorkplaceMonitoringSiteVisit).HasColumnName("workplace_monitoring_site_visit");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.WorkplaceMonitoringMitigationPlanCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKddkq60qei6ixnw0r62o3685rq");

                entity.HasOne(d => d.DiscretionaryGrantComplianceLinkSurvey)
                    .WithMany(p => p.WorkplaceMonitoringMitigationPlans)
                    .HasForeignKey(d => d.DiscretionaryGrantComplianceLinkSurveyId)
                    .HasConstraintName("FK5lhgaljyjrxg2fj2n659akqbx");

                entity.HasOne(d => d.LastActionUserNavigation)
                    .WithMany(p => p.WorkplaceMonitoringMitigationPlanLastActionUserNavigations)
                    .HasForeignKey(d => d.LastActionUser)
                    .HasConstraintName("FKq467sej99u0gqk2wpp50v32c5");

                entity.HasOne(d => d.LearnerSurveyAnswerLink)
                    .WithMany(p => p.WorkplaceMonitoringMitigationPlans)
                    .HasForeignKey(d => d.LearnerSurveyAnswerLinkId)
                    .HasConstraintName("FKdvbtoof4h4yqk692y2qjiydon");

                entity.HasOne(d => d.LearnerSurveyLink)
                    .WithMany(p => p.WorkplaceMonitoringMitigationPlans)
                    .HasForeignKey(d => d.LearnerSurveyLinkId)
                    .HasConstraintName("FK1bdxk8eby7q3f6vsujmc5a228");

                entity.HasOne(d => d.WorkplaceMonitoringSiteVisitNavigation)
                    .WithMany(p => p.WorkplaceMonitoringMitigationPlans)
                    .HasForeignKey(d => d.WorkplaceMonitoringSiteVisit)
                    .HasConstraintName("FKg9f91q80qutw998yhynedscli");
            });

            modelBuilder.Entity<WorkplaceMonitoringMitigationPlanHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("workplace_monitoring_mitigation_plan_hist");

                entity.HasIndex(e => e.Rev, "FKb1i1ta03uy9hbjdhbhwfm16ut");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ActionPlan)
                    .HasMaxLength(255)
                    .HasColumnName("action_plan");

                entity.Property(e => e.AllInfoProvided)
                    .HasColumnType("bit(1)")
                    .HasColumnName("all_info_provided")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CanAction)
                    .HasColumnType("bit(1)")
                    .HasColumnName("can_action")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.DateSubmitted)
                    .HasColumnType("datetime")
                    .HasColumnName("date_submitted");

                entity.Property(e => e.DiscretionaryGrantComplianceLinkSurveyId).HasColumnName("discretionary_grant_compliance_link_survey_id");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("due_date");

                entity.Property(e => e.LastActionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_action_date");

                entity.Property(e => e.LastActionUser).HasColumnName("last_action_user");

                entity.Property(e => e.LearnerSurveyAnswerLinkId).HasColumnName("learner_survey_answer_link_id");

                entity.Property(e => e.LearnerSurveyLinkId).HasColumnName("learner_survey_link_id");

                entity.Property(e => e.NonComplianceIssue).HasColumnName("non_compliance_issue");

                entity.Property(e => e.OpenClosed).HasColumnName("open_closed");

                entity.Property(e => e.Responsible)
                    .HasMaxLength(255)
                    .HasColumnName("responsible");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SoftDeleted)
                    .HasColumnType("bit(1)")
                    .HasColumnName("soft_deleted")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SystemGenerated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_generated")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SystemGeneratedMessage)
                    .HasMaxLength(255)
                    .HasColumnName("system_generated_message");

                entity.Property(e => e.WorkplaceMonitoringSiteVisit).HasColumnName("workplace_monitoring_site_visit");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WorkplaceMonitoringMitigationPlanHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKb1i1ta03uy9hbjdhbhwfm16ut");
            });

            modelBuilder.Entity<WorkplaceMonitoringPurposeOfSiteVisit>(entity =>
            {
                entity.ToTable("workplace_monitoring_purpose_of_site_visit");

                entity.HasIndex(e => e.WorkplaceMonitoringId, "FK6tngpisakvimktn18smoc9bsw");

                entity.HasIndex(e => e.PurposeOfSiteVisit, "FK974o6n4esn8u8d670x9aw3hdi");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.PurposeOfSiteVisit).HasColumnName("purpose_of_site_visit");

                entity.Property(e => e.WorkplaceMonitoringId).HasColumnName("workplace_monitoring_id");

                entity.HasOne(d => d.PurposeOfSiteVisitNavigation)
                    .WithMany(p => p.WorkplaceMonitoringPurposeOfSiteVisits)
                    .HasForeignKey(d => d.PurposeOfSiteVisit)
                    .HasConstraintName("FK974o6n4esn8u8d670x9aw3hdi");

                entity.HasOne(d => d.WorkplaceMonitoring)
                    .WithMany(p => p.WorkplaceMonitoringPurposeOfSiteVisits)
                    .HasForeignKey(d => d.WorkplaceMonitoringId)
                    .HasConstraintName("FK6tngpisakvimktn18smoc9bsw");
            });

            modelBuilder.Entity<WorkplaceMonitoringSiteVisit>(entity =>
            {
                entity.ToTable("workplace_monitoring_site_visit");

                entity.HasIndex(e => e.NonComplianceSubmittedUser, "FK3alqle2kc29prbwfbrhtky2jj");

                entity.HasIndex(e => e.ManagerAssignedCloUserId, "FK3aqrr644xehr12wvds5ju1eif");

                entity.HasIndex(e => e.ApprovedUserId, "FK67kwkuhy0myd1g0amhs5qx21t");

                entity.HasIndex(e => e.ManagerAssignedCrmUserId, "FKdgacbuyokqm3h2jupk9gy00gi");

                entity.HasIndex(e => e.CompanyId, "FKembe0yt3582kqwwowmdryh43t");

                entity.HasIndex(e => e.CloUserId, "FKf49ys6na3ucboq1dj136urf7t");

                entity.HasIndex(e => e.CrmUserId, "FKo09538l0yh0n6rx976g1aoin0");

                entity.HasIndex(e => e.CreateUserId, "FKok4ii3l7utkjdhbmvcx8xfeu2");

                entity.HasIndex(e => e.NonComplianceApprovalUserId, "FKq3g3mtx0oyfnvolsp22llrogg");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.ApprovedUserId).HasColumnName("approved_user_id");

                entity.Property(e => e.AwaitingInitiation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("awaiting_initiation")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CloUserId).HasColumnName("clo_user_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CrmUserId).HasColumnName("crm_user_id");

                entity.Property(e => e.ManagerAssignedCloUserId).HasColumnName("manager_assigned_clo_user_id");

                entity.Property(e => e.ManagerAssignedCrmUserId).HasColumnName("manager_assigned_crm_user_id");

                entity.Property(e => e.MonitoringDate)
                    .HasColumnType("datetime")
                    .HasColumnName("monitoring_date");

                entity.Property(e => e.NonComplianceApprovalAte)
                    .HasColumnType("datetime")
                    .HasColumnName("non_compliance_approval_ate");

                entity.Property(e => e.NonComplianceApprovalUserId).HasColumnName("non_compliance_approval_user_id");

                entity.Property(e => e.NonComplianceHoldingArea)
                    .HasColumnType("bit(1)")
                    .HasColumnName("non_compliance_holding_area")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NonComplianceSubmittedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("non_compliance_submitted_date");

                entity.Property(e => e.NonComplianceSubmittedUser).HasColumnName("non_compliance_submitted_user");

                entity.Property(e => e.NonCompliancesIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("non_compliances_identified")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SignOffState)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sign_off_state")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.HasOne(d => d.ApprovedUser)
                    .WithMany(p => p.WorkplaceMonitoringSiteVisitApprovedUsers)
                    .HasForeignKey(d => d.ApprovedUserId)
                    .HasConstraintName("FK67kwkuhy0myd1g0amhs5qx21t");

                entity.HasOne(d => d.CloUser)
                    .WithMany(p => p.WorkplaceMonitoringSiteVisitCloUsers)
                    .HasForeignKey(d => d.CloUserId)
                    .HasConstraintName("FKf49ys6na3ucboq1dj136urf7t");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.WorkplaceMonitoringSiteVisits)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKembe0yt3582kqwwowmdryh43t");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.WorkplaceMonitoringSiteVisitCreateUsers)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKok4ii3l7utkjdhbmvcx8xfeu2");

                entity.HasOne(d => d.CrmUser)
                    .WithMany(p => p.WorkplaceMonitoringSiteVisitCrmUsers)
                    .HasForeignKey(d => d.CrmUserId)
                    .HasConstraintName("FKo09538l0yh0n6rx976g1aoin0");

                entity.HasOne(d => d.ManagerAssignedCloUser)
                    .WithMany(p => p.WorkplaceMonitoringSiteVisitManagerAssignedCloUsers)
                    .HasForeignKey(d => d.ManagerAssignedCloUserId)
                    .HasConstraintName("FK3aqrr644xehr12wvds5ju1eif");

                entity.HasOne(d => d.ManagerAssignedCrmUser)
                    .WithMany(p => p.WorkplaceMonitoringSiteVisitManagerAssignedCrmUsers)
                    .HasForeignKey(d => d.ManagerAssignedCrmUserId)
                    .HasConstraintName("FKdgacbuyokqm3h2jupk9gy00gi");

                entity.HasOne(d => d.NonComplianceApprovalUser)
                    .WithMany(p => p.WorkplaceMonitoringSiteVisitNonComplianceApprovalUsers)
                    .HasForeignKey(d => d.NonComplianceApprovalUserId)
                    .HasConstraintName("FKq3g3mtx0oyfnvolsp22llrogg");

                entity.HasOne(d => d.NonComplianceSubmittedUserNavigation)
                    .WithMany(p => p.WorkplaceMonitoringSiteVisitNonComplianceSubmittedUserNavigations)
                    .HasForeignKey(d => d.NonComplianceSubmittedUser)
                    .HasConstraintName("FK3alqle2kc29prbwfbrhtky2jj");
            });

            modelBuilder.Entity<WorkplaceMonitoringSiteVisitHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("workplace_monitoring_site_visit_hist");

                entity.HasIndex(e => e.Rev, "FKosgcxsl98nbgd8ies08kshcpd");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.ApprovedUserId).HasColumnName("approved_user_id");

                entity.Property(e => e.AwaitingInitiation)
                    .HasColumnType("bit(1)")
                    .HasColumnName("awaiting_initiation")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CloUserId).HasColumnName("clo_user_id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.CrmUserId).HasColumnName("crm_user_id");

                entity.Property(e => e.ManagerAssignedCloUserId).HasColumnName("manager_assigned_clo_user_id");

                entity.Property(e => e.ManagerAssignedCrmUserId).HasColumnName("manager_assigned_crm_user_id");

                entity.Property(e => e.MonitoringDate)
                    .HasColumnType("datetime")
                    .HasColumnName("monitoring_date");

                entity.Property(e => e.NonComplianceApprovalAte)
                    .HasColumnType("datetime")
                    .HasColumnName("non_compliance_approval_ate");

                entity.Property(e => e.NonComplianceApprovalUserId).HasColumnName("non_compliance_approval_user_id");

                entity.Property(e => e.NonComplianceHoldingArea)
                    .HasColumnType("bit(1)")
                    .HasColumnName("non_compliance_holding_area")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NonComplianceSubmittedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("non_compliance_submitted_date");

                entity.Property(e => e.NonComplianceSubmittedUser).HasColumnName("non_compliance_submitted_user");

                entity.Property(e => e.NonCompliancesIdentified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("non_compliances_identified")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SignOffState)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sign_off_state")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WorkplaceMonitoringSiteVisitHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKosgcxsl98nbgd8ies08kshcpd");
            });

            modelBuilder.Entity<WpaChangeLog>(entity =>
            {
                entity.ToTable("wpa_change_log");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.Value)
                    .HasColumnType("bit(1)")
                    .HasColumnName("value");
            });

            modelBuilder.Entity<Wsp>(entity =>
            {
                entity.ToTable("wsp");

                entity.HasIndex(e => e.CreateUsersId, "FK233f9p4545sd30mftkcqg8s1m");

                entity.HasIndex(e => e.MajorityUnionId, "FK72670l5at98nkjhrwnb82bhq5");

                entity.HasIndex(e => e.DeviatedWorkplaceSkillsPlan, "FK72o5hkfttmgcsyxkac9o1aja2");

                entity.HasIndex(e => e.CoFundingPartnership, "FK7qmoos1gwg7gbwltr4vywddwx");

                entity.HasIndex(e => e.DgYearId, "FK9936tocbme16b61skn7xh3xgf");

                entity.HasIndex(e => e.TrackSkillsGap, "FKa2dgmaqb84fh0053ertd62pvq");

                entity.HasIndex(e => e.CompanyId, "FKch2vtvt619gq8diq8ybag421a");

                entity.HasIndex(e => e.ProjectOwner, "FKd6oig9neuhymejdvhrbokaiu8");

                entity.HasIndex(e => e.DgProjectTypeId, "FKeqhue5hf8kv4dsf4i6xiu4e02");

                entity.HasIndex(e => e.UserReopenedApplication, "FKgwna5i3kny9yk1l26l3kgg4ej");

                entity.HasIndex(e => e.RecognitionAgreementId, "FKhy0f3w13xx022qpqfgv7frnk8");

                entity.HasIndex(e => e.ProjectManager, "FKjq5vf0715ts67kup81i94hpl");

                entity.HasIndex(e => e.EmploymentEquityPlanInline, "FKlb2a41vhv2uogwp90wvddfx79");

                entity.HasIndex(e => e.CompletedTraining, "FKm3o02v0rgg178rhcw450t9lls");

                entity.HasIndex(e => e.SkillsGapTrackSelection, "FKnkbxjia7s67wvu6nm424wdyq5");

                entity.HasIndex(e => e.UserRequestedMancoApproval, "FKovvxwyqwjaa26r2tdwbfqr6q1");

                entity.HasIndex(e => e.CompanyContact, "FKsl6oueked1l2jdy3r02fdbwli");

                entity.HasIndex(e => e.TrainingReportedAtrPtrId, "FKsn7bt0pbw28t8th7minsm6c1s");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AdminReopened)
                    .HasColumnType("bit(1)")
                    .HasColumnName("admin_reopened");

                entity.Property(e => e.AlignmentToMersetaStrategicPriorities).HasColumnName("alignment_to_merseta_strategic_priorities");

                entity.Property(e => e.ApllicationReopenedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("apllicationReopenedDate");

                entity.Property(e => e.ApplicationReopened)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_reopened");

                entity.Property(e => e.ApprovedAmount).HasColumnName("approved_amount");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.Benefits).HasColumnName("benefits");

                entity.Property(e => e.CoFundingPartnership).HasColumnName("co_funding_partnership");

                entity.Property(e => e.CompanyContact).HasColumnName("company_contact");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompletedTraining).HasColumnName("completed_training");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUsersId).HasColumnName("create_users_id");

                entity.Property(e => e.DateMancoApprovalRequired)
                    .HasColumnType("datetime")
                    .HasColumnName("date_manco_approval_required");

                entity.Property(e => e.DeviatedWorkplaceSkillsPlan).HasColumnName("deviated_workplace_skills_plan");

                entity.Property(e => e.DgProjectTypeId).HasColumnName("dg_project_type_id");

                entity.Property(e => e.DgTerminationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("dg_termination_date");

                entity.Property(e => e.DgYearId).HasColumnName("dg_year_id");

                entity.Property(e => e.EmploymentEquityPlanInline).HasColumnName("employmentEquityPlanInline");

                entity.Property(e => e.EstimatedOverallProjectCost).HasColumnName("estimated_overall_project_cost");

                entity.Property(e => e.FinYear).HasColumnName("fin_year");

                entity.Property(e => e.FinalResponse).HasColumnName("final_response");

                entity.Property(e => e.FromDatePeriod)
                    .HasColumnType("datetime")
                    .HasColumnName("from_date_period");

                entity.Property(e => e.GrantRejected)
                    .HasColumnType("bit(1)")
                    .HasColumnName("grant_rejected");

                entity.Property(e => e.GrantRejectedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("grant_rejected_date");

                entity.Property(e => e.HoldingRoomStatusEnum).HasColumnName("holding_room_status_enum");

                entity.Property(e => e.Interventions).HasColumnName("interventions");

                entity.Property(e => e.Location).HasColumnName("location");

                entity.Property(e => e.MajorityUnionId).HasColumnName("majority_union_id");

                entity.Property(e => e.MancoApprovalRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manco_approval_required")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MancoDecisionReached)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manco_decision_reached")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ManuallyAdded)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manually_added")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ManuallySubmissionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("manually_submission_date");

                entity.Property(e => e.Outcomes).HasColumnName("outcomes");

                entity.Property(e => e.PercentagePayrollSpent).HasColumnName("percentage_payroll_spent");

                entity.Property(e => e.PercentageTrainingCostSpentTraining).HasColumnName("percentage_training_cost_spent_training");

                entity.Property(e => e.PotentialRisks).HasColumnName("potential_risks");

                entity.Property(e => e.ProjectDescription).HasColumnName("project_description");

                entity.Property(e => e.ProjectManager).HasColumnName("project_manager");

                entity.Property(e => e.ProjectOwner).HasColumnName("project_owner");

                entity.Property(e => e.Purpose).HasColumnName("purpose");

                entity.Property(e => e.RecognitionAgreementId).HasColumnName("recognition_agreement_id");

                entity.Property(e => e.RejectionNotified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rejection_notified")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ReopenedToLocation).HasColumnName("reopened_to_location");

                entity.Property(e => e.RequireDisputeDocs)
                    .HasColumnType("bit(1)")
                    .HasColumnName("require_dispute_docs")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.RequireSignOffUpload)
                    .HasColumnType("bit(1)")
                    .HasColumnName("require_sign_off_upload")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SdfAppealedGrant)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sdf_appealed_grant")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SdfAppealedGrantDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sdf_appealed_grant_date");

                entity.Property(e => e.SkillsGapTrackSelection).HasColumnName("skills_gap_track_selection");

                entity.Property(e => e.SkillsGapTrackSelectionDetail)
                    .HasMaxLength(500)
                    .HasColumnName("skills_gap_track_selection_detail");

                entity.Property(e => e.SubmissionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("submission_date");

                entity.Property(e => e.SystemApprovalRejection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_approval_rejection");

                entity.Property(e => e.ToDatePeriod)
                    .HasColumnType("datetime")
                    .HasColumnName("to_date_period");

                entity.Property(e => e.TotalEstimatedCostTraining).HasColumnName("total_estimated_cost_training");

                entity.Property(e => e.TotalPayroll).HasColumnName("total_payroll");

                entity.Property(e => e.TotalTrainingCosts).HasColumnName("total_training_costs");

                entity.Property(e => e.TrackSkillsGap).HasColumnName("track_skills_gap");

                entity.Property(e => e.TrainingReportedAtrPtrId).HasColumnName("training_reported_atr_ptr_id");

                entity.Property(e => e.UserReopenedApplication).HasColumnName("user_reopened_application");

                entity.Property(e => e.UserRequestedMancoApproval).HasColumnName("user_requested_manco_approval");

                entity.Property(e => e.WithSdf)
                    .HasColumnType("bit(1)")
                    .HasColumnName("with_sdf")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.WspGuid)
                    .HasMaxLength(100)
                    .HasColumnName("wsp_guid");

                entity.Property(e => e.WspStatusEnum).HasColumnName("wsp_status_enum");

                entity.Property(e => e.WspType).HasColumnName("wsp_type");

                entity.HasOne(d => d.CoFundingPartnershipNavigation)
                    .WithMany(p => p.WspCoFundingPartnershipNavigations)
                    .HasForeignKey(d => d.CoFundingPartnership)
                    .HasConstraintName("FK7qmoos1gwg7gbwltr4vywddwx");

                entity.HasOne(d => d.CompanyContactNavigation)
                    .WithMany(p => p.Wsps)
                    .HasForeignKey(d => d.CompanyContact)
                    .HasConstraintName("FKsl6oueked1l2jdy3r02fdbwli");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.Wsps)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKch2vtvt619gq8diq8ybag421a");

                entity.HasOne(d => d.CompletedTrainingNavigation)
                    .WithMany(p => p.WspCompletedTrainingNavigations)
                    .HasForeignKey(d => d.CompletedTraining)
                    .HasConstraintName("FKm3o02v0rgg178rhcw450t9lls");

                entity.HasOne(d => d.CreateUsers)
                    .WithMany(p => p.WspCreateUsers)
                    .HasForeignKey(d => d.CreateUsersId)
                    .HasConstraintName("FK233f9p4545sd30mftkcqg8s1m");

                entity.HasOne(d => d.DeviatedWorkplaceSkillsPlanNavigation)
                    .WithMany(p => p.WspDeviatedWorkplaceSkillsPlanNavigations)
                    .HasForeignKey(d => d.DeviatedWorkplaceSkillsPlan)
                    .HasConstraintName("FK72o5hkfttmgcsyxkac9o1aja2");

                entity.HasOne(d => d.DgProjectType)
                    .WithMany(p => p.Wsps)
                    .HasForeignKey(d => d.DgProjectTypeId)
                    .HasConstraintName("FKeqhue5hf8kv4dsf4i6xiu4e02");

               entity.HasOne(d => d.DgYear)
                    .WithMany(p => p.Wsps)
                    .HasForeignKey(d => d.DgYearId)
                    .HasConstraintName("FK9936tocbme16b61skn7xh3xgf"); 

                entity.HasOne(d => d.EmploymentEquityPlanInlineNavigation)
                    .WithMany(p => p.WspEmploymentEquityPlanInlineNavigations)
                    .HasForeignKey(d => d.EmploymentEquityPlanInline)
                    .HasConstraintName("FKlb2a41vhv2uogwp90wvddfx79");

                entity.HasOne(d => d.MajorityUnion)
                    .WithMany(p => p.WspMajorityUnions)
                    .HasForeignKey(d => d.MajorityUnionId)
                    .HasConstraintName("FK72670l5at98nkjhrwnb82bhq5");

                entity.HasOne(d => d.ProjectManagerNavigation)
                    .WithMany(p => p.WspProjectManagerNavigations)
                    .HasForeignKey(d => d.ProjectManager)
                    .HasConstraintName("FKjq5vf0715ts67kup81i94hpl");

                entity.HasOne(d => d.ProjectOwnerNavigation)
                    .WithMany(p => p.WspProjectOwnerNavigations)
                    .HasForeignKey(d => d.ProjectOwner)
                    .HasConstraintName("FKd6oig9neuhymejdvhrbokaiu8");

                entity.HasOne(d => d.RecognitionAgreement)
                    .WithMany(p => p.WspRecognitionAgreements)
                    .HasForeignKey(d => d.RecognitionAgreementId)
                    .HasConstraintName("FKhy0f3w13xx022qpqfgv7frnk8");

                entity.HasOne(d => d.SkillsGapTrackSelectionNavigation)
                    .WithMany(p => p.Wsps)
                    .HasForeignKey(d => d.SkillsGapTrackSelection)
                    .HasConstraintName("FKnkbxjia7s67wvu6nm424wdyq5");

                entity.HasOne(d => d.TrackSkillsGapNavigation)
                    .WithMany(p => p.WspTrackSkillsGapNavigations)
                    .HasForeignKey(d => d.TrackSkillsGap)
                    .HasConstraintName("FKa2dgmaqb84fh0053ertd62pvq");

                entity.HasOne(d => d.TrainingReportedAtrPtr)
                    .WithMany(p => p.Wsps)
                    .HasForeignKey(d => d.TrainingReportedAtrPtrId)
                    .HasConstraintName("FKsn7bt0pbw28t8th7minsm6c1s");

                entity.HasOne(d => d.UserReopenedApplicationNavigation)
                    .WithMany(p => p.WspUserReopenedApplicationNavigations)
                    .HasForeignKey(d => d.UserReopenedApplication)
                    .HasConstraintName("FKgwna5i3kny9yk1l26l3kgg4ej");

                entity.HasOne(d => d.UserRequestedMancoApprovalNavigation)
                    .WithMany(p => p.WspUserRequestedMancoApprovalNavigations)
                    .HasForeignKey(d => d.UserRequestedMancoApproval)
                    .HasConstraintName("FKovvxwyqwjaa26r2tdwbfqr6q1");
            });

            modelBuilder.Entity<WspApprovedCheck>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("wsp_approved_check");

                entity.HasComment("View 'merseta.wsp_approved_check' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them");
            });

            modelBuilder.Entity<WspCalculationDatum>(entity =>
            {
                entity.ToTable("wsp_calculation_data");

                entity.HasIndex(e => e.OfoCodesId, "FK593yh8s6aky58wkxd25yoib6o");

                entity.HasIndex(e => e.FundingId, "FK7ib69fcs5j892u09yp7m969uw");

                entity.HasIndex(e => e.CompanyId, "FKgoq9iaf2u2hvy9iqnnaclq3er");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("description");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("end_date");

                entity.Property(e => e.Female).HasColumnName("female");

                entity.Property(e => e.FundingId).HasColumnName("funding_id");

                entity.Property(e => e.FundingMethod)
                    .HasMaxLength(255)
                    .HasColumnName("funding_method");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(255)
                    .HasColumnName("levy_number");

                entity.Property(e => e.Male).HasColumnName("male");

                entity.Property(e => e.NqfLevelBandDesc)
                    .HasMaxLength(255)
                    .HasColumnName("nqf_level_band_desc");

                entity.Property(e => e.OfoCode)
                    .HasMaxLength(255)
                    .HasColumnName("ofo_code");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.TotalLearners).HasColumnName("total_learners");

                entity.Property(e => e.TrainingDescription)
                    .HasMaxLength(255)
                    .HasColumnName("training_description");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.WspCalculationData)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKgoq9iaf2u2hvy9iqnnaclq3er");

                entity.HasOne(d => d.Funding)
                    .WithMany(p => p.WspCalculationData)
                    .HasForeignKey(d => d.FundingId)
                    .HasConstraintName("FK7ib69fcs5j892u09yp7m969uw");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.WspCalculationData)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FK593yh8s6aky58wkxd25yoib6o");
            });

            modelBuilder.Entity<WspChecklist>(entity =>
            {
                entity.ToTable("wsp_checklist");

                entity.HasIndex(e => e.AtrSubmitted, "FK1r6hnid2vy4v1sgnnfxlujby9");

                entity.HasIndex(e => e.DeviationMotivation, "FK1uso94ewgonjrenwvywjebiib");

                entity.HasIndex(e => e.EmployerRepresentativePartTrainingCommittee, "FK2h969ecm0ofx2t6h22c52o28f");

                entity.HasIndex(e => e.OtherSdfSigned, "FK2im976hktknmvlhh4gbv7mbku");

                entity.HasIndex(e => e.BankingDetailsChecked, "FK6bg1dj1e0hwf4cgmulhy4nqtx");

                entity.HasIndex(e => e.WspId, "FK7h7sjwo0fd1acrxu3orjwbhiv");

                entity.HasIndex(e => e.WorkplaceSkillsPlanSubmitted, "FK8mprtkr3q4t6dcaliceiv2x4n");

                entity.HasIndex(e => e.TrainingDeviationMotivationApproved, "FKab6jrrndiqek7np6adx6wwsud");

                entity.HasIndex(e => e.MajorityUnionId, "FKav7oel5tnqv5d6jrjk0lkmtvk");

                entity.HasIndex(e => e.AtrImplementedPercent, "FKek6yqvthric5ro1bmvpv1tjbr");

                entity.HasIndex(e => e.NonNqfMotivation, "FKf7w2y5qu5vd3ywbwx6tpwd5lt");

                entity.HasIndex(e => e.TrainingCommitteeMinutesApproved, "FKfcwwwkct9et2b8ckndit042km");

                entity.HasIndex(e => e.SignOffComplete, "FKhvv1en1j477fx81kynet9fag2");

                entity.HasIndex(e => e.ExtensionGranted, "FKiarg6japfdh2pmybq2nm6tdy5");

                entity.HasIndex(e => e.TradePartOfTrainingCommittee, "FKk55hpst2pv8svwupblk6l8pf");

                entity.HasIndex(e => e.SignedRecognitionAgreement, "FKnt5ngttxfwapa1bjkynfsyyu0");

                entity.HasIndex(e => e.PivitolPlanSubmitted, "FKokyiyeity4n4yly8mivrqxkrm");

                entity.HasIndex(e => e.WspY18Submitted, "FKpm3fkdfrgpywrmdkxtnbjgn7");

                entity.HasIndex(e => e.MinutesUplaoded, "FKppr2fmitxxjv38tn5breyv8ab");

                entity.HasIndex(e => e.NonNqfTrainingMotivationApproved, "FKsbo4hrj6vyfysakio0bnlwv5w");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AtrImplementedPercent).HasColumnName("atr_implemented_percent");

                entity.Property(e => e.AtrSubmitted).HasColumnName("atr_submitted");

                entity.Property(e => e.BankingDetailsChecked).HasColumnName("banking_details_checked");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DeviationMotivation).HasColumnName("deviation_motivation");

                entity.Property(e => e.EmployerRepresentativePartTrainingCommittee).HasColumnName("employer_representative_part_training_committee");

                entity.Property(e => e.ExtensionGranted).HasColumnName("extension_granted");

                entity.Property(e => e.GrantDeviated)
                    .HasColumnType("bit(1)")
                    .HasColumnName("grant_deviated");

                entity.Property(e => e.MajorityUnionId).HasColumnName("majority_union_id");

                entity.Property(e => e.MinutesUplaoded).HasColumnName("minutes_uplaoded");

                entity.Property(e => e.NonNqfMotivation).HasColumnName("non_nqf_Motivation");

                entity.Property(e => e.NonNqfTrainingMotivationApproved).HasColumnName("non_nqf_training_motivation_approved");

                entity.Property(e => e.OtherSdfSigned).HasColumnName("other_sdf_signed");

                entity.Property(e => e.PercentageCalculated)
                    .HasPrecision(19, 2)
                    .HasColumnName("percentage_calculated");

                entity.Property(e => e.PivitolPlanSubmitted).HasColumnName("pivitol_plan_submitted");

                entity.Property(e => e.SignOffComplete).HasColumnName("sign_off_complete");

                entity.Property(e => e.SignedRecognitionAgreement).HasColumnName("signed_recognition_agreement");

                entity.Property(e => e.TradePartOfTrainingCommittee).HasColumnName("trade_part_of_training_committee");

                entity.Property(e => e.TrainingCommitteeMinutesApproved).HasColumnName("training_committee_minutes_approved");

                entity.Property(e => e.TrainingDeviationMotivationApproved).HasColumnName("training_deviation_motivation_approved");

                entity.Property(e => e.WorkplaceSkillsPlanSubmitted).HasColumnName("workplace_skills_plan_submitted");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.Property(e => e.WspY18Submitted).HasColumnName("wsp_y18_submitted");

                entity.HasOne(d => d.AtrImplementedPercentNavigation)
                    .WithMany(p => p.WspChecklistAtrImplementedPercentNavigations)
                    .HasForeignKey(d => d.AtrImplementedPercent)
                    .HasConstraintName("FKek6yqvthric5ro1bmvpv1tjbr");

                entity.HasOne(d => d.AtrSubmittedNavigation)
                    .WithMany(p => p.WspChecklistAtrSubmittedNavigations)
                    .HasForeignKey(d => d.AtrSubmitted)
                    .HasConstraintName("FK1r6hnid2vy4v1sgnnfxlujby9");

                entity.HasOne(d => d.BankingDetailsCheckedNavigation)
                    .WithMany(p => p.WspChecklistBankingDetailsCheckedNavigations)
                    .HasForeignKey(d => d.BankingDetailsChecked)
                    .HasConstraintName("FK6bg1dj1e0hwf4cgmulhy4nqtx");

                entity.HasOne(d => d.DeviationMotivationNavigation)
                    .WithMany(p => p.WspChecklistDeviationMotivationNavigations)
                    .HasForeignKey(d => d.DeviationMotivation)
                    .HasConstraintName("FK1uso94ewgonjrenwvywjebiib");

                entity.HasOne(d => d.EmployerRepresentativePartTrainingCommitteeNavigation)
                    .WithMany(p => p.WspChecklistEmployerRepresentativePartTrainingCommitteeNavigations)
                    .HasForeignKey(d => d.EmployerRepresentativePartTrainingCommittee)
                    .HasConstraintName("FK2h969ecm0ofx2t6h22c52o28f");

                entity.HasOne(d => d.ExtensionGrantedNavigation)
                    .WithMany(p => p.WspChecklistExtensionGrantedNavigations)
                    .HasForeignKey(d => d.ExtensionGranted)
                    .HasConstraintName("FKiarg6japfdh2pmybq2nm6tdy5");

                entity.HasOne(d => d.MajorityUnion)
                    .WithMany(p => p.WspChecklists)
                    .HasForeignKey(d => d.MajorityUnionId)
                    .HasConstraintName("FKav7oel5tnqv5d6jrjk0lkmtvk");

                entity.HasOne(d => d.MinutesUplaodedNavigation)
                    .WithMany(p => p.WspChecklistMinutesUplaodedNavigations)
                    .HasForeignKey(d => d.MinutesUplaoded)
                    .HasConstraintName("FKppr2fmitxxjv38tn5breyv8ab");

                entity.HasOne(d => d.NonNqfMotivationNavigation)
                    .WithMany(p => p.WspChecklistNonNqfMotivationNavigations)
                    .HasForeignKey(d => d.NonNqfMotivation)
                    .HasConstraintName("FKf7w2y5qu5vd3ywbwx6tpwd5lt");

                entity.HasOne(d => d.NonNqfTrainingMotivationApprovedNavigation)
                    .WithMany(p => p.WspChecklistNonNqfTrainingMotivationApprovedNavigations)
                    .HasForeignKey(d => d.NonNqfTrainingMotivationApproved)
                    .HasConstraintName("FKsbo4hrj6vyfysakio0bnlwv5w");

                entity.HasOne(d => d.OtherSdfSignedNavigation)
                    .WithMany(p => p.WspChecklistOtherSdfSignedNavigations)
                    .HasForeignKey(d => d.OtherSdfSigned)
                    .HasConstraintName("FK2im976hktknmvlhh4gbv7mbku");

                entity.HasOne(d => d.PivitolPlanSubmittedNavigation)
                    .WithMany(p => p.WspChecklistPivitolPlanSubmittedNavigations)
                    .HasForeignKey(d => d.PivitolPlanSubmitted)
                    .HasConstraintName("FKokyiyeity4n4yly8mivrqxkrm");

                entity.HasOne(d => d.SignOffCompleteNavigation)
                    .WithMany(p => p.WspChecklistSignOffCompleteNavigations)
                    .HasForeignKey(d => d.SignOffComplete)
                    .HasConstraintName("FKhvv1en1j477fx81kynet9fag2");

                entity.HasOne(d => d.SignedRecognitionAgreementNavigation)
                    .WithMany(p => p.WspChecklistSignedRecognitionAgreementNavigations)
                    .HasForeignKey(d => d.SignedRecognitionAgreement)
                    .HasConstraintName("FKnt5ngttxfwapa1bjkynfsyyu0");

                entity.HasOne(d => d.TradePartOfTrainingCommitteeNavigation)
                    .WithMany(p => p.WspChecklistTradePartOfTrainingCommitteeNavigations)
                    .HasForeignKey(d => d.TradePartOfTrainingCommittee)
                    .HasConstraintName("FKk55hpst2pv8svwupblk6l8pf");

                entity.HasOne(d => d.TrainingCommitteeMinutesApprovedNavigation)
                    .WithMany(p => p.WspChecklistTrainingCommitteeMinutesApprovedNavigations)
                    .HasForeignKey(d => d.TrainingCommitteeMinutesApproved)
                    .HasConstraintName("FKfcwwwkct9et2b8ckndit042km");

                entity.HasOne(d => d.TrainingDeviationMotivationApprovedNavigation)
                    .WithMany(p => p.WspChecklistTrainingDeviationMotivationApprovedNavigations)
                    .HasForeignKey(d => d.TrainingDeviationMotivationApproved)
                    .HasConstraintName("FKab6jrrndiqek7np6adx6wwsud");

                entity.HasOne(d => d.WorkplaceSkillsPlanSubmittedNavigation)
                    .WithMany(p => p.WspChecklistWorkplaceSkillsPlanSubmittedNavigations)
                    .HasForeignKey(d => d.WorkplaceSkillsPlanSubmitted)
                    .HasConstraintName("FK8mprtkr3q4t6dcaliceiv2x4n");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.WspChecklists)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FK7h7sjwo0fd1acrxu3orjwbhiv");

                entity.HasOne(d => d.WspY18SubmittedNavigation)
                    .WithMany(p => p.WspChecklistWspY18SubmittedNavigations)
                    .HasForeignKey(d => d.WspY18Submitted)
                    .HasConstraintName("FKpm3fkdfrgpywrmdkxtnbjgn7");
            });

            modelBuilder.Entity<WspChecklistAud>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("wsp_checklist_AUD");

                entity.HasIndex(e => e.Rev, "FKm8ag2x6pxfslkixsx9t1amj5p");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.MajorityUnionId).HasColumnName("majority_union_id");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WspChecklistAuds)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKm8ag2x6pxfslkixsx9t1amj5p");
            });

            modelBuilder.Entity<WspCompanyAddressHistory>(entity =>
            {
                entity.ToTable("wsp_company_address_history");

                entity.HasIndex(e => e.TownId, "FK1jpyj1ycmnva0r5a9bkapxwx");

                entity.HasIndex(e => e.CompanyId, "FK9lsuemwpk4l3u9qpog9d2rp61");

                entity.HasIndex(e => e.HostingCompanyId, "FKg43tope61n8g449qulorjx12t");

                entity.HasIndex(e => e.WspCompanyMainHistoryId, "FKh00aus21hp9e1ru6fih49narh");

                entity.HasIndex(e => e.StatsSaareaCodeId, "FKlnvaki1jq3n7y5oejdgtxov4h");

                entity.HasIndex(e => e.SitesId, "FKp856fvfsx97mnf46tyb14999m");

                entity.HasIndex(e => e.UserId, "FKq0upf2j95usw4t0t527j72m3j");

                entity.HasIndex(e => e.MunicipalityId, "FKqhvp3ki58g251xvxfaw31mcm9");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(50)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(100)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HostingCompanyId).HasColumnName("hosting_company_id");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.LatitudeDegrees).HasColumnName("latitude_degrees");

                entity.Property(e => e.LatitudeMinutes).HasColumnName("latitude_minutes");

                entity.Property(e => e.LatitudeSeconds).HasColumnName("latitude_seconds");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.LongitudeDegrees).HasColumnName("longitude_degrees");

                entity.Property(e => e.LongitudeMinutes).HasColumnName("longitude_minutes");

                entity.Property(e => e.LongitudeSeconds).HasColumnName("longitude_seconds");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.OrginalAddressId).HasColumnName("orginal_address_id");

                entity.Property(e => e.OrginalCreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("orginal_create_date");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(10)
                    .HasColumnName("postcode");

                entity.Property(e => e.PrimaryAddr)
                    .HasColumnType("bit(1)")
                    .HasColumnName("primary_addr");

                entity.Property(e => e.SameAddress)
                    .HasColumnType("bit(1)")
                    .HasColumnName("same_address");

                entity.Property(e => e.SitesId).HasColumnName("sites_id");

                entity.Property(e => e.StatsSaareaCodeId).HasColumnName("stats_saarea_code_id");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TownId).HasColumnName("town_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WspCompanyMainHistoryId).HasColumnName("wsp_company_main_history_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.WspCompanyAddressHistories)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FK9lsuemwpk4l3u9qpog9d2rp61");

                entity.HasOne(d => d.HostingCompany)
                    .WithMany(p => p.WspCompanyAddressHistories)
                    .HasForeignKey(d => d.HostingCompanyId)
                    .HasConstraintName("FKg43tope61n8g449qulorjx12t");

                entity.HasOne(d => d.Municipality)
                    .WithMany(p => p.WspCompanyAddressHistories)
                    .HasForeignKey(d => d.MunicipalityId)
                    .HasConstraintName("FKqhvp3ki58g251xvxfaw31mcm9");

              /*  entity.HasOne(d => d.Sites)
                    .WithMany(p => p.WspCompanyAddressHistories)
                    .HasForeignKey(d => d.SitesId)
                    .HasConstraintName("FKp856fvfsx97mnf46tyb14999m");*/

                entity.HasOne(d => d.StatsSaareaCode)
                    .WithMany(p => p.WspCompanyAddressHistories)
                    .HasForeignKey(d => d.StatsSaareaCodeId)
                    .HasConstraintName("FKlnvaki1jq3n7y5oejdgtxov4h");

                entity.HasOne(d => d.Town)
                    .WithMany(p => p.WspCompanyAddressHistories)
                    .HasForeignKey(d => d.TownId)
                    .HasConstraintName("FK1jpyj1ycmnva0r5a9bkapxwx");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.WspCompanyAddressHistories)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKq0upf2j95usw4t0t527j72m3j");

                entity.HasOne(d => d.WspCompanyMainHistory)
                    .WithMany(p => p.WspCompanyAddressHistories)
                    .HasForeignKey(d => d.WspCompanyMainHistoryId)
                    .HasConstraintName("FKh00aus21hp9e1ru6fih49narh");
            });

            modelBuilder.Entity<WspCompanyEmployeesHistory>(entity =>
            {
                entity.ToTable("wsp_company_employees_history");

                entity.HasIndex(e => e.OfoCodeId, "FK3yv4jykuid3v3njxlo755cq7f");

                entity.HasIndex(e => e.EquityId, "FK86h49hmbk0vllvww3ypclv1ba");

                entity.HasIndex(e => e.NationalityId, "FK9yujx737i45w2yefv0j3u6yoy");

                entity.HasIndex(e => e.HighestQualTitle, "FKah71mbarn0o301p4be4ds14re");

                entity.HasIndex(e => e.MunicipalityId, "FKbuhrvj1ee6mpppcnl7okhknqh");

                entity.HasIndex(e => e.OccupationCategoryId, "FKepmc5o0cr9snsr1bkwloudv40");

                entity.HasIndex(e => e.DisabilityId, "FKfqh4mwltg3sey074pj1am8wnd");

                entity.HasIndex(e => e.EmploymentTypeId, "FKgp90am6miucujnml3i6l3n5kt");

                entity.HasIndex(e => e.GenderId, "FKiei26v0gyxbejrec54f8obsb2");

                entity.HasIndex(e => e.HighestQualType, "FKkkh0opw0y74h8rs4wbneiv1yj");

                entity.HasIndex(e => e.WspCompanyMainHistoryId, "FKpmmloc4u960qpq93t23uqf5dj");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AgeGroup).HasColumnName("age_group");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CompanyOriginalId).HasColumnName("company_original_id");

                entity.Property(e => e.CompletedTraining)
                    .HasColumnType("bit(1)")
                    .HasColumnName("completed_training")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DateOfBirth)
                    .HasColumnType("datetime")
                    .HasColumnName("date_of_birth");

                entity.Property(e => e.DisabilityId).HasColumnName("disability_id");

                entity.Property(e => e.EmployedUnemployed).HasColumnName("employed_unemployed");

                entity.Property(e => e.EmploymentStatus).HasColumnName("employment_status");

                entity.Property(e => e.EmploymentTypeId).HasColumnName("employment_type_id");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("first_name");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.HighestQualTitle).HasColumnName("highest_qual_title");

                entity.Property(e => e.HighestQualType).HasColumnName("highest_qual_type");

                entity.Property(e => e.IdType).HasColumnName("id_type");

                entity.Property(e => e.JobTitle)
                    .HasMaxLength(100)
                    .HasColumnName("job_title");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("last_name");

                entity.Property(e => e.MunicipalityId).HasColumnName("municipality_id");

                entity.Property(e => e.NationalityId).HasColumnName("nationality_id");

                entity.Property(e => e.OccupationCategoryId).HasColumnName("occupation_category_id");

                entity.Property(e => e.OfoCodeId).HasColumnName("ofo_code_id");

                entity.Property(e => e.OrginalCreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("orginal_create_date");

                entity.Property(e => e.OrginalEmployeesId).HasColumnName("orginal_employees_id");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(30)
                    .HasColumnName("passport_number");

                entity.Property(e => e.PlannedTraining)
                    .HasColumnType("bit(1)")
                    .HasColumnName("planned_training")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.RsaIdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("rsa_id_number");

                entity.Property(e => e.SdlNumber)
                    .HasMaxLength(50)
                    .HasColumnName("sdl_number");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(50)
                    .HasColumnName("site_name");

                entity.Property(e => e.SiteNumber)
                    .HasMaxLength(50)
                    .HasColumnName("site_number");

                entity.Property(e => e.SiteOriginalId).HasColumnName("site_original_id");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.WspCompanyMainHistoryId).HasColumnName("wsp_company_main_history_id");

                entity.Property(e => e.WspOriginalId).HasColumnName("wsp_original_id");

                entity.HasOne(d => d.Disability)
                    .WithMany(p => p.WspCompanyEmployeesHistories)
                    .HasForeignKey(d => d.DisabilityId)
                    .HasConstraintName("FKfqh4mwltg3sey074pj1am8wnd");

                entity.HasOne(d => d.EmploymentType)
                    .WithMany(p => p.WspCompanyEmployeesHistories)
                    .HasForeignKey(d => d.EmploymentTypeId)
                    .HasConstraintName("FKgp90am6miucujnml3i6l3n5kt");

                entity.HasOne(d => d.Equity)
                    .WithMany(p => p.WspCompanyEmployeesHistories)
                    .HasForeignKey(d => d.EquityId)
                    .HasConstraintName("FK86h49hmbk0vllvww3ypclv1ba");

                entity.HasOne(d => d.Gender)
                    .WithMany(p => p.WspCompanyEmployeesHistories)
                    .HasForeignKey(d => d.GenderId)
                    .HasConstraintName("FKiei26v0gyxbejrec54f8obsb2");

                entity.HasOne(d => d.HighestQualTitleNavigation)
                    .WithMany(p => p.WspCompanyEmployeesHistories)
                    .HasForeignKey(d => d.HighestQualTitle)
                    .HasConstraintName("FKah71mbarn0o301p4be4ds14re");

                entity.HasOne(d => d.HighestQualTypeNavigation)
                    .WithMany(p => p.WspCompanyEmployeesHistories)
                    .HasForeignKey(d => d.HighestQualType)
                    .HasConstraintName("FKkkh0opw0y74h8rs4wbneiv1yj");

                entity.HasOne(d => d.Municipality)
                    .WithMany(p => p.WspCompanyEmployeesHistories)
                    .HasForeignKey(d => d.MunicipalityId)
                    .HasConstraintName("FKbuhrvj1ee6mpppcnl7okhknqh");

                entity.HasOne(d => d.Nationality)
                    .WithMany(p => p.WspCompanyEmployeesHistories)
                    .HasForeignKey(d => d.NationalityId)
                    .HasConstraintName("FK9yujx737i45w2yefv0j3u6yoy");

                entity.HasOne(d => d.OccupationCategory)
                    .WithMany(p => p.WspCompanyEmployeesHistories)
                    .HasForeignKey(d => d.OccupationCategoryId)
                    .HasConstraintName("FKepmc5o0cr9snsr1bkwloudv40");

                entity.HasOne(d => d.OfoCode)
                    .WithMany(p => p.WspCompanyEmployeesHistories)
                    .HasForeignKey(d => d.OfoCodeId)
                    .HasConstraintName("FK3yv4jykuid3v3njxlo755cq7f");

                entity.HasOne(d => d.WspCompanyMainHistory)
                    .WithMany(p => p.WspCompanyEmployeesHistories)
                    .HasForeignKey(d => d.WspCompanyMainHistoryId)
                    .HasConstraintName("FKpmmloc4u960qpq93t23uqf5dj");
            });

            modelBuilder.Entity<WspCompanyHistory>(entity =>
            {
                entity.ToTable("wsp_company_history");

                entity.HasIndex(e => e.WspCompanyMainHistoryId, "FK4sg08goorwsohy6a0021r20wx");

                entity.HasIndex(e => e.DeregisterUserId, "FK6hykushchdumsc6jvsquyop6n");

                entity.HasIndex(e => e.OrganisationTypeId, "FKa5xhcvvufevn0rnrawr44ybr7");

                entity.HasIndex(e => e.ChamberId, "FKd9hf0yulrkkmqq9ynov79ul6d");

                entity.HasIndex(e => e.MajorityUnionId, "FKfdnb9cnh5y5y8mtp44yvwtjl3");

                entity.HasIndex(e => e.WspCompanyAddressHistoryPostalId, "FKhdt95k920n75mr0alphcemjcy");

                entity.HasIndex(e => e.SetaId, "FKhgwud4ulnc9ig02p6r5y5300i");

                entity.HasIndex(e => e.InstitutionTypeId, "FKjltbgr96rbp5uvymxybnn26ny");

                entity.HasIndex(e => e.CompanyId, "FKm7dmsrsu3ekwpf7f73uwhao93");

                entity.HasIndex(e => e.SicCodeId, "FKnewi9j6erw80hjtc6cuxwcevh");

                entity.HasIndex(e => e.RecognitionAgreementId, "FKnpt2k97ykf654etb60rpodmsg");

                entity.HasIndex(e => e.FormUserId, "FKoxi08eo3uw7c3mas5hb5cknwb");

                entity.HasIndex(e => e.WspCompanyAddressHistoryRegisteredId, "FKpqnrp5qc2r2b5k8bcoevr62qx");

                entity.HasIndex(e => e.EtqaId, "FKqa6iqyxfr99s8l8eke43b7k8");

                entity.HasIndex(e => e.PreviousCompanyId, "FKreg2kf9thfca5wnm24g0qbpht");

                entity.HasIndex(e => e.WspCompanyAddressHistoryResidentialId, "FKsnc5mr4tgdw3fiatae9u24xol");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AccreditationNumber)
                    .HasMaxLength(255)
                    .HasColumnName("accreditation_number");

                entity.Property(e => e.ApprovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approval_date");

                entity.Property(e => e.ApprovalEnum).HasColumnName("approval_enum");

                entity.Property(e => e.Categorization).HasColumnName("categorization");

                entity.Property(e => e.ChamberId).HasColumnName("chamber_id");

                entity.Property(e => e.CompanyGuid)
                    .HasMaxLength(100)
                    .HasColumnName("company_guid");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(70)
                    .HasColumnName("company_name");

                entity.Property(e => e.CompanyRegistrationNumber)
                    .HasMaxLength(40)
                    .HasColumnName("company_registration_number");

                entity.Property(e => e.CompanySiteNumber)
                    .HasMaxLength(10)
                    .HasColumnName("company_site_number");

                entity.Property(e => e.CompanyStatus).HasColumnName("company_status");

                entity.Property(e => e.CompanyType).HasColumnName("company_type");

                entity.Property(e => e.CompanyWebsite)
                    .HasMaxLength(50)
                    .HasColumnName("company_website");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.DeregisterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("deregister_date");

                entity.Property(e => e.DeregisterUserId).HasColumnName("deregister_user_id");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .HasColumnName("email");

                entity.Property(e => e.EtqaId).HasColumnName("etqa_id");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.FinancialYearEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("financial_year_end_date");

                entity.Property(e => e.FinancialYearEndDay).HasColumnName("financial_year_end_day");

                entity.Property(e => e.FinancialYearEndMonth).HasColumnName("financial_year_end_month");

                entity.Property(e => e.FinancialYearStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("financial_year_start_date");

                entity.Property(e => e.FinancialYearStartDay).HasColumnName("financial_year_start_day");

                entity.Property(e => e.FinancialYearStartMonth).HasColumnName("financial_year_start_month");

                entity.Property(e => e.FormUserId).HasColumnName("form_user_id");

                entity.Property(e => e.InstitutionTypeId).HasColumnName("institution_type_id");

                entity.Property(e => e.LevyNumber)
                    .HasMaxLength(10)
                    .HasColumnName("levy_number");

                entity.Property(e => e.LevyNumberAdditional)
                    .HasMaxLength(10)
                    .HasColumnName("levy_number_additional");

                entity.Property(e => e.Locked)
                    .HasColumnType("bit(1)")
                    .HasColumnName("locked");

                entity.Property(e => e.MajorityUnionId).HasColumnName("majority_union_id");

                entity.Property(e => e.NonLevyPaying)
                    .HasColumnType("bit(1)")
                    .HasColumnName("non_levy_paying");

                entity.Property(e => e.NonSetaCompany)
                    .HasColumnType("bit(1)")
                    .HasColumnName("non_seta_company")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.NumberOfEmployees).HasColumnName("numberOfEmployees");

                entity.Property(e => e.OnGp)
                    .HasColumnType("bit(1)")
                    .HasColumnName("on_gp")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.OrganisationTypeId).HasColumnName("organisation_type_id");

                entity.Property(e => e.OrginalCompanyId).HasColumnName("orginal_company_id");

                entity.Property(e => e.OrginalCreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("orginal_create_date");

                entity.Property(e => e.PayeSdlNumber)
                    .HasMaxLength(10)
                    .HasColumnName("paye_sdl_number");

                entity.Property(e => e.PostalAddressOrginalAddressId).HasColumnName("postal_address_orginal_address_id");

                entity.Property(e => e.PreviousCompanyId).HasColumnName("previous_company_id");

                entity.Property(e => e.RecognitionAgreementId).HasColumnName("recognition_agreement_id");

                entity.Property(e => e.RegisteredAddressOrginalAddress).HasColumnName("registeredAddressOrginalAddress");

                entity.Property(e => e.RejectReason).HasColumnName("reject_reason");

                entity.Property(e => e.ResidentialAddressOrginalAddressId).HasColumnName("residential_address_orginal_address_id");

                entity.Property(e => e.SarsTradingStatus)
                    .HasMaxLength(1)
                    .HasColumnName("sars_trading_status");

                entity.Property(e => e.SetaId).HasColumnName("seta_id");

                entity.Property(e => e.SicCodeId).HasColumnName("sic_code_id");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TradingName)
                    .HasMaxLength(70)
                    .HasColumnName("trading_name");

                entity.Property(e => e.TrainingCommitteeInPlace)
                    .HasColumnType("bit(1)")
                    .HasColumnName("training_committee_in_place");

                entity.Property(e => e.WorkplaceApprovalNumber)
                    .HasMaxLength(40)
                    .HasColumnName("workplace_approval_number");

                entity.Property(e => e.WspCompanyAddressHistoryPostalId).HasColumnName("wsp_company_address_history_postal_id");

                entity.Property(e => e.WspCompanyAddressHistoryRegisteredId).HasColumnName("wsp_company_address_history_registered_id");

                entity.Property(e => e.WspCompanyAddressHistoryResidentialId).HasColumnName("wsp_company_address_history_residential_id");

                entity.Property(e => e.WspCompanyMainHistoryId).HasColumnName("wsp_company_main_history_id");

                entity.Property(e => e.WspLinkId).HasColumnName("wsp_link_id");

                entity.HasOne(d => d.Chamber)
                    .WithMany(p => p.WspCompanyHistories)
                    .HasForeignKey(d => d.ChamberId)
                    .HasConstraintName("FKd9hf0yulrkkmqq9ynov79ul6d");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.InverseCompany)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKm7dmsrsu3ekwpf7f73uwhao93");

                entity.HasOne(d => d.DeregisterUser)
                    .WithMany(p => p.WspCompanyHistoryDeregisterUsers)
                    .HasForeignKey(d => d.DeregisterUserId)
                    .HasConstraintName("FK6hykushchdumsc6jvsquyop6n");

                entity.HasOne(d => d.Etqa)
                    .WithMany(p => p.WspCompanyHistories)
                    .HasForeignKey(d => d.EtqaId)
                    .HasConstraintName("FKqa6iqyxfr99s8l8eke43b7k8");

                entity.HasOne(d => d.FormUser)
                    .WithMany(p => p.WspCompanyHistoryFormUsers)
                    .HasForeignKey(d => d.FormUserId)
                    .HasConstraintName("FKoxi08eo3uw7c3mas5hb5cknwb");

                entity.HasOne(d => d.InstitutionType)
                    .WithMany(p => p.WspCompanyHistories)
                    .HasForeignKey(d => d.InstitutionTypeId)
                    .HasConstraintName("FKjltbgr96rbp5uvymxybnn26ny");

                entity.HasOne(d => d.MajorityUnion)
                    .WithMany(p => p.WspCompanyHistories)
                    .HasForeignKey(d => d.MajorityUnionId)
                    .HasConstraintName("FKfdnb9cnh5y5y8mtp44yvwtjl3");

                entity.HasOne(d => d.OrganisationType)
                    .WithMany(p => p.WspCompanyHistories)
                    .HasForeignKey(d => d.OrganisationTypeId)
                    .HasConstraintName("FKa5xhcvvufevn0rnrawr44ybr7");

                entity.HasOne(d => d.PreviousCompany)
                    .WithMany(p => p.InversePreviousCompany)
                    .HasForeignKey(d => d.PreviousCompanyId)
                    .HasConstraintName("FKreg2kf9thfca5wnm24g0qbpht");

                entity.HasOne(d => d.RecognitionAgreement)
                    .WithMany(p => p.WspCompanyHistories)
                    .HasForeignKey(d => d.RecognitionAgreementId)
                    .HasConstraintName("FKnpt2k97ykf654etb60rpodmsg");

                entity.HasOne(d => d.Seta)
                    .WithMany(p => p.WspCompanyHistories)
                    .HasForeignKey(d => d.SetaId)
                    .HasConstraintName("FKhgwud4ulnc9ig02p6r5y5300i");

                entity.HasOne(d => d.SicCode)
                    .WithMany(p => p.WspCompanyHistories)
                    .HasForeignKey(d => d.SicCodeId)
                    .HasConstraintName("FKnewi9j6erw80hjtc6cuxwcevh");

                entity.HasOne(d => d.WspCompanyAddressHistoryPostal)
                    .WithMany(p => p.WspCompanyHistoryWspCompanyAddressHistoryPostals)
                    .HasForeignKey(d => d.WspCompanyAddressHistoryPostalId)
                    .HasConstraintName("FKhdt95k920n75mr0alphcemjcy");

                entity.HasOne(d => d.WspCompanyAddressHistoryRegistered)
                    .WithMany(p => p.WspCompanyHistoryWspCompanyAddressHistoryRegistereds)
                    .HasForeignKey(d => d.WspCompanyAddressHistoryRegisteredId)
                    .HasConstraintName("FKpqnrp5qc2r2b5k8bcoevr62qx");

                entity.HasOne(d => d.WspCompanyAddressHistoryResidential)
                    .WithMany(p => p.WspCompanyHistoryWspCompanyAddressHistoryResidentials)
                    .HasForeignKey(d => d.WspCompanyAddressHistoryResidentialId)
                    .HasConstraintName("FKsnc5mr4tgdw3fiatae9u24xol");

                entity.HasOne(d => d.WspCompanyMainHistory)
                    .WithMany(p => p.WspCompanyHistories)
                    .HasForeignKey(d => d.WspCompanyMainHistoryId)
                    .HasConstraintName("FK4sg08goorwsohy6a0021r20wx");
            });

            modelBuilder.Entity<WspCompanyMainHistory>(entity =>
            {
                entity.ToTable("wsp_company_main_history");

                entity.HasIndex(e => e.CompanyId, "FKjqt3qn0h5sw8i81wmnk92bk9m");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.WspCompanyMainHistories)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKjqt3qn0h5sw8i81wmnk92bk9m");
            });

            modelBuilder.Entity<WspCompanyTrainingComitteeHistory>(entity =>
            {
                entity.ToTable("wsp_company_training_comittee_history");

                entity.HasIndex(e => e.GenderId, "FK36dje0h3fotnwc357ld7sdaco");

                entity.HasIndex(e => e.TitleId, "FKc9v3h07y9c6l7i1lvs6t0ugt9");

                entity.HasIndex(e => e.WspCompanyMainHistoryId, "FKf2s39phfomirwrpw6nevoan8h");

                entity.HasIndex(e => e.UnionId, "FKm1q8ytui6l23fw7m59bxihqmi");

                entity.HasIndex(e => e.EquityId, "FKojcok74jgbu4ifoqngw6xdyu3");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CellNumber)
                    .HasMaxLength(20)
                    .HasColumnName("cell_number");

                entity.Property(e => e.CompanyOriginalId).HasColumnName("company_original_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");

                entity.Property(e => e.EquityId).HasColumnName("equity_id");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(20)
                    .HasColumnName("fax_number");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(26)
                    .HasColumnName("first_name");

                entity.Property(e => e.GenderId).HasColumnName("gender_id");

                entity.Property(e => e.IdType).HasColumnName("id_type");

                entity.Property(e => e.LastName)
                    .HasMaxLength(45)
                    .HasColumnName("last_name");

                entity.Property(e => e.OrginalCreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("orginal_create_date");

                entity.Property(e => e.OrginalTrainingComitteeId).HasColumnName("orginal_training_comittee_id");

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(20)
                    .HasColumnName("passport_number");

                entity.Property(e => e.RsaIdNumber)
                    .HasMaxLength(13)
                    .HasColumnName("rsa_id_number");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(20)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TitleId).HasColumnName("title_id");

                entity.Property(e => e.UnionId).HasColumnName("union_id");

                entity.Property(e => e.UnionName)
                    .HasMaxLength(100)
                    .HasColumnName("union_name");

                entity.Property(e => e.WspCompanyMainHistoryId).HasColumnName("wsp_company_main_history_id");

                entity.HasOne(d => d.Equity)
                    .WithMany(p => p.WspCompanyTrainingComitteeHistories)
                    .HasForeignKey(d => d.EquityId)
                    .HasConstraintName("FKojcok74jgbu4ifoqngw6xdyu3");

                entity.HasOne(d => d.Gender)
                    .WithMany(p => p.WspCompanyTrainingComitteeHistories)
                    .HasForeignKey(d => d.GenderId)
                    .HasConstraintName("FK36dje0h3fotnwc357ld7sdaco");

                entity.HasOne(d => d.Title)
                    .WithMany(p => p.WspCompanyTrainingComitteeHistories)
                    .HasForeignKey(d => d.TitleId)
                    .HasConstraintName("FKc9v3h07y9c6l7i1lvs6t0ugt9");

                entity.HasOne(d => d.Union)
                    .WithMany(p => p.WspCompanyTrainingComitteeHistories)
                    .HasForeignKey(d => d.UnionId)
                    .HasConstraintName("FKm1q8ytui6l23fw7m59bxihqmi");

                entity.HasOne(d => d.WspCompanyMainHistory)
                    .WithMany(p => p.WspCompanyTrainingComitteeHistories)
                    .HasForeignKey(d => d.WspCompanyMainHistoryId)
                    .HasConstraintName("FKf2s39phfomirwrpw6nevoan8h");
            });

            modelBuilder.Entity<WspDispute>(entity =>
            {
                entity.ToTable("wsp_dispute");

                entity.HasIndex(e => e.WspId, "FKq8qrntxvjrx3icyy49l3vnx7w");

                entity.HasIndex(e => e.CreateUserId, "FKq9nrkdvg3sqpsi8i2mjvjeu9f");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AgreementOfGrants)
                    .HasColumnType("bit(1)")
                    .HasColumnName("agreement_of_grants");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUserId).HasColumnName("create_user_id");

                entity.Property(e => e.EmployerRep).HasColumnName("employer_rep");

                entity.Property(e => e.LabourRep).HasColumnName("labour_rep");

                entity.Property(e => e.MediationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("mediation_date");

                entity.Property(e => e.NoAgreement)
                    .HasColumnType("bit(1)")
                    .HasColumnName("no_agreement");

                entity.Property(e => e.Resolved)
                    .HasColumnType("bit(1)")
                    .HasColumnName("resolved");

                entity.Property(e => e.ResonForDispute).HasColumnName("reson_for_dispute");

                entity.Property(e => e.SummaryNoAgreement).HasColumnName("summary_no_agreement");

                entity.Property(e => e.Venue).HasColumnName("venue");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.CreateUser)
                    .WithMany(p => p.WspDisputes)
                    .HasForeignKey(d => d.CreateUserId)
                    .HasConstraintName("FKq9nrkdvg3sqpsi8i2mjvjeu9f");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.WspDisputes)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKq8qrntxvjrx3icyy49l3vnx7w");
            });

            modelBuilder.Entity<WspHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("wsp_hist");

                entity.HasIndex(e => e.Rev, "FKgjnuv6sdr9ejdupihcvnb9n22");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.AdminReopened)
                    .HasColumnType("bit(1)")
                    .HasColumnName("admin_reopened");

                entity.Property(e => e.AlignmentToMersetaStrategicPriorities).HasColumnName("alignment_to_merseta_strategic_priorities");

                entity.Property(e => e.ApllicationReopenedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("apllicationReopenedDate");

                entity.Property(e => e.ApplicationReopened)
                    .HasColumnType("bit(1)")
                    .HasColumnName("application_reopened");

                entity.Property(e => e.ApprovedAmount).HasColumnName("approved_amount");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("approved_date");

                entity.Property(e => e.Benefits).HasColumnName("benefits");

                entity.Property(e => e.CoFundingPartnership).HasColumnName("co_funding_partnership");

                entity.Property(e => e.CompanyContact).HasColumnName("company_contact");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CompletedTraining).HasColumnName("completed_training");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CreateUsersId).HasColumnName("create_users_id");

                entity.Property(e => e.DateMancoApprovalRequired)
                    .HasColumnType("datetime")
                    .HasColumnName("date_manco_approval_required");

                entity.Property(e => e.DeviatedWorkplaceSkillsPlan).HasColumnName("deviated_workplace_skills_plan");

                entity.Property(e => e.DgProjectTypeId).HasColumnName("dg_project_type_id");

                entity.Property(e => e.DgTerminationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("dg_termination_date");

                entity.Property(e => e.DgYearId).HasColumnName("dg_year_id");

                entity.Property(e => e.EmploymentEquityPlanInline).HasColumnName("employmentEquityPlanInline");

                entity.Property(e => e.EstimatedOverallProjectCost).HasColumnName("estimated_overall_project_cost");

                entity.Property(e => e.FinYear).HasColumnName("fin_year");

                entity.Property(e => e.FinalResponse).HasColumnName("final_response");

                entity.Property(e => e.FromDatePeriod)
                    .HasColumnType("datetime")
                    .HasColumnName("from_date_period");

                entity.Property(e => e.GrantRejected)
                    .HasColumnType("bit(1)")
                    .HasColumnName("grant_rejected");

                entity.Property(e => e.GrantRejectedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("grant_rejected_date");

                entity.Property(e => e.HoldingRoomStatusEnum).HasColumnName("holding_room_status_enum");

                entity.Property(e => e.Interventions).HasColumnName("interventions");

                entity.Property(e => e.Location).HasColumnName("location");

                entity.Property(e => e.MajorityUnionId).HasColumnName("majority_union_id");

                entity.Property(e => e.MancoApprovalRequired)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manco_approval_required")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MancoDecisionReached)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manco_decision_reached")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ManuallyAdded)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manually_added")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ManuallySubmissionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("manually_submission_date");

                entity.Property(e => e.Outcomes).HasColumnName("outcomes");

                entity.Property(e => e.PercentagePayrollSpent).HasColumnName("percentage_payroll_spent");

                entity.Property(e => e.PercentageTrainingCostSpentTraining).HasColumnName("percentage_training_cost_spent_training");

                entity.Property(e => e.PotentialRisks).HasColumnName("potential_risks");

                entity.Property(e => e.ProjectDescription).HasColumnName("project_description");

                entity.Property(e => e.ProjectManager).HasColumnName("project_manager");

                entity.Property(e => e.ProjectOwner).HasColumnName("project_owner");

                entity.Property(e => e.Purpose).HasColumnName("purpose");

                entity.Property(e => e.RecognitionAgreementId).HasColumnName("recognition_agreement_id");

                entity.Property(e => e.RejectionNotified)
                    .HasColumnType("bit(1)")
                    .HasColumnName("rejection_notified")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ReopenedToLocation).HasColumnName("reopened_to_location");

                entity.Property(e => e.RequireDisputeDocs)
                    .HasColumnType("bit(1)")
                    .HasColumnName("require_dispute_docs")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.RequireSignOffUpload)
                    .HasColumnType("bit(1)")
                    .HasColumnName("require_sign_off_upload")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SdfAppealedGrant)
                    .HasColumnType("bit(1)")
                    .HasColumnName("sdf_appealed_grant")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SdfAppealedGrantDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sdf_appealed_grant_date");

                entity.Property(e => e.SkillsGapTrackSelection).HasColumnName("skills_gap_track_selection");

                entity.Property(e => e.SkillsGapTrackSelectionDetail)
                    .HasMaxLength(500)
                    .HasColumnName("skills_gap_track_selection_detail");

                entity.Property(e => e.SubmissionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("submission_date");

                entity.Property(e => e.SystemApprovalRejection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("system_approval_rejection");

                entity.Property(e => e.ToDatePeriod)
                    .HasColumnType("datetime")
                    .HasColumnName("to_date_period");

                entity.Property(e => e.TotalEstimatedCostTraining).HasColumnName("total_estimated_cost_training");

                entity.Property(e => e.TotalPayroll).HasColumnName("total_payroll");

                entity.Property(e => e.TotalTrainingCosts).HasColumnName("total_training_costs");

                entity.Property(e => e.TrackSkillsGap).HasColumnName("track_skills_gap");

                entity.Property(e => e.TrainingReportedAtrPtrId).HasColumnName("training_reported_atr_ptr_id");

                entity.Property(e => e.UserReopenedApplication).HasColumnName("user_reopened_application");

                entity.Property(e => e.UserRequestedMancoApproval).HasColumnName("user_requested_manco_approval");

                entity.Property(e => e.WithSdf)
                    .HasColumnType("bit(1)")
                    .HasColumnName("with_sdf")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.WspGuid)
                    .HasMaxLength(100)
                    .HasColumnName("wsp_guid");

                entity.Property(e => e.WspStatusEnum).HasColumnName("wsp_status_enum");

                entity.Property(e => e.WspType).HasColumnName("wsp_type");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WspHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKgjnuv6sdr9ejdupihcvnb9n22");
            });

            modelBuilder.Entity<WspHistoricDatum>(entity =>
            {
                entity.ToTable("wsp_historic_data");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FinalStatus)
                    .HasMaxLength(255)
                    .HasColumnName("final_status");

                entity.Property(e => e.GrantNameRevised)
                    .HasMaxLength(255)
                    .HasColumnName("grant_name_revised");

                entity.Property(e => e.LevyYear).HasColumnName("levy_year");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.OrganisationNameLegal)
                    .HasMaxLength(255)
                    .HasColumnName("organisation_name_legal");

                entity.Property(e => e.OrganistaionNameTrade)
                    .HasMaxLength(255)
                    .HasColumnName("organistaion_name_trade");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(255)
                    .HasColumnName("reference_no");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.WspStatusEnum).HasColumnName("wsp_status_enum");
            });

            modelBuilder.Entity<WspImpactOfStaffTraining>(entity =>
            {
                entity.ToTable("wsp_impact_of_staff_training");

                entity.HasIndex(e => e.WspId, "FKljcwh5c0jcvu4tcvl8idfa7lg");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.NotAtAll)
                    .HasColumnType("bit(1)")
                    .HasColumnName("not_at_all");

                entity.Property(e => e.NotReally)
                    .HasColumnType("bit(1)")
                    .HasColumnName("not_really");

                entity.Property(e => e.Nuetral)
                    .HasColumnType("bit(1)")
                    .HasColumnName("nuetral");

                entity.Property(e => e.RowDescription)
                    .HasMaxLength(500)
                    .HasColumnName("row_description");

                entity.Property(e => e.ToaLargeExtent)
                    .HasColumnType("bit(1)")
                    .HasColumnName("toa_large_extent");

                entity.Property(e => e.ToaLimitedExtent)
                    .HasColumnType("bit(1)")
                    .HasColumnName("toa_limited_extent");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.WspImpactOfStaffTrainings)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKljcwh5c0jcvu4tcvl8idfa7lg");
            });

            modelBuilder.Entity<WspLocation>(entity =>
            {
                entity.ToTable("wsp_locations");

                entity.HasIndex(e => e.WspId, "FKf20ml2skhqv7m9xo53iooft2u");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ProvinceId).HasColumnName("province_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.WspLocations)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKf20ml2skhqv7m9xo53iooft2u");
            });

            modelBuilder.Entity<WspRejectionInformation>(entity =>
            {
                entity.ToTable("wsp_rejection_information");

                entity.HasIndex(e => e.UserId, "FKixjtfrmynv5uliaoynebi35tc");

                entity.HasIndex(e => e.RoleId, "FKmtbujvbrmmq99v4mcsv2vi7bf");

                entity.HasIndex(e => e.WspId, "FKpmunt6j8ohspi4mtfxh0hdqvy");

                entity.HasIndex(e => e.RejectReasonId, "FKtajcbnyx4l8caj5gn534iit9m");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.FlatTaskLinkId).HasColumnName("flat_task_link_id");

                entity.Property(e => e.LatestEntry)
                    .HasColumnType("bit(1)")
                    .HasColumnName("latest_entry")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.RejectReasonId).HasColumnName("reject_reason_id");

                entity.Property(e => e.RoleId).HasColumnName("role_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.RejectReason)
                    .WithMany(p => p.WspRejectionInformations)
                    .HasForeignKey(d => d.RejectReasonId)
                    .HasConstraintName("FKtajcbnyx4l8caj5gn534iit9m");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.WspRejectionInformations)
                    .HasForeignKey(d => d.RoleId)
                    .HasConstraintName("FKmtbujvbrmmq99v4mcsv2vi7bf");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.WspRejectionInformations)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FKixjtfrmynv5uliaoynebi35tc");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.WspRejectionInformations)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKpmunt6j8ohspi4mtfxh0hdqvy");
            });

            modelBuilder.Entity<WspSdfCompanyHistory>(entity =>
            {
                entity.ToTable("wsp_sdf_company_history");

                entity.HasIndex(e => e.RelationshipToCompanyId, "FK5gbq74v0405qrawxclqmrju9e");

                entity.HasIndex(e => e.SdfId, "FK5r3i4b1yt9b1lfsohfsy0puu3");

                entity.HasIndex(e => e.ScopeOfResponsibilityId, "FKd2fktxrrvfewquy0q1bo3bwn2");

                entity.HasIndex(e => e.CompanyId, "FKlyusdmfkmq6se6wr4vclgfh0x");

                entity.HasIndex(e => e.SdfTypeId, "FKpydv3x8risd8ceqbs66100ghp");

                entity.HasIndex(e => e.WspCompanyMainHistoryId, "FKqxysi0e03r7p56bgwbj5xy0gl");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ApprovalStatus).HasColumnName("approval_status");

                entity.Property(e => e.CompanyId).HasColumnName("company_id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.OrginalCreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("orginal_create_date");

                entity.Property(e => e.OrginalSdfCompanyId).HasColumnName("orginal_sdf_company_id");

                entity.Property(e => e.RelationshipToCompanyId).HasColumnName("relationship_to_company_id");

                entity.Property(e => e.ScopeOfResponsibilityId).HasColumnName("scope_of_responsibility_id");

                entity.Property(e => e.SdfId).HasColumnName("sdf_id");

                entity.Property(e => e.SdfTypeId).HasColumnName("sdf_type_id");

                entity.Property(e => e.TargetClass)
                    .HasMaxLength(255)
                    .HasColumnName("target_class");

                entity.Property(e => e.TargetKey).HasColumnName("target_key");

                entity.Property(e => e.WspCompanyMainHistoryId).HasColumnName("wsp_company_main_history_id");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.WspSdfCompanyHistories)
                    .HasForeignKey(d => d.CompanyId)
                    .HasConstraintName("FKlyusdmfkmq6se6wr4vclgfh0x");

                entity.HasOne(d => d.RelationshipToCompany)
                    .WithMany(p => p.WspSdfCompanyHistories)
                    .HasForeignKey(d => d.RelationshipToCompanyId)
                    .HasConstraintName("FK5gbq74v0405qrawxclqmrju9e");

                entity.HasOne(d => d.ScopeOfResponsibility)
                    .WithMany(p => p.WspSdfCompanyHistories)
                    .HasForeignKey(d => d.ScopeOfResponsibilityId)
                    .HasConstraintName("FKd2fktxrrvfewquy0q1bo3bwn2");

                entity.HasOne(d => d.Sdf)
                    .WithMany(p => p.WspSdfCompanyHistories)
                    .HasForeignKey(d => d.SdfId)
                    .HasConstraintName("FK5r3i4b1yt9b1lfsohfsy0puu3");

                entity.HasOne(d => d.SdfType)
                    .WithMany(p => p.WspSdfCompanyHistories)
                    .HasForeignKey(d => d.SdfTypeId)
                    .HasConstraintName("FKpydv3x8risd8ceqbs66100ghp");

                entity.HasOne(d => d.WspCompanyMainHistory)
                    .WithMany(p => p.WspSdfCompanyHistories)
                    .HasForeignKey(d => d.WspCompanyMainHistoryId)
                    .HasConstraintName("FKqxysi0e03r7p56bgwbj5xy0gl");
            });

            modelBuilder.Entity<WspSignoff>(entity =>
            {
                entity.ToTable("wsp_signoff");

                entity.HasIndex(e => e.UserId, "FK3nritx3axkcq99kxcwlfggcva");

                entity.HasIndex(e => e.SdfTypeId, "FKirco843sxtlilgii0evmad3ru");

                entity.HasIndex(e => e.WspId, "FKjii83x0yxv4f2dm3t0imh60g7");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Dispute)
                    .HasColumnType("bit(1)")
                    .HasColumnName("dispute");

                entity.Property(e => e.SdfTypeId).HasColumnName("sdf_type_id");

                entity.Property(e => e.SignOffDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sign_off_date");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.SdfType)
                    .WithMany(p => p.WspSignoffs)
                    .HasForeignKey(d => d.SdfTypeId)
                    .HasConstraintName("FKirco843sxtlilgii0evmad3ru");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.WspSignoffs)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK3nritx3axkcq99kxcwlfggcva");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.WspSignoffs)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKjii83x0yxv4f2dm3t0imh60g7");
            });

            modelBuilder.Entity<WspSignoffHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("wsp_signoff_hist");

                entity.HasIndex(e => e.Rev, "FK9l011u0i7r1j0hi0h080vyi7m");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.Accept)
                    .HasColumnType("bit(1)")
                    .HasColumnName("accept");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Dispute)
                    .HasColumnType("bit(1)")
                    .HasColumnName("dispute");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.SdfTypeId).HasColumnName("sdf_type_id");

                entity.Property(e => e.SignOffDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sign_off_date");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.WspSignoffHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK9l011u0i7r1j0hi0h080vyi7m");
            });

            modelBuilder.Entity<WspSkillsGap>(entity =>
            {
                entity.ToTable("wsp_skills_gap");

                entity.HasIndex(e => e.WspId, "FKsmdtgr9766m5ovxsnpa03wmhx");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ClericalSupportWorkersSelection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("clerical_support_workers_selection");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.ElementaryWorkersSelection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("elementary_workers_selection");

                entity.Property(e => e.ManagerSelection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("manager_selection");

                entity.Property(e => e.PlantMachineOperatorsAssemblersSelection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("plant_machine_operators_assemblers_selection");

                entity.Property(e => e.ProfessionalsSelection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("professionals_selection");

                entity.Property(e => e.RowDescription)
                    .HasMaxLength(500)
                    .HasColumnName("row_description");

                entity.Property(e => e.ServiceSalesWorkersSelection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("service_sales_workers_selection");

                entity.Property(e => e.SkilledTradesWorkersSelection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("skilled_trades_workers_selection");

                entity.Property(e => e.SkillsGapSection).HasColumnName("skills_gap_section");

                entity.Property(e => e.TechniciansAssociateProfessionalsSelection)
                    .HasColumnType("bit(1)")
                    .HasColumnName("technicians_associate_professionals_selection");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.WspSkillsGaps)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKsmdtgr9766m5ovxsnpa03wmhx");
            });

            modelBuilder.Entity<WspSkillsRequirement>(entity =>
            {
                entity.ToTable("wsp_skills_requirements");

                entity.HasIndex(e => e.YesNoId, "FK6x0qswhnwt2qv38au82mes8s0");

                entity.HasIndex(e => e.InterventionTypeId, "FK7bdahi4dxhfwm01dfgxsb3hv");

                entity.HasIndex(e => e.OccupationCategoryId, "FKcgpq6qbb2f6wyaas4dsc8kyaa");

                entity.HasIndex(e => e.NoHardToFillVacanciesId, "FKg0xvrtmpkmp9n9o1wu52jg61");

                entity.HasIndex(e => e.HighestQualificationRequiredId, "FKg4qhrv2rl8w0k7dv1l6bs7g5n");

                entity.HasIndex(e => e.OfoCodesId, "FKiueie1x2hk5d06j3wk748acxm");

                entity.HasIndex(e => e.WspId, "FKjv8ac1jagxdqqo2tt8rh9yi4i");

                entity.HasIndex(e => e.QualificationId, "FKlallksqga6f9foek7nwepr3vt");

                entity.HasIndex(e => e.ScarcityReasonId, "FKnoc1te4k5iar4a6ushnd555kg");

                entity.HasIndex(e => e.VacancyReasonsId, "FKt39ym9jn2dfadw7vslt7paoqt");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.HighestQualificationRequiredId).HasColumnName("highest_qualification_required_id");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.JobTitle)
                    .HasMaxLength(100)
                    .HasColumnName("job_title");

                entity.Property(e => e.NoHardToFillVacanciesId).HasColumnName("no_hard_to_fill_vacancies_id");

                entity.Property(e => e.OccupationCategoryId).HasColumnName("occupation_category_id");

                entity.Property(e => e.OfoCodesId).HasColumnName("ofo_codes_id");

                entity.Property(e => e.PastFutureEnum).HasColumnName("past_future_enum");

                entity.Property(e => e.QualificationId).HasColumnName("qualification_id");

                entity.Property(e => e.ScarcityReasonId).HasColumnName("scarcity_reason_id");

                entity.Property(e => e.TotalNeededStaff).HasColumnName("total_needed_staff");

                entity.Property(e => e.TotalOutsourcedSkills).HasColumnName("total_outsourced_skills");

                entity.Property(e => e.TotalVacancies).HasColumnName("total_vacancies");

                entity.Property(e => e.TotalVacanciesFilled).HasColumnName("total_vacancies_filled");

                entity.Property(e => e.VacancyReasonsId).HasColumnName("vacancy_reasons_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.Property(e => e.YesNoId).HasColumnName("yes_no_id");

                entity.HasOne(d => d.HighestQualificationRequired)
                    .WithMany(p => p.WspSkillsRequirements)
                    .HasForeignKey(d => d.HighestQualificationRequiredId)
                    .HasConstraintName("FKg4qhrv2rl8w0k7dv1l6bs7g5n");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.WspSkillsRequirements)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FK7bdahi4dxhfwm01dfgxsb3hv");

                entity.HasOne(d => d.NoHardToFillVacancies)
                    .WithMany(p => p.WspSkillsRequirements)
                    .HasForeignKey(d => d.NoHardToFillVacanciesId)
                    .HasConstraintName("FKg0xvrtmpkmp9n9o1wu52jg61");

                entity.HasOne(d => d.OccupationCategory)
                    .WithMany(p => p.WspSkillsRequirements)
                    .HasForeignKey(d => d.OccupationCategoryId)
                    .HasConstraintName("FKcgpq6qbb2f6wyaas4dsc8kyaa");

                entity.HasOne(d => d.OfoCodes)
                    .WithMany(p => p.WspSkillsRequirements)
                    .HasForeignKey(d => d.OfoCodesId)
                    .HasConstraintName("FKiueie1x2hk5d06j3wk748acxm");

                entity.HasOne(d => d.Qualification)
                    .WithMany(p => p.WspSkillsRequirements)
                    .HasForeignKey(d => d.QualificationId)
                    .HasConstraintName("FKlallksqga6f9foek7nwepr3vt");

                entity.HasOne(d => d.ScarcityReason)
                    .WithMany(p => p.WspSkillsRequirements)
                    .HasForeignKey(d => d.ScarcityReasonId)
                    .HasConstraintName("FKnoc1te4k5iar4a6ushnd555kg");

                entity.HasOne(d => d.VacancyReasons)
                    .WithMany(p => p.WspSkillsRequirements)
                    .HasForeignKey(d => d.VacancyReasonsId)
                    .HasConstraintName("FKt39ym9jn2dfadw7vslt7paoqt");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.WspSkillsRequirements)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FKjv8ac1jagxdqqo2tt8rh9yi4i");

                entity.HasOne(d => d.YesNo)
                    .WithMany(p => p.WspSkillsRequirements)
                    .HasForeignKey(d => d.YesNoId)
                    .HasConstraintName("FK6x0qswhnwt2qv38au82mes8s0");
            });

            modelBuilder.Entity<WspStrategicPriority>(entity =>
            {
                entity.ToTable("wsp_strategic_priorities");

                entity.HasIndex(e => e.WspId, "FK1ni5pu3ixv3ul0v9ih7mvdbgv");

                entity.HasIndex(e => e.StrategicPrioritiesId, "FK3r7tjun2yi1wjuw5d43u1c0o5");

                entity.HasIndex(e => e.InterventionTypeId, "FKlpa2scha3f90hkgihnfjms4c0");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.InterventionTypeId).HasColumnName("intervention_type_id");

                entity.Property(e => e.StrategicPrioritiesId).HasColumnName("strategic_priorities_id");

                entity.Property(e => e.WspId).HasColumnName("wsp_id");

                entity.HasOne(d => d.InterventionType)
                    .WithMany(p => p.WspStrategicPriorities)
                    .HasForeignKey(d => d.InterventionTypeId)
                    .HasConstraintName("FKlpa2scha3f90hkgihnfjms4c0");

                entity.HasOne(d => d.StrategicPriorities)
                    .WithMany(p => p.WspStrategicPriorities)
                    .HasForeignKey(d => d.StrategicPrioritiesId)
                    .HasConstraintName("FK3r7tjun2yi1wjuw5d43u1c0o5");

                entity.HasOne(d => d.Wsp)
                    .WithMany(p => p.WspStrategicPriorities)
                    .HasForeignKey(d => d.WspId)
                    .HasConstraintName("FK1ni5pu3ixv3ul0v9ih7mvdbgv");
            });

            modelBuilder.Entity<YesNoLookup>(entity =>
            {
                entity.ToTable("yes_no_lookup");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.YesNoName).HasColumnName("yes_no_name");
            });

            modelBuilder.Entity<YesNoLookupHist>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Rev })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("yes_no_lookup_hist");

                entity.HasIndex(e => e.Rev, "FKd0sddlnxcythpq8cmwrmo9881");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Rev).HasColumnName("REV");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Revtype).HasColumnName("REVTYPE");

                entity.Property(e => e.YesNoName).HasColumnName("yes_no_name");

                entity.HasOne(d => d.RevNavigation)
                    .WithMany(p => p.YesNoLookupHists)
                    .HasForeignKey(d => d.Rev)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKd0sddlnxcythpq8cmwrmo9881");
            });

            modelBuilder.Entity<YoutubeVideo>(entity =>
            {
                entity.ToTable("youtube_video");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");

                entity.Property(e => e.Title)
                    .HasMaxLength(500)
                    .HasColumnName("title");

                entity.Property(e => e.VideoLink)
                    .HasMaxLength(500)
                    .HasColumnName("video_link");
            });

            modelBuilder.Entity<training>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .HasColumnName("code");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("description");

                entity.Property(e => e.NlrdCode)
                    .HasMaxLength(200)
                    .HasColumnName("nlrd_code");

                entity.Property(e => e.PlannedImplemented).HasColumnName("planned_implemented");

                entity.Property(e => e.QctoCode)
                    .HasMaxLength(200)
                    .HasColumnName("qcto_code");

                entity.Property(e => e.SetmisCode)
                    .HasMaxLength(200)
                    .HasColumnName("setmis_code");

                entity.Property(e => e.SmsCode)
                    .HasMaxLength(200)
                    .HasColumnName("sms_code");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
